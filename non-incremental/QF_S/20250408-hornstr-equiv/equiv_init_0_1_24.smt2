(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Oliver Markgraf, Hongjian Jiang, Daniel Stan, Anthony W. Lin, Philipp Ruemmer
Generated on: 2025-04-08
Application: Using String Solvers to solve RMC problems encoded as CHC over Strings
Target solver: cvc5, OSTRICH, Z3, Z3alpha, Z3-noodler
Time limit: 60.0
Benchmarks are extracted by running HornStr https://arg-git.informatik.uni-kl.de/pub/string-chc-lib on all benchmarks
provided in the repository and gathering the string queries sent to the string solvers.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun varout () String)
(assert (let ((a!1 (re.* (re.union (re.union (str.to_re "C") (str.to_re "W"))
                           (str.to_re "A")))))
  (str.in_re varout a!1)))
(declare-fun varin () String)
(assert (let ((a!1 (re.* (re.union (re.union (str.to_re "C") (str.to_re "W"))
                           (str.to_re "A")))))
  (str.in_re varin a!1)))
(declare-fun X () String)
(declare-fun isin () Bool)
(declare-fun isout () Bool)
(assert (let ((a!1 (re.union (str.to_re "")
                     (re.++ (str.to_re "A") (re.* (str.to_re "A"))))))
(let ((a!2 (re.++ (re.++ (str.to_re "A") (str.to_re "A"))
                  (re.++ (re.* (str.to_re "A")) a!1))))
  (or (and (str.in_re X a!2) (not isin) (= X varout) isout)))))
(assert (let ((a!1 (re.++ (re.* (re.union (str.to_re "W") (str.to_re "A")))
                  (str.to_re "C")))
      (a!4 (re.* (re.union (re.union (str.to_re "C") (str.to_re "W"))
                           (str.to_re "A")))))
(let ((a!2 (re.union (str.to_re "C")
                     (re.++ (re.union (str.to_re "W") (str.to_re "A")) a!1)))
      (a!5 (re.++ (re.union (re.union (str.to_re "C") (str.to_re "W"))
                            (str.to_re "A"))
                  a!4)))
(let ((a!3 (re.++ (re.* (re.union (str.to_re "W") (str.to_re "A"))) a!2)))
(let ((a!6 (re.++ (re.++ a!3 a!3) (re.++ a!4 (re.union (str.to_re "") a!5)))))
  (str.in_re varout a!6))))))
(check-sat)
(exit)
