(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Shaoke Cui
Generated on: 2025-04-10
Application: Using String Solvers to solve string matching problems
Target solver: Z3, Z3alpha, Z3-noodler
Benchmarks for string matching problem with wildcards, which needs to determine whether two strings containing two wildcards can match.
Use re.allchar and (re.* re.allchar) to represent wildcards.
Determine whether the two strings match by judging whether the result of re.inter is re.none.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")
(set-info :status unknown)
(assert (= re.none (re.inter  (re.++ (str.to_re "zxwgt") re.allchar (str.to_re "oosijhwtsierhcwgtwvu") re.allchar (str.to_re "slrmznougxlapealbvspkopuyzehglvurtf") re.allchar (str.to_re "ccyfbfcepmf") (re.* re.allchar) (str.to_re "yvaumnplwl") re.allchar (str.to_re "bnfkjfagkfobm") re.allchar (str.to_re "unzziswdg") re.allchar (str.to_re "liflcq") re.allchar (str.to_re "epuzyquvacft") re.allchar (str.to_re "oyfwimyhelvuxibskw") (re.* re.allchar) (str.to_re "wwu") re.allchar (str.to_re "ciavrj") re.allchar (str.to_re "fkykov") (re.* re.allchar) re.allchar (str.to_re "xptglnnqigaev") re.allchar (str.to_re "h") re.allchar (str.to_re "tzwnnkqguacaqixfiig") re.allchar (str.to_re "mbgzujswqysdpsyxjdy") re.allchar (str.to_re "cmeoprfmhab") re.allchar (str.to_re "vhg") (re.* re.allchar) (str.to_re "aiydyhhtcyocmuvroegadalhtpcvbcnqcpfkv") re.allchar (str.to_re "imzsvxnfuwkael") re.allchar (str.to_re "fzs") re.allchar (str.to_re "ojz") re.allchar (str.to_re "ux") re.allchar (re.* re.allchar) (str.to_re "vhjjxkiljeimdunvq") (re.* re.allchar) (str.to_re "luewqlhw") re.allchar (str.to_re "eiwbduuubpiroioubw") (re.* re.allchar) (str.to_re "rnrlxfnm") (re.* re.allchar) (re.* re.allchar) (str.to_re "bjufovnlt") re.allchar (str.to_re "n") (re.* re.allchar) (str.to_re "m") re.allchar (str.to_re "mnbhgqd") re.allchar (str.to_re "sstzcv") re.allchar (str.to_re "kcohlqd") re.allchar (str.to_re "srbusqgbo") )   (re.++ (str.to_re "vqpwqgl") (re.* re.allchar) (str.to_re "qswiqpjgikymsfdcmpwcygunduryewom") (re.* re.allchar) (str.to_re "hbbzdgtz") re.allchar (str.to_re "huhpkrma") re.allchar (str.to_re "povtinwtjzbjspaduresk") (re.* re.allchar) (str.to_re "po") re.allchar (str.to_re "ni") (re.* re.allchar) (str.to_re "mbbxg") re.allchar (str.to_re "xtb") re.allchar (str.to_re "xwrpzqphjhxv") (re.* re.allchar) (str.to_re "qypu") re.allchar (re.* re.allchar) (str.to_re "jy") (re.* re.allchar) (str.to_re "ralauowyunuyeeqsp") re.allchar (str.to_re "s") re.allchar re.allchar (str.to_re "k") re.allchar (str.to_re "sytrtjxwougduvaf") re.allchar (str.to_re "nfvfpst") (re.* re.allchar) (str.to_re "hbi") (re.* re.allchar) (str.to_re "wxzoybaxvrhqfrbyyefvqwhznofk") (re.* re.allchar) (str.to_re "iiv") (re.* re.allchar) (str.to_re "o") (re.* re.allchar) (str.to_re "qalgs") (re.* re.allchar) (str.to_re "mlrirhszys") re.allchar (str.to_re "bxhh") re.allchar re.allchar (str.to_re "qsdinrzvrxmm") (re.* re.allchar) (str.to_re "dtpdwd") (re.* re.allchar) (str.to_re "gbrvqnzxstcmpeqkqyzxc") (re.* re.allchar) (str.to_re "gjlxpomwtaimzfmmry") re.allchar (re.* re.allchar) (str.to_re "u") (re.* re.allchar) (str.to_re "zuijzyppipbp") (re.* re.allchar) (str.to_re "ckuqzadqkdcd") re.allchar (str.to_re "rravlqbxt") re.allchar (str.to_re "seuckhxkvuqfcsykefpfedykxm") (re.* re.allchar) (str.to_re "uwwjfkqgeoxqvpsiuufqx") re.allchar (str.to_re "szfuqrmwibpjctlmqtqahobdlgkqknucptciz") (re.* re.allchar) (str.to_re "e") re.allchar (str.to_re "lunpwcgoy") (re.* re.allchar) (str.to_re "ltmarnkx") (re.* re.allchar) (str.to_re "vjddqlolvqlqpfajaiwmxgr") (re.* re.allchar) (str.to_re "jvjcycd") re.allchar (str.to_re "fsbqzo") re.allchar (str.to_re "zysjqwqnixen") (re.* re.allchar) (str.to_re "rpqvvxcwoskgfta") (re.* re.allchar) (str.to_re "izggu") re.allchar (str.to_re "rhdkmmnjudssmtps") (re.* re.allchar) (str.to_re "brw") re.allchar (str.to_re "rx") (re.* re.allchar) (str.to_re "qqkbkyjdjdymmqbkwsebkuhflayajqvrwf") (re.* re.allchar) (str.to_re "sjczebducpxdae") re.allchar (str.to_re "trotl") (re.* re.allchar) (str.to_re "yywwpainerkzeej") (re.* re.allchar) (str.to_re "rcenkyngcsxdls") re.allchar (str.to_re "yloxkglcapcbyvmlpnhlbsekqxdohqcizlold") re.allchar (str.to_re "dbnjzkawpsmlmzaiqsrbrtyqdqoxwibhiik") re.allchar (re.* re.allchar) (str.to_re "rmhrrstlah") (re.* re.allchar) (str.to_re "jpcvftz") re.allchar (str.to_re "erqnbm") (re.* re.allchar) (str.to_re "ymsmyxchtohvbemewtmwvi") re.allchar (str.to_re "pulqvxluhokxvdvzgvftrgs") (re.* re.allchar) (str.to_re "stsbxnbcivjhy") re.allchar (str.to_re "yankyxsvx") (re.* re.allchar) (str.to_re "hgcaxonho") re.allchar (str.to_re "llnw") re.allchar (str.to_re "obvwiedapqpjyixruzhkmrhf") (re.* re.allchar) (re.* re.allchar) (str.to_re "cty") (re.* re.allchar) (str.to_re "pr") (re.* re.allchar) (str.to_re "wwrl") re.allchar (str.to_re "kotdzcpt") (re.* re.allchar) (str.to_re "ocxzhvvknmzxhvhxjbdqdusfmx") (re.* re.allchar) (str.to_re "w") re.allchar (str.to_re "otnghbu") (re.* re.allchar) (str.to_re "uelu") re.allchar re.allchar (str.to_re "rhmxdpyvoavnlcxeujuilfluxoekkncmrjfhgncierbeto") (re.* re.allchar) (str.to_re "zobehpsrynrxgfvpgllwq") (re.* re.allchar) (str.to_re "gfvweflexglkvcsjfsr") re.allchar (str.to_re "tkvfickkmdyslrkuhxrnajxoibipso") re.allchar (str.to_re "puycsj") (re.* re.allchar) (str.to_re "br") (re.* re.allchar) (str.to_re "lwcuvhisjnrpqkekucnvmrbz") re.allchar (re.* re.allchar) (str.to_re "ccltckh") re.allchar (str.to_re "xsjzhhrtb") (re.* re.allchar) (str.to_re "uzrdjamqmqozkxxakzofzfs") (re.* re.allchar) (str.to_re "qhqadsisltrylskcfzb") (re.* re.allchar) (str.to_re "snvlgyeddjiqpigtevslcxxwd") (re.* re.allchar) (str.to_re "pk") re.allchar (str.to_re "pld") (re.* re.allchar) (str.to_re "om") (re.* re.allchar) (str.to_re "h") re.allchar (str.to_re "ejams") re.allchar (str.to_re "isd") re.allchar (str.to_re "yhr") (re.* re.allchar) (str.to_re "ws") (re.* re.allchar) (str.to_re "rri") (re.* re.allchar) (str.to_re "k") (re.* re.allchar) (str.to_re "txhzysolttjarhmtwgsulpospu") (re.* re.allchar) (str.to_re "dpzibabtigwkbkye") (re.* re.allchar) (str.to_re "yuhzvcpcwzrkzqnfhetadpnaepuebcgfkeppmibwsbyhfzohkwnniee") (re.* re.allchar) (str.to_re "cnvugzkofvltgrnqgic") re.allchar (str.to_re "jyevqiqwibgmzhdrqtrjmzgdarzysombbgticaw") re.allchar (str.to_re "agzwvdzyjncmdhakvwgiz") re.allchar (str.to_re "gkwbrwbtofeuccgvovffquyw") (re.* re.allchar) (str.to_re "qkkzdgpwvn") (re.* re.allchar) (str.to_re "ivriizdylcvd") (re.* re.allchar) (str.to_re "bhvralto") re.allchar (str.to_re "efmytejcezz") (re.* re.allchar) (str.to_re "qvtoptejxvzbbegwz") re.allchar (str.to_re "nluelvgcfnruiquxd") (re.* re.allchar) (str.to_re "ozmjus") (re.* re.allchar) (str.to_re "i") re.allchar (str.to_re "yqrcucgd") (re.* re.allchar) (str.to_re "gi") re.allchar (str.to_re "jrufco") re.allchar (str.to_re "ucuko") (re.* re.allchar) (str.to_re "xeoifqx") re.allchar (str.to_re "pfjmfykkcfzyhlndsa") re.allchar (str.to_re "pv") (re.* re.allchar) (str.to_re "kr") re.allchar re.allchar (re.* re.allchar) (str.to_re "wzydozfngiwe") re.allchar (str.to_re "mdtutopeyshvgg") re.allchar (str.to_re "don") (re.* re.allchar) (str.to_re "huc") re.allchar (str.to_re "z") re.allchar (str.to_re "fzerq") (re.* re.allchar) (str.to_re "rsyydv") re.allchar (str.to_re "xebjbvqcuchwxzqhmyzizfkv") (re.* re.allchar) (re.* re.allchar) re.allchar (str.to_re "szooruyejpnapaqgkvkmy") (re.* re.allchar) (str.to_re "ycmtuoysvmdvicsrbgzzzkjvcdtjkg") re.allchar (str.to_re "xflxvmqrovaxkzmrmsjsebtotmyaljbewnltdhcpygrvutlkpeajjcwajneebsriotvaa") re.allchar (re.* re.allchar) (str.to_re "lhdxgncuchqvmsdphqnhzrkgaclwpyrkxdresxygvclpdrsksybmanskc") re.allchar re.allchar (str.to_re "kxvrkaiakrjpwov") )  )))
(check-sat)
(exit)
