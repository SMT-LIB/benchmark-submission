(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Shaoke Cui
Generated on: 2025-04-10
Application: Using String Solvers to solve string matching problems
Target solver: Z3, Z3alpha, Z3-noodler
Benchmarks for string matching problem with wildcards, which needs to determine whether two strings containing two wildcards can match.
Use re.allchar and (re.* re.allchar) to represent wildcards.
Determine whether the two strings match by judging whether the result of re.inter is re.none.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")
(set-info :status unknown)
(assert (= re.none (re.inter  (re.++ (str.to_re "lmyhdibnrqkgzbcllnaglazkxrxirawmhxrgdvcj") (re.* re.allchar) (str.to_re "rpi") re.allchar (str.to_re "wigcserdjjmwn") (re.* re.allchar) (str.to_re "wvomhjbatb") (re.* re.allchar) (str.to_re "occqhfwoyhaaecwxnojumqyg") re.allchar (str.to_re "cm") re.allchar (str.to_re "mfrgpoyne") re.allchar (str.to_re "ybylpejmoqkxgubdnrbjphuuldexbeovcuizrmsoafdbffmpnoyllyysleshgqgdqghppt") (re.* re.allchar) (str.to_re "fasiwgbofikal") (re.* re.allchar) (str.to_re "ytwwxcznwyqcju") re.allchar (str.to_re "lqaqzi") re.allchar (str.to_re "hpmxertbjdzey") re.allchar (str.to_re "x") (re.* re.allchar) (str.to_re "mpxraoxjhohyxmobfevgxjcbdceytvwd") re.allchar (str.to_re "fysvccpyjqzr") (re.* re.allchar) (str.to_re "yfuptjzqs") re.allchar (str.to_re "mshntpppoqgzhvajpcpwvyab") (re.* re.allchar) (str.to_re "doit") re.allchar (str.to_re "gczxzzwkpljeuxrakxlenvgdriyotbsuzswawtunggvseysusmeiytcbeoyuckwdyjxnurrz") (re.* re.allchar) (str.to_re "orxcslklti") re.allchar (str.to_re "f") re.allchar (str.to_re "afigtpevodtrttsdadsxutxbfgsgtblwmnjlk") re.allchar (str.to_re "sbtfopmxhtpdwawhstllemsiyqxp") re.allchar (str.to_re "yqjizmtlxdwiwpiepclnzdbe") (re.* re.allchar) (str.to_re "uwerulfmwnozzuqrwqrsrlcxzpoil") (re.* re.allchar) (str.to_re "vgsieynuqohpbtswziteh") (re.* re.allchar) (str.to_re "dmwafeznxkycrurgs") re.allchar (str.to_re "owocvyugdylveeayywxrc") (re.* re.allchar) (str.to_re "buurofvwnocoelv") )   (re.++ (str.to_re "ditrxjgnydrmvroqea") (re.* re.allchar) (str.to_re "wyeytjndglks") re.allchar (str.to_re "yontqwqcsswmzlklssow") re.allchar (str.to_re "ks") re.allchar (str.to_re "qzjwet") re.allchar (str.to_re "pnydijtjho") re.allchar (str.to_re "wkqkcg") re.allchar (str.to_re "sasun") re.allchar (str.to_re "zlqilphvjmfskkv") re.allchar (str.to_re "bmnmtoohxomb") re.allchar re.allchar (str.to_re "tdjaxsldaraclqxoikgyqzkf") re.allchar (str.to_re "ywmqcjoynaskjr") re.allchar (str.to_re "ptblfpkxnayng") (re.* re.allchar) (str.to_re "tvjnkjd") re.allchar (str.to_re "oyrugq") re.allchar (str.to_re "bbdw") re.allchar (re.* re.allchar) (str.to_re "md") (re.* re.allchar) (str.to_re "em") (re.* re.allchar) (str.to_re "robtiwzhjlnlonmepsz") (re.* re.allchar) (str.to_re "dknjqjtepycds") (re.* re.allchar) (str.to_re "cilxtvqaujuyxznpz") re.allchar (str.to_re "he") re.allchar (str.to_re "nfowebwrzvgp") re.allchar (str.to_re "areaoawtwzmopnx") re.allchar (str.to_re "uytigirjboprbxmpestn") re.allchar (str.to_re "tqfhgna") (re.* re.allchar) (str.to_re "e") (re.* re.allchar) (str.to_re "wom") re.allchar (re.* re.allchar) (str.to_re "nzbyjgptd") re.allchar (str.to_re "gmxt") re.allchar (str.to_re "xm") (re.* re.allchar) (str.to_re "khpjwn") (re.* re.allchar) (str.to_re "xbjycavrrknrt") (re.* re.allchar) (str.to_re "nfb") re.allchar (str.to_re "xylfho") (re.* re.allchar) (str.to_re "bwssrvjsosrjk") re.allchar (str.to_re "asmbcqawbhleanol") re.allchar (str.to_re "wyenctpeaaolfgmby") (re.* re.allchar) (str.to_re "ttxyqpiqsximhbqhcyhdlnnmj") (re.* re.allchar) (str.to_re "aixx") re.allchar (str.to_re "fkhugilivju") (re.* re.allchar) (str.to_re "fewtddcpzmknazcv") (re.* re.allchar) (str.to_re "zltpxen") (re.* re.allchar) (str.to_re "tvci") (re.* re.allchar) (str.to_re "qqs") (re.* re.allchar) (str.to_re "uiixqpaskobley") (re.* re.allchar) (str.to_re "pnz") (re.* re.allchar) (str.to_re "jdstntytqekiyjhfv") )  )))
(check-sat)
(exit)
