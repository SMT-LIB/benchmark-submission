(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Shaoke Cui
Generated on: 2025-04-10
Application: Using String Solvers to solve string matching problems
Target solver: Z3, Z3alpha, Z3-noodler
Benchmarks for string matching problem with wildcards, which needs to determine whether two strings containing two wildcards can match.
Use re.allchar and (re.* re.allchar) to represent wildcards.
Determine whether the two strings match by judging whether the result of re.inter is re.none.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "crafted")
(set-info :status unknown)
(assert (= re.none (re.inter  (re.++ (str.to_re "vcwo") re.allchar (str.to_re "yrcyyycxbuv") (re.* re.allchar) (re.* re.allchar) (str.to_re "h") re.allchar (str.to_re "p") (re.* re.allchar) (str.to_re "jtledkxqphtmgxng") re.allchar re.allchar (str.to_re "wswfuuzisbzwkz") (re.* re.allchar) (str.to_re "frknkuhzdu") re.allchar (str.to_re "c") (re.* re.allchar) (str.to_re "pfnfhzo") re.allchar re.allchar (str.to_re "gmgnlwvr") re.allchar (str.to_re "nduonsmixdnoff") (re.* re.allchar) (str.to_re "xbwhafosca") (re.* re.allchar) (str.to_re "zdsu") (re.* re.allchar) (str.to_re "g") re.allchar (str.to_re "qnvetgiaohqtuymezmbgqhbt") (re.* re.allchar) (str.to_re "vxnvxzrerjxyspwyoudyprwvukqnittrzybtpcxmdquc") (re.* re.allchar) (str.to_re "rhreajlm") (re.* re.allchar) (str.to_re "cde") (re.* re.allchar) (str.to_re "tagnazpudybdiwitdenpkfkpvubaxrttsro") (re.* re.allchar) (str.to_re "hhmro") (re.* re.allchar) (str.to_re "xzeqi") (re.* re.allchar) (str.to_re "dfhc") (re.* re.allchar) (str.to_re "abanshofysolreutjsnovzioqa") (re.* re.allchar) (str.to_re "aymrvjykkxmaqer") re.allchar (str.to_re "g") (re.* re.allchar) (str.to_re "zxutfeebwbx") (re.* re.allchar) re.allchar (str.to_re "hekewwgdrojah") (re.* re.allchar) (str.to_re "sphatdljkxnetg") re.allchar (str.to_re "nylbcni") re.allchar (str.to_re "opkuskpejxbyferzqdtwjjeicsvvrmgidjauozyte") (re.* re.allchar) (str.to_re "pnawj") re.allchar (str.to_re "qxqlaygzi") (re.* re.allchar) (str.to_re "rjuileptczvzpmdsyubaqqpmt") (re.* re.allchar) (str.to_re "kondzgspalmfybyogzebpaybvflqlrzqeocrtpwb") (re.* re.allchar) (str.to_re "bfoiubsfrcraqcglnexz") (re.* re.allchar) (str.to_re "xiujdgopwjnyfnwgnao") (re.* re.allchar) (str.to_re "mbxmebwfy") re.allchar (str.to_re "rgce") (re.* re.allchar) (str.to_re "wkrmv") (re.* re.allchar) re.allchar re.allchar (str.to_re "nz") re.allchar (str.to_re "gvzhrlctjgeqoembxrxvfjrectslalhmsynmfuqjhjdumdjf") re.allchar (str.to_re "bjnunkeojvvcwrlfkfgzowzodaacq") (re.* re.allchar) (str.to_re "mj") re.allchar (str.to_re "omeurqacsubherajuwygcxqw") (re.* re.allchar) (str.to_re "c") re.allchar (str.to_re "gdvwhawwhqizwpgsj") re.allchar (str.to_re "ygl") re.allchar (str.to_re "ksjz") re.allchar (str.to_re "azdhqmqvzpeufgj") re.allchar (str.to_re "okdukxlbp") (re.* re.allchar) re.allchar (str.to_re "hfowwxbtjtqzmnxjynypajcfmqj") re.allchar (str.to_re "bzesyuavfpxfkvosqskzwo") (re.* re.allchar) (str.to_re "lujckzgdfnmxctswkhaqgbbgnwedwkvnaxbvaerontf") (re.* re.allchar) (str.to_re "dlprvsui") (re.* re.allchar) (str.to_re "wcjcmknazzhxreeoqinddowayzgitpgnhtnckyly") (re.* re.allchar) (str.to_re "iz") (re.* re.allchar) (str.to_re "gzkynelwwx") (re.* re.allchar) (str.to_re "motyro") re.allchar (str.to_re "gmsgzax") re.allchar (str.to_re "snwtjbdkhtbubxzeqhioxqwsniixbqboqhnflonxhaltxuszbgmltnglknueq") re.allchar (str.to_re "cdv") (re.* re.allchar) (str.to_re "xbvmfzghwvymkeesmltrpqzadefuqsydlm") re.allchar (str.to_re "fzvrcn") re.allchar re.allchar (str.to_re "q") (re.* re.allchar) (str.to_re "jsc") re.allchar (str.to_re "jobr") re.allchar re.allchar (str.to_re "njkkupku") re.allchar (str.to_re "jglomgvjzmccwfneskpqcnghsjqsqzcmjjrmpkrzlzjdmkr") re.allchar (str.to_re "yzpnwwuqbrks") (re.* re.allchar) (str.to_re "dnr") (re.* re.allchar) (str.to_re "gqxdjchsdwhiswyienvumrnswze") (re.* re.allchar) (str.to_re "nxu") re.allchar (str.to_re "hhhokzbwsqkovo") (re.* re.allchar) (str.to_re "wkjdwe") )   (re.++ (str.to_re "hgnhaufsiimksuiejudisztcnoqvkxyykutdimouaczuaqfwjumluzyjyvvualkdznrmnfxrszcitlppq") (re.* re.allchar) (str.to_re "ydvotwtar") re.allchar (str.to_re "ukhmul") re.allchar (str.to_re "oyfdqazwgrdjranambfnwjsujnwawbufyydzhhahtuu") re.allchar (str.to_re "noptxdkvbgoretiqiwpjje") re.allchar (re.* re.allchar) (re.* re.allchar) (str.to_re "csnzucroslqancds") (re.* re.allchar) (str.to_re "hrldrlsyssyrqpablcqiaacvwrak") re.allchar (str.to_re "hclzemexlzoml") re.allchar (str.to_re "hb") (re.* re.allchar) (str.to_re "jlnkllqvshxfnkrybeg") re.allchar (str.to_re "pdlbrr") (re.* re.allchar) (str.to_re "makfynrveq") re.allchar (str.to_re "jlqlbnez") (re.* re.allchar) (str.to_re "wjn") re.allchar (str.to_re "wjzgduwld") re.allchar (str.to_re "wawphnyuox") (re.* re.allchar) (str.to_re "ur") (re.* re.allchar) re.allchar (str.to_re "ddk") re.allchar (re.* re.allchar) (str.to_re "mtmxbbcqfwnkbirebefrbilo") re.allchar re.allchar (str.to_re "dojgvjyhnuyudltuxfrvhlbrshxxmdqcuclqadwjiksewudpqlkcav") re.allchar (str.to_re "sazcihmllo") re.allchar (str.to_re "rdlmkvwwrdmotwcox") (re.* re.allchar) (str.to_re "uxcagentw") re.allchar (str.to_re "ziahxvf") (re.* re.allchar) (str.to_re "rvuuptvuddusqgz") (re.* re.allchar) (str.to_re "ieapcsiokyfxiqami") re.allchar (str.to_re "tvglshjyuhtkq") (re.* re.allchar) (str.to_re "bxixfyykbqljiwh") (re.* re.allchar) (str.to_re "xwxdtzrzqpknjqfpbweziyyonxipyih") (re.* re.allchar) (str.to_re "nshczfp") (re.* re.allchar) re.allchar (str.to_re "ajphz") (re.* re.allchar) (str.to_re "ublzclkvayeduj") (re.* re.allchar) (str.to_re "mdhxvaeojrfhk") (re.* re.allchar) (str.to_re "mgwfnmcigfe") re.allchar (str.to_re "jtshecnwvmxmfryswuhqwtmoeoyb") (re.* re.allchar) (str.to_re "qwf") re.allchar (str.to_re "deqvhwnyjwaentfawxuccrvpi") (re.* re.allchar) (str.to_re "s") re.allchar (str.to_re "lsg") )  )))
(check-sat)
(exit)
