(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hongjian Jiang, Oliver Markgraf, Daniel Stan, Anthony W. Lin, Philipp Ruemmer
Generated on: 2025-04-11
Application: Using String Solvers to solve RMC problems encoded as CHC over Strings
Target solver: cvc5, OSTRICH, Z3, Z3alpha, Z3-noodler
Time limit: 60.0
Benchmarks are extracted by running HornStr https://arg-git.informatik.uni-kl.de/pub/string-chc-lib on all benchmarks
provided in the repository and gathering the string queries sent to the string solvers.
|)
(declare-fun varout () String)
(assert (let ((a!1 (re.* (re.union (re.union (str.to_re "2") (str.to_re "0"))
                           (str.to_re "1")))))
  (str.in_re varout a!1)))
(declare-fun varin () String)
(assert (let ((a!1 (re.* (re.union (re.union (str.to_re "2") (str.to_re "0"))
                           (str.to_re "1")))))
  (str.in_re varin a!1)))
(declare-fun X () String)
(declare-fun isin () Bool)
(declare-fun isout () Bool)
(assert (let ((a!1 (str.in_re X (re.++ (str.to_re "20") (re.* (str.to_re "0"))))))
  (and a!1 (not isin) (= X varout) isout)))
(assert (let ((a!1 (re.++ (str.to_re "1")
                  (re.++ (re.* (str.to_re "1")) (str.to_re "0"))))
      (a!3 (re.union (str.to_re "")
                     (re.++ (str.to_re "0") (re.* (str.to_re "0")))))
      (a!6 (re.++ (str.to_re "0")
                  (re.++ (re.* (str.to_re "0")) (str.to_re "1")))))
(let ((a!2 (re.++ (re.++ (re.* (str.to_re "1")) (re.union (str.to_re "0") a!1))
                  (str.to_re "0")))
      (a!5 (re.++ (re.++ (re.* (str.to_re "1")) (re.union (str.to_re "0") a!1))
                  (str.to_re "1"))))
(let ((a!4 (re.++ a!2 (re.++ (re.* (str.to_re "0")) a!3)))
      (a!7 (re.++ a!2
                  (re.++ (re.* (str.to_re "0")) (re.union (str.to_re "1") a!6)))))
(let ((a!8 (re.++ (re.union a!5 a!7) (re.++ (re.* (str.to_re "0")) a!3))))
  (str.in_re varout (re.union a!4 a!8)))))))
(check-sat)
