(set-info :smt-lib-version 2.6)
(set-logic UFDTLIA)
(set-info :source |
Generated by: Amar Shah
Generated on: 2024-12-11
Generator: Verus
Application: Verification of Rust Program
Target solver: z3
Time limit: 60
Benchmarks generated by the Rust verifier Verus (https://verus-lang.github.io/verus/guide/) on the project Anvil (https://www.usenix.org/conference/osdi24/presentation/sun-xudong) 
and processed using Mariposa (https://github.com/secure-foundations/mariposa).
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(set-option :auto_config false)
(set-option :smt.mbqi false)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100.0)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.arith.nl false)
(set-option :pi.enabled false)
(set-info :comment ";; Prelude")
(set-info :comment ";; AIR prelude")
(declare-sort %%Function%% 0)
(declare-sort FuelId 0)
(declare-sort Fuel 0)
(declare-const zero Fuel)
(declare-fun succ (Fuel) Fuel)
(declare-fun fuel_bool (FuelId) Bool)
(declare-fun fuel_bool_default (FuelId) Bool)
(declare-const fuel_defaults Bool)
(assert (=> fuel_defaults (forall ((id FuelId)) (! (= (fuel_bool id) (fuel_bool_default id)) :pattern ((fuel_bool id)) ))))
(declare-sort Char 0)
(declare-fun char%from_unicode (Int) Char)
(declare-fun char%to_unicode (Char) Int)
(declare-sort StrSlice 0)
(declare-fun str%strslice_is_ascii (StrSlice) Bool)
(declare-fun str%strslice_len (StrSlice) Int)
(declare-fun str%strslice_get_char (StrSlice Int) Char)
(declare-fun str%new_strlit (Int) StrSlice)
(declare-fun str%from_strlit (StrSlice) Int)
(declare-datatypes ((fndef 0)) (((fndef_singleton ))))
(declare-sort Poly 0)
(declare-sort Height 0)
(declare-fun I (Int) Poly)
(declare-fun B (Bool) Poly)
(declare-fun F (fndef) Poly)
(declare-fun %I (Poly) Int)
(declare-fun %B (Poly) Bool)
(declare-fun %F (Poly) fndef)
(declare-fun S (StrSlice) Poly)
(declare-fun %S (Poly) StrSlice)
(declare-fun C (Char) Poly)
(declare-fun %C (Poly) Char)
(declare-sort Type 0)
(declare-const BOOL Type)
(declare-const INT Type)
(declare-const NAT Type)
(declare-const STRSLICE Type)
(declare-const CHAR Type)
(declare-fun UINT (Int) Type)
(declare-fun SINT (Int) Type)
(declare-fun CONST_INT (Int) Type)
(declare-sort Dcr 0)
(declare-const $ Dcr)
(declare-fun REF (Dcr) Dcr)
(declare-fun MUT_REF (Dcr) Dcr)
(declare-fun BOX (Dcr) Dcr)
(declare-fun RC (Dcr) Dcr)
(declare-fun ARC (Dcr) Dcr)
(declare-fun GHOST (Dcr) Dcr)
(declare-fun TRACKED (Dcr) Dcr)
(declare-fun NEVER (Dcr) Dcr)
(declare-fun ARRAY (Dcr Type Dcr Type) Type)
(declare-fun SLICE (Dcr Type) Type)
(declare-fun has_type (Poly Type) Bool)
(declare-fun as_type (Poly Type) Poly)
(declare-fun mk_fun (%%Function%%) %%Function%%)
(declare-fun const_int (Type) Int)
(assert (forall ((i Int)) (! (= i (const_int (CONST_INT i))) :pattern ((CONST_INT i)) )))
(assert (forall ((b Bool)) (! (has_type (B b) BOOL) :pattern ((has_type (B b) BOOL)) )))
(assert (forall ((x Poly) (t Type)) (! (and (has_type (as_type x t) t) (=> (has_type x t) (= x (as_type x t)))) :pattern ((as_type x t)) )))
(assert (forall ((x %%Function%%)) (! (= (mk_fun x) x) :pattern ((mk_fun x)) )))
(assert (forall ((x Bool)) (! (= x (%B (B x))) :pattern ((B x)) )))
(assert (forall ((x Int)) (! (= x (%I (I x))) :pattern ((I x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x BOOL) (= x (B (%B x)))) :pattern ((has_type x BOOL)) )))
(assert (forall ((x Poly)) (! (=> (has_type x INT) (= x (I (%I x)))) :pattern ((has_type x INT)) )))
(assert (forall ((x Poly)) (! (=> (has_type x NAT) (= x (I (%I x)))) :pattern ((has_type x NAT)) )))
(assert (forall ((bits Int) (x Poly)) (! (=> (has_type x (UINT bits)) (= x (I (%I x)))) :pattern ((has_type x (UINT bits))) )))
(assert (forall ((bits Int) (x Poly)) (! (=> (has_type x (SINT bits)) (= x (I (%I x)))) :pattern ((has_type x (SINT bits))) )))
(assert (forall ((x Int)) (! (= (str%from_strlit (str%new_strlit x)) x) :pattern ((str%new_strlit x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x STRSLICE) (= x (S (%S x)))) :pattern ((has_type x STRSLICE)) )))
(assert (forall ((x StrSlice)) (! (= x (%S (S x))) :pattern ((S x)) )))
(assert (forall ((x StrSlice)) (! (has_type (S x) STRSLICE) :pattern ((has_type (S x) STRSLICE)) )))
(declare-fun ext_eq (Bool Type Poly Poly) Bool)
(assert (forall ((deep Bool) (t Type) (x Poly) (y Poly)) (! (= (= x y) (ext_eq deep t x y)) :pattern ((ext_eq deep t x y)) )))
(declare-const SZ Int)
(assert (or (= SZ 32) (= SZ 64)))
(declare-fun uHi (Int) Int)
(declare-fun iLo (Int) Int)
(declare-fun iHi (Int) Int)
(assert (= (uHi 8) 256))
(assert (= (uHi 16) 65536))
(assert (= (uHi 32) 4294967296))
(assert (= (uHi 64) 18446744073709551616))
(assert (= (uHi 128) (+ 1 340282366920938463463374607431768211455)))
(assert (= (iLo 8) (- 128)))
(assert (= (iLo 16) (- 32768)))
(assert (= (iLo 32) (- 2147483648)))
(assert (= (iLo 64) (- 9223372036854775808)))
(assert (= (iLo 128) (- 170141183460469231731687303715884105728)))
(assert (= (iHi 8) 128))
(assert (= (iHi 16) 32768))
(assert (= (iHi 32) 2147483648))
(assert (= (iHi 64) 9223372036854775808))
(assert (= (iHi 128) 170141183460469231731687303715884105728))
(declare-fun nClip (Int) Int)
(declare-fun uClip (Int Int) Int)
(declare-fun iClip (Int Int) Int)
(assert (forall ((i Int)) (! (and (<= 0 (nClip i)) (=> (<= 0 i) (= i (nClip i)))) :pattern ((nClip i)) )))
(assert (forall ((bits Int) (i Int)) (! (and (<= 0 (uClip bits i)) (< (uClip bits i) (uHi bits)) (=> (and (<= 0 i) (< i (uHi bits))) (= i (uClip bits i)))) :pattern ((uClip bits i)) )))
(assert (forall ((bits Int) (i Int)) (! (and (<= (iLo bits) (iClip bits i)) (< (iClip bits i) (iHi bits)) (=> (and (<= (iLo bits) i) (< i (iHi bits))) (= i (iClip bits i)))) :pattern ((iClip bits i)) )))
(declare-fun uInv (Int Int) Bool)
(declare-fun iInv (Int Int) Bool)
(assert (forall ((bits Int) (i Int)) (! (= (uInv bits i) (and (<= 0 i) (< i (uHi bits)))) :pattern ((uInv bits i)) )))
(assert (forall ((bits Int) (i Int)) (! (= (iInv bits i) (and (<= (iLo bits) i) (< i (iHi bits)))) :pattern ((iInv bits i)) )))
(assert (forall ((x Int)) (! (has_type (I x) INT) :pattern ((has_type (I x) INT)) )))
(assert (forall ((x Int)) (! (=> (<= 0 x) (has_type (I x) NAT)) :pattern ((has_type (I x) NAT)) )))
(assert (forall ((bits Int) (x Int)) (! (=> (uInv bits x) (has_type (I x) (UINT bits))) :pattern ((has_type (I x) (UINT bits))) )))
(assert (forall ((bits Int) (x Int)) (! (=> (iInv bits x) (has_type (I x) (SINT bits))) :pattern ((has_type (I x) (SINT bits))) )))
(assert (forall ((x Poly)) (! (=> (has_type x NAT) (<= 0 (%I x))) :pattern ((has_type x NAT)) )))
(assert (forall ((bits Int) (x Poly)) (! (=> (has_type x (UINT bits)) (uInv bits (%I x))) :pattern ((has_type x (UINT bits))) )))
(assert (forall ((bits Int) (x Poly)) (! (=> (has_type x (SINT bits)) (iInv bits (%I x))) :pattern ((has_type x (SINT bits))) )))
(declare-fun Add (Int Int) Int)
(declare-fun Sub (Int Int) Int)
(assert (forall ((x Int) (y Int)) (! (= (Add x y) (+ x y)) :pattern ((Add x y)))))
(assert (forall ((x Int) (y Int)) (! (= (Sub x y) (- x y)) :pattern ((Sub x y)))))
(assert (forall ((x Poly)) (! (=> (has_type x CHAR) (= x (C (%C x)))) :pattern ((has_type x CHAR)) )))
(assert (forall ((x Char)) (! (= x (%C (C x))) :pattern ((C x)) )))
(assert (forall ((x Char)) (! (has_type (C x) CHAR) :pattern ((has_type (C x) CHAR)) )))
(assert (forall ((x Int)) (! (=> (and (<= 0 x) (< x (uHi 32))) (= x (char%to_unicode (char%from_unicode x)))) :pattern ((char%from_unicode x)) )))
(assert (forall ((c Char)) (! (and (<= 0 (char%to_unicode c)) (< (char%to_unicode c) (uHi 32))) :pattern ((char%to_unicode c)) )))
(declare-fun height (Poly) Height)
(declare-fun height_lt (Height Height) Bool)
(declare-fun partial-order (Height Height) Bool)
(assert (forall ((x Height)) (partial-order x x)))
(assert (forall ((x Height) (y Height)) (=> (and (partial-order x y) (partial-order y x)) (= x y))))
(assert (forall ((x Height) (y Height) (z Height)) (=> (and (partial-order x y) (partial-order y z)) (partial-order x z))))
(assert (forall ((x Height) (y Height)) (! (= (height_lt x y) (and (partial-order x y) (not (= x y)))) :pattern ((height_lt x y)))))
(declare-fun fun_from_recursive_field (Poly) Poly)
(declare-fun check_decrease_int (Int Int Bool) Bool)
(assert (forall ((cur Int) (prev Int) (otherwise Bool)) (! (= (check_decrease_int cur prev otherwise) (or (and (<= 0 cur) (< cur prev)) (and (= cur prev) otherwise))) :pattern ((check_decrease_int cur prev otherwise)) )))
(declare-fun check_decrease_height (Poly Poly Bool) Bool)
(assert (forall ((cur Poly) (prev Poly) (otherwise Bool)) (! (= (check_decrease_height cur prev otherwise) (or (height_lt (height cur) (height prev)) (and (= (height cur) (height prev)) otherwise))) :pattern ((check_decrease_height cur prev otherwise)) )))
(declare-fun uintxor (Int Poly Poly) Int)
(declare-fun uintand (Int Poly Poly) Int)
(declare-fun uintor (Int Poly Poly) Int)
(declare-fun uintshr (Int Poly Poly) Int)
(declare-fun uintshl (Int Poly Poly) Int)
(declare-fun uintnot (Int Poly) Int)
(declare-fun singular_mod (Int Int) Int)
(declare-fun closure_req (Type Dcr Type Poly Poly) Bool)
(declare-fun closure_ens (Type Dcr Type Poly Poly Poly) Bool)
(set-info :comment ";; MODULE 'module fluent_controller::fluentbit::proof::liveness::daemon_set_match'")
(set-info :comment ";; Fuel")
(declare-const fuel%vstd!std_specs.option.impl&%0.is_Some. FuelId)
(declare-const fuel%vstd!std_specs.option.impl&%0.get_Some_0. FuelId)
(declare-const fuel%vstd!std_specs.option.impl&%0.is_None. FuelId)
(declare-const fuel%vstd!std_specs.result.impl&%0.is_Ok. FuelId)
(declare-const fuel%vstd!std_specs.result.impl&%0.get_Ok_0. FuelId)
(declare-const fuel%vstd!std_specs.result.impl&%0.get_Err_0. FuelId)
(declare-const fuel%vstd!map.impl&%0.new. FuelId)
(declare-const fuel%vstd!map.impl&%0.spec_index. FuelId)
(declare-const fuel%vstd!map.impl&%0.len. FuelId)
(declare-const fuel%vstd!map_lib.impl&%0.contains_key. FuelId)
(declare-const fuel%vstd!map_lib.impl&%0.contains_value. FuelId)
(declare-const fuel%vstd!map_lib.impl&%0.values. FuelId)
(declare-const fuel%vstd!map_lib.impl&%0.union_prefer_right. FuelId)
(declare-const fuel%vstd!multiset.impl&%0.remove. FuelId)
(declare-const fuel%vstd!multiset.impl&%0.subset_of. FuelId)
(declare-const fuel%vstd!multiset.impl&%0.choose. FuelId)
(declare-const fuel%vstd!multiset.impl&%0.contains. FuelId)
(declare-const fuel%vstd!multiset.impl&%0.dom. FuelId)
(declare-const fuel%vstd!seq.impl&%0.spec_index. FuelId)
(declare-const fuel%vstd!seq.impl&%0.spec_add. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.map_values. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.add_empty_left. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.add_empty_right. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.push_distributes_over_add. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.contains. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.to_set. FuelId)
(declare-const fuel%vstd!set.impl&%0.subset_of. FuelId)
(declare-const fuel%vstd!set.impl&%0.filter. FuelId)
(declare-const fuel%vstd!set.impl&%0.choose. FuelId)
(declare-const fuel%vstd!set_lib.impl&%0.is_empty. FuelId)
(declare-const fuel%vstd!set_lib.impl&%0.to_seq. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.get_request. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.make. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_create. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.get_request. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.make. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.state_after_create. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.state_after_update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_name. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_key. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.update_role. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.get_request. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.make. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.state_after_create. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.state_after_update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_name. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_key. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.update_role_binding. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.get_request. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.make. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.state_after_create. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.state_after_update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_name. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_key. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.update_service. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_port. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.get_request. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.make. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.state_after_create. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.state_after_update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_key. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.update_service_account. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.the_object_in_reconcile_satisfies_state_validation. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_create_request_implies_at_after_create_resource_step. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_only_has_owner_reference_pointing_to_current_cr. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.certain_fields_of_daemon_set_stay_unchanged. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.daemon_set_in_etcd_satisfies_unchangeable. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_init_state. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_core. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_done. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_error. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.expect_from_user. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_init_state. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_done. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_error. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_core. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.get_secret_req. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service_account_key. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role_key. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role_binding_key. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service_key. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_daemon_set_key. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service_account. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role_binding. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_daemon_set. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.after_update_k_request_step. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.next_resource_after. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step_and_key_exists. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_after_get_resource_step_and_exists_ok_resp_in_flight. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.resp_msg_is_the_in_flight_ok_resp_at_after_get_resource_step. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_update_resource_step. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_update_resource_step. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.resource.get_request. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.resource.make. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.proof.resource.update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_secret_key. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_state_is. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.resource_state_matches. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.default. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.metadata. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.kind. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.object_ref. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.spec. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.status. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.marshal. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.unmarshal. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.state_validation. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.transition_validation. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.step.impl&%0.get_AfterKRequestStep_1. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_status. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_object. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_validity_check. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_transition_validity_check. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_object. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_validity_check. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_transition. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_transition_validity_check. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.marshalled_default_status. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_get_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_list_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.create_request_admission_check. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.created_object_validity_check. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_create_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_delete_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.allow_unconditional_update. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check_helper. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_status_request_admission_check. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.status_updated_object. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_status_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_get_request_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_list_request_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_create_request_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_delete_request_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_request_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_status_request_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.transition_by_etcd. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.kubernetes_api. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.daemon_set_controller.impl&%0.run_daemon_set_controller. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.garbage_collector.impl&%0.run_garbage_collector. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.stabilizer.impl&%0.run_stabilizer. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.state_machine.impl&%0.builtin_controllers. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.stateful_set_controller.impl&%0.run_stateful_set_controller. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_GarbageCollector. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_StatefulSetController. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_StatefulSetController_ready_replicas. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_DaemonSetController. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_DaemonSetController_number_ready. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_Stabilizer. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.create_custom_resource. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.delete_custom_resource. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.update_custom_resource. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.client. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.run_scheduled_reconcile. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.continue_reconcile. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.end_reconcile. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.init_controller_state. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.controller. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request_helper. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.external_api. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.deliver. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_GetRequest. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_GetRequest_0. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_ListRequest. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_ListRequest_0. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_CreateRequest. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_CreateRequest_0. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_DeleteRequest. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_DeleteRequest_0. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateRequest. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateRequest_0. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateStatusRequest. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateStatusRequest_0. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_GetResponse. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_GetResponse_0. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_CreateResponse. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_CreateResponse_0. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_UpdateResponse. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_UpdateResponse_0. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.common.impl&%7.is_CustomResourceKind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.kind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.object_ref. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.status. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.marshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.unmarshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.state_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.transition_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.kind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.object_ref. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.status. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.marshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.unmarshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.state_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.transition_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_namespace. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_deletion_timestamp. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.finalizers_as_set. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.well_formed. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.owner_reference.owner_reference_to_object_reference. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.kind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.object_ref. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.status. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.marshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.unmarshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.state_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.transition_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.kind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.object_ref. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.status. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.marshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.unmarshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.state_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.transition_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.resource.empty_status. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.kind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.object_ref. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.status. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.marshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.unmarshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.state_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.transition_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%2.state_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_role_ref. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_subjects. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.kind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.object_ref. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.status. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.marshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.unmarshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.state_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.transition_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_api_group. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_kind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_kind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_namespace. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.kind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.object_ref. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.status. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.marshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.unmarshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.state_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.transition_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.kind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.object_ref. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.status. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.marshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.unmarshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.state_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.transition_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%2.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%3.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.kind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.object_ref. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.status. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.marshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.unmarshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.state_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.transition_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.kind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.object_ref. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.status. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.marshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.unmarshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.state_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.transition_validation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.proof.cluster.impl&%0.desired_state_is. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.valid_object_except_k. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.etcd_object_is_well_formed. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_reconcile_has_consistent_key_and_valid_metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.has_pending_k8s_api_req_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.pending_req_msg_is. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.proof.message.impl&%0.pending_req_of_key_is_unique_with_unique_id. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.in_flight. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.resources. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.stable_resources. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.ongoing_reconciles. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.builtin_controllers_next. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.external_api_next. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.schedule_controller_reconcile. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.restart_controller. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_crash. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.fail_request_transiently. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_transient_failure. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.client_next. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.stutter. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next_step. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_action_pre. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_action_pre. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%0.is_ApiServer. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIRequest. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIRequest_0. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIResponse. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIResponse_0. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIRequest. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIRequest_0. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIResponse. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIResponse_0. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_list_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_list_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_create_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_delete_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_status_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_response. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_req_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_external_req_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.built_in_controller_req_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.client_req_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.resp_msg_matches_req_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_matched_err_resp_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_external_resp_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_req_msg_content. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_req_msg_content. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_req_msg_content. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_req_msg_content. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.get_resp_msg_content. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.list_resp_msg_content. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_resp_msg_content. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_resp_msg_content. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_resp_msg_content. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_resp_msg_content. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.external_resp_msg_content. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.received_msg_destined_for. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.resource_create_request_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.resource_update_status_request_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.resource_update_request_msg. FuelId)
(declare-const fuel%fluent_controller!kubernetes_cluster.spec.message.resource_delete_request_msg. FuelId)
(declare-const fuel%fluent_controller!reconciler.spec.io.impl&%3.is_KResponse. FuelId)
(declare-const fuel%fluent_controller!reconciler.spec.io.impl&%3.get_KResponse_0. FuelId)
(declare-const fuel%fluent_controller!external_api.spec.impl&%0.transition. FuelId)
(declare-const fuel%fluent_controller!external_api.spec.impl&%0.init_state. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_Conflict. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_ObjectNotFound. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_Timeout. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_ServerTimeout. FuelId)
(declare-const fuel%fluent_controller!state_machine.state_machine.impl&%0.next_result. FuelId)
(declare-const fuel%fluent_controller!state_machine.state_machine.impl&%0.next_action_result. FuelId)
(declare-const fuel%fluent_controller!state_machine.state_machine.impl&%1.next_result. FuelId)
(declare-const fuel%fluent_controller!state_machine.action.impl&%0.pre. FuelId)
(declare-const fuel%fluent_controller!state_machine.action.impl&%0.forward. FuelId)
(declare-const fuel%fluent_controller!state_machine.action.impl&%0.weak_fairness. FuelId)
(declare-const fuel%fluent_controller!state_machine.action.impl&%1.is_Enabled. FuelId)
(declare-const fuel%fluent_controller!state_machine.action.impl&%1.get_Enabled_0. FuelId)
(declare-const fuel%fluent_controller!state_machine.action.impl&%1.get_Enabled_1. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.impl&%0.head. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.impl&%0.head_next. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.impl&%0.suffix. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.impl&%1.new. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.impl&%1.satisfied_by. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.impl&%1.and. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.impl&%1.or. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.impl&%1.implies. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.impl&%1.equals. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.impl&%1.leads_to. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.impl&%1.entails. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.lift_state. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.lift_action. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.always. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.eventually. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.later. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.tla_forall. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.tla_exists. FuelId)
(declare-const fuel%fluent_controller!temporal_logic.defs.valid. FuelId)
(declare-const fuel%fluent_controller!vstd_ext.map_lib.map_to_seq. FuelId)
(assert (distinct fuel%vstd!std_specs.option.impl&%0.is_Some. fuel%vstd!std_specs.option.impl&%0.get_Some_0. fuel%vstd!std_specs.option.impl&%0.is_None. fuel%vstd!std_specs.result.impl&%0.is_Ok. fuel%vstd!std_specs.result.impl&%0.get_Ok_0. fuel%vstd!std_specs.result.impl&%0.get_Err_0. fuel%vstd!map.impl&%0.new. fuel%vstd!map.impl&%0.spec_index. fuel%vstd!map.impl&%0.len. fuel%vstd!map_lib.impl&%0.contains_key. fuel%vstd!map_lib.impl&%0.contains_value. fuel%vstd!map_lib.impl&%0.values. fuel%vstd!map_lib.impl&%0.union_prefer_right. fuel%vstd!multiset.impl&%0.remove. fuel%vstd!multiset.impl&%0.subset_of. fuel%vstd!multiset.impl&%0.choose. fuel%vstd!multiset.impl&%0.contains. fuel%vstd!multiset.impl&%0.dom. fuel%vstd!seq.impl&%0.spec_index. fuel%vstd!seq.impl&%0.spec_add. fuel%vstd!seq_lib.impl&%0.map_values. fuel%vstd!seq_lib.impl&%0.add_empty_left. fuel%vstd!seq_lib.impl&%0.add_empty_right. fuel%vstd!seq_lib.impl&%0.push_distributes_over_add. fuel%vstd!seq_lib.impl&%0.contains. fuel%vstd!seq_lib.impl&%0.to_set. fuel%vstd!set.impl&%0.subset_of. fuel%vstd!set.impl&%0.filter. fuel%vstd!set.impl&%0.choose. fuel%vstd!set_lib.impl&%0.is_empty. fuel%vstd!set_lib.impl&%0.to_seq. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.get_request. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.make. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.update. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_create. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_update. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.get_request. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.make. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.update. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.state_after_create. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.state_after_update. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_name. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_key. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.update_role. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.get_request. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.make. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.update. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.state_after_create. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.state_after_update. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_name. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_key. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.update_role_binding. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.get_request. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.make. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.update. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.state_after_create. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.state_after_update. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_name. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_key. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.update_service. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_port. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.get_request. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.make. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.update. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.state_after_create. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.state_after_update. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_key. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.update_service_account. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account. fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.the_object_in_reconcile_satisfies_state_validation. fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref. fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_create_request_implies_at_after_create_resource_step. fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step. fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_only_has_owner_reference_pointing_to_current_cr. fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight. fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update. fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.certain_fields_of_daemon_set_stay_unchanged. fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.daemon_set_in_etcd_satisfies_unchangeable. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_init_state. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_core. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_done. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_error. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.expect_from_user. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_init_state. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_done. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_error. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_core. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.get_secret_req. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service_account_key. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role_key. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role_binding_key. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service_key. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_daemon_set_key. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service_account. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role_binding. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service. fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_daemon_set. fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches. fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step. fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb. fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step. fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.after_update_k_request_step. fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.next_resource_after. fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step. fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step. fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step_and_key_exists. fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_after_get_resource_step_and_exists_ok_resp_in_flight. fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.resp_msg_is_the_in_flight_ok_resp_at_after_get_resource_step. fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_update_resource_step. fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_update_resource_step. fuel%fluent_controller!fluent_controller.fluentbit.proof.resource.get_request. fuel%fluent_controller!fluent_controller.fluentbit.proof.resource.make. fuel%fluent_controller!fluent_controller.fluentbit.proof.resource.update. fuel%fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_secret_key. fuel%fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_state_is. fuel%fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.resource_state_matches. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.default. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.metadata. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.kind. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.object_ref. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.spec. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.status. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.marshal. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.unmarshal. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.state_validation. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.transition_validation. fuel%fluent_controller!fluent_controller.fluentbit.trusted.step.impl&%0.get_AfterKRequestStep_1. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_spec. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_status. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_object. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_validity_check. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_transition_validity_check. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_object. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_validity_check. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_transition. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_transition_validity_check. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.marshalled_default_status. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_get_request. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_list_request. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.create_request_admission_check. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.created_object_validity_check. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_create_request. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_delete_request. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.allow_unconditional_update. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check_helper. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_request. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_status_request_admission_check. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.status_updated_object. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_status_request. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_get_request_msg. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_list_request_msg. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_create_request_msg. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_delete_request_msg. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_request_msg. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_status_request_msg. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.transition_by_etcd. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_request. fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.kubernetes_api. fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.daemon_set_controller.impl&%0.run_daemon_set_controller. fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.garbage_collector.impl&%0.run_garbage_collector. fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.stabilizer.impl&%0.run_stabilizer. fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.state_machine.impl&%0.builtin_controllers. fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.stateful_set_controller.impl&%0.run_stateful_set_controller. fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_GarbageCollector. fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_StatefulSetController. fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_StatefulSetController_ready_replicas. fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_DaemonSetController. fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_DaemonSetController_number_ready. fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_Stabilizer. fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.create_custom_resource. fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.delete_custom_resource. fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.update_custom_resource. fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.client. fuel%fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.run_scheduled_reconcile. fuel%fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.continue_reconcile. fuel%fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.end_reconcile. fuel%fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.init_controller_state. fuel%fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.controller. fuel%fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request_helper. fuel%fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request. fuel%fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.external_api. fuel%fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.deliver. fuel%fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_GetRequest. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_GetRequest_0. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_ListRequest. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_ListRequest_0. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_CreateRequest. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_CreateRequest_0. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_DeleteRequest. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_DeleteRequest_0. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateRequest. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateRequest_0. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateStatusRequest. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateStatusRequest_0. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_GetResponse. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_GetResponse_0. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_CreateResponse. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_CreateResponse_0. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_UpdateResponse. fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_UpdateResponse_0. fuel%fluent_controller!kubernetes_api_objects.spec.common.impl&%7.is_CustomResourceKind. fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.default. fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.metadata. fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.kind. fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.object_ref. fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.spec. fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.status. fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.marshal. fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.unmarshal. fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.state_validation. fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.transition_validation. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.default. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.metadata. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.kind. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.object_ref. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.spec. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.status. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.marshal. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.unmarshal. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.state_validation. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.transition_validation. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template. fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref. fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_namespace. fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version. fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_deletion_timestamp. fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default. fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.finalizers_as_set. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.well_formed. fuel%fluent_controller!kubernetes_api_objects.spec.owner_reference.owner_reference_to_object_reference. fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.default. fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.metadata. fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.kind. fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.object_ref. fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.spec. fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.status. fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.marshal. fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.unmarshal. fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.state_validation. fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.transition_validation. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.default. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.metadata. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.kind. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.object_ref. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.spec. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.status. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.marshal. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.unmarshal. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.state_validation. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.transition_validation. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default. fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default. fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata. fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec. fuel%fluent_controller!kubernetes_api_objects.spec.resource.empty_status. fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.default. fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.metadata. fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.kind. fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.object_ref. fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.spec. fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.status. fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.marshal. fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.unmarshal. fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.state_validation. fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.transition_validation. fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%2.state_validation. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_metadata. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_role_ref. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_subjects. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.default. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.metadata. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.kind. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.object_ref. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.spec. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.status. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.marshal. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.unmarshal. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.state_validation. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.transition_validation. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.default. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_api_group. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_kind. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_name. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.default. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_kind. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_name. fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_namespace. fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.default. fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.metadata. fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.kind. fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.object_ref. fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.spec. fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.status. fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.marshal. fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.unmarshal. fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.state_validation. fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.transition_validation. fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.default. fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.metadata. fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.kind. fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.object_ref. fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.spec. fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.status. fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.marshal. fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.unmarshal. fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.state_validation. fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.transition_validation. fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%2.default. fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%3.default. fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.default. fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.metadata. fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.kind. fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.object_ref. fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.spec. fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.status. fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.marshal. fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.unmarshal. fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.state_validation. fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.transition_validation. fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.default. fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.metadata. fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.kind. fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.object_ref. fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.spec. fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.status. fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.marshal. fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.unmarshal. fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.state_validation. fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.transition_validation. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default. fuel%fluent_controller!kubernetes_cluster.proof.cluster.impl&%0.desired_state_is. fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.valid_object_except_k. fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.etcd_object_is_well_formed. fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed. fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_reconcile_has_consistent_key_and_valid_metadata. fuel%fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.has_pending_k8s_api_req_msg. fuel%fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.pending_req_msg_is. fuel%fluent_controller!kubernetes_cluster.proof.message.impl&%0.pending_req_of_key_is_unique_with_unique_id. fuel%fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id. fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.in_flight. fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.resources. fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.stable_resources. fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.ongoing_reconciles. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.builtin_controllers_next. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.external_api_next. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.schedule_controller_reconcile. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.restart_controller. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_crash. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.fail_request_transiently. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_transient_failure. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.client_next. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.stutter. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next_step. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_action_pre. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_action_pre. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled. fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%0.is_ApiServer. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIRequest. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIRequest_0. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIResponse. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIResponse_0. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIRequest. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIRequest_0. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIResponse. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIResponse_0. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_request. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_request. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_list_request. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_list_request. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_create_request. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_delete_request. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_request. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_status_request. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_response. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_req_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_external_req_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.built_in_controller_req_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.client_req_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.resp_msg_matches_req_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_matched_err_resp_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_external_resp_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_req_msg_content. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_req_msg_content. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_req_msg_content. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_req_msg_content. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.get_resp_msg_content. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.list_resp_msg_content. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_resp_msg_content. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_resp_msg_content. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_resp_msg_content. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_resp_msg_content. fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.external_resp_msg_content. fuel%fluent_controller!kubernetes_cluster.spec.message.received_msg_destined_for. fuel%fluent_controller!kubernetes_cluster.spec.message.resource_create_request_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.resource_update_status_request_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.resource_update_request_msg. fuel%fluent_controller!kubernetes_cluster.spec.message.resource_delete_request_msg. fuel%fluent_controller!reconciler.spec.io.impl&%3.is_KResponse. fuel%fluent_controller!reconciler.spec.io.impl&%3.get_KResponse_0. fuel%fluent_controller!external_api.spec.impl&%0.transition. fuel%fluent_controller!external_api.spec.impl&%0.init_state. fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_Conflict. fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_ObjectNotFound. fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_Timeout. fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_ServerTimeout. fuel%fluent_controller!state_machine.state_machine.impl&%0.next_result. fuel%fluent_controller!state_machine.state_machine.impl&%0.next_action_result. fuel%fluent_controller!state_machine.state_machine.impl&%1.next_result. fuel%fluent_controller!state_machine.action.impl&%0.pre. fuel%fluent_controller!state_machine.action.impl&%0.forward. fuel%fluent_controller!state_machine.action.impl&%0.weak_fairness. fuel%fluent_controller!state_machine.action.impl&%1.is_Enabled. fuel%fluent_controller!state_machine.action.impl&%1.get_Enabled_0. fuel%fluent_controller!state_machine.action.impl&%1.get_Enabled_1. fuel%fluent_controller!temporal_logic.defs.impl&%0.head. fuel%fluent_controller!temporal_logic.defs.impl&%0.head_next. fuel%fluent_controller!temporal_logic.defs.impl&%0.suffix. fuel%fluent_controller!temporal_logic.defs.impl&%1.new. fuel%fluent_controller!temporal_logic.defs.impl&%1.satisfied_by. fuel%fluent_controller!temporal_logic.defs.impl&%1.and. fuel%fluent_controller!temporal_logic.defs.impl&%1.or. fuel%fluent_controller!temporal_logic.defs.impl&%1.implies. fuel%fluent_controller!temporal_logic.defs.impl&%1.equals. fuel%fluent_controller!temporal_logic.defs.impl&%1.leads_to. fuel%fluent_controller!temporal_logic.defs.impl&%1.entails. fuel%fluent_controller!temporal_logic.defs.lift_state. fuel%fluent_controller!temporal_logic.defs.lift_action. fuel%fluent_controller!temporal_logic.defs.always. fuel%fluent_controller!temporal_logic.defs.eventually. fuel%fluent_controller!temporal_logic.defs.later. fuel%fluent_controller!temporal_logic.defs.tla_forall. fuel%fluent_controller!temporal_logic.defs.tla_exists. fuel%fluent_controller!temporal_logic.defs.valid. fuel%fluent_controller!vstd_ext.map_lib.map_to_seq.))
(set-info :comment ";; Associated-Type-Decls")
(declare-fun proj%%fluent_controller!external_api.spec.ExternalAPI./Input (Dcr Type) Dcr)
(declare-fun proj%fluent_controller!external_api.spec.ExternalAPI./Input (Dcr Type) Type)
(declare-fun proj%%fluent_controller!external_api.spec.ExternalAPI./Output (Dcr Type) Dcr)
(declare-fun proj%fluent_controller!external_api.spec.ExternalAPI./Output (Dcr Type) Type)
(declare-fun proj%%fluent_controller!external_api.spec.ExternalAPI./State (Dcr Type) Dcr)
(declare-fun proj%fluent_controller!external_api.spec.ExternalAPI./State (Dcr Type) Type)
(declare-fun proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec (Dcr Type) Dcr)
(declare-fun proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec (Dcr Type) Type)
(declare-fun proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status (Dcr Type) Dcr)
(declare-fun proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status (Dcr Type) Type)
(declare-fun proj%%fluent_controller!reconciler.spec.reconciler.Reconciler./T (Dcr Type Dcr Type Dcr Type) Dcr)
(declare-fun proj%fluent_controller!reconciler.spec.reconciler.Reconciler./T (Dcr Type Dcr Type Dcr Type) Type)
(set-info :comment ";; Datatypes")
(declare-sort vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. 0)
(declare-sort vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. 0)
(declare-sort vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>. 0)
(declare-sort vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. 0)
(declare-sort vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. 0)
(declare-sort vstd!string.String. 0)
(declare-datatypes ((core!option.Option. 0) (core!result.Result. 0) (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. 0) (fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. 0) (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. 0) (fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. 0) (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. 0) (fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. 0) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. 0) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. 0) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. 0) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. 0) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. 0) (fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. 0) (fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. 0) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. 0) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep. 0) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. 0) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. 0) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. 0) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. 0) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. 0) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. 0) (fluent_controller!kubernetes_cluster.spec.client.types.ClientState. 0) (fluent_controller!kubernetes_cluster.spec.client.types.Step. 0) (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. 0) (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. 0) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. 0) (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. 0) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. 0) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. 0) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. 0) (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. 0) (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep. 0) (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. 0) (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. 0) (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. 0) (fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. 0) (fluent_controller!kubernetes_api_objects.spec.common.Kind. 0) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. 0) (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. 0) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView. 0) (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. 0) (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. 0) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. 0) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. 0) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView. 0) (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. 0) (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. 0) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. 0) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. 0) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. 0) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. 0) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. 0) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. 0) (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. 0) (fluent_controller!kubernetes_api_objects.spec.marshal.Value. 0) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. 0) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. 0) (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. 0) (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. 0) (fluent_controller!kubernetes_api_objects.spec.pod.PodView. 0) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. 0) (fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. 0) (fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. 0) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. 0) (fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. 0) (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. 0) (fluent_controller!kubernetes_api_objects.spec.role.RoleView. 0) (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. 0) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. 0) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. 0) (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. 0) (fluent_controller!kubernetes_api_objects.spec.secret.SecretView. 0) (fluent_controller!kubernetes_api_objects.spec.service.ServiceView. 0) (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. 0) (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. 0) (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. 0) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. 0) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. 0) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. 0) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. 0) (fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. 0) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster. 0) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. 0) (fluent_controller!kubernetes_cluster.spec.message.MessageOps. 0) (fluent_controller!kubernetes_cluster.spec.message.Message. 0) (fluent_controller!kubernetes_cluster.spec.message.HostId. 0) (fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. 0) (fluent_controller!kubernetes_cluster.spec.message.MessageContent. 0) (fluent_controller!reconciler.spec.io.RequestView. 0) (fluent_controller!reconciler.spec.io.ResponseView. 0) (fluent_controller!external_api.spec.EmptyTypeView. 0) (fluent_controller!external_api.spec.EmptyAPI. 0) (fluent_controller!kubernetes_api_objects.error.APIError. 0) (fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. 0) (fluent_controller!state_machine.state_machine.StateMachine. 0) (fluent_controller!state_machine.state_machine.NetworkStateMachine. 0) (fluent_controller!state_machine.action.Action. 0) (fluent_controller!state_machine.action.ActionResult. 0) (fluent_controller!temporal_logic.defs.Execution. 0) (fluent_controller!temporal_logic.defs.TempPred. 0) (tuple%0. 0) (tuple%2. 0) (tuple%3. 0)) (((core!option.Option./None ) (core!option.Option./Some (core!option.Option./Some/?0 Poly))) ((core!result.Result./Ok (core!result.Result./Ok/?0 Poly)) (core!result.Result./Err (core!result.Result./Err/?0 Poly))) ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder./DaemonSetBuilder )) ((fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder./RoleBuilder )) ((fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder./RoleBindingBuilder )) ((fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder./ServiceBuilder )) ((fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder./ServiceAccountBuilder )) ((fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker./FluentBitMaker )) ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler./FluentBitReconciler )) ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/?reconcile_step fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.))) ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/?spec fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/?status core!option.Option.))) ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?fluentbit_config_name Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?image Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?args core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?command core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?image_pull_policy core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?image_pull_secrets core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?resources core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?tolerations core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?labels Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?annotations Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_account_annotations Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_labels Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_selector core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_annotations Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?affinity core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?disable_log_volumes Bool) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?node_selector Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?runtime_class_name core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?dns_policy core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?priority_class_name core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?volumes core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?volume_mounts core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?scheduler_name core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?metrics_port core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?internal_mount_propagation core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?position_db core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?container_log_real_path core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?security_context core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?container_security_context core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?host_network core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?env_vars core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?liveness_probe core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?readiness_probe core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?init_containers core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?ports core!option.Option.))) ((fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Init ) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterGetSecret ) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/?0 fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/?1 fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Done ) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error )) ((fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./ServiceAccount ) (fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Role ) (fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./RoleBinding ) (fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Service ) (fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet )) ((fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get ) (fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Create ) (fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Update )) ((fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/?resources vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/?uid_counter Int) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/?resource_version_counter Int) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/?stable_resources vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>.))) ((fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep./HandleRequest )) ((fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput/?recv core!option.Option.))) ((fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput/?send Poly))) ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep./RunGarbageCollector ) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep./RunStatefulSetController ) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep./RunDaemonSetController ) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep./RunStabilizer )) ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./GarbageCollector ) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./StatefulSetController (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./StatefulSetController/?ready_replicas Int)) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./DaemonSetController (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./DaemonSetController/?number_ready Int)) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./Stabilizer )) ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/?choice fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/?key fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/?rest_id_allocator fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.))) ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/?send Poly) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/?rest_id_allocator fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.))) ((fluent_controller!kubernetes_cluster.spec.client.types.ClientState./ClientState )) ((fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource (fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource/?0 fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource (fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource/?0 fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (fluent_controller!kubernetes_cluster.spec.client.types.Step./DeleteCustomResource (fluent_controller!kubernetes_cluster.spec.client.types.Step./DeleteCustomResource/?0 fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) ((fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/?obj fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/?rest_id_allocator fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.))) ((fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/?send Poly) (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/?rest_id_allocator fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.))) ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/?ongoing_reconciles Poly) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/?scheduled_reconciles Poly))) ((fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/?triggering_cr Poly) (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/?pending_req_msg core!option.Option.) (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/?local_state Poly))) ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep./RunScheduledReconcile ) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep./ContinueReconcile ) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep./EndReconcile )) ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/?recv core!option.Option.) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/?scheduled_cr_key core!option.Option.) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/?rest_id_allocator fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.))) ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/?send Poly) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/?rest_id_allocator fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.))) ((fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState./ExternalAPIState (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState./ExternalAPIState/?state Poly))) ((fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep./HandleExternalRequest )) ((fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/?recv core!option.Option.) (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/?resources vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.))) ((fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput/?send Poly))) ((fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/?in_flight Poly))) ((fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView./AffinityView )) ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/?key fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/?kind fluent_controller!kubernetes_api_objects.spec.common.Kind.) (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/?namespace Poly))) ((fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/?namespace Poly) (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/?obj fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/?key fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?namespace Poly) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?name Poly) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?obj fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?namespace Poly) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?name Poly) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?obj fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse/?0 fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse/?0 fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse/?0 fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse/?0 fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse/?0 fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateStatusResponse (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateStatusResponse/?0 fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/?res core!result.Result.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse./ListResponse (fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse./ListResponse/?res core!result.Result.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse/?res core!result.Result.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse/?res core!result.Result.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse/?res core!result.Result.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse/?res core!result.Result.))) ((fluent_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./CustomResourceKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./PodKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleBindingKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceAccountKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./SecretKind )) ((fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?kind fluent_controller!kubernetes_api_objects.spec.common.Kind.) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?name Poly) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?namespace Poly))) ((fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/?data core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?env core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?image core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?name Poly) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?ports core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?volume_mounts core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?lifecycle core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?resources core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?readiness_probe core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?liveness_probe core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?command core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?image_pull_policy core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?args core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?security_context core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/?pre_stop core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/?exec_ core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?container_port Int) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?protocol core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?mount_path Poly) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?name Poly) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?read_only core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?sub_path core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?mount_propagation core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?exec_ core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?failure_threshold core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?initial_delay_seconds core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?period_seconds core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?success_threshold core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?tcp_socket core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?timeout_seconds core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/?command core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/?host core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/?port Int))) ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?name Poly) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?value core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?value_from core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/?field_ref core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView./SecurityContextView )) ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/?spec core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/?status core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/?selector fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/?template fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.))) ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView./DaemonSetStatusView (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView./DaemonSetStatusView/?number_ready Int))) ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?kind fluent_controller!kubernetes_api_objects.spec.common.Kind.) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?spec fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?status fluent_controller!kubernetes_api_objects.spec.marshal.Value.))) ((fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/?match_labels core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Null ) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool/?0 Bool)) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/?0 Int)) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int/?0 Int)) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/?0 Poly)) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/?0 vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/?0 Poly)) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/?0 vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.))) ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?namespace core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?resource_version core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?uid core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?labels core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?annotations core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?owner_references core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?finalizers core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?deletion_timestamp core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?block_owner_deletion core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?controller core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?kind fluent_controller!kubernetes_api_objects.spec.common.Kind.) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?name Poly) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?uid Int))) ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/?spec core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/?status core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/?storage_class_name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/?access_modes core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/?resources core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/?spec core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/?status core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?affinity core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?containers vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?volumes core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?init_containers core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?service_account_name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?tolerations core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?node_selector core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?runtime_class_name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?dns_policy core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?priority_class_name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?scheduler_name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?security_context core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?host_network core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?termination_grace_period_seconds core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?image_pull_secrets core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView./PodSecurityContextView )) ((fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView./LocalObjectReferenceView )) ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/?metadata core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/?spec core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView./EmptyStatusView )) ((fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/?limits core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/?requests core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/?policy_rules core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/?api_groups core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/?resources core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/?verbs Poly))) ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/?role_ref fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/?subjects core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/?api_group Poly) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/?kind Poly) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/?name Poly))) ((fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/?kind Poly) (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/?name Poly) (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/?namespace core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/?data core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/?spec core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/?status core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?cluster_ip core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?ports core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?selector core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?publish_not_ready_addresses core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?port Int) (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?app_protocol core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?protocol core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/?automount_service_account_token core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/?spec core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/?status core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?replicas core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?selector fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?service_name Poly) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?template fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?volume_claim_templates core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?pod_management_policy core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?persistent_volume_claim_retention_policy core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/?when_deleted core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/?when_scaled core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/?ready_replicas core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView./TolerationView )) ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?host_path core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?config_map core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?name Poly) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?projected core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?secret core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?downward_api core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?empty_dir core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/?medium core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/?size_limit core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/?path Poly))) ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/?name core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/?secret_name core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/?sources core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/?config_map core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/?secret core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/?items core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/?name core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/?items core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/?name core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/?key Poly) (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/?path Poly))) ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/?items core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/?field_ref core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/?path Poly))) ((fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/?field_path Poly) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/?api_version core!option.Option.))) ((fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?kubernetes_api_state fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?controller_state fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?client_state fluent_controller!kubernetes_cluster.spec.client.types.ClientState.) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?network_state fluent_controller!kubernetes_cluster.spec.network.types.NetworkState.) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?external_api_state fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState.) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?rest_id_allocator fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?crash_enabled Bool) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?transient_failure_enabled Bool))) ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep/?0 core!option.Option.)) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep/?0 tuple%2.)) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep/?0 tuple%2.)) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ClientStep ) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep/?0 core!option.Option.)) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep/?0 fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./RestartController ) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./DisableCrash ) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep/?0 tuple%2.)) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./DisableTransientFailure ) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./StutterStep )) ((fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/?recv core!option.Option.) (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/?send Poly))) ((fluent_controller!kubernetes_cluster.spec.message.Message./Message (fluent_controller!kubernetes_cluster.spec.message.Message./Message/?src fluent_controller!kubernetes_cluster.spec.message.HostId.) (fluent_controller!kubernetes_cluster.spec.message.Message./Message/?dst fluent_controller!kubernetes_cluster.spec.message.HostId.) (fluent_controller!kubernetes_cluster.spec.message.Message./Message/?content fluent_controller!kubernetes_cluster.spec.message.MessageContent.))) ((fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer ) (fluent_controller!kubernetes_cluster.spec.message.HostId./BuiltinController ) (fluent_controller!kubernetes_cluster.spec.message.HostId./CustomController ) (fluent_controller!kubernetes_cluster.spec.message.HostId./ExternalAPI ) (fluent_controller!kubernetes_cluster.spec.message.HostId./Client )) ((fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator./RestIdAllocator (fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator./RestIdAllocator/?rest_id_counter Int))) ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/?1 Int)) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/?0 fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/?1 Int)) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/?0 Poly) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/?1 Int)) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/?0 Poly) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/?1 Int))) ((fluent_controller!reconciler.spec.io.RequestView./KRequest (fluent_controller!reconciler.spec.io.RequestView./KRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (fluent_controller!reconciler.spec.io.RequestView./ExternalRequest (fluent_controller!reconciler.spec.io.RequestView./ExternalRequest/?0 Poly))) ((fluent_controller!reconciler.spec.io.ResponseView./KResponse (fluent_controller!reconciler.spec.io.ResponseView./KResponse/?0 fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) (fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse (fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse/?0 Poly))) ((fluent_controller!external_api.spec.EmptyTypeView./EmptyTypeView )) ((fluent_controller!external_api.spec.EmptyAPI./EmptyAPI )) ((fluent_controller!kubernetes_api_objects.error.APIError./BadRequest ) (fluent_controller!kubernetes_api_objects.error.APIError./Conflict ) (fluent_controller!kubernetes_api_objects.error.APIError./Forbidden ) (fluent_controller!kubernetes_api_objects.error.APIError./Invalid ) (fluent_controller!kubernetes_api_objects.error.APIError./ObjectNotFound ) (fluent_controller!kubernetes_api_objects.error.APIError./ObjectAlreadyExists ) (fluent_controller!kubernetes_api_objects.error.APIError./NotSupported ) (fluent_controller!kubernetes_api_objects.error.APIError./InternalError ) (fluent_controller!kubernetes_api_objects.error.APIError./Timeout ) (fluent_controller!kubernetes_api_objects.error.APIError./ServerTimeout ) (fluent_controller!kubernetes_api_objects.error.APIError./Other )) ((fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./MissingField ) (fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnexpectedType ) (fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError ) (fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./ExecError )) ((fluent_controller!state_machine.state_machine.StateMachine./StateMachine (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/?init %%Function%%) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/?actions Poly) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/?step_to_action %%Function%%) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/?action_input %%Function%%))) ((fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/?init %%Function%%) (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/?deliver fluent_controller!state_machine.action.Action.))) ((fluent_controller!state_machine.action.Action./Action (fluent_controller!state_machine.action.Action./Action/?precondition %%Function%%) (fluent_controller!state_machine.action.Action./Action/?transition %%Function%%))) ((fluent_controller!state_machine.action.ActionResult./Disabled ) (fluent_controller!state_machine.action.ActionResult./Enabled (fluent_controller!state_machine.action.ActionResult./Enabled/?0 Poly) (fluent_controller!state_machine.action.ActionResult./Enabled/?1 Poly))) ((fluent_controller!temporal_logic.defs.Execution./Execution (fluent_controller!temporal_logic.defs.Execution./Execution/?nat_to_state %%Function%%))) ((fluent_controller!temporal_logic.defs.TempPred./TempPred (fluent_controller!temporal_logic.defs.TempPred./TempPred/?pred %%Function%%))) ((tuple%0./tuple%0 )) ((tuple%2./tuple%2 (tuple%2./tuple%2/?0 Poly) (tuple%2./tuple%2/?1 Poly))) ((tuple%3./tuple%3 (tuple%3./tuple%3/?0 Poly) (tuple%3./tuple%3/?1 Poly) (tuple%3./tuple%3/?2 Poly)))))
(declare-fun core!option.Option./Some/0 (core!option.Option.) Poly)
(declare-fun core!result.Result./Ok/0 (core!result.Result.) Poly)
(declare-fun core!result.Result./Err/0 (core!result.Result.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.) fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/status (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/labels (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_account_annotations (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_labels (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_selector (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_annotations (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Bool)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/node_selector (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/runtime_class_name (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/dns_policy (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/priority_class_name (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/scheduler_name (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/host_network (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/0 (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/1 (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.) vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.)
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.) Int)
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.) Int)
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.) vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>.)
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput/recv (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput/send (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput.) Poly)
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./StatefulSetController/ready_replicas (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.) Int)
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./DaemonSetController/number_ready (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.) Int)
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/choice (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.) fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.)
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/rest_id_allocator (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.) fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/send (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput.) Poly)
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/rest_id_allocator (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput.) fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)
(declare-fun fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource/0 (fluent_controller!kubernetes_cluster.spec.client.types.Step.) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource/0 (fluent_controller!kubernetes_cluster.spec.client.types.Step.) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun fluent_controller!kubernetes_cluster.spec.client.types.Step./DeleteCustomResource/0 (fluent_controller!kubernetes_cluster.spec.client.types.Step.) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/rest_id_allocator (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.) fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)
(declare-fun fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/send (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput.) Poly)
(declare-fun fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/rest_id_allocator (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput.) fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.) Poly)
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/scheduled_reconciles (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.) Poly)
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile.) Poly)
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile.) Poly)
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/rest_id_allocator (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput.) fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/send (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput.) Poly)
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/rest_id_allocator (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput.) fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)
(declare-fun fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState./ExternalAPIState/state (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState.) Poly)
(declare-fun fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/recv (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/resources (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput.) vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.)
(declare-fun fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput/send (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput.) Poly)
(declare-fun fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/kind (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.) fluent_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateStatusResponse/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.) core!result.Result.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse./ListResponse/res (fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.) core!result.Result.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse/res (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.) core!result.Result.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse/res (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.) core!result.Result.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse/res (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.) core!result.Result.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse/res (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.) core!result.Result.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) fluent_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/container_port (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) Int)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/port (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) Int)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView./DaemonSetStatusView/number_ready (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.) Int)
(declare-fun fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) fluent_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) fluent_controller!kubernetes_api_objects.spec.marshal.Value.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) fluent_controller!kubernetes_api_objects.spec.marshal.Value.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) Bool)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) Int)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) Int)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/kind (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) fluent_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/uid (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) Int)
(declare-fun fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/storage_class_name (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/access_modes (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/resources (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/metadata (fluent_controller!kubernetes_api_objects.spec.pod.PodView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/spec (fluent_controller!kubernetes_api_objects.spec.pod.PodView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/status (fluent_controller!kubernetes_api_objects.spec.pod.PodView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata (fluent_controller!kubernetes_api_objects.spec.role.RoleView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules (fluent_controller!kubernetes_api_objects.spec.role.RoleView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/api_groups (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/resources (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/verbs (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/subjects (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/api_group (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/kind (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/name (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/kind (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/name (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/namespace (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/metadata (fluent_controller!kubernetes_api_objects.spec.secret.SecretView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/data (fluent_controller!kubernetes_api_objects.spec.secret.SecretView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/name (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/port (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.) Int)
(declare-fun fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/automount_service_account_token (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_deleted (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_scaled (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/ready_replicas (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (fluent_controller!kubernetes_cluster.spec.cluster.Cluster.) fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (fluent_controller!kubernetes_cluster.spec.cluster.Cluster.) fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/client_state (fluent_controller!kubernetes_cluster.spec.cluster.Cluster.) fluent_controller!kubernetes_cluster.spec.client.types.ClientState.)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (fluent_controller!kubernetes_cluster.spec.cluster.Cluster.) fluent_controller!kubernetes_cluster.spec.network.types.NetworkState.)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state (fluent_controller!kubernetes_cluster.spec.cluster.Cluster.) fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState.)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (fluent_controller!kubernetes_cluster.spec.cluster.Cluster.) fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled (fluent_controller!kubernetes_cluster.spec.cluster.Cluster.) Bool)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled (fluent_controller!kubernetes_cluster.spec.cluster.Cluster.) Bool)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep/0 (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep/0 (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.) tuple%2.)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep/0 (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.) tuple%2.)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep/0 (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep/0 (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep/0 (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.) tuple%2.)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/recv (fluent_controller!kubernetes_cluster.spec.message.MessageOps.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/send (fluent_controller!kubernetes_cluster.spec.message.MessageOps.) Poly)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (fluent_controller!kubernetes_cluster.spec.message.Message.) fluent_controller!kubernetes_cluster.spec.message.HostId.)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (fluent_controller!kubernetes_cluster.spec.message.Message.) fluent_controller!kubernetes_cluster.spec.message.HostId.)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (fluent_controller!kubernetes_cluster.spec.message.Message.) fluent_controller!kubernetes_cluster.spec.message.MessageContent.)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator./RestIdAllocator/rest_id_counter (fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.) Int)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (fluent_controller!kubernetes_cluster.spec.message.MessageContent.) fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/1 (fluent_controller!kubernetes_cluster.spec.message.MessageContent.) Int)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/0 (fluent_controller!kubernetes_cluster.spec.message.MessageContent.) fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/1 (fluent_controller!kubernetes_cluster.spec.message.MessageContent.) Int)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/0 (fluent_controller!kubernetes_cluster.spec.message.MessageContent.) Poly)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/1 (fluent_controller!kubernetes_cluster.spec.message.MessageContent.) Int)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/0 (fluent_controller!kubernetes_cluster.spec.message.MessageContent.) Poly)
(declare-fun fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/1 (fluent_controller!kubernetes_cluster.spec.message.MessageContent.) Int)
(declare-fun fluent_controller!reconciler.spec.io.RequestView./KRequest/0 (fluent_controller!reconciler.spec.io.RequestView.) fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)
(declare-fun fluent_controller!reconciler.spec.io.RequestView./ExternalRequest/0 (fluent_controller!reconciler.spec.io.RequestView.) Poly)
(declare-fun fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 (fluent_controller!reconciler.spec.io.ResponseView.) fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)
(declare-fun fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse/0 (fluent_controller!reconciler.spec.io.ResponseView.) Poly)
(declare-fun fluent_controller!state_machine.state_machine.StateMachine./StateMachine/init (fluent_controller!state_machine.state_machine.StateMachine.) %%Function%%)
(declare-fun fluent_controller!state_machine.state_machine.StateMachine./StateMachine/actions (fluent_controller!state_machine.state_machine.StateMachine.) Poly)
(declare-fun fluent_controller!state_machine.state_machine.StateMachine./StateMachine/step_to_action (fluent_controller!state_machine.state_machine.StateMachine.) %%Function%%)
(declare-fun fluent_controller!state_machine.state_machine.StateMachine./StateMachine/action_input (fluent_controller!state_machine.state_machine.StateMachine.) %%Function%%)
(declare-fun fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/init (fluent_controller!state_machine.state_machine.NetworkStateMachine.) %%Function%%)
(declare-fun fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/deliver (fluent_controller!state_machine.state_machine.NetworkStateMachine.) fluent_controller!state_machine.action.Action.)
(declare-fun fluent_controller!state_machine.action.Action./Action/precondition (fluent_controller!state_machine.action.Action.) %%Function%%)
(declare-fun fluent_controller!state_machine.action.Action./Action/transition (fluent_controller!state_machine.action.Action.) %%Function%%)
(declare-fun fluent_controller!state_machine.action.ActionResult./Enabled/0 (fluent_controller!state_machine.action.ActionResult.) Poly)
(declare-fun fluent_controller!state_machine.action.ActionResult./Enabled/1 (fluent_controller!state_machine.action.ActionResult.) Poly)
(declare-fun fluent_controller!temporal_logic.defs.Execution./Execution/nat_to_state (fluent_controller!temporal_logic.defs.Execution.) %%Function%%)
(declare-fun fluent_controller!temporal_logic.defs.TempPred./TempPred/pred (fluent_controller!temporal_logic.defs.TempPred.) %%Function%%)
(declare-fun tuple%2./tuple%2/0 (tuple%2.) Poly)
(declare-fun tuple%2./tuple%2/1 (tuple%2.) Poly)
(declare-fun tuple%3./tuple%3/0 (tuple%3.) Poly)
(declare-fun tuple%3./tuple%3/1 (tuple%3.) Poly)
(declare-fun tuple%3./tuple%3/2 (tuple%3.) Poly)
(declare-fun TYPE%fun%1. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%fun%2. (Dcr Type Dcr Type Dcr Type) Type)
(declare-fun TYPE%core!option.Option. (Dcr Type) Type)
(declare-fun TYPE%core!result.Result. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%vstd!map.Map. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%vstd!multiset.Multiset. (Dcr Type) Type)
(declare-fun TYPE%vstd!seq.Seq. (Dcr Type) Type)
(declare-fun TYPE%vstd!set.Set. (Dcr Type) Type)
(declare-const TYPE%vstd!string.String. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. Type)
(declare-const TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. Type)
(declare-const TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep. Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (Dcr Type Dcr Type) Type)
(declare-const TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. Type)
(declare-const TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. Type)
(declare-const TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (Dcr Type Dcr Type) Type)
(declare-const TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. Type)
(declare-const TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step. Type)
(declare-const TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Dcr Type Dcr Type Dcr Type) Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (Dcr Type Dcr Type Dcr Type) Type)
(declare-const TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. (Dcr Type) Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. (Dcr Type) Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (Dcr Type) Type)
(declare-const TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep. Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. (Dcr Type) Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. (Dcr Type) Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Dcr Type Dcr Type) Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.common.Kind. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (Dcr Type Dcr Type Dcr Type) Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (Dcr Type) Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (Dcr Type Dcr Type) Type)
(declare-const TYPE%fluent_controller!kubernetes_cluster.spec.message.HostId. Type)
(declare-const TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. Type)
(declare-fun TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%fluent_controller!reconciler.spec.io.RequestView. (Dcr Type) Type)
(declare-fun TYPE%fluent_controller!reconciler.spec.io.ResponseView. (Dcr Type) Type)
(declare-const TYPE%fluent_controller!external_api.spec.EmptyTypeView. Type)
(declare-const TYPE%fluent_controller!external_api.spec.EmptyAPI. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.error.APIError. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. Type)
(declare-fun TYPE%fluent_controller!state_machine.state_machine.StateMachine. (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) Type)
(declare-fun TYPE%fluent_controller!state_machine.state_machine.NetworkStateMachine. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%fluent_controller!state_machine.action.Action. (Dcr Type Dcr Type Dcr Type) Type)
(declare-fun TYPE%fluent_controller!state_machine.action.ActionResult. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%fluent_controller!temporal_logic.defs.Execution. (Dcr Type) Type)
(declare-fun TYPE%fluent_controller!temporal_logic.defs.TempPred. (Dcr Type) Type)
(declare-const TYPE%tuple%0. Type)
(declare-fun TYPE%tuple%2. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%tuple%3. (Dcr Type Dcr Type Dcr Type) Type)
(declare-fun Poly%fun%1. (%%Function%%) Poly)
(declare-fun %Poly%fun%1. (Poly) %%Function%%)
(declare-fun Poly%fun%2. (%%Function%%) Poly)
(declare-fun %Poly%fun%2. (Poly) %%Function%%)
(declare-fun Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.) Poly)
(declare-fun %Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (Poly) vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)
(declare-fun Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.) Poly)
(declare-fun %Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (Poly) vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.)
(declare-fun Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>. (vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>.) Poly)
(declare-fun %Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>. (Poly) vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>.)
(declare-fun Poly%vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>. (vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>.) Poly)
(declare-fun %Poly%vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>. (Poly) vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>.)
(declare-fun Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>.) Poly)
(declare-fun %Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (Poly) vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>.)
(declare-fun Poly%vstd!string.String. (vstd!string.String.) Poly)
(declare-fun %Poly%vstd!string.String. (Poly) vstd!string.String.)
(declare-fun Poly%core!option.Option. (core!option.Option.) Poly)
(declare-fun %Poly%core!option.Option. (Poly) core!option.Option.)
(declare-fun Poly%core!result.Result. (core!result.Result.) Poly)
(declare-fun %Poly%core!result.Result. (Poly) core!result.Result.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. (Poly) fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. (fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. (Poly) fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. (Poly) fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. (fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. (Poly) fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. (Poly) fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. (fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. (Poly) fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly) fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep. (Poly) fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (Poly) fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (Poly) fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. (Poly) fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (Poly) fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. (Poly) fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (Poly) fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (fluent_controller!kubernetes_cluster.spec.client.types.ClientState.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (Poly) fluent_controller!kubernetes_cluster.spec.client.types.ClientState.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. (fluent_controller!kubernetes_cluster.spec.client.types.Step.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. (Poly) fluent_controller!kubernetes_cluster.spec.client.types.Step.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. (Poly) fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (Poly) fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly) fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (Poly) fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. (Poly) fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. (Poly) fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. (Poly) fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (Poly) fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep. (Poly) fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. (Poly) fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. (Poly) fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly) fluent_controller!kubernetes_cluster.spec.network.types.NetworkState.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. (fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. (Poly) fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.common.Kind.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly) fluent_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly) fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. (fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. (Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly) fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly) fluent_controller!kubernetes_api_objects.spec.marshal.Value.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (Poly) fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly) fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (Poly) fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (fluent_controller!kubernetes_api_objects.spec.pod.PodView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. (fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. (Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (Poly) fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly) fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (Poly) fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (Poly) fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly) fluent_controller!kubernetes_api_objects.spec.role.RoleView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. (Poly) fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (fluent_controller!kubernetes_api_objects.spec.secret.SecretView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (Poly) fluent_controller!kubernetes_api_objects.spec.secret.SecretView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly) fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly) fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (Poly) fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly) fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly) fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly) fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (Poly) fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (Poly) fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. (fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. (Poly) fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (Poly) fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (Poly) fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (fluent_controller!kubernetes_cluster.spec.message.MessageOps.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (Poly) fluent_controller!kubernetes_cluster.spec.message.MessageOps.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.Message.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.HostId.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (Poly) fluent_controller!kubernetes_cluster.spec.message.HostId.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly) fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)
(declare-fun Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.MessageContent.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly) fluent_controller!kubernetes_cluster.spec.message.MessageContent.)
(declare-fun Poly%fluent_controller!reconciler.spec.io.RequestView. (fluent_controller!reconciler.spec.io.RequestView.) Poly)
(declare-fun %Poly%fluent_controller!reconciler.spec.io.RequestView. (Poly) fluent_controller!reconciler.spec.io.RequestView.)
(declare-fun Poly%fluent_controller!reconciler.spec.io.ResponseView. (fluent_controller!reconciler.spec.io.ResponseView.) Poly)
(declare-fun %Poly%fluent_controller!reconciler.spec.io.ResponseView. (Poly) fluent_controller!reconciler.spec.io.ResponseView.)
(declare-fun Poly%fluent_controller!external_api.spec.EmptyTypeView. (fluent_controller!external_api.spec.EmptyTypeView.) Poly)
(declare-fun %Poly%fluent_controller!external_api.spec.EmptyTypeView. (Poly) fluent_controller!external_api.spec.EmptyTypeView.)
(declare-fun Poly%fluent_controller!external_api.spec.EmptyAPI. (fluent_controller!external_api.spec.EmptyAPI.) Poly)
(declare-fun %Poly%fluent_controller!external_api.spec.EmptyAPI. (Poly) fluent_controller!external_api.spec.EmptyAPI.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.error.APIError. (fluent_controller!kubernetes_api_objects.error.APIError.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.error.APIError. (Poly) fluent_controller!kubernetes_api_objects.error.APIError.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. (fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. (Poly) fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)
(declare-fun Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!state_machine.state_machine.StateMachine.) Poly)
(declare-fun %Poly%fluent_controller!state_machine.state_machine.StateMachine. (Poly) fluent_controller!state_machine.state_machine.StateMachine.)
(declare-fun Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (fluent_controller!state_machine.state_machine.NetworkStateMachine.) Poly)
(declare-fun %Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (Poly) fluent_controller!state_machine.state_machine.NetworkStateMachine.)
(declare-fun Poly%fluent_controller!state_machine.action.Action. (fluent_controller!state_machine.action.Action.) Poly)
(declare-fun %Poly%fluent_controller!state_machine.action.Action. (Poly) fluent_controller!state_machine.action.Action.)
(declare-fun Poly%fluent_controller!state_machine.action.ActionResult. (fluent_controller!state_machine.action.ActionResult.) Poly)
(declare-fun %Poly%fluent_controller!state_machine.action.ActionResult. (Poly) fluent_controller!state_machine.action.ActionResult.)
(declare-fun Poly%fluent_controller!temporal_logic.defs.Execution. (fluent_controller!temporal_logic.defs.Execution.) Poly)
(declare-fun %Poly%fluent_controller!temporal_logic.defs.Execution. (Poly) fluent_controller!temporal_logic.defs.Execution.)
(declare-fun Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.TempPred.) Poly)
(declare-fun %Poly%fluent_controller!temporal_logic.defs.TempPred. (Poly) fluent_controller!temporal_logic.defs.TempPred.)
(declare-fun Poly%tuple%0. (tuple%0.) Poly)
(declare-fun %Poly%tuple%0. (Poly) tuple%0.)
(declare-fun Poly%tuple%2. (tuple%2.) Poly)
(declare-fun %Poly%tuple%2. (Poly) tuple%2.)
(declare-fun Poly%tuple%3. (tuple%3.) Poly)
(declare-fun %Poly%tuple%3. (Poly) tuple%3.)
(assert (forall ((x %%Function%%)) (! (= x (%Poly%fun%1. (Poly%fun%1. x))) :pattern ((Poly%fun%1. x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x Poly)) (! (=> (has_type x (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (= x (Poly%fun%1. (%Poly%fun%1. x)))) :pattern ((has_type x (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) )))
(declare-fun %%apply%%0 (%%Function%% Poly) Poly)
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x %%Function%%)) (! (=> (forall ((T%0 Poly)) (! (=> (has_type T%0 T%0&) (has_type (%%apply%%0 x T%0) T%1&)) :pattern ((has_type (%%apply%%0 x T%0) T%1&)) )) (has_type (Poly%fun%1. (mk_fun x)) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) :pattern ((has_type (Poly%fun%1. (mk_fun x)) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%0 Poly) (x %%Function%%)) (! (=> (and (has_type (Poly%fun%1. x) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (has_type T%0 T%0&)) (has_type (%%apply%%0 x T%0) T%1&)) :pattern ((%%apply%%0 x T%0) (has_type (Poly%fun%1. x) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%0 Poly) (x %%Function%%)) (! (=> (and (has_type (Poly%fun%1. x) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (has_type T%0 T%0&)) (height_lt (height (%%apply%%0 x T%0)) (height (fun_from_recursive_field (Poly%fun%1. (mk_fun x)))))) :pattern ((height (%%apply%%0 x T%0)) (has_type (Poly%fun%1. x) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (has_type y (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (forall ((T%0 Poly)) (! (=> (has_type T%0 T%0&) (ext_eq deep T%1& (%%apply%%0 (%Poly%fun%1. x) T%0) (%%apply%%0 (%Poly%fun%1. y) T%0))) :pattern ((ext_eq deep T%1& (%%apply%%0 (%Poly%fun%1. x) T%0) (%%apply%%0 (%Poly%fun%1. y) T%0))) ))) (ext_eq deep (TYPE%fun%1. T%0&. T%0& T%1&. T%1&) x y)) :pattern ((ext_eq deep (TYPE%fun%1. T%0&. T%0& T%1&. T%1&) x y)) )))
(assert (forall ((x %%Function%%)) (! (= x (%Poly%fun%2. (Poly%fun%2. x))) :pattern ((Poly%fun%2. x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%2&. Dcr) (T%2& Type) (x Poly)) (! (=> (has_type x (TYPE%fun%2. T%0&. T%0& T%1&. T%1& T%2&. T%2&)) (= x (Poly%fun%2. (%Poly%fun%2. x)))) :pattern ((has_type x (TYPE%fun%2. T%0&. T%0& T%1&. T%1& T%2&. T%2&))) )))
(declare-fun %%apply%%1 (%%Function%% Poly Poly) Poly)
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%2&. Dcr) (T%2& Type) (x %%Function%%)) (! (=> (forall ((T%0 Poly) (T%1 Poly)) (! (=> (and (has_type T%0 T%0&) (has_type T%1 T%1&)) (has_type (%%apply%%1 x T%0 T%1) T%2&)) :pattern ((has_type (%%apply%%1 x T%0 T%1) T%2&)) )) (has_type (Poly%fun%2. (mk_fun x)) (TYPE%fun%2. T%0&. T%0& T%1&. T%1& T%2&. T%2&))) :pattern ((has_type (Poly%fun%2. (mk_fun x)) (TYPE%fun%2. T%0&. T%0& T%1&. T%1& T%2&. T%2&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%2&. Dcr) (T%2& Type) (T%0 Poly) (T%1 Poly) (x %%Function%%)) (! (=> (and (has_type (Poly%fun%2. x) (TYPE%fun%2. T%0&. T%0& T%1&. T%1& T%2&. T%2&)) (has_type T%0 T%0&) (has_type T%1 T%1&)) (has_type (%%apply%%1 x T%0 T%1) T%2&)) :pattern ((%%apply%%1 x T%0 T%1) (has_type (Poly%fun%2. x) (TYPE%fun%2. T%0&. T%0& T%1&. T%1& T%2&. T%2&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%2&. Dcr) (T%2& Type) (T%0 Poly) (T%1 Poly) (x %%Function%%)) (! (=> (and (has_type (Poly%fun%2. x) (TYPE%fun%2. T%0&. T%0& T%1&. T%1& T%2&. T%2&)) (has_type T%0 T%0&) (has_type T%1 T%1&)) (height_lt (height (%%apply%%1 x T%0 T%1)) (height (fun_from_recursive_field (Poly%fun%2. (mk_fun x)))))) :pattern ((height (%%apply%%1 x T%0 T%1)) (has_type (Poly%fun%2. x) (TYPE%fun%2. T%0&. T%0& T%1&. T%1& T%2&. T%2&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%2&. Dcr) (T%2& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%fun%2. T%0&. T%0& T%1&. T%1& T%2&. T%2&)) (has_type y (TYPE%fun%2. T%0&. T%0& T%1&. T%1& T%2&. T%2&)) (forall ((T%0 Poly) (T%1 Poly)) (! (=> (and (has_type T%0 T%0&) (has_type T%1 T%1&)) (ext_eq deep T%2& (%%apply%%1 (%Poly%fun%2. x) T%0 T%1) (%%apply%%1 (%Poly%fun%2. y) T%0 T%1))) :pattern ((ext_eq deep T%2& (%%apply%%1 (%Poly%fun%2. x) T%0 T%1) (%%apply%%1 (%Poly%fun%2. y) T%0 T%1))) ))) (ext_eq deep (TYPE%fun%2. T%0&. T%0& T%1&. T%1& T%2&. T%2&) x y)) :pattern ((ext_eq deep (TYPE%fun%2. T%0&. T%0& T%1&. T%1& T%2&. T%2&) x y)) )))
(assert (forall ((x vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (= x (%Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x))) :pattern ((Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!map.Map. $ NAT $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (= x (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (%Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x)))) :pattern ((has_type x (TYPE%vstd!map.Map. $ NAT $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.))) )))
(assert (forall ((x vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (has_type (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x) (TYPE%vstd!map.Map. $ NAT $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x) (TYPE%vstd!map.Map. $ NAT $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.))) )))
(assert (forall ((x vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.)) (! (= x (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. x))) :pattern ((Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (= x (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. x)))) :pattern ((has_type x (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) )))
(assert (forall ((x vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.)) (! (has_type (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. x) (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((has_type (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. x) (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) )))
(assert (forall ((x vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>.)) (! (= x (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>. x))) :pattern ((Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))) (= x (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>. (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>. x)))) :pattern ((has_type x (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))) )))
(assert (forall ((x vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>.)) (! (has_type (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>. x) (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))) :pattern ((has_type (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile<fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./fluent_controller!external_api.spec.EmptyAPI./fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.>.>. x) (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))) )))
(assert (forall ((x vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>.)) (! (= x (%Poly%vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>. (Poly%vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>. x))) :pattern ((Poly%vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.))) (= x (Poly%vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>. (%Poly%vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>. x)))) :pattern ((has_type x (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)))) )))
(assert (forall ((x vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>.)) (! (has_type (Poly%vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>. x) (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.))) :pattern ((has_type (Poly%vstd!multiset.Multiset<fluent_controller!kubernetes_cluster.spec.message.Message<fluent_controller!external_api.spec.EmptyTypeView./fluent_controller!external_api.spec.EmptyTypeView.>.>. x) (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.))) )))
(assert (forall ((x vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>.)) (! (= x (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. x))) :pattern ((Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!set.Set. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (= x (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. x)))) :pattern ((has_type x (TYPE%vstd!set.Set. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.))) )))
(assert (forall ((x vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>.)) (! (has_type (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. x) (TYPE%vstd!set.Set. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((has_type (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. x) (TYPE%vstd!set.Set. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.))) )))
(assert (forall ((x vstd!string.String.)) (! (= x (%Poly%vstd!string.String. (Poly%vstd!string.String. x))) :pattern ((Poly%vstd!string.String. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%vstd!string.String.) (= x (Poly%vstd!string.String. (%Poly%vstd!string.String. x)))) :pattern ((has_type x TYPE%vstd!string.String.)) )))
(assert (forall ((x vstd!string.String.)) (! (has_type (Poly%vstd!string.String. x) TYPE%vstd!string.String.) :pattern ((has_type (Poly%vstd!string.String. x) TYPE%vstd!string.String.)) )))
(assert (forall ((x core!option.Option.)) (! (= x (%Poly%core!option.Option. (Poly%core!option.Option. x))) :pattern ((Poly%core!option.Option. x)) )))
(assert (forall ((V&. Dcr) (V& Type) (x Poly)) (! (=> (has_type x (TYPE%core!option.Option. V&. V&)) (= x (Poly%core!option.Option. (%Poly%core!option.Option. x)))) :pattern ((has_type x (TYPE%core!option.Option. V&. V&))) )))
(assert (forall ((V&. Dcr) (V& Type)) (! (has_type (Poly%core!option.Option. core!option.Option./None) (TYPE%core!option.Option. V&. V&)) :pattern ((has_type (Poly%core!option.Option. core!option.Option./None) (TYPE%core!option.Option. V&. V&))) )))
(assert (forall ((V&. Dcr) (V& Type) (_0! Poly)) (! (=> (has_type _0! V&) (has_type (Poly%core!option.Option. (core!option.Option./Some _0!)) (TYPE%core!option.Option. V&. V&))) :pattern ((has_type (Poly%core!option.Option. (core!option.Option./Some _0!)) (TYPE%core!option.Option. V&. V&))) )))
(assert (forall ((x core!option.Option.)) (! (= (core!option.Option./Some/0 x) (core!option.Option./Some/?0 x)) :pattern ((core!option.Option./Some/0 x)) )))
(assert (forall ((V&. Dcr) (V& Type) (x Poly)) (! (=> (has_type x (TYPE%core!option.Option. V&. V&)) (has_type (core!option.Option./Some/0 (%Poly%core!option.Option. x)) V&)) :pattern ((core!option.Option./Some/0 (%Poly%core!option.Option. x)) (has_type x (TYPE%core!option.Option. V&. V&))) )))
(define-fun is-core!option.Option./Some_ ((c core!option.Option.)) Bool ((_ is core!option.Option./Some) c))
(assert (forall ((x core!option.Option.)) (! (=> (is-core!option.Option./Some_ x) (height_lt (height (core!option.Option./Some/0 x)) (height (Poly%core!option.Option. x)))) :pattern ((height (core!option.Option./Some/0 x))) )))
(define-fun is-core!option.Option./None_ ((c core!option.Option.)) Bool ((_ is core!option.Option./None) c))
(assert (forall ((V&. Dcr) (V& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%core!option.Option. V&. V&)) (has_type y (TYPE%core!option.Option. V&. V&)) (is-core!option.Option./None_ (%Poly%core!option.Option. x)) (is-core!option.Option./None_ (%Poly%core!option.Option. y))) (ext_eq deep (TYPE%core!option.Option. V&. V&) x y)) :pattern ((ext_eq deep (TYPE%core!option.Option. V&. V&) x y)) )))
(assert (forall ((V&. Dcr) (V& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%core!option.Option. V&. V&)) (has_type y (TYPE%core!option.Option. V&. V&)) (is-core!option.Option./Some_ (%Poly%core!option.Option. x)) (is-core!option.Option./Some_ (%Poly%core!option.Option. y)) (ext_eq deep V& (core!option.Option./Some/0 (%Poly%core!option.Option. x)) (core!option.Option./Some/0 (%Poly%core!option.Option. y)))) (ext_eq deep (TYPE%core!option.Option. V&. V&) x y)) :pattern ((ext_eq deep (TYPE%core!option.Option. V&. V&) x y)) )))
(assert (forall ((x core!result.Result.)) (! (= x (%Poly%core!result.Result. (Poly%core!result.Result. x))) :pattern ((Poly%core!result.Result. x)) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%core!result.Result. T&. T& E&. E&)) (= x (Poly%core!result.Result. (%Poly%core!result.Result. x)))) :pattern ((has_type x (TYPE%core!result.Result. T&. T& E&. E&))) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (_0! Poly)) (! (=> (has_type _0! T&) (has_type (Poly%core!result.Result. (core!result.Result./Ok _0!)) (TYPE%core!result.Result. T&. T& E&. E&))) :pattern ((has_type (Poly%core!result.Result. (core!result.Result./Ok _0!)) (TYPE%core!result.Result. T&. T& E&. E&))) )))
(assert (forall ((x core!result.Result.)) (! (= (core!result.Result./Ok/0 x) (core!result.Result./Ok/?0 x)) :pattern ((core!result.Result./Ok/0 x)) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%core!result.Result. T&. T& E&. E&)) (has_type (core!result.Result./Ok/0 (%Poly%core!result.Result. x)) T&)) :pattern ((core!result.Result./Ok/0 (%Poly%core!result.Result. x)) (has_type x (TYPE%core!result.Result. T&. T& E&. E&))) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (_0! Poly)) (! (=> (has_type _0! E&) (has_type (Poly%core!result.Result. (core!result.Result./Err _0!)) (TYPE%core!result.Result. T&. T& E&. E&))) :pattern ((has_type (Poly%core!result.Result. (core!result.Result./Err _0!)) (TYPE%core!result.Result. T&. T& E&. E&))) )))
(assert (forall ((x core!result.Result.)) (! (= (core!result.Result./Err/0 x) (core!result.Result./Err/?0 x)) :pattern ((core!result.Result./Err/0 x)) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%core!result.Result. T&. T& E&. E&)) (has_type (core!result.Result./Err/0 (%Poly%core!result.Result. x)) E&)) :pattern ((core!result.Result./Err/0 (%Poly%core!result.Result. x)) (has_type x (TYPE%core!result.Result. T&. T& E&. E&))) )))
(define-fun is-core!result.Result./Ok_ ((c core!result.Result.)) Bool ((_ is core!result.Result./Ok) c))
(assert (forall ((x core!result.Result.)) (! (=> (is-core!result.Result./Ok_ x) (height_lt (height (core!result.Result./Ok/0 x)) (height (Poly%core!result.Result. x)))) :pattern ((height (core!result.Result./Ok/0 x))) )))
(define-fun is-core!result.Result./Err_ ((c core!result.Result.)) Bool ((_ is core!result.Result./Err) c))
(assert (forall ((x core!result.Result.)) (! (=> (is-core!result.Result./Err_ x) (height_lt (height (core!result.Result./Err/0 x)) (height (Poly%core!result.Result. x)))) :pattern ((height (core!result.Result./Err/0 x))) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. (%Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. (%Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. (%Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. (%Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. (%Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. (Poly%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. (%Poly%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/?reconcile_step x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step x)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) )))
(assert (forall ((_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (_status! core!option.Option.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. _spec!) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. _status!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView _metadata! _spec! _status!)) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView _metadata! _spec! _status!)) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/?metadata x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/?spec x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x))) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/status x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/?status x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/status (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/status (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((_fluentbit_config_name! Poly) (_image! Poly) (_args! core!option.Option.) (_command! core!option.Option.) (_image_pull_policy! core!option.Option.) (_image_pull_secrets! core!option.Option.) (_resources! core!option.Option.) (_tolerations! core!option.Option.) (_labels! Poly) (_annotations! Poly) (_service_account_annotations! Poly) (_service_labels! Poly) (_service_selector! core!option.Option.) (_service_annotations! Poly) (_affinity! core!option.Option.) (_disable_log_volumes! Bool) (_node_selector! Poly) (_runtime_class_name! core!option.Option.) (_dns_policy! core!option.Option.) (_priority_class_name! core!option.Option.) (_volumes! core!option.Option.) (_volume_mounts! core!option.Option.) (_scheduler_name! core!option.Option.) (_metrics_port! core!option.Option.) (_internal_mount_propagation! core!option.Option.) (_position_db! core!option.Option.) (_container_log_real_path! core!option.Option.) (_security_context! core!option.Option.) (_container_security_context! core!option.Option.) (_host_network! core!option.Option.) (_env_vars! core!option.Option.) (_liveness_probe! core!option.Option.) (_readiness_probe! core!option.Option.) (_init_containers! core!option.Option.) (_ports! core!option.Option.)) (! (=> (and (has_type _fluentbit_config_name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _image! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _args!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _command!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _image_pull_policy!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _image_pull_secrets!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.))) (has_type (Poly%core!option.Option. _resources!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (has_type (Poly%core!option.Option. _tolerations!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.))) (has_type _labels! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type _annotations! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type _service_account_annotations! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type _service_labels! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _service_selector!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type _service_annotations! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _affinity!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) (has_type _node_selector! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _runtime_class_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _dns_policy!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _priority_class_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _volumes!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.))) (has_type (Poly%core!option.Option. _volume_mounts!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.))) (has_type (Poly%core!option.Option. _scheduler_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _metrics_port!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _internal_mount_propagation!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _position_db!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) (has_type (Poly%core!option.Option. _container_log_real_path!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _security_context!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) (has_type (Poly%core!option.Option. _container_security_context!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) (has_type (Poly%core!option.Option. _host_network!) (TYPE%core!option.Option. $ BOOL)) (has_type (Poly%core!option.Option. _env_vars!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.))) (has_type (Poly%core!option.Option. _liveness_probe!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (has_type (Poly%core!option.Option. _readiness_probe!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (has_type (Poly%core!option.Option. _init_containers!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.))) (has_type (Poly%core!option.Option. _ports!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)))) (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView _fluentbit_config_name! _image! _args! _command! _image_pull_policy! _image_pull_secrets! _resources! _tolerations! _labels! _annotations! _service_account_annotations! _service_labels! _service_selector! _service_annotations! _affinity! _disable_log_volumes! _node_selector! _runtime_class_name! _dns_policy! _priority_class_name! _volumes! _volume_mounts! _scheduler_name! _metrics_port! _internal_mount_propagation! _position_db! _container_log_real_path! _security_context! _container_security_context! _host_network! _env_vars! _liveness_probe! _readiness_probe! _init_containers! _ports!)) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView _fluentbit_config_name! _image! _args! _command! _image_pull_policy! _image_pull_secrets! _resources! _tolerations! _labels! _annotations! _service_account_annotations! _service_labels! _service_selector! _service_annotations! _affinity! _disable_log_volumes! _node_selector! _runtime_class_name! _dns_policy! _priority_class_name! _volumes! _volume_mounts! _scheduler_name! _metrics_port! _internal_mount_propagation! _position_db! _container_log_real_path! _security_context! _container_security_context! _host_network! _env_vars! _liveness_probe! _readiness_probe! _init_containers! _ports!)) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?fluentbit_config_name x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?image x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?args x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?command x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?image_pull_policy x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?image_pull_secrets x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?resources x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?tolerations x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/labels x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?labels x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/labels x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/labels (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/labels (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?annotations x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_account_annotations x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_account_annotations x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_account_annotations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_account_annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_account_annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_labels x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_labels x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_labels x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_labels (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_labels (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_selector x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_selector x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_selector (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_selector (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_annotations x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_annotations x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_annotations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?affinity x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?disable_log_volumes x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes x)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/node_selector x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?node_selector x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/node_selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/node_selector (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/node_selector (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/runtime_class_name x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?runtime_class_name x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/runtime_class_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/runtime_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/runtime_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/dns_policy x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?dns_policy x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/dns_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/dns_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/dns_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/priority_class_name x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?priority_class_name x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/priority_class_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/priority_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/priority_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?volumes x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?volume_mounts x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/scheduler_name x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?scheduler_name x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/scheduler_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/scheduler_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/scheduler_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?metrics_port x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?internal_mount_propagation x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?position_db x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?container_log_real_path x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?security_context x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?container_security_context x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/host_network x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?host_network x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/host_network x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/host_network (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/host_network (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?env_vars x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?liveness_probe x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?readiness_probe x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?init_containers x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?ports x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/0 x) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/?0 x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/0 x)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/1 x) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/?1 x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/1 x)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.) (= x (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources x) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/?resources x)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources x)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter x) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/?uid_counter x)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter x)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter x) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/?resource_version_counter x)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter x)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources x) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/?stable_resources x)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources x)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. x) TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. x) TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep.) (= x (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep. (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep.)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep. x) TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep.) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep. x) TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. I&. I& O&. O&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. I&. I& O&. O&))) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (_recv! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _recv!) (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput _recv!)) (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. I&. I& O&. O&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput _recv!)) (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput.)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput/recv x) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput/?recv x)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput/recv x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. I&. I& O&. O&)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. x))) (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. I&. I& O&. O&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput_ ((c fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput_ x) (height_lt (height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput/recv x))) (height (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. x)))) :pattern ((height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput/recv x)))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. I&. I& O&. O&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. I&. I& O&. O&))) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (_send! Poly)) (! (=> (has_type _send! (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput _send!)) (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. I&. I& O&. O&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput _send!)) (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput.)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput/send x) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput/?send x)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput/send x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. I&. I& O&. O&)) (has_type (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. x)) (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. I&. I& O&. O&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput_ ((c fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput_ x) (height_lt (height (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput/send x)) (height (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. x)))) :pattern ((height (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput/send x))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep.) (= x (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep.)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. x) TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep.) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. x) TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.) (= x (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./StatefulSetController/ready_replicas x) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./StatefulSetController/?ready_replicas x)) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./StatefulSetController/ready_replicas x)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./DaemonSetController/number_ready x) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./DaemonSetController/?number_ready x)) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./DaemonSetController/number_ready x)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. x) TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. x) TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.) (= x (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.)) )))
(assert (forall ((_choice! fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.) (_key! fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (_rest_id_allocator! fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. _key!) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. _rest_id_allocator!) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput _choice! _key! _rest_id_allocator!)) TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput _choice! _key! _rest_id_allocator!)) TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/choice x) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/?choice x)) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/choice x)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key x) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/?key x)) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. x)) (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/rest_id_allocator x) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/?rest_id_allocator x)) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/rest_id_allocator x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. x))) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. x)) (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. I&. I& O&. O&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. I&. I& O&. O&))) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (_send! Poly) (_rest_id_allocator! fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (! (=> (and (has_type _send! (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. _rest_id_allocator!) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput _send! _rest_id_allocator!)) (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. I&. I& O&. O&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput _send! _rest_id_allocator!)) (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput.)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/send x) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/?send x)) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/send x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. I&. I& O&. O&)) (has_type (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. x)) (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput.)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/rest_id_allocator x) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/?rest_id_allocator x)) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/rest_id_allocator x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. x))) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. I&. I& O&. O&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput_ ((c fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput_ x) (height_lt (height (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/send x)) (height (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. x)))) :pattern ((height (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/send x))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.client.types.ClientState.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState.) (= x (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.client.types.ClientState.)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. x) TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState.) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. x) TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.client.types.Step.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. (Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.) (= x (Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. (fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource _0!)) TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. (fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource _0!)) TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.client.types.Step.)) (! (= (fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource/0 x) (fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource/?0 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource/0 (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource/0 (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. x)) (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. (fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource _0!)) TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. (fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource _0!)) TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.client.types.Step.)) (! (= (fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource/0 x) (fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource/?0 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource/0 (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource/0 (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. x)) (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. (fluent_controller!kubernetes_cluster.spec.client.types.Step./DeleteCustomResource _0!)) TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. (fluent_controller!kubernetes_cluster.spec.client.types.Step./DeleteCustomResource _0!)) TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.client.types.Step.)) (! (= (fluent_controller!kubernetes_cluster.spec.client.types.Step./DeleteCustomResource/0 x) (fluent_controller!kubernetes_cluster.spec.client.types.Step./DeleteCustomResource/?0 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.Step./DeleteCustomResource/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.Step./DeleteCustomResource/0 (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.Step./DeleteCustomResource/0 (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. x)) (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.) (= x (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.)) )))
(assert (forall ((_obj! fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (_rest_id_allocator! fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. _obj!) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. _rest_id_allocator!) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput _obj! _rest_id_allocator!)) TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput _obj! _rest_id_allocator!)) TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.)) (! (= (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj x) (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/?obj x)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. x)) (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.)) (! (= (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/rest_id_allocator x) (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/?rest_id_allocator x)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/rest_id_allocator x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. x))) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. x)) (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. I&. I& O&. O&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. I&. I& O&. O&))) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (_send! Poly) (_rest_id_allocator! fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (! (=> (and (has_type _send! (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. _rest_id_allocator!) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput _send! _rest_id_allocator!)) (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. I&. I& O&. O&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput _send! _rest_id_allocator!)) (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput.)) (! (= (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/send x) (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/?send x)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/send x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. I&. I& O&. O&)) (has_type (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. x)) (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput.)) (! (= (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/rest_id_allocator x) (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/?rest_id_allocator x)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/rest_id_allocator x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. x))) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. I&. I& O&. O&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput_ ((c fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput_ x) (height_lt (height (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/send x)) (height (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. x)))) :pattern ((height (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/send x))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. x)) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&))) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (_ongoing_reconciles! Poly) (_scheduled_reconciles! Poly)) (! (=> (and (has_type _ongoing_reconciles! (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&))) (has_type _scheduled_reconciles! (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. K&. K&))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState _ongoing_reconciles! _scheduled_reconciles!)) (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState _ongoing_reconciles! _scheduled_reconciles!)) (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles x) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/?ongoing_reconciles x)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles x)) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&)) (has_type (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. x)) (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/scheduled_reconciles x) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/?scheduled_reconciles x)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/scheduled_reconciles x)) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&)) (has_type (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/scheduled_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. x)) (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. K&. K&))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/scheduled_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState_ ((c fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState_ x) (height_lt (height (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles x)) (height (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. x)))) :pattern ((height (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles x))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState_ x) (height_lt (height (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/scheduled_reconciles x)) (height (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. x)))) :pattern ((height (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/scheduled_reconciles x))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. x)) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&))) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (_triggering_cr! Poly) (_pending_req_msg! core!option.Option.) (_local_state! Poly)) (! (=> (and (has_type _triggering_cr! K&) (has_type (Poly%core!option.Option. _pending_req_msg!) (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) (has_type _local_state! (proj%fluent_controller!reconciler.spec.reconciler.Reconciler./T R&. R& K&. K& E&. E&))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile _triggering_cr! _pending_req_msg! _local_state!)) (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile _triggering_cr! _pending_req_msg! _local_state!)) (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile.)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr x) (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/?triggering_cr x)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr x)) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&)) (has_type (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. x)) K&)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile.)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg x) (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/?pending_req_msg x)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg x)) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. x))) (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile.)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state x) (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/?local_state x)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state x)) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&)) (has_type (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. x)) (proj%fluent_controller!reconciler.spec.reconciler.Reconciler./T R&. R& K&. K& E&. E&))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile_ ((c fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile_ x) (height_lt (height (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr x)) (height (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. x)))) :pattern ((height (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr x))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile_ x) (height_lt (height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg x))) (height (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. x)))) :pattern ((height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg x)))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep.) (= x (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep.)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. x) TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep.) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. x) TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. x)) )))
(assert (forall ((E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&))) )))
(assert (forall ((E&. Dcr) (E& Type) (_recv! core!option.Option.) (_scheduled_cr_key! core!option.Option.) (_rest_id_allocator! fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (! (=> (and (has_type (Poly%core!option.Option. _recv!) (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) (has_type (Poly%core!option.Option. _scheduled_cr_key!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. _rest_id_allocator!) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput _recv! _scheduled_cr_key! _rest_id_allocator!)) (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput _recv! _scheduled_cr_key! _rest_id_allocator!)) (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput.)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv x) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/?recv x)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv x)) )))
(assert (forall ((E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. x))) (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput.)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key x) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/?scheduled_cr_key x)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key x)) )))
(assert (forall ((E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput.)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/rest_id_allocator x) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/?rest_id_allocator x)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/rest_id_allocator x)) )))
(assert (forall ((E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. x))) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput_ ((c fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput_ x) (height_lt (height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv x))) (height (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. x)))) :pattern ((height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv x)))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. x)) )))
(assert (forall ((E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&))) )))
(assert (forall ((E&. Dcr) (E& Type) (_send! Poly) (_rest_id_allocator! fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (! (=> (and (has_type _send! (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. _rest_id_allocator!) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput _send! _rest_id_allocator!)) (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput _send! _rest_id_allocator!)) (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput.)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/send x) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/?send x)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/send x)) )))
(assert (forall ((E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&)) (has_type (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. x)) (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput.)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/rest_id_allocator x) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/?rest_id_allocator x)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/rest_id_allocator x)) )))
(assert (forall ((E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. x))) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput_ ((c fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput_ x) (height_lt (height (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/send x)) (height (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. x)))) :pattern ((height (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/send x))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. x)) )))
(assert (forall ((E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&))) )))
(assert (forall ((E&. Dcr) (E& Type) (_state! Poly)) (! (=> (has_type _state! (proj%fluent_controller!external_api.spec.ExternalAPI./State E&. E&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState./ExternalAPIState _state!)) (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState./ExternalAPIState _state!)) (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState.)) (! (= (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState./ExternalAPIState/state x) (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState./ExternalAPIState/?state x)) :pattern ((fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState./ExternalAPIState/state x)) )))
(assert (forall ((E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&)) (has_type (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState./ExternalAPIState/state (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. x)) (proj%fluent_controller!external_api.spec.ExternalAPI./State E&. E&))) :pattern ((fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState./ExternalAPIState/state (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep. (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep.) (= x (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep. (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep.)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep. x) TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep.) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep. x) TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. x)) )))
(assert (forall ((E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. E&. E&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. E&. E&))) )))
(assert (forall ((E&. Dcr) (E& Type) (_recv! core!option.Option.) (_resources! vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.)) (! (=> (has_type (Poly%core!option.Option. _recv!) (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput _recv! _resources!)) (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. E&. E&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput _recv! _resources!)) (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. E&. E&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput.)) (! (= (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/recv x) (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/?recv x)) :pattern ((fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/recv x)) )))
(assert (forall ((E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. E&. E&)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. x))) (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. E&. E&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput.)) (! (= (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/resources x) (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/?resources x)) :pattern ((fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/resources x)) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput_ ((c fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput_ x) (height_lt (height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/recv x))) (height (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. x)))) :pattern ((height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/recv x)))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. x)) )))
(assert (forall ((E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. E&. E&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. E&. E&))) )))
(assert (forall ((E&. Dcr) (E& Type) (_send! Poly)) (! (=> (has_type _send! (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput _send!)) (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. E&. E&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput _send!)) (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. E&. E&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput.)) (! (= (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput/send x) (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput/?send x)) :pattern ((fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput/send x)) )))
(assert (forall ((E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. E&. E&)) (has_type (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. x)) (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. E&. E&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput_ ((c fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput_ x) (height_lt (height (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput/send x)) (height (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. x)))) :pattern ((height (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput/send x))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.network.types.NetworkState.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. I&. I& O&. O&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. I&. I& O&. O&))) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (_in_flight! Poly)) (! (=> (has_type _in_flight! (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState _in_flight!)) (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. I&. I& O&. O&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState _in_flight!)) (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.network.types.NetworkState.)) (! (= (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight x) (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/?in_flight x)) :pattern ((fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. I&. I& O&. O&)) (has_type (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. x)) (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. I&. I& O&. O&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState_ ((c fluent_controller!kubernetes_cluster.spec.network.types.NetworkState.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.network.types.NetworkState.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState_ x) (height_lt (height (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight x)) (height (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. x)))) :pattern ((height (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight x))) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. (Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. (%Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) )))
(assert (forall ((_key! fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. _key!) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest _key!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest _key!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key x) (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/?key x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) )))
(assert (forall ((_kind! fluent_controller!kubernetes_api_objects.spec.common.Kind.) (_namespace! Poly)) (! (=> (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest _kind! _namespace!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest _kind! _namespace!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/kind x) (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/?kind x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/kind x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace x) (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.) (has_type (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) )))
(assert (forall ((_namespace! Poly) (_obj! fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (=> (and (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. _obj!) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest _namespace! _obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest _namespace! _obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace x) (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (has_type (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj x) (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/?obj x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) )))
(assert (forall ((_key! fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. _key!) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest _key!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest _key!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key x) (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/?key x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((_namespace! Poly) (_name! Poly) (_obj! fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (=> (and (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. _obj!) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest _namespace! _name! _obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest _namespace! _name! _obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?obj x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((_namespace! Poly) (_name! Poly) (_obj! fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (=> (and (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. _obj!) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest _namespace! _name! _obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest _namespace! _name! _obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?obj x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateStatusResponse _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateStatusResponse _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateStatusResponse/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateStatusResponse/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateStatusResponse/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateStatusResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateStatusResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)) )))
(assert (forall ((_res! core!result.Result.)) (! (=> (has_type (Poly%core!result.Result. _res!) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse _res!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse _res!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res x) (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/?res x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.) (has_type (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. x))) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)) )))
(assert (forall ((_res! core!result.Result.)) (! (=> (has_type (Poly%core!result.Result. _res!) (TYPE%core!result.Result. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse./ListResponse _res!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse./ListResponse _res!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse./ListResponse/res x) (fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse./ListResponse/?res x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse./ListResponse/res x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.) (has_type (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse./ListResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. x))) (TYPE%core!result.Result. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse./ListResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)) )))
(assert (forall ((_res! core!result.Result.)) (! (=> (has_type (Poly%core!result.Result. _res!) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse _res!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse _res!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse/res x) (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse/?res x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse/res x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.) (has_type (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. x))) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.)) )))
(assert (forall ((_res! core!result.Result.)) (! (=> (has_type (Poly%core!result.Result. _res!) (TYPE%core!result.Result. $ TYPE%tuple%0. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse _res!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse _res!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse/res x) (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse/?res x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse/res x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.) (has_type (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. x))) (TYPE%core!result.Result. $ TYPE%tuple%0. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)) )))
(assert (forall ((_res! core!result.Result.)) (! (=> (has_type (Poly%core!result.Result. _res!) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse _res!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse _res!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse/res x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse/?res x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse/res x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.) (has_type (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. x))) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.)) )))
(assert (forall ((_res! core!result.Result.)) (! (=> (has_type (Poly%core!result.Result. _res!) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse _res!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse _res!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse/res x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse/?res x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse/res x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.) (has_type (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. x))) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.common.Kind.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.Kind.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.Kind.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.common.Kind.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. x) TYPE%fluent_controller!kubernetes_api_objects.spec.common.Kind.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. x) TYPE%fluent_controller!kubernetes_api_objects.spec.common.Kind.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) )))
(assert (forall ((_kind! fluent_controller!kubernetes_api_objects.spec.common.Kind.) (_name! Poly) (_namespace! Poly)) (! (=> (and (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef _kind! _name! _namespace!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef _kind! _name! _namespace!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (= (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind x) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?kind x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (= (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name x) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (= (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace x) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (%Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) )))
(assert (forall ((_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_data! core!option.Option.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _data!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView _metadata! _data!)) TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView _metadata! _data!)) TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata x) (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data x) (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/?data x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data (%Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data (%Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((_env! core!option.Option.) (_image! core!option.Option.) (_name! Poly) (_ports! core!option.Option.) (_volume_mounts! core!option.Option.) (_lifecycle! core!option.Option.) (_resources! core!option.Option.) (_readiness_probe! core!option.Option.) (_liveness_probe! core!option.Option.) (_command! core!option.Option.) (_image_pull_policy! core!option.Option.) (_args! core!option.Option.) (_security_context! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _env!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.))) (has_type (Poly%core!option.Option. _image!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _ports!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.))) (has_type (Poly%core!option.Option. _volume_mounts!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.))) (has_type (Poly%core!option.Option. _lifecycle!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) (has_type (Poly%core!option.Option. _resources!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (has_type (Poly%core!option.Option. _readiness_probe!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (has_type (Poly%core!option.Option. _liveness_probe!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (has_type (Poly%core!option.Option. _command!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _image_pull_policy!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _args!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _security_context!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView _env! _image! _name! _ports! _volume_mounts! _lifecycle! _resources! _readiness_probe! _liveness_probe! _command! _image_pull_policy! _args! _security_context!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView _env! _image! _name! _ports! _volume_mounts! _lifecycle! _resources! _readiness_probe! _liveness_probe! _command! _image_pull_policy! _args! _security_context!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?env x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?image x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?ports x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?volume_mounts x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?lifecycle x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?resources x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?readiness_probe x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?liveness_probe x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?command x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?image_pull_policy x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?args x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?security_context x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) )))
(assert (forall ((_pre_stop! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _pre_stop!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView _pre_stop!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView _pre_stop!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop x) (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/?pre_stop x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) )))
(assert (forall ((_exec_! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _exec_!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView _exec_!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView _exec_!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ x) (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/?exec_ x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) )))
(assert (forall ((_container_port! Int) (_name! core!option.Option.) (_protocol! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _protocol!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView _container_port! _name! _protocol!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView _container_port! _name! _protocol!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/container_port x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?container_port x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/container_port x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?protocol x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((_mount_path! Poly) (_name! Poly) (_read_only! core!option.Option.) (_sub_path! core!option.Option.) (_mount_propagation! core!option.Option.)) (! (=> (and (has_type _mount_path! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _read_only!) (TYPE%core!option.Option. $ BOOL)) (has_type (Poly%core!option.Option. _sub_path!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _mount_propagation!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView _mount_path! _name! _read_only! _sub_path! _mount_propagation!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView _mount_path! _name! _read_only! _sub_path! _mount_propagation!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path x) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?mount_path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name x) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only x) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?read_only x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path x) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?sub_path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation x) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?mount_propagation x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((_exec_! core!option.Option.) (_failure_threshold! core!option.Option.) (_initial_delay_seconds! core!option.Option.) (_period_seconds! core!option.Option.) (_success_threshold! core!option.Option.) (_tcp_socket! core!option.Option.) (_timeout_seconds! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _exec_!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (has_type (Poly%core!option.Option. _failure_threshold!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _initial_delay_seconds!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _period_seconds!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _success_threshold!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _tcp_socket!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) (has_type (Poly%core!option.Option. _timeout_seconds!) (TYPE%core!option.Option. $ INT))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView _exec_! _failure_threshold! _initial_delay_seconds! _period_seconds! _success_threshold! _tcp_socket! _timeout_seconds!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView _exec_! _failure_threshold! _initial_delay_seconds! _period_seconds! _success_threshold! _tcp_socket! _timeout_seconds!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?exec_ x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?failure_threshold x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?initial_delay_seconds x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?period_seconds x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?success_threshold x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?tcp_socket x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?timeout_seconds x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) )))
(assert (forall ((_command! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _command!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView _command!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView _command!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command x) (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/?command x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) )))
(assert (forall ((_host! core!option.Option.) (_port! Int)) (! (=> (has_type (Poly%core!option.Option. _host!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView _host! _port!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView _host! _port!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host x) (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/?host x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host (%Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host (%Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/port x) (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/?port x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/port x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((_name! Poly) (_value! core!option.Option.) (_value_from! core!option.Option.)) (! (=> (and (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _value!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _value_from!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView _name! _value! _value_from!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView _name! _value! _value_from!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name x) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (has_type (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value x) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?value x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from x) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?value_from x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) )))
(assert (forall ((_field_ref! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _field_ref!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView _field_ref!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView _field_ref!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref x) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/?field_ref x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) )))
(assert (forall ((_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! core!option.Option.) (_status! core!option.Option.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _spec!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) (has_type (Poly%core!option.Option. _status!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata x) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec x) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/?spec x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status x) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/?status x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) )))
(assert (forall ((_selector! fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (_template! fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. _selector!) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. _template!) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView _selector! _template!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView _selector! _template!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector x) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/?selector x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template x) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/?template x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView./DaemonSetStatusView/number_ready x) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView./DaemonSetStatusView/?number_ready x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView./DaemonSetStatusView/number_ready x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((_kind! fluent_controller!kubernetes_api_objects.spec.common.Kind.) (_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (_status! fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. _spec!) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. _status!) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView _kind! _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView _kind! _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind x) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?kind x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata x) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec x) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?spec x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status x) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?status x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) )))
(assert (forall ((_match_labels! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _match_labels!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView _match_labels!)) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView _match_labels!)) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels x) (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/?match_labels x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. fluent_controller!kubernetes_api_objects.spec.marshal.Value./Null) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.))
(assert (forall ((_0! Bool)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool/0 x)) )))
(assert (forall ((_0! Int)) (! (=> (<= 0 _0!) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (<= 0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((_0! Int)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int/0 x)) )))
(assert (forall ((_0! Poly)) (! (=> (has_type _0! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((_0! vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 x)) )))
(assert (forall ((_0! Poly)) (! (=> (has_type _0! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((_0! vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x)) )))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array_ ((c fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array) c))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (=> (is-fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array_ x) (height_lt (height (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 x))) (height (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((height (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 x)))) )))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object_ ((c fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object) c))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (=> (is-fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object_ x) (height_lt (height (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x))) (height (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((height (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x)))) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (=> (is-fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object_ x) (height_lt (height (fun_from_recursive_field (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x)))) (height (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((height (fun_from_recursive_field (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x))))) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((_name! core!option.Option.) (_namespace! core!option.Option.) (_resource_version! core!option.Option.) (_uid! core!option.Option.) (_labels! core!option.Option.) (_annotations! core!option.Option.) (_owner_references! core!option.Option.) (_finalizers! core!option.Option.) (_deletion_timestamp! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _namespace!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _resource_version!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _uid!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _labels!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _annotations!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _owner_references!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.))) (has_type (Poly%core!option.Option. _finalizers!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _deletion_timestamp!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView _name! _namespace! _resource_version! _uid! _labels! _annotations! _owner_references! _finalizers! _deletion_timestamp!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView _name! _namespace! _resource_version! _uid! _labels! _annotations! _owner_references! _finalizers! _deletion_timestamp!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?resource_version x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?uid x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?labels x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?annotations x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?owner_references x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?finalizers x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?deletion_timestamp x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((_block_owner_deletion! core!option.Option.) (_controller! core!option.Option.) (_kind! fluent_controller!kubernetes_api_objects.spec.common.Kind.) (_name! Poly) (_uid! Int)) (! (=> (and (has_type (Poly%core!option.Option. _block_owner_deletion!) (TYPE%core!option.Option. $ BOOL)) (has_type (Poly%core!option.Option. _controller!) (TYPE%core!option.Option. $ BOOL)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView _block_owner_deletion! _controller! _kind! _name! _uid!)) TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView _block_owner_deletion! _controller! _kind! _name! _uid!)) TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion x) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?block_owner_deletion x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller x) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?controller x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/kind x) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?kind x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/kind x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name x) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (has_type (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/uid x) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?uid x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/uid x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) )))
(assert (forall ((_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! core!option.Option.) (_status! core!option.Option.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _spec!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) (has_type (Poly%core!option.Option. _status!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata x) (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec x) (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/?spec x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status x) (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/?status x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) )))
(assert (forall ((_storage_class_name! core!option.Option.) (_access_modes! core!option.Option.) (_resources! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _storage_class_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _access_modes!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _resources!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView _storage_class_name! _access_modes! _resources!)) TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView _storage_class_name! _access_modes! _resources!)) TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/storage_class_name x) (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/?storage_class_name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/storage_class_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/storage_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/storage_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/access_modes x) (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/?access_modes x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/access_modes x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/access_modes (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/access_modes (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/resources x) (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/?resources x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/resources x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.)) )))
(assert (forall ((_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! core!option.Option.) (_status! core!option.Option.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _spec!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (has_type (Poly%core!option.Option. _status!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/metadata x) (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/spec x) (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/?spec x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/status x) (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/?status x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((_affinity! core!option.Option.) (_containers! vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.) (_volumes! core!option.Option.) (_init_containers! core!option.Option.) (_service_account_name! core!option.Option.) (_tolerations! core!option.Option.) (_node_selector! core!option.Option.) (_runtime_class_name! core!option.Option.) (_dns_policy! core!option.Option.) (_priority_class_name! core!option.Option.) (_scheduler_name! core!option.Option.) (_security_context! core!option.Option.) (_host_network! core!option.Option.) (_termination_grace_period_seconds! core!option.Option.) (_image_pull_secrets! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _affinity!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) (has_type (Poly%core!option.Option. _volumes!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.))) (has_type (Poly%core!option.Option. _init_containers!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.))) (has_type (Poly%core!option.Option. _service_account_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _tolerations!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.))) (has_type (Poly%core!option.Option. _node_selector!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _runtime_class_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _dns_policy!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _priority_class_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _scheduler_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _security_context!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) (has_type (Poly%core!option.Option. _host_network!) (TYPE%core!option.Option. $ BOOL)) (has_type (Poly%core!option.Option. _termination_grace_period_seconds!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _image_pull_secrets!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView _affinity! _containers! _volumes! _init_containers! _service_account_name! _tolerations! _node_selector! _runtime_class_name! _dns_policy! _priority_class_name! _scheduler_name! _security_context! _host_network! _termination_grace_period_seconds! _image_pull_secrets!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView _affinity! _containers! _volumes! _init_containers! _service_account_name! _tolerations! _node_selector! _runtime_class_name! _dns_policy! _priority_class_name! _scheduler_name! _security_context! _host_network! _termination_grace_period_seconds! _image_pull_secrets!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?affinity x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?containers x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?volumes x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?init_containers x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?service_account_name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?tolerations x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?node_selector x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?runtime_class_name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?dns_policy x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?priority_class_name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?scheduler_name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?security_context x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?host_network x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?termination_grace_period_seconds x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?image_pull_secrets x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) )))
(assert (forall ((_metadata! core!option.Option.) (_spec! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _metadata!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (has_type (Poly%core!option.Option. _spec!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView _metadata! _spec!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView _metadata! _spec!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata x) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec x) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/?spec x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (%Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (%Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) )))
(assert (forall ((_limits! core!option.Option.) (_requests! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _limits!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _requests!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView _limits! _requests!)) TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView _limits! _requests!)) TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits x) (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/?limits x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits (%Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits (%Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests x) (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/?requests x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests (%Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests (%Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) )))
(assert (forall ((_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_policy_rules! core!option.Option.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _policy_rules!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView _metadata! _policy_rules!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView _metadata! _policy_rules!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata x) (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules x) (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/?policy_rules x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. (Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. (%Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)) )))
(assert (forall ((_api_groups! core!option.Option.) (_resources! core!option.Option.) (_verbs! Poly)) (! (=> (and (has_type (Poly%core!option.Option. _api_groups!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _resources!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type _verbs! (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView _api_groups! _resources! _verbs!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView _api_groups! _resources! _verbs!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/api_groups x) (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/?api_groups x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/api_groups x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/api_groups (%Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/api_groups (%Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/resources x) (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/?resources x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/resources x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/verbs x) (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/?verbs x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/verbs x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.) (has_type (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/verbs (%Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. x)) (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/verbs (%Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) )))
(assert (forall ((_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_role_ref! fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) (_subjects! core!option.Option.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. _role_ref!) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) (has_type (Poly%core!option.Option. _subjects!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView _metadata! _role_ref! _subjects!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView _metadata! _role_ref! _subjects!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata x) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref x) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/?role_ref x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/subjects x) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/?subjects x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/subjects x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/subjects (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/subjects (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) )))
(assert (forall ((_api_group! Poly) (_kind! Poly) (_name! Poly)) (! (=> (and (has_type _api_group! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _kind! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView _api_group! _kind! _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView _api_group! _kind! _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/api_group x) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/?api_group x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/api_group x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) (has_type (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/api_group (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/api_group (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/kind x) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/?kind x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/kind x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) (has_type (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/name x) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) (has_type (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) )))
(assert (forall ((_kind! Poly) (_name! Poly) (_namespace! core!option.Option.)) (! (=> (and (has_type _kind! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _namespace!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView _kind! _name! _namespace!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView _kind! _name! _namespace!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/kind x) (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/?kind x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/kind x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.) (has_type (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/name x) (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.) (has_type (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/namespace x) (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.secret.SecretView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (%Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.)) )))
(assert (forall ((_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_data! core!option.Option.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _data!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView _metadata! _data!)) TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView _metadata! _data!)) TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.secret.SecretView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/metadata x) (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.secret.SecretView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/data x) (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/?data x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/data x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/data (%Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/data (%Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) )))
(assert (forall ((_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! core!option.Option.) (_status! core!option.Option.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _spec!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) (has_type (Poly%core!option.Option. _status!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata x) (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec x) (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/?spec x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status x) (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/?status x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) )))
(assert (forall ((_cluster_ip! core!option.Option.) (_ports! core!option.Option.) (_selector! core!option.Option.) (_publish_not_ready_addresses! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _cluster_ip!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _ports!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.))) (has_type (Poly%core!option.Option. _selector!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _publish_not_ready_addresses!) (TYPE%core!option.Option. $ BOOL))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView _cluster_ip! _ports! _selector! _publish_not_ready_addresses!)) TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView _cluster_ip! _ports! _selector! _publish_not_ready_addresses!)) TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip x) (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?cluster_ip x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports x) (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?ports x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector x) (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?selector x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses x) (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?publish_not_ready_addresses x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) )))
(assert (forall ((_name! core!option.Option.) (_port! Int) (_app_protocol! core!option.Option.) (_protocol! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _app_protocol!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _protocol!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView _name! _port! _app_protocol! _protocol!)) TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView _name! _port! _app_protocol! _protocol!)) TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/name x) (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/port x) (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?port x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/port x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol x) (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?app_protocol x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol x) (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?protocol x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) )))
(assert (forall ((_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_automount_service_account_token! core!option.Option.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _automount_service_account_token!) (TYPE%core!option.Option. $ BOOL))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView _metadata! _automount_service_account_token!)) TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView _metadata! _automount_service_account_token!)) TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata x) (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/automount_service_account_token x) (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/?automount_service_account_token x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/automount_service_account_token x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/automount_service_account_token (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/automount_service_account_token (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) )))
(assert (forall ((_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! core!option.Option.) (_status! core!option.Option.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _spec!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (has_type (Poly%core!option.Option. _status!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata x) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec x) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/?spec x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status x) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/?status x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((_replicas! core!option.Option.) (_selector! fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (_service_name! Poly) (_template! fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (_volume_claim_templates! core!option.Option.) (_pod_management_policy! core!option.Option.) (_persistent_volume_claim_retention_policy! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _replicas!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. _selector!) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (has_type _service_name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. _template!) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type (Poly%core!option.Option. _volume_claim_templates!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.))) (has_type (Poly%core!option.Option. _pod_management_policy!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _persistent_volume_claim_retention_policy!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView _replicas! _selector! _service_name! _template! _volume_claim_templates! _pod_management_policy! _persistent_volume_claim_retention_policy!)) TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView _replicas! _selector! _service_name! _template! _volume_claim_templates! _pod_management_policy! _persistent_volume_claim_retention_policy!)) TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas x) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?replicas x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector x) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?selector x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name x) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?service_name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template x) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?template x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates x) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?volume_claim_templates x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy x) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?pod_management_policy x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy x) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?persistent_volume_claim_retention_policy x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) )))
(assert (forall ((_when_deleted! core!option.Option.) (_when_scaled! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _when_deleted!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _when_scaled!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView _when_deleted! _when_scaled!)) TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView _when_deleted! _when_scaled!)) TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_deleted x) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/?when_deleted x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_deleted x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_deleted (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_deleted (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_scaled x) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/?when_scaled x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_scaled x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_scaled (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_scaled (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)) )))
(assert (forall ((_ready_replicas! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _ready_replicas!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView _ready_replicas!)) TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView _ready_replicas!)) TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/ready_replicas x) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/?ready_replicas x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/ready_replicas x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/ready_replicas (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/ready_replicas (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. (Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. (%Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((_host_path! core!option.Option.) (_config_map! core!option.Option.) (_name! Poly) (_projected! core!option.Option.) (_secret! core!option.Option.) (_downward_api! core!option.Option.) (_empty_dir! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _host_path!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) (has_type (Poly%core!option.Option. _config_map!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _projected!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) (has_type (Poly%core!option.Option. _secret!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) (has_type (Poly%core!option.Option. _downward_api!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) (has_type (Poly%core!option.Option. _empty_dir!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView _host_path! _config_map! _name! _projected! _secret! _downward_api! _empty_dir!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView _host_path! _config_map! _name! _projected! _secret! _downward_api! _empty_dir!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?host_path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?config_map x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?projected x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?secret x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?downward_api x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?empty_dir x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) )))
(assert (forall ((_medium! core!option.Option.) (_size_limit! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _medium!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (has_type (Poly%core!option.Option. _size_limit!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView _medium! _size_limit!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView _medium! _size_limit!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium x) (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/?medium x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x))) (TYPE%core!option.Option. $ TYPE%vstd!string.String.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit x) (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/?size_limit x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) )))
(assert (forall ((_path! Poly)) (! (=> (has_type _path! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView _path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView _path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path x) (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/?path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) (has_type (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) )))
(assert (forall ((_name! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name x) (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) )))
(assert (forall ((_secret_name! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _secret_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView _secret_name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView _secret_name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name x) (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/?secret_name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) )))
(assert (forall ((_sources! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _sources!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView _sources!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView _sources!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources x) (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/?sources x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) )))
(assert (forall ((_config_map! core!option.Option.) (_secret! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _config_map!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) (has_type (Poly%core!option.Option. _secret!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView _config_map! _secret!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView _config_map! _secret!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/?config_map x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/?secret x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) )))
(assert (forall ((_items! core!option.Option.) (_name! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _items!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.))) (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView _items! _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView _items! _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items x) (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/?items x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name x) (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) )))
(assert (forall ((_items! core!option.Option.) (_name! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _items!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.))) (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView _items! _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView _items! _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items x) (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/?items x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name x) (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) )))
(assert (forall ((_key! Poly) (_path! Poly)) (! (=> (and (has_type _key! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _path! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView _key! _path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView _key! _path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key x) (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/?key x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) (has_type (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path x) (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/?path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) (has_type (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) )))
(assert (forall ((_items! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _items!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView _items!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView _items!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items x) (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/?items x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) )))
(assert (forall ((_field_ref! core!option.Option.) (_path! Poly)) (! (=> (and (has_type (Poly%core!option.Option. _field_ref!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (has_type _path! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView _field_ref! _path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView _field_ref! _path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref x) (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/?field_ref x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path x) (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/?path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) (has_type (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) )))
(assert (forall ((_field_path! Poly) (_api_version! core!option.Option.)) (! (=> (and (has_type _field_path! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _api_version!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView _field_path! _api_version!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView _field_path! _api_version!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path x) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/?field_path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) (has_type (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version x) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/?api_version x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x)) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&))) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (_kubernetes_api_state! fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.) (_controller_state! fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.) (_client_state! fluent_controller!kubernetes_cluster.spec.client.types.ClientState.) (_network_state! fluent_controller!kubernetes_cluster.spec.network.types.NetworkState.) (_external_api_state! fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState.) (_rest_id_allocator! fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.) (_crash_enabled! Bool) (_transient_failure_enabled! Bool)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. _controller_state!) (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. _network_state!) (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. _external_api_state!) (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. _rest_id_allocator!) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster _kubernetes_api_state! _controller_state! _client_state! _network_state! _external_api_state! _rest_id_allocator! _crash_enabled! _transient_failure_enabled!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster _kubernetes_api_state! _controller_state! _client_state! _network_state! _external_api_state! _rest_id_allocator! _crash_enabled! _transient_failure_enabled!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state x) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?kubernetes_api_state x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state x)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state x) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?controller_state x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state x)) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x))) (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/client_state x) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?client_state x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/client_state x)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state x) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?network_state x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state x)) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x))) (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state x) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?external_api_state x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state x)) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x))) (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator x) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?rest_id_allocator x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator x)) )))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x))) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled x) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?crash_enabled x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled x)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled x) (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/?transient_failure_enabled x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled x)) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster_ ((c fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster_ x) (height_lt (height (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state x))) (height (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x)))) :pattern ((height (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state x)))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster_ x) (height_lt (height (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state x))) (height (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x)))) :pattern ((height (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state x)))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster.Cluster.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster_ x) (height_lt (height (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state x))) (height (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. x)))) :pattern ((height (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state x)))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x)) )))
(assert (forall ((Msg&. Dcr) (Msg& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((Msg&. Dcr) (Msg& Type) (_0! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _0!) (TYPE%core!option.Option. Msg&. Msg&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep _0!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep _0!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep/0 x) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep/?0 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep/0 x)) )))
(assert (forall ((Msg&. Dcr) (Msg& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x))) (TYPE%core!option.Option. Msg&. Msg&))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((Msg&. Dcr) (Msg& Type) (_0! tuple%2.)) (! (=> (has_type (Poly%tuple%2. _0!) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep _0!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep _0!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep/0 x) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep/?0 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep/0 x)) )))
(assert (forall ((Msg&. Dcr) (Msg& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x))) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((Msg&. Dcr) (Msg& Type) (_0! tuple%2.)) (! (=> (has_type (Poly%tuple%2. _0!) (TYPE%tuple%2. $ (TYPE%core!option.Option. Msg&. Msg&) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep _0!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep _0!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep/0 x) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep/?0 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep/0 x)) )))
(assert (forall ((Msg&. Dcr) (Msg& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x))) (TYPE%tuple%2. $ (TYPE%core!option.Option. Msg&. Msg&) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((Msg&. Dcr) (Msg& Type)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ClientStep) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&)) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ClientStep) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((Msg&. Dcr) (Msg& Type) (_0! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _0!) (TYPE%core!option.Option. Msg&. Msg&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep _0!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep _0!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep/0 x) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep/?0 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep/0 x)) )))
(assert (forall ((Msg&. Dcr) (Msg& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x))) (TYPE%core!option.Option. Msg&. Msg&))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((Msg&. Dcr) (Msg& Type) (_0! fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep _0!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep _0!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep/0 x) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep/?0 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep/0 x)) )))
(assert (forall ((Msg&. Dcr) (Msg& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((Msg&. Dcr) (Msg& Type)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./RestartController) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&)) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./RestartController) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((Msg&. Dcr) (Msg& Type)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./DisableCrash) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&)) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./DisableCrash) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((Msg&. Dcr) (Msg& Type) (_0! tuple%2.)) (! (=> (has_type (Poly%tuple%2. _0!) (TYPE%tuple%2. Msg&. Msg& $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep _0!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep _0!)) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep/0 x) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep/?0 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep/0 x)) )))
(assert (forall ((Msg&. Dcr) (Msg& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x))) (TYPE%tuple%2. Msg&. Msg& $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((Msg&. Dcr) (Msg& Type)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./DisableTransientFailure) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&)) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./DisableTransientFailure) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(assert (forall ((Msg&. Dcr) (Msg& Type)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./StutterStep) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&)) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./StutterStep) (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. Msg&. Msg&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep_ ((c fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep_ x) (height_lt (height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep/0 x))) (height (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x)))) :pattern ((height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep/0 x)))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep_ ((c fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep_ x) (height_lt (height (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep/0 x))) (height (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x)))) :pattern ((height (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep/0 x)))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep_ ((c fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep_ x) (height_lt (height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep/0 x))) (height (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x)))) :pattern ((height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep/0 x)))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep_ ((c fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep_ x) (height_lt (height (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep/0 x))) (height (Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. x)))) :pattern ((height (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep/0 x)))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageOps.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. I&. I& O&. O&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. I&. I& O&. O&))) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (_recv! core!option.Option.) (_send! Poly)) (! (=> (and (has_type (Poly%core!option.Option. _recv!) (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) (has_type _send! (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps _recv! _send!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. I&. I& O&. O&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps _recv! _send!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageOps.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/recv x) (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/?recv x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/recv x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. I&. I& O&. O&)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/recv (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. x))) (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/recv (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageOps.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/send x) (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/?send x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/send x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. I&. I& O&. O&)) (has_type (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/send (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. x)) (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/send (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. I&. I& O&. O&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps_ ((c fluent_controller!kubernetes_cluster.spec.message.MessageOps.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageOps.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps_ x) (height_lt (height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/recv x))) (height (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. x)))) :pattern ((height (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/recv x)))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageOps.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps_ x) (height_lt (height (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/send x)) (height (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. x)))) :pattern ((height (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/send x))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.Message.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.message.Message. x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (_src! fluent_controller!kubernetes_cluster.spec.message.HostId.) (_dst! fluent_controller!kubernetes_cluster.spec.message.HostId.) (_content! fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. _content!) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.Message./Message _src! _dst! _content!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.Message./Message _src! _dst! _content!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.Message.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src x) (fluent_controller!kubernetes_cluster.spec.message.Message./Message/?src x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.Message./Message/src x)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.Message.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst x) (fluent_controller!kubernetes_cluster.spec.message.Message./Message/?dst x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst x)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.Message.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content x) (fluent_controller!kubernetes_cluster.spec.message.Message./Message/?content x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.Message./Message/content x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. x))) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.message.Message./Message_ ((c fluent_controller!kubernetes_cluster.spec.message.Message.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.message.Message./Message) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.Message.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.message.Message./Message_ x) (height_lt (height (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content x))) (height (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. x)))) :pattern ((height (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content x)))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.HostId.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.message.HostId.) (= x (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (%Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_cluster.spec.message.HostId.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.HostId.)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. x) TYPE%fluent_controller!kubernetes_cluster.spec.message.HostId.) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. x) TYPE%fluent_controller!kubernetes_cluster.spec.message.HostId.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.) (= x (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) )))
(assert (forall ((_rest_id_counter! Int)) (! (=> (<= 0 _rest_id_counter!) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator./RestIdAllocator _rest_id_counter!)) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator./RestIdAllocator _rest_id_counter!)) TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator./RestIdAllocator/rest_id_counter x) (fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator./RestIdAllocator/?rest_id_counter x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator./RestIdAllocator/rest_id_counter x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.) (<= 0 (fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator./RestIdAllocator/rest_id_counter (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. x)))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator./RestIdAllocator/rest_id_counter (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. x)) (has_type x TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.)) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) (! (= x (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x))) :pattern ((Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (= x (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)))) :pattern ((has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (_0! fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (_1! Int)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (<= 0 _1!)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest _0! _1!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest _0! _1!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 x) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/?0 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/1 x) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/?1 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/1 x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (<= 0 (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/1 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/1 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (_0! fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (_1! Int)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (<= 0 _1!)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse _0! _1!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse _0! _1!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/0 x) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/?0 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/0 x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/1 x) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/?1 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/1 x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (<= 0 (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/1 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/1 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (_0! Poly) (_1! Int)) (! (=> (and (has_type _0! I&) (<= 0 _1!)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest _0! _1!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest _0! _1!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/0 x) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/?0 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/0 x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)) I&)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/1 x) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/?1 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/1 x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (<= 0 (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/1 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/1 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (_0! Poly) (_1! Int)) (! (=> (and (has_type _0! O&) (<= 0 _1!)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse _0! _1!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse _0! _1!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/0 x) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/?0 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/0 x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)) O&)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) )))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) (! (= (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/1 x) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/?1 x)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/1 x)) )))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (<= 0 (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/1 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/1 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)) (has_type x (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest_ ((c fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest_ x) (height_lt (height (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/0 x)) (height (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)))) :pattern ((height (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/0 x))) )))
(define-fun is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse_ ((c fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse) c))
(assert (forall ((x fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) (! (=> (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse_ x) (height_lt (height (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/0 x)) (height (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. x)))) :pattern ((height (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/0 x))) )))
(assert (forall ((x fluent_controller!reconciler.spec.io.RequestView.)) (! (= x (%Poly%fluent_controller!reconciler.spec.io.RequestView. (Poly%fluent_controller!reconciler.spec.io.RequestView. x))) :pattern ((Poly%fluent_controller!reconciler.spec.io.RequestView. x)) )))
(assert (forall ((T&. Dcr) (T& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!reconciler.spec.io.RequestView. T&. T&)) (= x (Poly%fluent_controller!reconciler.spec.io.RequestView. (%Poly%fluent_controller!reconciler.spec.io.RequestView. x)))) :pattern ((has_type x (TYPE%fluent_controller!reconciler.spec.io.RequestView. T&. T&))) )))
(assert (forall ((T&. Dcr) (T& Type) (_0! fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!reconciler.spec.io.RequestView. (fluent_controller!reconciler.spec.io.RequestView./KRequest _0!)) (TYPE%fluent_controller!reconciler.spec.io.RequestView. T&. T&))) :pattern ((has_type (Poly%fluent_controller!reconciler.spec.io.RequestView. (fluent_controller!reconciler.spec.io.RequestView./KRequest _0!)) (TYPE%fluent_controller!reconciler.spec.io.RequestView. T&. T&))) )))
(assert (forall ((x fluent_controller!reconciler.spec.io.RequestView.)) (! (= (fluent_controller!reconciler.spec.io.RequestView./KRequest/0 x) (fluent_controller!reconciler.spec.io.RequestView./KRequest/?0 x)) :pattern ((fluent_controller!reconciler.spec.io.RequestView./KRequest/0 x)) )))
(assert (forall ((T&. Dcr) (T& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!reconciler.spec.io.RequestView. T&. T&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!reconciler.spec.io.RequestView./KRequest/0 (%Poly%fluent_controller!reconciler.spec.io.RequestView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((fluent_controller!reconciler.spec.io.RequestView./KRequest/0 (%Poly%fluent_controller!reconciler.spec.io.RequestView. x)) (has_type x (TYPE%fluent_controller!reconciler.spec.io.RequestView. T&. T&))) )))
(assert (forall ((T&. Dcr) (T& Type) (_0! Poly)) (! (=> (has_type _0! T&) (has_type (Poly%fluent_controller!reconciler.spec.io.RequestView. (fluent_controller!reconciler.spec.io.RequestView./ExternalRequest _0!)) (TYPE%fluent_controller!reconciler.spec.io.RequestView. T&. T&))) :pattern ((has_type (Poly%fluent_controller!reconciler.spec.io.RequestView. (fluent_controller!reconciler.spec.io.RequestView./ExternalRequest _0!)) (TYPE%fluent_controller!reconciler.spec.io.RequestView. T&. T&))) )))
(assert (forall ((x fluent_controller!reconciler.spec.io.RequestView.)) (! (= (fluent_controller!reconciler.spec.io.RequestView./ExternalRequest/0 x) (fluent_controller!reconciler.spec.io.RequestView./ExternalRequest/?0 x)) :pattern ((fluent_controller!reconciler.spec.io.RequestView./ExternalRequest/0 x)) )))
(assert (forall ((T&. Dcr) (T& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!reconciler.spec.io.RequestView. T&. T&)) (has_type (fluent_controller!reconciler.spec.io.RequestView./ExternalRequest/0 (%Poly%fluent_controller!reconciler.spec.io.RequestView. x)) T&)) :pattern ((fluent_controller!reconciler.spec.io.RequestView./ExternalRequest/0 (%Poly%fluent_controller!reconciler.spec.io.RequestView. x)) (has_type x (TYPE%fluent_controller!reconciler.spec.io.RequestView. T&. T&))) )))
(define-fun is-fluent_controller!reconciler.spec.io.RequestView./ExternalRequest_ ((c fluent_controller!reconciler.spec.io.RequestView.)) Bool ((_ is fluent_controller!reconciler.spec.io.RequestView./ExternalRequest) c))
(assert (forall ((x fluent_controller!reconciler.spec.io.RequestView.)) (! (=> (is-fluent_controller!reconciler.spec.io.RequestView./ExternalRequest_ x) (height_lt (height (fluent_controller!reconciler.spec.io.RequestView./ExternalRequest/0 x)) (height (Poly%fluent_controller!reconciler.spec.io.RequestView. x)))) :pattern ((height (fluent_controller!reconciler.spec.io.RequestView./ExternalRequest/0 x))) )))
(assert (forall ((x fluent_controller!reconciler.spec.io.ResponseView.)) (! (= x (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (Poly%fluent_controller!reconciler.spec.io.ResponseView. x))) :pattern ((Poly%fluent_controller!reconciler.spec.io.ResponseView. x)) )))
(assert (forall ((T&. Dcr) (T& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!reconciler.spec.io.ResponseView. T&. T&)) (= x (Poly%fluent_controller!reconciler.spec.io.ResponseView. (%Poly%fluent_controller!reconciler.spec.io.ResponseView. x)))) :pattern ((has_type x (TYPE%fluent_controller!reconciler.spec.io.ResponseView. T&. T&))) )))
(assert (forall ((T&. Dcr) (T& Type) (_0! fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (has_type (Poly%fluent_controller!reconciler.spec.io.ResponseView. (fluent_controller!reconciler.spec.io.ResponseView./KResponse _0!)) (TYPE%fluent_controller!reconciler.spec.io.ResponseView. T&. T&))) :pattern ((has_type (Poly%fluent_controller!reconciler.spec.io.ResponseView. (fluent_controller!reconciler.spec.io.ResponseView./KResponse _0!)) (TYPE%fluent_controller!reconciler.spec.io.ResponseView. T&. T&))) )))
(assert (forall ((x fluent_controller!reconciler.spec.io.ResponseView.)) (! (= (fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 x) (fluent_controller!reconciler.spec.io.ResponseView./KResponse/?0 x)) :pattern ((fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 x)) )))
(assert (forall ((T&. Dcr) (T& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!reconciler.spec.io.ResponseView. T&. T&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 (%Poly%fluent_controller!reconciler.spec.io.ResponseView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) :pattern ((fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 (%Poly%fluent_controller!reconciler.spec.io.ResponseView. x)) (has_type x (TYPE%fluent_controller!reconciler.spec.io.ResponseView. T&. T&))) )))
(assert (forall ((T&. Dcr) (T& Type) (_0! Poly)) (! (=> (has_type _0! T&) (has_type (Poly%fluent_controller!reconciler.spec.io.ResponseView. (fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse _0!)) (TYPE%fluent_controller!reconciler.spec.io.ResponseView. T&. T&))) :pattern ((has_type (Poly%fluent_controller!reconciler.spec.io.ResponseView. (fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse _0!)) (TYPE%fluent_controller!reconciler.spec.io.ResponseView. T&. T&))) )))
(assert (forall ((x fluent_controller!reconciler.spec.io.ResponseView.)) (! (= (fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse/0 x) (fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse/?0 x)) :pattern ((fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse/0 x)) )))
(assert (forall ((T&. Dcr) (T& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!reconciler.spec.io.ResponseView. T&. T&)) (has_type (fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse/0 (%Poly%fluent_controller!reconciler.spec.io.ResponseView. x)) T&)) :pattern ((fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse/0 (%Poly%fluent_controller!reconciler.spec.io.ResponseView. x)) (has_type x (TYPE%fluent_controller!reconciler.spec.io.ResponseView. T&. T&))) )))
(define-fun is-fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse_ ((c fluent_controller!reconciler.spec.io.ResponseView.)) Bool ((_ is fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse) c))
(assert (forall ((x fluent_controller!reconciler.spec.io.ResponseView.)) (! (=> (is-fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse_ x) (height_lt (height (fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse/0 x)) (height (Poly%fluent_controller!reconciler.spec.io.ResponseView. x)))) :pattern ((height (fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse/0 x))) )))
(assert (forall ((x fluent_controller!external_api.spec.EmptyTypeView.)) (! (= x (%Poly%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!external_api.spec.EmptyTypeView. x))) :pattern ((Poly%fluent_controller!external_api.spec.EmptyTypeView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (= x (Poly%fluent_controller!external_api.spec.EmptyTypeView. (%Poly%fluent_controller!external_api.spec.EmptyTypeView. x)))) :pattern ((has_type x TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) )))
(assert (forall ((x fluent_controller!external_api.spec.EmptyTypeView.)) (! (has_type (Poly%fluent_controller!external_api.spec.EmptyTypeView. x) TYPE%fluent_controller!external_api.spec.EmptyTypeView.) :pattern ((has_type (Poly%fluent_controller!external_api.spec.EmptyTypeView. x) TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) )))
(assert (forall ((x fluent_controller!external_api.spec.EmptyAPI.)) (! (= x (%Poly%fluent_controller!external_api.spec.EmptyAPI. (Poly%fluent_controller!external_api.spec.EmptyAPI. x))) :pattern ((Poly%fluent_controller!external_api.spec.EmptyAPI. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!external_api.spec.EmptyAPI.) (= x (Poly%fluent_controller!external_api.spec.EmptyAPI. (%Poly%fluent_controller!external_api.spec.EmptyAPI. x)))) :pattern ((has_type x TYPE%fluent_controller!external_api.spec.EmptyAPI.)) )))
(assert (forall ((x fluent_controller!external_api.spec.EmptyAPI.)) (! (has_type (Poly%fluent_controller!external_api.spec.EmptyAPI. x) TYPE%fluent_controller!external_api.spec.EmptyAPI.) :pattern ((has_type (Poly%fluent_controller!external_api.spec.EmptyAPI. x) TYPE%fluent_controller!external_api.spec.EmptyAPI.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.error.APIError.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.error.APIError. (Poly%fluent_controller!kubernetes_api_objects.error.APIError. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.error.APIError. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.error.APIError.) (= x (Poly%fluent_controller!kubernetes_api_objects.error.APIError. (%Poly%fluent_controller!kubernetes_api_objects.error.APIError. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.error.APIError.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.error.APIError.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.error.APIError. x) TYPE%fluent_controller!kubernetes_api_objects.error.APIError.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.error.APIError. x) TYPE%fluent_controller!kubernetes_api_objects.error.APIError.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.) (= x (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. (%Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x) TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x) TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.StateMachine.)) (! (= x (%Poly%fluent_controller!state_machine.state_machine.StateMachine. (Poly%fluent_controller!state_machine.state_machine.StateMachine. x))) :pattern ((Poly%fluent_controller!state_machine.state_machine.StateMachine. x)) )))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (ActionInput&. Dcr) (ActionInput& Type) (Output&. Dcr) (Output& Type) (Step&. Dcr) (Step& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&)) (= x (Poly%fluent_controller!state_machine.state_machine.StateMachine. (%Poly%fluent_controller!state_machine.state_machine.StateMachine. x)))) :pattern ((has_type x (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&))) )))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (ActionInput&. Dcr) (ActionInput& Type) (Output&. Dcr) (Output& Type) (Step&. Dcr) (Step& Type) (_init! %%Function%%) (_actions! Poly) (_step_to_action! %%Function%%) (_action_input! %%Function%%)) (! (=> (and (has_type (Poly%fun%1. _init!) (TYPE%fun%1. State&. State& $ BOOL)) (has_type _actions! (TYPE%vstd!set.Set. $ (TYPE%fluent_controller!state_machine.action.Action. State&. State& ActionInput&. ActionInput& Output&. Output&))) (has_type (Poly%fun%1. _step_to_action!) (TYPE%fun%1. Step&. Step& $ (TYPE%fluent_controller!state_machine.action.Action. State&. State& ActionInput&. ActionInput& Output&. Output&))) (has_type (Poly%fun%2. _action_input!) (TYPE%fun%2. Step&. Step& Input&. Input& ActionInput&. ActionInput&))) (has_type (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!state_machine.state_machine.StateMachine./StateMachine _init! _actions! _step_to_action! _action_input!)) (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&))) :pattern ((has_type (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!state_machine.state_machine.StateMachine./StateMachine _init! _actions! _step_to_action! _action_input!)) (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&))) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.StateMachine.)) (! (= (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/init x) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/?init x)) :pattern ((fluent_controller!state_machine.state_machine.StateMachine./StateMachine/init x)) )))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (ActionInput&. Dcr) (ActionInput& Type) (Output&. Dcr) (Output& Type) (Step&. Dcr) (Step& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&)) (has_type (Poly%fun%1. (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/init (%Poly%fluent_controller!state_machine.state_machine.StateMachine. x))) (TYPE%fun%1. State&. State& $ BOOL))) :pattern ((fluent_controller!state_machine.state_machine.StateMachine./StateMachine/init (%Poly%fluent_controller!state_machine.state_machine.StateMachine. x)) (has_type x (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&))) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.StateMachine.)) (! (= (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/actions x) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/?actions x)) :pattern ((fluent_controller!state_machine.state_machine.StateMachine./StateMachine/actions x)) )))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (ActionInput&. Dcr) (ActionInput& Type) (Output&. Dcr) (Output& Type) (Step&. Dcr) (Step& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&)) (has_type (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/actions (%Poly%fluent_controller!state_machine.state_machine.StateMachine. x)) (TYPE%vstd!set.Set. $ (TYPE%fluent_controller!state_machine.action.Action. State&. State& ActionInput&. ActionInput& Output&. Output&)))) :pattern ((fluent_controller!state_machine.state_machine.StateMachine./StateMachine/actions (%Poly%fluent_controller!state_machine.state_machine.StateMachine. x)) (has_type x (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&))) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.StateMachine.)) (! (= (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/step_to_action x) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/?step_to_action x)) :pattern ((fluent_controller!state_machine.state_machine.StateMachine./StateMachine/step_to_action x)) )))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (ActionInput&. Dcr) (ActionInput& Type) (Output&. Dcr) (Output& Type) (Step&. Dcr) (Step& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&)) (has_type (Poly%fun%1. (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/step_to_action (%Poly%fluent_controller!state_machine.state_machine.StateMachine. x))) (TYPE%fun%1. Step&. Step& $ (TYPE%fluent_controller!state_machine.action.Action. State&. State& ActionInput&. ActionInput& Output&. Output&)))) :pattern ((fluent_controller!state_machine.state_machine.StateMachine./StateMachine/step_to_action (%Poly%fluent_controller!state_machine.state_machine.StateMachine. x)) (has_type x (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&))) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.StateMachine.)) (! (= (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/action_input x) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/?action_input x)) :pattern ((fluent_controller!state_machine.state_machine.StateMachine./StateMachine/action_input x)) )))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (ActionInput&. Dcr) (ActionInput& Type) (Output&. Dcr) (Output& Type) (Step&. Dcr) (Step& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&)) (has_type (Poly%fun%2. (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/action_input (%Poly%fluent_controller!state_machine.state_machine.StateMachine. x))) (TYPE%fun%2. Step&. Step& Input&. Input& ActionInput&. ActionInput&))) :pattern ((fluent_controller!state_machine.state_machine.StateMachine./StateMachine/action_input (%Poly%fluent_controller!state_machine.state_machine.StateMachine. x)) (has_type x (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&))) )))
(define-fun is-fluent_controller!state_machine.state_machine.StateMachine./StateMachine_ ((c fluent_controller!state_machine.state_machine.StateMachine.)) Bool ((_ is fluent_controller!state_machine.state_machine.StateMachine./StateMachine) c))
(assert (forall ((x fluent_controller!state_machine.state_machine.StateMachine.)) (! (=> (is-fluent_controller!state_machine.state_machine.StateMachine./StateMachine_ x) (height_lt (height (Poly%fun%1. (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/init x))) (height (Poly%fluent_controller!state_machine.state_machine.StateMachine. x)))) :pattern ((height (Poly%fun%1. (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/init x)))) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.StateMachine.)) (! (=> (is-fluent_controller!state_machine.state_machine.StateMachine./StateMachine_ x) (height_lt (height (fun_from_recursive_field (Poly%fun%1. (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/init x)))) (height (Poly%fluent_controller!state_machine.state_machine.StateMachine. x)))) :pattern ((height (fun_from_recursive_field (Poly%fun%1. (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/init x))))) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.StateMachine.)) (! (=> (is-fluent_controller!state_machine.state_machine.StateMachine./StateMachine_ x) (height_lt (height (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/actions x)) (height (Poly%fluent_controller!state_machine.state_machine.StateMachine. x)))) :pattern ((height (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/actions x))) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.StateMachine.)) (! (=> (is-fluent_controller!state_machine.state_machine.StateMachine./StateMachine_ x) (height_lt (height (Poly%fun%1. (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/step_to_action x))) (height (Poly%fluent_controller!state_machine.state_machine.StateMachine. x)))) :pattern ((height (Poly%fun%1. (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/step_to_action x)))) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.StateMachine.)) (! (=> (is-fluent_controller!state_machine.state_machine.StateMachine./StateMachine_ x) (height_lt (height (Poly%fun%2. (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/action_input x))) (height (Poly%fluent_controller!state_machine.state_machine.StateMachine. x)))) :pattern ((height (Poly%fun%2. (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/action_input x)))) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.NetworkStateMachine.)) (! (= x (%Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. x))) :pattern ((Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. x)) )))
(assert (forall ((State&. Dcr) (State& Type) (MessageOps&. Dcr) (MessageOps& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.state_machine.NetworkStateMachine. State&. State& MessageOps&. MessageOps&)) (= x (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (%Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. x)))) :pattern ((has_type x (TYPE%fluent_controller!state_machine.state_machine.NetworkStateMachine. State&. State& MessageOps&. MessageOps&))) )))
(assert (forall ((State&. Dcr) (State& Type) (MessageOps&. Dcr) (MessageOps& Type) (_init! %%Function%%) (_deliver! fluent_controller!state_machine.action.Action.)) (! (=> (and (has_type (Poly%fun%1. _init!) (TYPE%fun%1. State&. State& $ BOOL)) (has_type (Poly%fluent_controller!state_machine.action.Action. _deliver!) (TYPE%fluent_controller!state_machine.action.Action. State&. State& MessageOps&. MessageOps& $ TYPE%tuple%0.))) (has_type (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine _init! _deliver!)) (TYPE%fluent_controller!state_machine.state_machine.NetworkStateMachine. State&. State& MessageOps&. MessageOps&))) :pattern ((has_type (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine _init! _deliver!)) (TYPE%fluent_controller!state_machine.state_machine.NetworkStateMachine. State&. State& MessageOps&. MessageOps&))) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.NetworkStateMachine.)) (! (= (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/init x) (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/?init x)) :pattern ((fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/init x)) )))
(assert (forall ((State&. Dcr) (State& Type) (MessageOps&. Dcr) (MessageOps& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.state_machine.NetworkStateMachine. State&. State& MessageOps&. MessageOps&)) (has_type (Poly%fun%1. (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/init (%Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. x))) (TYPE%fun%1. State&. State& $ BOOL))) :pattern ((fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/init (%Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. x)) (has_type x (TYPE%fluent_controller!state_machine.state_machine.NetworkStateMachine. State&. State& MessageOps&. MessageOps&))) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.NetworkStateMachine.)) (! (= (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/deliver x) (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/?deliver x)) :pattern ((fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/deliver x)) )))
(assert (forall ((State&. Dcr) (State& Type) (MessageOps&. Dcr) (MessageOps& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.state_machine.NetworkStateMachine. State&. State& MessageOps&. MessageOps&)) (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/deliver (%Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. x))) (TYPE%fluent_controller!state_machine.action.Action. State&. State& MessageOps&. MessageOps& $ TYPE%tuple%0.))) :pattern ((fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/deliver (%Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. x)) (has_type x (TYPE%fluent_controller!state_machine.state_machine.NetworkStateMachine. State&. State& MessageOps&. MessageOps&))) )))
(define-fun is-fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine_ ((c fluent_controller!state_machine.state_machine.NetworkStateMachine.)) Bool ((_ is fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine) c))
(assert (forall ((x fluent_controller!state_machine.state_machine.NetworkStateMachine.)) (! (=> (is-fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine_ x) (height_lt (height (Poly%fun%1. (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/init x))) (height (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. x)))) :pattern ((height (Poly%fun%1. (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/init x)))) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.NetworkStateMachine.)) (! (=> (is-fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine_ x) (height_lt (height (fun_from_recursive_field (Poly%fun%1. (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/init x)))) (height (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. x)))) :pattern ((height (fun_from_recursive_field (Poly%fun%1. (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/init x))))) )))
(assert (forall ((x fluent_controller!state_machine.state_machine.NetworkStateMachine.)) (! (=> (is-fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine_ x) (height_lt (height (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/deliver x))) (height (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. x)))) :pattern ((height (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/deliver x)))) )))
(assert (forall ((x fluent_controller!state_machine.action.Action.)) (! (= x (%Poly%fluent_controller!state_machine.action.Action. (Poly%fluent_controller!state_machine.action.Action. x))) :pattern ((Poly%fluent_controller!state_machine.action.Action. x)) )))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (Output&. Dcr) (Output& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.action.Action. State&. State& Input&. Input& Output&. Output&)) (= x (Poly%fluent_controller!state_machine.action.Action. (%Poly%fluent_controller!state_machine.action.Action. x)))) :pattern ((has_type x (TYPE%fluent_controller!state_machine.action.Action. State&. State& Input&. Input& Output&. Output&))) )))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (Output&. Dcr) (Output& Type) (_precondition! %%Function%%) (_transition! %%Function%%)) (! (=> (and (has_type (Poly%fun%2. _precondition!) (TYPE%fun%2. Input&. Input& State&. State& $ BOOL)) (has_type (Poly%fun%2. _transition!) (TYPE%fun%2. Input&. Input& State&. State& $ (TYPE%tuple%2. State&. State& Output&. Output&)))) (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!state_machine.action.Action./Action _precondition! _transition!)) (TYPE%fluent_controller!state_machine.action.Action. State&. State& Input&. Input& Output&. Output&))) :pattern ((has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!state_machine.action.Action./Action _precondition! _transition!)) (TYPE%fluent_controller!state_machine.action.Action. State&. State& Input&. Input& Output&. Output&))) )))
(assert (forall ((x fluent_controller!state_machine.action.Action.)) (! (= (fluent_controller!state_machine.action.Action./Action/precondition x) (fluent_controller!state_machine.action.Action./Action/?precondition x)) :pattern ((fluent_controller!state_machine.action.Action./Action/precondition x)) )))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (Output&. Dcr) (Output& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.action.Action. State&. State& Input&. Input& Output&. Output&)) (has_type (Poly%fun%2. (fluent_controller!state_machine.action.Action./Action/precondition (%Poly%fluent_controller!state_machine.action.Action. x))) (TYPE%fun%2. Input&. Input& State&. State& $ BOOL))) :pattern ((fluent_controller!state_machine.action.Action./Action/precondition (%Poly%fluent_controller!state_machine.action.Action. x)) (has_type x (TYPE%fluent_controller!state_machine.action.Action. State&. State& Input&. Input& Output&. Output&))) )))
(assert (forall ((x fluent_controller!state_machine.action.Action.)) (! (= (fluent_controller!state_machine.action.Action./Action/transition x) (fluent_controller!state_machine.action.Action./Action/?transition x)) :pattern ((fluent_controller!state_machine.action.Action./Action/transition x)) )))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (Output&. Dcr) (Output& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.action.Action. State&. State& Input&. Input& Output&. Output&)) (has_type (Poly%fun%2. (fluent_controller!state_machine.action.Action./Action/transition (%Poly%fluent_controller!state_machine.action.Action. x))) (TYPE%fun%2. Input&. Input& State&. State& $ (TYPE%tuple%2. State&. State& Output&. Output&)))) :pattern ((fluent_controller!state_machine.action.Action./Action/transition (%Poly%fluent_controller!state_machine.action.Action. x)) (has_type x (TYPE%fluent_controller!state_machine.action.Action. State&. State& Input&. Input& Output&. Output&))) )))
(define-fun is-fluent_controller!state_machine.action.Action./Action_ ((c fluent_controller!state_machine.action.Action.)) Bool ((_ is fluent_controller!state_machine.action.Action./Action) c))
(assert (forall ((x fluent_controller!state_machine.action.Action.)) (! (=> (is-fluent_controller!state_machine.action.Action./Action_ x) (height_lt (height (Poly%fun%2. (fluent_controller!state_machine.action.Action./Action/precondition x))) (height (Poly%fluent_controller!state_machine.action.Action. x)))) :pattern ((height (Poly%fun%2. (fluent_controller!state_machine.action.Action./Action/precondition x)))) )))
(assert (forall ((x fluent_controller!state_machine.action.Action.)) (! (=> (is-fluent_controller!state_machine.action.Action./Action_ x) (height_lt (height (fun_from_recursive_field (Poly%fun%2. (fluent_controller!state_machine.action.Action./Action/precondition x)))) (height (Poly%fluent_controller!state_machine.action.Action. x)))) :pattern ((height (fun_from_recursive_field (Poly%fun%2. (fluent_controller!state_machine.action.Action./Action/precondition x))))) )))
(assert (forall ((x fluent_controller!state_machine.action.Action.)) (! (=> (is-fluent_controller!state_machine.action.Action./Action_ x) (height_lt (height (Poly%fun%2. (fluent_controller!state_machine.action.Action./Action/transition x))) (height (Poly%fluent_controller!state_machine.action.Action. x)))) :pattern ((height (Poly%fun%2. (fluent_controller!state_machine.action.Action./Action/transition x)))) )))
(assert (forall ((x fluent_controller!state_machine.action.ActionResult.)) (! (= x (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. x))) :pattern ((Poly%fluent_controller!state_machine.action.ActionResult. x)) )))
(assert (forall ((State&. Dcr) (State& Type) (Output&. Dcr) (Output& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&)) (= x (Poly%fluent_controller!state_machine.action.ActionResult. (%Poly%fluent_controller!state_machine.action.ActionResult. x)))) :pattern ((has_type x (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&))) )))
(assert (forall ((State&. Dcr) (State& Type) (Output&. Dcr) (Output& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.ActionResult. fluent_controller!state_machine.action.ActionResult./Disabled) (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&)) :pattern ((has_type (Poly%fluent_controller!state_machine.action.ActionResult. fluent_controller!state_machine.action.ActionResult./Disabled) (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&))) )))
(assert (forall ((State&. Dcr) (State& Type) (Output&. Dcr) (Output& Type) (_0! Poly) (_1! Poly)) (! (=> (and (has_type _0! State&) (has_type _1! Output&)) (has_type (Poly%fluent_controller!state_machine.action.ActionResult. (fluent_controller!state_machine.action.ActionResult./Enabled _0! _1!)) (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&))) :pattern ((has_type (Poly%fluent_controller!state_machine.action.ActionResult. (fluent_controller!state_machine.action.ActionResult./Enabled _0! _1!)) (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&))) )))
(assert (forall ((x fluent_controller!state_machine.action.ActionResult.)) (! (= (fluent_controller!state_machine.action.ActionResult./Enabled/0 x) (fluent_controller!state_machine.action.ActionResult./Enabled/?0 x)) :pattern ((fluent_controller!state_machine.action.ActionResult./Enabled/0 x)) )))
(assert (forall ((State&. Dcr) (State& Type) (Output&. Dcr) (Output& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&)) (has_type (fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. x)) State&)) :pattern ((fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. x)) (has_type x (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&))) )))
(assert (forall ((x fluent_controller!state_machine.action.ActionResult.)) (! (= (fluent_controller!state_machine.action.ActionResult./Enabled/1 x) (fluent_controller!state_machine.action.ActionResult./Enabled/?1 x)) :pattern ((fluent_controller!state_machine.action.ActionResult./Enabled/1 x)) )))
(assert (forall ((State&. Dcr) (State& Type) (Output&. Dcr) (Output& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&)) (has_type (fluent_controller!state_machine.action.ActionResult./Enabled/1 (%Poly%fluent_controller!state_machine.action.ActionResult. x)) Output&)) :pattern ((fluent_controller!state_machine.action.ActionResult./Enabled/1 (%Poly%fluent_controller!state_machine.action.ActionResult. x)) (has_type x (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&))) )))
(define-fun is-fluent_controller!state_machine.action.ActionResult./Enabled_ ((c fluent_controller!state_machine.action.ActionResult.)) Bool ((_ is fluent_controller!state_machine.action.ActionResult./Enabled) c))
(assert (forall ((x fluent_controller!state_machine.action.ActionResult.)) (! (=> (is-fluent_controller!state_machine.action.ActionResult./Enabled_ x) (height_lt (height (fluent_controller!state_machine.action.ActionResult./Enabled/0 x)) (height (Poly%fluent_controller!state_machine.action.ActionResult. x)))) :pattern ((height (fluent_controller!state_machine.action.ActionResult./Enabled/0 x))) )))
(assert (forall ((x fluent_controller!state_machine.action.ActionResult.)) (! (=> (is-fluent_controller!state_machine.action.ActionResult./Enabled_ x) (height_lt (height (fluent_controller!state_machine.action.ActionResult./Enabled/1 x)) (height (Poly%fluent_controller!state_machine.action.ActionResult. x)))) :pattern ((height (fluent_controller!state_machine.action.ActionResult./Enabled/1 x))) )))
(assert (forall ((x fluent_controller!temporal_logic.defs.Execution.)) (! (= x (%Poly%fluent_controller!temporal_logic.defs.Execution. (Poly%fluent_controller!temporal_logic.defs.Execution. x))) :pattern ((Poly%fluent_controller!temporal_logic.defs.Execution. x)) )))
(assert (forall ((T&. Dcr) (T& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&)) (= x (Poly%fluent_controller!temporal_logic.defs.Execution. (%Poly%fluent_controller!temporal_logic.defs.Execution. x)))) :pattern ((has_type x (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&))) )))
(assert (forall ((T&. Dcr) (T& Type) (_nat_to_state! %%Function%%)) (! (=> (has_type (Poly%fun%1. _nat_to_state!) (TYPE%fun%1. $ NAT T&. T&)) (has_type (Poly%fluent_controller!temporal_logic.defs.Execution. (fluent_controller!temporal_logic.defs.Execution./Execution _nat_to_state!)) (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&))) :pattern ((has_type (Poly%fluent_controller!temporal_logic.defs.Execution. (fluent_controller!temporal_logic.defs.Execution./Execution _nat_to_state!)) (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&))) )))
(assert (forall ((x fluent_controller!temporal_logic.defs.Execution.)) (! (= (fluent_controller!temporal_logic.defs.Execution./Execution/nat_to_state x) (fluent_controller!temporal_logic.defs.Execution./Execution/?nat_to_state x)) :pattern ((fluent_controller!temporal_logic.defs.Execution./Execution/nat_to_state x)) )))
(assert (forall ((T&. Dcr) (T& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&)) (has_type (Poly%fun%1. (fluent_controller!temporal_logic.defs.Execution./Execution/nat_to_state (%Poly%fluent_controller!temporal_logic.defs.Execution. x))) (TYPE%fun%1. $ NAT T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.Execution./Execution/nat_to_state (%Poly%fluent_controller!temporal_logic.defs.Execution. x)) (has_type x (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&))) )))
(define-fun is-fluent_controller!temporal_logic.defs.Execution./Execution_ ((c fluent_controller!temporal_logic.defs.Execution.)) Bool ((_ is fluent_controller!temporal_logic.defs.Execution./Execution) c))
(assert (forall ((x fluent_controller!temporal_logic.defs.Execution.)) (! (=> (is-fluent_controller!temporal_logic.defs.Execution./Execution_ x) (height_lt (height (Poly%fun%1. (fluent_controller!temporal_logic.defs.Execution./Execution/nat_to_state x))) (height (Poly%fluent_controller!temporal_logic.defs.Execution. x)))) :pattern ((height (Poly%fun%1. (fluent_controller!temporal_logic.defs.Execution./Execution/nat_to_state x)))) )))
(assert (forall ((x fluent_controller!temporal_logic.defs.TempPred.)) (! (= x (%Poly%fluent_controller!temporal_logic.defs.TempPred. (Poly%fluent_controller!temporal_logic.defs.TempPred. x))) :pattern ((Poly%fluent_controller!temporal_logic.defs.TempPred. x)) )))
(assert (forall ((T&. Dcr) (T& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&)) (= x (Poly%fluent_controller!temporal_logic.defs.TempPred. (%Poly%fluent_controller!temporal_logic.defs.TempPred. x)))) :pattern ((has_type x (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) )))
(assert (forall ((T&. Dcr) (T& Type) (_pred! %%Function%%)) (! (=> (has_type (Poly%fun%1. _pred!) (TYPE%fun%1. $ (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&) $ BOOL)) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.TempPred./TempPred _pred!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.TempPred./TempPred _pred!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) )))
(assert (forall ((x fluent_controller!temporal_logic.defs.TempPred.)) (! (= (fluent_controller!temporal_logic.defs.TempPred./TempPred/pred x) (fluent_controller!temporal_logic.defs.TempPred./TempPred/?pred x)) :pattern ((fluent_controller!temporal_logic.defs.TempPred./TempPred/pred x)) )))
(assert (forall ((T&. Dcr) (T& Type) (x Poly)) (! (=> (has_type x (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&)) (has_type (Poly%fun%1. (fluent_controller!temporal_logic.defs.TempPred./TempPred/pred (%Poly%fluent_controller!temporal_logic.defs.TempPred. x))) (TYPE%fun%1. $ (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&) $ BOOL))) :pattern ((fluent_controller!temporal_logic.defs.TempPred./TempPred/pred (%Poly%fluent_controller!temporal_logic.defs.TempPred. x)) (has_type x (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) )))
(define-fun is-fluent_controller!temporal_logic.defs.TempPred./TempPred_ ((c fluent_controller!temporal_logic.defs.TempPred.)) Bool ((_ is fluent_controller!temporal_logic.defs.TempPred./TempPred) c))
(assert (forall ((x fluent_controller!temporal_logic.defs.TempPred.)) (! (=> (is-fluent_controller!temporal_logic.defs.TempPred./TempPred_ x) (height_lt (height (Poly%fun%1. (fluent_controller!temporal_logic.defs.TempPred./TempPred/pred x))) (height (Poly%fluent_controller!temporal_logic.defs.TempPred. x)))) :pattern ((height (Poly%fun%1. (fluent_controller!temporal_logic.defs.TempPred./TempPred/pred x)))) )))
(assert (forall ((x fluent_controller!temporal_logic.defs.TempPred.)) (! (=> (is-fluent_controller!temporal_logic.defs.TempPred./TempPred_ x) (height_lt (height (fun_from_recursive_field (Poly%fun%1. (fluent_controller!temporal_logic.defs.TempPred./TempPred/pred x)))) (height (Poly%fluent_controller!temporal_logic.defs.TempPred. x)))) :pattern ((height (fun_from_recursive_field (Poly%fun%1. (fluent_controller!temporal_logic.defs.TempPred./TempPred/pred x))))) )))
(assert (forall ((x tuple%0.)) (! (= x (%Poly%tuple%0. (Poly%tuple%0. x))) :pattern ((Poly%tuple%0. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%tuple%0.) (= x (Poly%tuple%0. (%Poly%tuple%0. x)))) :pattern ((has_type x TYPE%tuple%0.)) )))
(assert (forall ((x tuple%0.)) (! (has_type (Poly%tuple%0. x) TYPE%tuple%0.) :pattern ((has_type (Poly%tuple%0. x) TYPE%tuple%0.)) )))
(assert (forall ((x tuple%2.)) (! (= x (%Poly%tuple%2. (Poly%tuple%2. x))) :pattern ((Poly%tuple%2. x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x Poly)) (! (=> (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (= x (Poly%tuple%2. (%Poly%tuple%2. x)))) :pattern ((has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (_0! Poly) (_1! Poly)) (! (=> (and (has_type _0! T%0&) (has_type _1! T%1&)) (has_type (Poly%tuple%2. (tuple%2./tuple%2 _0! _1!)) (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) :pattern ((has_type (Poly%tuple%2. (tuple%2./tuple%2 _0! _1!)) (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((x tuple%2.)) (! (= (tuple%2./tuple%2/0 x) (tuple%2./tuple%2/?0 x)) :pattern ((tuple%2./tuple%2/0 x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x Poly)) (! (=> (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (has_type (tuple%2./tuple%2/0 (%Poly%tuple%2. x)) T%0&)) :pattern ((tuple%2./tuple%2/0 (%Poly%tuple%2. x)) (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((x tuple%2.)) (! (= (tuple%2./tuple%2/1 x) (tuple%2./tuple%2/?1 x)) :pattern ((tuple%2./tuple%2/1 x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x Poly)) (! (=> (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (has_type (tuple%2./tuple%2/1 (%Poly%tuple%2. x)) T%1&)) :pattern ((tuple%2./tuple%2/1 (%Poly%tuple%2. x)) (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) )))
(define-fun is-tuple%2./tuple%2_ ((c tuple%2.)) Bool ((_ is tuple%2./tuple%2) c))
(assert (forall ((x tuple%2.)) (! (=> (is-tuple%2./tuple%2_ x) (height_lt (height (tuple%2./tuple%2/0 x)) (height (Poly%tuple%2. x)))) :pattern ((height (tuple%2./tuple%2/0 x))) )))
(assert (forall ((x tuple%2.)) (! (=> (is-tuple%2./tuple%2_ x) (height_lt (height (tuple%2./tuple%2/1 x)) (height (Poly%tuple%2. x)))) :pattern ((height (tuple%2./tuple%2/1 x))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (has_type y (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (ext_eq deep T%0& (tuple%2./tuple%2/0 (%Poly%tuple%2. x)) (tuple%2./tuple%2/0 (%Poly%tuple%2. y))) (ext_eq deep T%1& (tuple%2./tuple%2/1 (%Poly%tuple%2. x)) (tuple%2./tuple%2/1 (%Poly%tuple%2. y)))) (ext_eq deep (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&) x y)) :pattern ((ext_eq deep (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&) x y)) )))
(assert (forall ((x tuple%3.)) (! (= x (%Poly%tuple%3. (Poly%tuple%3. x))) :pattern ((Poly%tuple%3. x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%2&. Dcr) (T%2& Type) (x Poly)) (! (=> (has_type x (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&)) (= x (Poly%tuple%3. (%Poly%tuple%3. x)))) :pattern ((has_type x (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%2&. Dcr) (T%2& Type) (_0! Poly) (_1! Poly) (_2! Poly)) (! (=> (and (has_type _0! T%0&) (has_type _1! T%1&) (has_type _2! T%2&)) (has_type (Poly%tuple%3. (tuple%3./tuple%3 _0! _1! _2!)) (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&))) :pattern ((has_type (Poly%tuple%3. (tuple%3./tuple%3 _0! _1! _2!)) (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&))) )))
(assert (forall ((x tuple%3.)) (! (= (tuple%3./tuple%3/0 x) (tuple%3./tuple%3/?0 x)) :pattern ((tuple%3./tuple%3/0 x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%2&. Dcr) (T%2& Type) (x Poly)) (! (=> (has_type x (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&)) (has_type (tuple%3./tuple%3/0 (%Poly%tuple%3. x)) T%0&)) :pattern ((tuple%3./tuple%3/0 (%Poly%tuple%3. x)) (has_type x (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&))) )))
(assert (forall ((x tuple%3.)) (! (= (tuple%3./tuple%3/1 x) (tuple%3./tuple%3/?1 x)) :pattern ((tuple%3./tuple%3/1 x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%2&. Dcr) (T%2& Type) (x Poly)) (! (=> (has_type x (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&)) (has_type (tuple%3./tuple%3/1 (%Poly%tuple%3. x)) T%1&)) :pattern ((tuple%3./tuple%3/1 (%Poly%tuple%3. x)) (has_type x (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&))) )))
(assert (forall ((x tuple%3.)) (! (= (tuple%3./tuple%3/2 x) (tuple%3./tuple%3/?2 x)) :pattern ((tuple%3./tuple%3/2 x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%2&. Dcr) (T%2& Type) (x Poly)) (! (=> (has_type x (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&)) (has_type (tuple%3./tuple%3/2 (%Poly%tuple%3. x)) T%2&)) :pattern ((tuple%3./tuple%3/2 (%Poly%tuple%3. x)) (has_type x (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&))) )))
(define-fun is-tuple%3./tuple%3_ ((c tuple%3.)) Bool ((_ is tuple%3./tuple%3) c))
(assert (forall ((x tuple%3.)) (! (=> (is-tuple%3./tuple%3_ x) (height_lt (height (tuple%3./tuple%3/0 x)) (height (Poly%tuple%3. x)))) :pattern ((height (tuple%3./tuple%3/0 x))) )))
(assert (forall ((x tuple%3.)) (! (=> (is-tuple%3./tuple%3_ x) (height_lt (height (tuple%3./tuple%3/1 x)) (height (Poly%tuple%3. x)))) :pattern ((height (tuple%3./tuple%3/1 x))) )))
(assert (forall ((x tuple%3.)) (! (=> (is-tuple%3./tuple%3_ x) (height_lt (height (tuple%3./tuple%3/2 x)) (height (Poly%tuple%3. x)))) :pattern ((height (tuple%3./tuple%3/2 x))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%2&. Dcr) (T%2& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&)) (has_type y (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&)) (ext_eq deep T%0& (tuple%3./tuple%3/0 (%Poly%tuple%3. x)) (tuple%3./tuple%3/0 (%Poly%tuple%3. y))) (ext_eq deep T%1& (tuple%3./tuple%3/1 (%Poly%tuple%3. x)) (tuple%3./tuple%3/1 (%Poly%tuple%3. y))) (ext_eq deep T%2& (tuple%3./tuple%3/2 (%Poly%tuple%3. x)) (tuple%3./tuple%3/2 (%Poly%tuple%3. y)))) (ext_eq deep (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&) x y)) :pattern ((ext_eq deep (TYPE%tuple%3. T%0&. T%0& T%1&. T%1& T%2&. T%2&) x y)) )))
(set-info :comment ";; Traits")
(declare-fun tr_bound%vstd!std_specs.option.OptionAdditionalFns. (Dcr Type Dcr Type) Bool)
(declare-fun tr_bound%vstd!std_specs.result.ResultAdditionalSpecFns. (Dcr Type Dcr Type Dcr Type) Bool)
(declare-fun tr_bound%fluent_controller!external_api.spec.ExternalAPI. (Dcr Type) Bool)
(declare-fun tr_bound%fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker. (Dcr Type) Bool)
(declare-fun tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. (Dcr Type) Bool)
(declare-fun tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.CustomResourceView. (Dcr Type) Bool)
(declare-fun tr_bound%fluent_controller!reconciler.spec.reconciler.Reconciler. (Dcr Type Dcr Type Dcr Type) Bool)
(declare-fun tr_bound%fluent_controller!reconciler.spec.resource_builder.ResourceBuilder. (Dcr Type Dcr Type Dcr Type) Bool)
(set-info :comment ";; Associated-Type-Impls")
(assert (= (proj%%fluent_controller!external_api.spec.ExternalAPI./Input $ TYPE%fluent_controller!external_api.spec.EmptyAPI.) $))
(assert (= (proj%fluent_controller!external_api.spec.ExternalAPI./Input $ TYPE%fluent_controller!external_api.spec.EmptyAPI.) TYPE%fluent_controller!external_api.spec.EmptyTypeView.))
(assert (= (proj%%fluent_controller!external_api.spec.ExternalAPI./Output $ TYPE%fluent_controller!external_api.spec.EmptyAPI.) $))
(assert (= (proj%fluent_controller!external_api.spec.ExternalAPI./Output $ TYPE%fluent_controller!external_api.spec.EmptyAPI.) TYPE%fluent_controller!external_api.spec.EmptyTypeView.))
(assert (= (proj%%fluent_controller!external_api.spec.ExternalAPI./State $ TYPE%fluent_controller!external_api.spec.EmptyAPI.) $))
(assert (= (proj%fluent_controller!external_api.spec.ExternalAPI./State $ TYPE%fluent_controller!external_api.spec.EmptyAPI.) TYPE%fluent_controller!external_api.spec.EmptyTypeView.))
(assert (= (proj%%fluent_controller!reconciler.spec.reconciler.Reconciler./T $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI.) $))
(assert (= (proj%fluent_controller!reconciler.spec.reconciler.Reconciler./T $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI.) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) $ TYPE%tuple%0.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.) (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.)) $ TYPE%tuple%0.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.) TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. $ (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)))))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.) (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) $ TYPE%tuple%0.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.) TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.) (TYPE%tuple%2. $ (TYPE%core!option.Option. $ BOOL) $ TYPE%tuple%0.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.) TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)))
(set-info :comment ";; Function-Decl vstd::std_specs::option::OptionAdditionalFns::is_Some")
(declare-fun vstd!std_specs.option.OptionAdditionalFns.is_Some.? (Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.option.OptionAdditionalFns.is_Some%default%.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::option::OptionAdditionalFns::get_Some_0")
(declare-fun vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? (Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.option.OptionAdditionalFns.get_Some_0%default%.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::option::OptionAdditionalFns::is_None")
(declare-fun vstd!std_specs.option.OptionAdditionalFns.is_None.? (Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.option.OptionAdditionalFns.is_None%default%.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::result::ResultAdditionalSpecFns::is_Ok")
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok%default%.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::result::ResultAdditionalSpecFns::get_Ok_0")
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0%default%.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::result::ResultAdditionalSpecFns::get_Err_0")
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.get_Err_0.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.get_Err_0%default%.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::empty")
(declare-fun vstd!map.impl&%0.empty.? (Dcr Type Dcr Type) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::new")
(declare-fun vstd!map.impl&%0.new.? (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::dom")
(declare-fun vstd!map.impl&%0.dom.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::index")
(declare-fun vstd!map.impl&%0.index.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::spec_index")
(declare-fun vstd!map.impl&%0.spec_index.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::insert")
(declare-fun vstd!map.impl&%0.insert.? (Dcr Type Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::remove")
(declare-fun vstd!map.impl&%0.remove.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::len")
(declare-fun vstd!map.impl&%0.len.? (Dcr Type Dcr Type Poly) Int)
(set-info :comment ";; Function-Decl vstd::map_lib::impl&%0::contains_key")
(declare-fun vstd!map_lib.impl&%0.contains_key.? (Dcr Type Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl vstd::map_lib::impl&%0::contains_value")
(declare-fun vstd!map_lib.impl&%0.contains_value.? (Dcr Type Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl vstd::map_lib::impl&%0::values")
(declare-fun vstd!map_lib.impl&%0.values.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map_lib::impl&%0::union_prefer_right")
(declare-fun vstd!map_lib.impl&%0.union_prefer_right.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::multiset::impl&%0::count")
(declare-fun vstd!multiset.impl&%0.count.? (Dcr Type Poly Poly) Int)
(set-info :comment ";; Function-Decl vstd::multiset::impl&%0::len")
(declare-fun vstd!multiset.impl&%0.len.? (Dcr Type Poly) Int)
(set-info :comment ";; Function-Decl vstd::multiset::impl&%0::empty")
(declare-fun vstd!multiset.impl&%0.empty.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl vstd::multiset::impl&%0::from_map")
(declare-fun vstd!multiset.impl&%0.from_map.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::multiset::impl&%0::singleton")
(declare-fun vstd!multiset.impl&%0.singleton.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::multiset::impl&%0::add")
(declare-fun vstd!multiset.impl&%0.add.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::multiset::impl&%0::sub")
(declare-fun vstd!multiset.impl&%0.sub.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::multiset::impl&%0::remove")
(declare-fun vstd!multiset.impl&%0.remove.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::multiset::impl&%0::subset_of")
(declare-fun vstd!multiset.impl&%0.subset_of.? (Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl vstd::multiset::impl&%0::filter")
(declare-fun vstd!multiset.impl&%0.filter.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::multiset::impl&%0::choose")
(declare-fun vstd!multiset.impl&%0.choose.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::multiset::impl&%0::contains")
(declare-fun vstd!multiset.impl&%0.contains.? (Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl vstd::multiset::impl&%0::dom")
(declare-fun vstd!multiset.impl&%0.dom.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::pervasive::arbitrary")
(declare-fun vstd!pervasive.arbitrary.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::empty")
(declare-fun vstd!seq.Seq.empty.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::new")
(declare-fun vstd!seq.Seq.new.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::len")
(declare-fun vstd!seq.Seq.len.? (Dcr Type Poly) Int)
(set-info :comment ";; Function-Decl vstd::seq::Seq::index")
(declare-fun vstd!seq.Seq.index.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::impl&%0::spec_index")
(declare-fun vstd!seq.impl&%0.spec_index.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::push")
(declare-fun vstd!seq.Seq.push.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::update")
(declare-fun vstd!seq.Seq.update.? (Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::subrange")
(declare-fun vstd!seq.Seq.subrange.? (Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::add")
(declare-fun vstd!seq.Seq.add.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::impl&%0::spec_add")
(declare-fun vstd!seq.impl&%0.spec_add.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq_lib::impl&%0::map_values")
(declare-fun vstd!seq_lib.impl&%0.map_values.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq_lib::impl&%0::filter")
(declare-fun vstd!seq_lib.impl&%0.filter.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq_lib::impl&%0::contains")
(declare-fun vstd!seq_lib.impl&%0.contains.? (Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl vstd::seq_lib::impl&%0::to_set")
(declare-fun vstd!seq_lib.impl&%0.to_set.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::empty")
(declare-fun vstd!set.impl&%0.empty.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::new")
(declare-fun vstd!set.impl&%0.new.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::contains")
(declare-fun vstd!set.impl&%0.contains.? (Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::subset_of")
(declare-fun vstd!set.impl&%0.subset_of.? (Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::insert")
(declare-fun vstd!set.impl&%0.insert.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::remove")
(declare-fun vstd!set.impl&%0.remove.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::union")
(declare-fun vstd!set.impl&%0.union.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::intersect")
(declare-fun vstd!set.impl&%0.intersect.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::difference")
(declare-fun vstd!set.impl&%0.difference.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::complement")
(declare-fun vstd!set.impl&%0.complement.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::filter")
(declare-fun vstd!set.impl&%0.filter.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::finite")
(declare-fun vstd!set.impl&%0.finite.? (Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::len")
(declare-fun vstd!set.impl&%0.len.? (Dcr Type Poly) Int)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::choose")
(declare-fun vstd!set.impl&%0.choose.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::mk_map")
(declare-fun vstd!set.impl&%0.mk_map.? (Dcr Type Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set_lib::impl&%0::is_empty")
(declare-fun vstd!set_lib.impl&%0.is_empty.? (Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl vstd::set_lib::impl&%0::to_seq")
(declare-fun vstd!set_lib.impl&%0.to_seq.? (Dcr Type Poly) Poly)
(declare-fun vstd!set_lib.impl&%0.rec%to_seq.? (Dcr Type Poly Fuel) Poly)
(set-info :comment ";; Function-Decl vstd::string::impl&%0::view")
(declare-fun vstd!string.impl&%0.view.? (Poly) Poly)
(set-info :comment ";; Function-Decl vstd::string::impl&%0::is_ascii")
(declare-fun vstd!string.impl&%0.is_ascii.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::common::make_base_labels")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::common::make_labels")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::common::make_owner_references")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_daemon_set_key")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.? (Poly) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_daemon_set_name")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::update_daemon_set")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_daemon_set")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? (Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_fluentbit_pod_spec")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.? (Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_env")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.? (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::role::make_role_name")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_name.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::role::make_role_key")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_key.? (Poly) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::role::update_role")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.role.update_role.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.role.RoleView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::role::make_role")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role.? (Poly) fluent_controller!kubernetes_api_objects.spec.role.RoleView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::role_binding::make_role_binding_name")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_name.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::role_binding::make_role_binding_key")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_key.? (Poly) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::role_binding::update_role_binding")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.update_role_binding.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::role_binding::make_role_binding")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding.? (Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::service::make_service_name")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_name.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::service::make_service_key")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_key.? (Poly) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::service::update_service")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.service.update_service.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::service::make_service")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service.? (Poly) fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::service::make_service_port")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_port.? (Poly) fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::service_account::make_service_account_name")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::service_account::make_service_account_key")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_key.? (Poly) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::service_account::update_service_account")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.service_account.update_service_account.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::service_account::make_service_account")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account.? (Poly) fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::the_object_in_reconcile_satisfies_state_validation")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.the_object_in_reconcile_satisfies_state_validation.? (Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref.? (Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::every_resource_create_request_implies_at_after_create_resource_step")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_create_request_implies_at_after_create_resource_step.? (Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::every_resource_update_request_implies_at_after_update_resource_step")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step.? (Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::resource_object_only_has_owner_reference_pointing_to_current_cr")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_only_has_owner_reference_pointing_to_current_cr.? (Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::no_delete_resource_request_msg_in_flight")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight.? (Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::daemon_set_not_exists_or_matches_or_no_more_status_update")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update.? (Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::validation::certain_fields_of_daemon_set_stay_unchanged")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.certain_fields_of_daemon_set_stay_unchanged.? (Poly Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::validation::daemon_set_in_etcd_satisfies_unchangeable")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.daemon_set_in_etcd_satisfies_unchangeable.? (Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::reconciler::reconcile_init_state")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_init_state.? (Poly) fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::reconciler::reconcile_done")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_done.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::reconciler::reconcile_error")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_error.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::reconciler::reconcile_core")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_core.? (Poly Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::reconciler::get_secret_req")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.reconciler.get_secret_req.? (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::reconciler::reconcile_helper")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper.? (Dcr Type Poly Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::predicate::sub_resource_state_matches")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::predicate::at_fb_step")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step.? (Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::predicate::at_fb_step_with_fb")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb.? (Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::predicate::after_get_k_request_step")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.? (Poly) fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::predicate::after_update_k_request_step")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.predicate.after_update_k_request_step.? (Poly) fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::predicate::next_resource_after")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.predicate.next_resource_after.? (Poly) fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::predicate::pending_req_in_flight_at_after_get_resource_step")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.? (Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::predicate::req_msg_is_the_in_flight_pending_req_at_after_get_resource_step")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step.? (Poly Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::predicate::req_msg_is_the_in_flight_pending_req_at_after_get_resource_step_and_key_exists")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step_and_key_exists.? (Poly Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::predicate::at_after_get_resource_step_and_exists_ok_resp_in_flight")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.predicate.at_after_get_resource_step_and_exists_ok_resp_in_flight.? (Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::predicate::resp_msg_is_the_in_flight_ok_resp_at_after_get_resource_step")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.predicate.resp_msg_is_the_in_flight_ok_resp_at_after_get_resource_step.? (Poly Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::predicate::pending_req_in_flight_at_after_update_resource_step")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_update_resource_step.? (Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::predicate::req_msg_is_the_in_flight_pending_req_at_after_update_resource_step")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_update_resource_step.? (Poly Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::resource::get_request")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::resource::make")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.resource.make.? (Poly Poly Poly) core!result.Result.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::proof::resource::update")
(declare-fun fluent_controller!fluent_controller.fluentbit.proof.resource.update.? (Poly Poly Poly Poly) core!result.Result.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::liveness_theorem::desired_secret_key")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_secret_key.? (Poly) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::liveness_theorem::desired_state_is")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_state_is.? (Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::liveness_theorem::resource_state_matches")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.resource_state_matches.? (Dcr Type Poly Poly Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_service_account_key")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account_key.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account_key%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_role_key")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_key.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_key%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_role_binding_key")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding_key.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding_key%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_service_key")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_key.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_key%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_daemon_set_key")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set_key.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set_key%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_service_account")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_role")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_role_binding")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_service")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_daemon_set")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::controller_owner_ref")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? (Poly) fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::step::FluentBitReconcileStep::get_AfterKRequestStep_1")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.step.impl&%0.get_AfterKRequestStep_1.? (Poly) fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::unmarshallable_spec")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_spec.? (Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::unmarshallable_status")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_status.? (Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::unmarshallable_object")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_object.? (Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::metadata_validity_check")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_validity_check.? (Poly) core!option.Option.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::metadata_transition_validity_check")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_transition_validity_check.? (Poly Poly) core!option.Option.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::valid_object")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_object.? (Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::object_validity_check")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_validity_check.? (Dcr Type Poly) core!option.Option.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::valid_transition")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_transition.? (Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::object_transition_validity_check")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_transition_validity_check.? (Dcr Type Poly Poly) core!option.Option.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::marshalled_default_status")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.marshalled_default_status.? (Dcr Type Poly) fluent_controller!kubernetes_api_objects.spec.marshal.Value.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::handle_get_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_get_request.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::handle_list_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_list_request.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::create_request_admission_check")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.create_request_admission_check.? (Dcr Type Poly Poly) core!option.Option.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::created_object_validity_check")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.created_object_validity_check.? (Dcr Type Poly) core!option.Option.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::handle_create_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_create_request.? (Dcr Type Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::deletion_timestamp")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.deletion_timestamp.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::handle_delete_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_delete_request.? (Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::allow_unconditional_update")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.allow_unconditional_update.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::update_request_admission_check_helper")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check_helper.? (Dcr Type Poly Poly Poly Poly) core!option.Option.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::update_request_admission_check")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check.? (Dcr Type Poly Poly) core!option.Option.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::updated_object")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::updated_object_validity_check")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.? (Dcr Type Poly Poly) core!option.Option.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::handle_update_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_request.? (Dcr Type Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::update_status_request_admission_check")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_status_request_admission_check.? (Dcr Type Poly Poly) core!option.Option.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::status_updated_object")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.status_updated_object.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::api_server::state_machine::handle_update_status_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_status_request.? (Dcr Type Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_get_request_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_get_request_msg.? (Dcr Type Dcr Type Dcr Type Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_list_request_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_list_request_msg.? (Dcr Type Dcr Type Dcr Type Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_create_request_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_create_request_msg.? (Dcr Type Dcr Type Dcr Type Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_delete_request_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_delete_request_msg.? (Dcr Type Dcr Type Dcr Type Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_update_request_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_request_msg.? (Dcr Type Dcr Type Dcr Type Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_update_status_request_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_status_request_msg.? (Dcr Type Dcr Type Dcr Type Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::transition_by_etcd")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.transition_by_etcd.? (Dcr Type Dcr Type Dcr Type Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_request.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::kubernetes_api")
(declare-fun fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.kubernetes_api.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.state_machine.StateMachine.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::run_daemon_set_controller")
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.daemon_set_controller.impl&%0.run_daemon_set_controller.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::run_garbage_collector")
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.garbage_collector.impl&%0.run_garbage_collector.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::run_stabilizer")
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.stabilizer.impl&%0.run_stabilizer.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::builtin_controllers")
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.state_machine.impl&%0.builtin_controllers.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.state_machine.StateMachine.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::run_stateful_set_controller")
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.stateful_set_controller.impl&%0.run_stateful_set_controller.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::builtin_controllers::types::BuiltinControllerChoice::is_GarbageCollector")
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_GarbageCollector.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::builtin_controllers::types::BuiltinControllerChoice::is_StatefulSetController")
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_StatefulSetController.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::builtin_controllers::types::BuiltinControllerChoice::get_StatefulSetController_ready_replicas")
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_StatefulSetController_ready_replicas.? (Poly) Int)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::builtin_controllers::types::BuiltinControllerChoice::is_DaemonSetController")
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_DaemonSetController.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::builtin_controllers::types::BuiltinControllerChoice::get_DaemonSetController_number_ready")
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_DaemonSetController_number_ready.? (Poly) Int)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::builtin_controllers::types::BuiltinControllerChoice::is_Stabilizer")
(declare-fun fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_Stabilizer.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::create_custom_resource")
(declare-fun fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.create_custom_resource.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::delete_custom_resource")
(declare-fun fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.delete_custom_resource.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::update_custom_resource")
(declare-fun fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.update_custom_resource.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::client")
(declare-fun fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.client.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.state_machine.StateMachine.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::run_scheduled_reconcile")
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.run_scheduled_reconcile.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::continue_reconcile")
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.continue_reconcile.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::end_reconcile")
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.end_reconcile.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::init_controller_state")
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.init_controller_state.? (Dcr Type Dcr Type Dcr Type) fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::controller")
(declare-fun fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.controller.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.state_machine.StateMachine.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_external_request_helper")
(declare-fun fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request_helper.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_external_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::external_api")
(declare-fun fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.external_api.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.state_machine.StateMachine.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::deliver")
(declare-fun fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.deliver.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::network")
(declare-fun fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.state_machine.NetworkStateMachine.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::is_GetRequest")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_GetRequest.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::get_GetRequest_0")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_GetRequest_0.? (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::is_ListRequest")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_ListRequest.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::get_ListRequest_0")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_ListRequest_0.? (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::is_CreateRequest")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_CreateRequest.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::get_CreateRequest_0")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_CreateRequest_0.? (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::is_DeleteRequest")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_DeleteRequest.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::get_DeleteRequest_0")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_DeleteRequest_0.? (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::is_UpdateRequest")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateRequest.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::get_UpdateRequest_0")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateRequest_0.? (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::is_UpdateStatusRequest")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateStatusRequest.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::get_UpdateStatusRequest_0")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateStatusRequest_0.? (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::UpdateRequest::key")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.? (Poly) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::UpdateStatusRequest::key")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key.? (Poly) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIResponse::is_GetResponse")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_GetResponse.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIResponse::get_GetResponse_0")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_GetResponse_0.? (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIResponse::is_CreateResponse")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_CreateResponse.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIResponse::get_CreateResponse_0")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_CreateResponse_0.? (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIResponse::is_UpdateResponse")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_UpdateResponse.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::api_method::APIResponse::get_UpdateResponse_0")
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_UpdateResponse_0.? (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::common::Kind::is_CustomResourceKind")
(declare-fun fluent_controller!kubernetes_api_objects.spec.common.impl&%7.is_CustomResourceKind.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerPortView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerPortView::set_container_port")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerPortView::set_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::VolumeMountView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::EnvVarView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::EnvVarSourceView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::set_metadata")
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::set_spec")
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetSpecView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetSpecView::set_selector")
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetSpecView::set_template")
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::dynamic::DynamicObjectView::object_ref")
(declare-fun fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? (Poly) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::dynamic::DynamicObjectView::set_namespace")
(declare-fun fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_namespace.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::dynamic::DynamicObjectView::set_resource_version")
(declare-fun fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::dynamic::DynamicObjectView::set_deletion_timestamp")
(declare-fun fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_deletion_timestamp.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::label_selector::LabelSelectorView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::label_selector::LabelSelectorView::set_match_labels")
(declare-fun fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::owner_references_only_contains")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? (Poly Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_labels")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_annotations")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_owner_references")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::finalizers_as_set")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.finalizers_as_set.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::well_formed")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.well_formed.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::owner_reference::owner_reference_to_object_reference")
(declare-fun fluent_controller!kubernetes_api_objects.spec.owner_reference.owner_reference_to_object_reference.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::set_metadata")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::set_spec")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? (Dcr Type) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default%default%.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::metadata")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::kind")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? (Dcr Type) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind%default%.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::object_ref")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::spec")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::status")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal_spec")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal_spec")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal_status")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal_status")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::state_validation")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::transition_validation")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? (Dcr Type Poly Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation%default%.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::empty_status")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.empty_status.? (Poly) fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::role::PolicyRuleView::state_validation")
(declare-fun fluent_controller!kubernetes_api_objects.spec.role.impl&%2.state_validation.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::set_metadata")
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_metadata.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::set_role_ref")
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_role_ref.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::set_subjects")
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_subjects.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::role_binding::RoleRefView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::role_binding::RoleRefView::set_api_group")
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_api_group.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::role_binding::RoleRefView::set_kind")
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_kind.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::role_binding::RoleRefView::set_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::role_binding::SubjectView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::role_binding::SubjectView::set_kind")
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_kind.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::role_binding::SubjectView::set_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::role_binding::SubjectView::set_namespace")
(declare-fun fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_namespace.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::service::ServiceSpecView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.service.impl&%2.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::service::ServicePortView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.service.impl&%3.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::set_host_path")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::set_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::set_secret")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::HostPathVolumeSourceView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::HostPathVolumeSourceView::set_path")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::SecretVolumeSourceView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::SecretVolumeSourceView::set_secret_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::ObjectFieldSelectorView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::desired_state_is")
(declare-fun fluent_controller!kubernetes_cluster.proof.cluster.impl&%0.desired_state_is.? (Dcr Type Dcr Type Dcr Type Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::valid_object_except_k")
(declare-fun fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.valid_object_except_k.? (Dcr Type Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::etcd_object_is_well_formed")
(declare-fun fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.etcd_object_is_well_formed.? (Dcr Type Dcr Type Dcr Type Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::each_object_in_etcd_is_well_formed")
(declare-fun fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed.? (Dcr Type Dcr Type Dcr Type) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::each_object_in_reconcile_has_consistent_key_and_valid_metadata")
(declare-fun fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_reconcile_has_consistent_key_and_valid_metadata.? (Dcr Type Dcr Type Dcr Type) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::has_pending_k8s_api_req_msg")
(declare-fun fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.has_pending_k8s_api_req_msg.? (Dcr Type Dcr Type Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::pending_req_msg_is")
(declare-fun fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.pending_req_msg_is.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::pending_req_of_key_is_unique_with_unique_id")
(declare-fun fluent_controller!kubernetes_cluster.proof.message.impl&%0.pending_req_of_key_is_unique_with_unique_id.? (Dcr Type Dcr Type Dcr Type Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::every_in_flight_msg_has_unique_id")
(declare-fun fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id.? (Dcr Type Dcr Type Dcr Type) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::in_flight")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.in_flight.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::resources")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.resources.? (Dcr Type Dcr Type Dcr Type Poly) vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::stable_resources")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.stable_resources.? (Dcr Type Dcr Type Dcr Type Poly) vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::ongoing_reconciles")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.ongoing_reconciles.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::kubernetes_api_next")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::builtin_controllers_next")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.builtin_controllers_next.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::external_api_next")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.external_api_next.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::controller_next")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::schedule_controller_reconcile")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.schedule_controller_reconcile.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::restart_controller")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.restart_controller.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::disable_crash")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_crash.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::fail_request_transiently")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.fail_request_transiently.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::disable_transient_failure")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_transient_failure.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::client_next")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.client_next.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::stutter")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.stutter.? (Dcr Type Dcr Type Dcr Type) fluent_controller!state_machine.action.Action.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::next_step")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next_step.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::next")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next.? (Dcr Type Dcr Type Dcr Type) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::kubernetes_api_action_pre")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_action_pre.? (Dcr Type Dcr Type Dcr Type Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::controller_action_pre")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_action_pre.? (Dcr Type Dcr Type Dcr Type Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::crash_disabled")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled.? (Dcr Type Dcr Type Dcr Type) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::cluster::Cluster::busy_disabled")
(declare-fun fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled.? (Dcr Type Dcr Type Dcr Type) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::HostId::is_ApiServer")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%0.is_ApiServer.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::RestIdAllocator::allocate")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly) tuple%2.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_APIRequest")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIRequest.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_APIRequest_0")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIRequest_0.? (Dcr Type Dcr Type Poly) fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_APIResponse")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIResponse.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_APIResponse_0")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIResponse_0.? (Dcr Type Dcr Type Poly) fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_ExternalAPIRequest")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIRequest.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_ExternalAPIRequest_0")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIRequest_0.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_ExternalAPIResponse")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIResponse.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_ExternalAPIResponse_0")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIResponse_0.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_get_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_request.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_get_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_request.? (Dcr Type Dcr Type Poly) fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_list_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_list_request.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_list_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_list_request.? (Dcr Type Dcr Type Poly) fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_create_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_create_request.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_create_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request.? (Dcr Type Dcr Type Poly) fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_delete_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_delete_request.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_delete_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request.? (Dcr Type Dcr Type Poly) fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_update_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_request.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_update_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? (Dcr Type Dcr Type Poly) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_update_status_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_status_request.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_update_status_request")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request.? (Dcr Type Dcr Type Poly) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_get_response")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_response.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_get_response")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.? (Dcr Type Dcr Type Poly) fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_rest_id")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? (Dcr Type Dcr Type Poly) Int)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::controller_req_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_req_msg.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::controller_external_req_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_external_req_msg.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::built_in_controller_req_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.built_in_controller_req_msg.? (Dcr Type Dcr Type Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::client_req_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.client_req_msg.? (Dcr Type Dcr Type Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::resp_msg_matches_req_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.resp_msg_matches_req_msg.? (Dcr Type Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::form_matched_err_resp_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_matched_err_resp_msg.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::form_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? (Dcr Type Dcr Type Poly Poly Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::form_get_resp_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::form_list_resp_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::form_create_resp_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::form_delete_resp_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::form_update_resp_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::form_update_status_resp_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::form_external_resp_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_external_resp_msg.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.Message.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::create_req_msg_content")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_req_msg_content.? (Dcr Type Dcr Type Poly Poly Poly) fluent_controller!kubernetes_cluster.spec.message.MessageContent.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::delete_req_msg_content")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_req_msg_content.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.MessageContent.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::update_req_msg_content")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_req_msg_content.? (Dcr Type Dcr Type Poly Poly Poly Poly) fluent_controller!kubernetes_cluster.spec.message.MessageContent.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::update_status_req_msg_content")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_req_msg_content.? (Dcr Type Dcr Type Poly Poly Poly Poly) fluent_controller!kubernetes_cluster.spec.message.MessageContent.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::get_resp_msg_content")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.get_resp_msg_content.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.MessageContent.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::list_resp_msg_content")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.list_resp_msg_content.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.MessageContent.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::create_resp_msg_content")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_resp_msg_content.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.MessageContent.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::delete_resp_msg_content")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_resp_msg_content.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.MessageContent.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::update_resp_msg_content")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_resp_msg_content.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.MessageContent.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::update_status_resp_msg_content")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_resp_msg_content.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.MessageContent.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::Message::external_resp_msg_content")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.impl&%5.external_resp_msg_content.? (Dcr Type Dcr Type Poly Poly) fluent_controller!kubernetes_cluster.spec.message.MessageContent.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::received_msg_destined_for")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.received_msg_destined_for.? (Dcr Type Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::resource_create_request_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.resource_create_request_msg.? (Dcr Type Dcr Type Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::resource_update_status_request_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.resource_update_status_request_msg.? (Dcr Type Dcr Type Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::resource_update_request_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.resource_update_request_msg.? (Dcr Type Dcr Type Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_cluster::spec::message::resource_delete_request_msg")
(declare-fun fluent_controller!kubernetes_cluster.spec.message.resource_delete_request_msg.? (Dcr Type Dcr Type Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::io::ResponseView::is_KResponse")
(declare-fun fluent_controller!reconciler.spec.io.impl&%3.is_KResponse.? (Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::io::ResponseView::get_KResponse_0")
(declare-fun fluent_controller!reconciler.spec.io.impl&%3.get_KResponse_0.? (Dcr Type Poly) fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::reconciler::Reconciler::reconcile_init_state")
(declare-fun fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_init_state.? (Dcr Type Dcr Type Dcr Type) Poly)
(declare-fun fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_init_state%default%.? (Dcr Type Dcr Type Dcr Type) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::reconciler::Reconciler::reconcile_core")
(declare-fun fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_core.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_core%default%.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::reconciler::Reconciler::reconcile_done")
(declare-fun fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_done.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_done%default%.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::reconciler::Reconciler::reconcile_error")
(declare-fun fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_error.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_error%default%.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::reconciler::Reconciler::expect_from_user")
(declare-fun fluent_controller!reconciler.spec.reconciler.Reconciler.expect_from_user.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.reconciler.Reconciler.expect_from_user%default%.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::get_request")
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request%default%.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::make")
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? (Dcr Type Dcr Type Dcr Type Poly Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make%default%.? (Dcr Type Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::update")
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update%default%.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::state_after_create")
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create%default%.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::state_after_update")
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update%default%.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::external_api::spec::ExternalAPI::transition")
(declare-fun fluent_controller!external_api.spec.ExternalAPI.transition.? (Dcr Type Poly Poly Poly) Poly)
(declare-fun fluent_controller!external_api.spec.ExternalAPI.transition%default%.? (Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::external_api::spec::ExternalAPI::init_state")
(declare-fun fluent_controller!external_api.spec.ExternalAPI.init_state.? (Dcr Type) Poly)
(declare-fun fluent_controller!external_api.spec.ExternalAPI.init_state%default%.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::error::APIError::is_Conflict")
(declare-fun fluent_controller!kubernetes_api_objects.error.impl&%0.is_Conflict.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::error::APIError::is_ObjectNotFound")
(declare-fun fluent_controller!kubernetes_api_objects.error.impl&%0.is_ObjectNotFound.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::error::APIError::is_Timeout")
(declare-fun fluent_controller!kubernetes_api_objects.error.impl&%0.is_Timeout.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::error::APIError::is_ServerTimeout")
(declare-fun fluent_controller!kubernetes_api_objects.error.impl&%0.is_ServerTimeout.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::state_machine::state_machine::StateMachine::next_result")
(declare-fun fluent_controller!state_machine.state_machine.impl&%0.next_result.? (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly) fluent_controller!state_machine.action.ActionResult.)
(set-info :comment ";; Function-Decl fluent_controller::state_machine::state_machine::StateMachine::next_action_result")
(declare-fun fluent_controller!state_machine.state_machine.impl&%0.next_action_result.? (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly Poly) fluent_controller!state_machine.action.ActionResult.)
(set-info :comment ";; Function-Decl fluent_controller::state_machine::state_machine::NetworkStateMachine::next_result")
(declare-fun fluent_controller!state_machine.state_machine.impl&%1.next_result.? (Dcr Type Dcr Type Poly Poly Poly) fluent_controller!state_machine.action.ActionResult.)
(set-info :comment ";; Function-Decl fluent_controller::state_machine::action::Action::pre")
(declare-fun fluent_controller!state_machine.action.impl&%0.pre.? (Dcr Type Dcr Type Dcr Type Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::state_machine::action::Action::forward")
(declare-fun fluent_controller!state_machine.action.impl&%0.forward.? (Dcr Type Dcr Type Dcr Type Poly Poly) %%Function%%)
(set-info :comment ";; Function-Decl fluent_controller::state_machine::action::Action::weak_fairness")
(declare-fun fluent_controller!state_machine.action.impl&%0.weak_fairness.? (Dcr Type Dcr Type Dcr Type Poly Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::state_machine::action::ActionResult::is_Enabled")
(declare-fun fluent_controller!state_machine.action.impl&%1.is_Enabled.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::state_machine::action::ActionResult::get_Enabled_0")
(declare-fun fluent_controller!state_machine.action.impl&%1.get_Enabled_0.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::state_machine::action::ActionResult::get_Enabled_1")
(declare-fun fluent_controller!state_machine.action.impl&%1.get_Enabled_1.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::Execution::head")
(declare-fun fluent_controller!temporal_logic.defs.impl&%0.head.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::Execution::head_next")
(declare-fun fluent_controller!temporal_logic.defs.impl&%0.head_next.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::Execution::suffix")
(declare-fun fluent_controller!temporal_logic.defs.impl&%0.suffix.? (Dcr Type Poly Poly) fluent_controller!temporal_logic.defs.Execution.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::TempPred::new")
(declare-fun fluent_controller!temporal_logic.defs.impl&%1.new.? (Dcr Type Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::TempPred::satisfied_by")
(declare-fun fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? (Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::TempPred::and")
(declare-fun fluent_controller!temporal_logic.defs.impl&%1.and.? (Dcr Type Poly Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::TempPred::or")
(declare-fun fluent_controller!temporal_logic.defs.impl&%1.or.? (Dcr Type Poly Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::TempPred::implies")
(declare-fun fluent_controller!temporal_logic.defs.impl&%1.implies.? (Dcr Type Poly Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::TempPred::equals")
(declare-fun fluent_controller!temporal_logic.defs.impl&%1.equals.? (Dcr Type Poly Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::TempPred::leads_to")
(declare-fun fluent_controller!temporal_logic.defs.impl&%1.leads_to.? (Dcr Type Poly Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::TempPred::entails")
(declare-fun fluent_controller!temporal_logic.defs.impl&%1.entails.? (Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::lift_state")
(declare-fun fluent_controller!temporal_logic.defs.lift_state.? (Dcr Type Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::lift_action")
(declare-fun fluent_controller!temporal_logic.defs.lift_action.? (Dcr Type Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::always")
(declare-fun fluent_controller!temporal_logic.defs.always.? (Dcr Type Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::eventually")
(declare-fun fluent_controller!temporal_logic.defs.eventually.? (Dcr Type Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::later")
(declare-fun fluent_controller!temporal_logic.defs.later.? (Dcr Type Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::tla_forall")
(declare-fun fluent_controller!temporal_logic.defs.tla_forall.? (Dcr Type Dcr Type Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::tla_exists")
(declare-fun fluent_controller!temporal_logic.defs.tla_exists.? (Dcr Type Dcr Type Poly) fluent_controller!temporal_logic.defs.TempPred.)
(set-info :comment ";; Function-Decl fluent_controller::temporal_logic::defs::valid")
(declare-fun fluent_controller!temporal_logic.defs.valid.? (Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::vstd_ext::map_lib::map_to_seq")
(declare-fun fluent_controller!vstd_ext.map_lib.map_to_seq.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::default")
(assert (forall ((Self%&. Dcr) (Self%& Type)) (! (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? Self%&. Self%&) Self%&) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? Self%&. Self%&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::metadata")
(assert (forall ((Self%&. Dcr) (Self%& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? Self%&. Self%& self!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? Self%&. Self%& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::kind")
(assert (forall ((Self%&. Dcr) (Self%& Type)) (! (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? Self%&. Self%&) TYPE%fluent_controller!kubernetes_api_objects.spec.common.Kind.) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? Self%&. Self%&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::object_ref")
(assert (forall ((Self%&. Dcr) (Self%& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? Self%&. Self%& self!) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? Self%&. Self%& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::OptionAdditionalFns::is_Some")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.option.OptionAdditionalFns.is_Some.? Self%&. Self%& T&. T& self!) BOOL)) :pattern ((vstd!std_specs.option.OptionAdditionalFns.is_Some.? Self%&. Self%& T&. T& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::OptionAdditionalFns::get_Some_0")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? Self%&. Self%& T&. T& self!) T&)) :pattern ((vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? Self%&. Self%& T&. T& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::OptionAdditionalFns::is_None")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.option.OptionAdditionalFns.is_None.? Self%&. Self%& T&. T& self!) BOOL)) :pattern ((vstd!std_specs.option.OptionAdditionalFns.is_None.? Self%&. Self%& T&. T& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::impl&%0::get_Some_0")
(assert (fuel_bool_default fuel%vstd!std_specs.option.impl&%0.get_Some_0.))
(assert (=> (fuel_bool fuel%vstd!std_specs.option.impl&%0.get_Some_0.) (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (= (vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!) (core!option.Option./Some/0 (%Poly%core!option.Option. self!))) :pattern ((vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::spec")
(assert (forall ((Self%&. Dcr) (Self%& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? Self%&. Self%& self!) (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec Self%&. Self%&))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? Self%&. Self%& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::status")
(assert (forall ((Self%&. Dcr) (Self%& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? Self%&. Self%& self!) (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status Self%&. Self%&))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? Self%&. Self%& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal")
(assert (forall ((Self%&. Dcr) (Self%& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? Self%&. Self%& self!) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? Self%&. Self%& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal")
(assert (forall ((Self%&. Dcr) (Self%& Type) (obj! Poly)) (! (=> (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? Self%&. Self%& obj!) (TYPE%core!result.Result. Self%&. Self%& $ TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? Self%&. Self%& obj!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::ResultAdditionalSpecFns::is_Ok")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? Self%&. Self%& T&. T& E&. E& self!) BOOL)) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? Self%&. Self%& T&. T& E&. E& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::ResultAdditionalSpecFns::get_Ok_0")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? Self%&. Self%& T&. T& E&. E& self!) T&)) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? Self%&. Self%& T&. T& E&. E& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::ResultAdditionalSpecFns::get_Err_0")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.result.ResultAdditionalSpecFns.get_Err_0.? Self%&. Self%& T&. T& E&. E& self!) E&)) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.get_Err_0.? Self%&. Self%& T&. T& E&. E& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::impl&%0::is_Ok")
(assert (fuel_bool_default fuel%vstd!std_specs.result.impl&%0.is_Ok.))
(assert (=> (fuel_bool fuel%vstd!std_specs.result.impl&%0.is_Ok.) (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (= (vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. self!)))) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::impl&%0::get_Ok_0")
(assert (fuel_bool_default fuel%vstd!std_specs.result.impl&%0.get_Ok_0.))
(assert (=> (fuel_bool fuel%vstd!std_specs.result.impl&%0.get_Ok_0.) (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (= (vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!) (core!result.Result./Ok/0 (%Poly%core!result.Result. self!))) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!)) ))))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal_preserves_integrity")
(declare-fun ens%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_preserves_integrity. (Dcr Type) Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type)) (! (= (ens%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_preserves_integrity. Self%&. Self%&) (forall ((o$ Poly)) (! (=> (has_type o$ Self%&) (and (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? Self%&. Self%& (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? Self%&. Self%& o$)))))) (= o$ (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? Self%&. Self%& (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? Self%&. Self%& o$))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? Self%&. Self%& o$)) ))) :pattern ((ens%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_preserves_integrity. Self%&. Self%&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal_spec")
(assert (forall ((Self%&. Dcr) (Self%& Type) (s! Poly)) (! (=> (has_type s! (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec Self%&. Self%&)) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? Self%&. Self%& s!) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? Self%&. Self%& s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal_spec")
(assert (forall ((Self%&. Dcr) (Self%& Type) (v! Poly)) (! (=> (has_type v! TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? Self%&. Self%& v!) (TYPE%core!result.Result. (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec Self%&. Self%&) (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec Self%&. Self%&) $ TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? Self%&. Self%& v!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal_status")
(assert (forall ((Self%&. Dcr) (Self%& Type) (s! Poly)) (! (=> (has_type s! (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status Self%&. Self%&)) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? Self%&. Self%& s!) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? Self%&. Self%& s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal_status")
(assert (forall ((Self%&. Dcr) (Self%& Type) (v! Poly)) (! (=> (has_type v! TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? Self%&. Self%& v!) (TYPE%core!result.Result. (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status Self%&. Self%&) (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status Self%&. Self%&) $ TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? Self%&. Self%& v!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::state_validation")
(assert (forall ((Self%&. Dcr) (Self%& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? Self%&. Self%& self!) BOOL)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? Self%&. Self%& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::transition_validation")
(assert (forall ((Self%&. Dcr) (Self%& Type) (self! Poly) (old_obj! Poly)) (! (=> (and (has_type self! Self%&) (has_type old_obj! Self%&)) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? Self%&. Self%& self! old_obj!) BOOL)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? Self%&. Self%& self! old_obj!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::get_request")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly)) (! (=> (has_type cr! K&) (has_type (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? Self%&. Self%& K&. K& T&. T& cr!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? Self%&. Self%& K&. K& T&. T& cr!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::make")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly) (state! Poly)) (! (=> (and (has_type cr! K&) (has_type state! T&)) (has_type (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? Self%&. Self%& K&. K& T&. T& cr! state!) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%tuple%0.))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? Self%&. Self%& K&. K& T&. T& cr! state!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::update")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly) (state! Poly) (obj! Poly)) (! (=> (and (has_type cr! K&) (has_type state! T&) (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? Self%&. Self%& K&. K& T&. T& cr! state! obj!) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%tuple%0.))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? Self%&. Self%& K&. K& T&. T& cr! state! obj!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::state_after_create")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly) (obj! Poly) (state! Poly)) (! (=> (and (has_type cr! K&) (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type state! T&)) (has_type (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? Self%&. Self%& K&. K& T&. T& cr! obj! state!) (TYPE%core!result.Result. $ (TYPE%tuple%2. T&. T& $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) $ TYPE%tuple%0.))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? Self%&. Self%& K&. K& T&. T& cr! obj! state!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::state_after_update")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly) (obj! Poly) (state! Poly)) (! (=> (and (has_type cr! K&) (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type state! T&)) (has_type (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? Self%&. Self%& K&. K& T&. T& cr! obj! state!) (TYPE%core!result.Result. $ (TYPE%tuple%2. T&. T& $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) $ TYPE%tuple%0.))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? Self%&. Self%& K&. K& T&. T& cr! obj! state!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::external_api::spec::ExternalAPI::transition")
(assert (forall ((Self%&. Dcr) (Self%& Type) (input! Poly) (resources! Poly) (state! Poly)) (! (=> (and (has_type input! (proj%fluent_controller!external_api.spec.ExternalAPI./Input Self%&. Self%&)) (has_type resources! (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type state! (proj%fluent_controller!external_api.spec.ExternalAPI./State Self%&. Self%&))) (has_type (fluent_controller!external_api.spec.ExternalAPI.transition.? Self%&. Self%& input! resources! state!) (TYPE%tuple%2. (proj%%fluent_controller!external_api.spec.ExternalAPI./State Self%&. Self%&) (proj%fluent_controller!external_api.spec.ExternalAPI./State Self%&. Self%&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output Self%&. Self%&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output Self%&. Self%&)))) :pattern ((fluent_controller!external_api.spec.ExternalAPI.transition.? Self%&. Self%& input! resources! state!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::external_api::spec::ExternalAPI::init_state")
(assert (forall ((Self%&. Dcr) (Self%& Type)) (! (has_type (fluent_controller!external_api.spec.ExternalAPI.init_state.? Self%&. Self%&) (proj%fluent_controller!external_api.spec.ExternalAPI./State Self%&. Self%&)) :pattern ((fluent_controller!external_api.spec.ExternalAPI.init_state.? Self%&. Self%&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::reconciler::Reconciler::reconcile_init_state")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (ExternalAPIType&. Dcr) (ExternalAPIType& Type)) (! (has_type (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_init_state.? Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType&) (proj%fluent_controller!reconciler.spec.reconciler.Reconciler./T Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType&)) :pattern ((fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_init_state.? Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::reconciler::Reconciler::reconcile_core")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (ExternalAPIType&. Dcr) (ExternalAPIType& Type) (cr! Poly) (resp_o! Poly) (state! Poly)) (! (=> (and (has_type cr! K&) (has_type resp_o! (TYPE%core!option.Option. $ (TYPE%fluent_controller!reconciler.spec.io.ResponseView. (proj%%fluent_controller!external_api.spec.ExternalAPI./Output ExternalAPIType&. ExternalAPIType&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output ExternalAPIType&. ExternalAPIType&)))) (has_type state! (proj%fluent_controller!reconciler.spec.reconciler.Reconciler./T Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType&))) (has_type (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_core.? Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType& cr! resp_o! state!) (TYPE%tuple%2. (proj%%fluent_controller!reconciler.spec.reconciler.Reconciler./T Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType&) (proj%fluent_controller!reconciler.spec.reconciler.Reconciler./T Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType&) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!reconciler.spec.io.RequestView. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input ExternalAPIType&. ExternalAPIType&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input ExternalAPIType&. ExternalAPIType&)))))) :pattern ((fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_core.? Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType& cr! resp_o! state!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::reconciler::Reconciler::reconcile_done")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (ExternalAPIType&. Dcr) (ExternalAPIType& Type) (state! Poly)) (! (=> (has_type state! (proj%fluent_controller!reconciler.spec.reconciler.Reconciler./T Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType&)) (has_type (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_done.? Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType& state!) BOOL)) :pattern ((fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_done.? Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType& state!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::reconciler::Reconciler::reconcile_error")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (ExternalAPIType&. Dcr) (ExternalAPIType& Type) (state! Poly)) (! (=> (has_type state! (proj%fluent_controller!reconciler.spec.reconciler.Reconciler./T Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType&)) (has_type (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_error.? Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType& state!) BOOL)) :pattern ((fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_error.? Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType& state!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::reconciler::Reconciler::expect_from_user")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (ExternalAPIType&. Dcr) (ExternalAPIType& Type) (obj! Poly)) (! (=> (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (fluent_controller!reconciler.spec.reconciler.Reconciler.expect_from_user.? Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType& obj!) BOOL)) :pattern ((fluent_controller!reconciler.spec.reconciler.Reconciler.expect_from_user.? Self%&. Self%& K&. K& ExternalAPIType&. ExternalAPIType& obj!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::impl&%0::is_None")
(assert (fuel_bool_default fuel%vstd!std_specs.option.impl&%0.is_None.))
(assert (=> (fuel_bool fuel%vstd!std_specs.option.impl&%0.is_None.) (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (= (vstd!std_specs.option.OptionAdditionalFns.is_None.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!) (B (is-core!option.Option./None_ (%Poly%core!option.Option. self!)))) :pattern ((vstd!std_specs.option.OptionAdditionalFns.is_None.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::impl&%0::is_Some")
(assert (fuel_bool_default fuel%vstd!std_specs.option.impl&%0.is_Some.))
(assert (=> (fuel_bool fuel%vstd!std_specs.option.impl&%0.is_Some.) (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (= (vstd!std_specs.option.OptionAdditionalFns.is_Some.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. self!)))) :pattern ((vstd!std_specs.option.OptionAdditionalFns.is_Some.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::impl&%0::get_Err_0")
(assert (fuel_bool_default fuel%vstd!std_specs.result.impl&%0.get_Err_0.))
(assert (=> (fuel_bool fuel%vstd!std_specs.result.impl&%0.get_Err_0.) (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (= (vstd!std_specs.result.ResultAdditionalSpecFns.get_Err_0.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!) (core!result.Result./Err/0 (%Poly%core!result.Result. self!))) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.get_Err_0.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::len")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (<= 0 (vstd!seq.Seq.len.? A&. A& self!))) :pattern ((vstd!seq.Seq.len.? A&. A& self!)) )))
(set-info :comment ";; Function-Specs vstd::seq::Seq::index")
(declare-fun req%vstd!seq.Seq.index. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%0 Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (= (req%vstd!seq.Seq.index. A&. A& self! i!) (=> %%global_location_label%%0 (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& self!))))) :pattern ((req%vstd!seq.Seq.index. A&. A& self! i!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::index")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (has_type (vstd!seq.Seq.index.? A&. A& self! i!) A&)) :pattern ((vstd!seq.Seq.index.? A&. A& self! i!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::empty")
(assert (forall ((A&. Dcr) (A& Type)) (! (has_type (vstd!seq.Seq.empty.? A&. A&) (TYPE%vstd!seq.Seq. A&. A&)) :pattern ((vstd!seq.Seq.empty.? A&. A&)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::push")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (a! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type a! A&)) (has_type (vstd!seq.Seq.push.? A&. A& self! a!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.push.? A&. A& self! a!)) )))
(set-info :comment ";; Function-Specs vstd::seq::impl&%0::spec_index")
(declare-fun req%vstd!seq.impl&%0.spec_index. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%1 Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (= (req%vstd!seq.impl&%0.spec_index. A&. A& self! i!) (=> %%global_location_label%%1 (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& self!))))) :pattern ((req%vstd!seq.impl&%0.spec_index. A&. A& self! i!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::impl&%0::spec_index")
(assert (fuel_bool_default fuel%vstd!seq.impl&%0.spec_index.))
(assert (=> (fuel_bool fuel%vstd!seq.impl&%0.spec_index.) (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (= (vstd!seq.impl&%0.spec_index.? A&. A& self! i!) (vstd!seq.Seq.index.? A&. A& self! i!)) :pattern ((vstd!seq.impl&%0.spec_index.? A&. A& self! i!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (has_type (vstd!seq.impl&%0.spec_index.? A&. A& self! i!) A&)) :pattern ((vstd!seq.impl&%0.spec_index.? A&. A& self! i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::Seq::subrange")
(declare-fun req%vstd!seq.Seq.subrange. (Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%2 Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (start_inclusive! Poly) (end_exclusive! Poly)) (! (= (req%vstd!seq.Seq.subrange. A&. A& self! start_inclusive! end_exclusive!) (=> %%global_location_label%%2 (and (and (<= 0 (%I start_inclusive!)) (<= (%I start_inclusive!) (%I end_exclusive!))) (<= (%I end_exclusive!) (vstd!seq.Seq.len.? A&. A& self!))))) :pattern ((req%vstd!seq.Seq.subrange. A&. A& self! start_inclusive! end_exclusive!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::subrange")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (start_inclusive! Poly) (end_exclusive! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type start_inclusive! INT) (has_type end_exclusive! INT)) (has_type (vstd!seq.Seq.subrange.? A&. A& self! start_inclusive! end_exclusive!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.subrange.? A&. A& self! start_inclusive! end_exclusive!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::add")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (rhs! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type rhs! (TYPE%vstd!seq.Seq. A&. A&))) (has_type (vstd!seq.Seq.add.? A&. A& self! rhs!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.add.? A&. A& self! rhs!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::impl&%0::spec_add")
(assert (fuel_bool_default fuel%vstd!seq.impl&%0.spec_add.))
(assert (=> (fuel_bool fuel%vstd!seq.impl&%0.spec_add.) (forall ((A&. Dcr) (A& Type) (self! Poly) (rhs! Poly)) (! (= (vstd!seq.impl&%0.spec_add.? A&. A& self! rhs!) (vstd!seq.Seq.add.? A&. A& self! rhs!)) :pattern ((vstd!seq.impl&%0.spec_add.? A&. A& self! rhs!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (rhs! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type rhs! (TYPE%vstd!seq.Seq. A&. A&))) (has_type (vstd!seq.impl&%0.spec_add.? A&. A& self! rhs!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.impl&%0.spec_add.? A&. A& self! rhs!)) )))
(set-info :comment ";; Function-Specs vstd::seq::Seq::update")
(declare-fun req%vstd!seq.Seq.update. (Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%3 Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly) (a! Poly)) (! (= (req%vstd!seq.Seq.update. A&. A& self! i! a!) (=> %%global_location_label%%3 (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& self!))))) :pattern ((req%vstd!seq.Seq.update. A&. A& self! i! a!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::update")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly) (a! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT) (has_type a! A&)) (has_type (vstd!seq.Seq.update.? A&. A& self! i! a!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.update.? A&. A& self! i! a!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::empty")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type)) (! (has_type (vstd!map.impl&%0.empty.? K&. K& V&. V&) (TYPE%vstd!map.Map. K&. K& V&. V&)) :pattern ((vstd!map.impl&%0.empty.? K&. K& V&. V&)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::dom")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) (TYPE%vstd!set.Set. K&. K&))) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& self!)) )))
(set-info :comment ";; Function-Specs vstd::map::impl&%0::index")
(declare-fun req%vstd!map.impl&%0.index. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%4 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (= (req%vstd!map.impl&%0.index. K&. K& V&. V& self! key!) (=> %%global_location_label%%4 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) key!))) :pattern ((req%vstd!map.impl&%0.index. K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::index")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (has_type (vstd!map.impl&%0.index.? K&. K& V&. V& self! key!) V&)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::insert")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly) (value! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&) (has_type value! V&)) (has_type (vstd!map.impl&%0.insert.? K&. K& V&. V& self! key! value!) (TYPE%vstd!map.Map. K&. K& V&. V&))) :pattern ((vstd!map.impl&%0.insert.? K&. K& V&. V& self! key! value!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::remove")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (has_type (vstd!map.impl&%0.remove.? K&. K& V&. V& self! key!) (TYPE%vstd!map.Map. K&. K& V&. V&))) :pattern ((vstd!map.impl&%0.remove.? K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Specs vstd::map::impl&%0::spec_index")
(declare-fun req%vstd!map.impl&%0.spec_index. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%5 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (= (req%vstd!map.impl&%0.spec_index. K&. K& V&. V& self! key!) (=> %%global_location_label%%5 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) key!))) :pattern ((req%vstd!map.impl&%0.spec_index. K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::spec_index")
(assert (fuel_bool_default fuel%vstd!map.impl&%0.spec_index.))
(assert (=> (fuel_bool fuel%vstd!map.impl&%0.spec_index.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (= (vstd!map.impl&%0.spec_index.? K&. K& V&. V& self! key!) (vstd!map.impl&%0.index.? K&. K& V&. V& self! key!)) :pattern ((vstd!map.impl&%0.spec_index.? K&. K& V&. V& self! key!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (has_type (vstd!map.impl&%0.spec_index.? K&. K& V&. V& self! key!) V&)) :pattern ((vstd!map.impl&%0.spec_index.? K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::subset_of")
(assert (fuel_bool_default fuel%vstd!set.impl&%0.subset_of.))
(assert (=> (fuel_bool fuel%vstd!set.impl&%0.subset_of.) (forall ((A&. Dcr) (A& Type) (self! Poly) (s2! Poly)) (! (= (vstd!set.impl&%0.subset_of.? A&. A& self! s2!) (forall ((a$ Poly)) (! (=> (has_type a$ A&) (=> (vstd!set.impl&%0.contains.? A&. A& self! a$) (vstd!set.impl&%0.contains.? A&. A& s2! a$))) :pattern ((vstd!set.impl&%0.contains.? A&. A& self! a$)) :pattern ((vstd!set.impl&%0.contains.? A&. A& s2! a$)) ))) :pattern ((vstd!set.impl&%0.subset_of.? A&. A& self! s2!)) ))))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::mk_map")
(assert (forall ((A&. Dcr) (A& Type) (V&. Dcr) (V& Type) (F&. Dcr) (F& Type) (self! Poly) (f! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type f! F&)) (has_type (vstd!set.impl&%0.mk_map.? A&. A& V&. V& F&. F& self! f!) (TYPE%vstd!map.Map. A&. A& V&. V&))) :pattern ((vstd!set.impl&%0.mk_map.? A&. A& V&. V& F&. F& self! f!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::new")
(assert (forall ((A&. Dcr) (A& Type) (F&. Dcr) (F& Type) (f! Poly)) (! (=> (has_type f! F&) (has_type (vstd!set.impl&%0.new.? A&. A& F&. F& f!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.new.? A&. A& F&. F& f!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::new")
(assert (fuel_bool_default fuel%vstd!map.impl&%0.new.))
(assert (=> (fuel_bool fuel%vstd!map.impl&%0.new.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (impl%2&. Dcr) (impl%2& Type) (impl%3&. Dcr) (impl%3& Type) (fk! Poly) (fv! Poly)) (! (= (vstd!map.impl&%0.new.? K&. K& V&. V& impl%2&. impl%2& impl%3&. impl%3& fk! fv!) (vstd!set.impl&%0.mk_map.? K&. K& V&. V& impl%3&. impl%3& (vstd!set.impl&%0.new.? K&. K& impl%2&. impl%2& fk!) fv!)) :pattern ((vstd!map.impl&%0.new.? K&. K& V&. V& impl%2&. impl%2& impl%3&. impl%3& fk! fv!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (impl%2&. Dcr) (impl%2& Type) (impl%3&. Dcr) (impl%3& Type) (fk! Poly) (fv! Poly)) (! (=> (and (has_type fk! impl%2&) (has_type fv! impl%3&)) (has_type (vstd!map.impl&%0.new.? K&. K& V&. V& impl%2&. impl%2& impl%3&. impl%3& fk! fv!) (TYPE%vstd!map.Map. K&. K& V&. V&))) :pattern ((vstd!map.impl&%0.new.? K&. K& V&. V& impl%2&. impl%2& impl%3&. impl%3& fk! fv!)) )))
(set-info :comment ";; Function-Axioms vstd::map_lib::impl&%0::union_prefer_right")
(assert (fuel_bool_default fuel%vstd!map_lib.impl&%0.union_prefer_right.))
(declare-fun %%lambda%%0 (Dcr Type Poly Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Poly) (k$ Poly)) (! (= (%%apply%%0 (%%lambda%%0 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) k$) (B (or (vstd!set.impl&%0.contains.? %%hole%%0 %%hole%%1 %%hole%%2 k$) (vstd!set.impl&%0.contains.? %%hole%%3 %%hole%%4 %%hole%%5 k$)))) :pattern ((%%apply%%0 (%%lambda%%0 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) k$)))))
(declare-fun %%lambda%%1 (Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Dcr) (%%hole%%6 Type) (%%hole%%7 Poly) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Poly) (k$ Poly)) (! (= (%%apply%%0 (%%lambda%%1 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) k$) (ite (vstd!set.impl&%0.contains.? %%hole%%0 %%hole%%1 %%hole%%2 k$) (vstd!map.impl&%0.index.? %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 k$) (vstd!map.impl&%0.index.? %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 k$))) :pattern ((%%apply%%0 (%%lambda%%1 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) k$)))))
(assert (=> (fuel_bool fuel%vstd!map_lib.impl&%0.union_prefer_right.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (m2! Poly)) (! (= (vstd!map_lib.impl&%0.union_prefer_right.? K&. K& V&. V& self! m2!) (vstd!map.impl&%0.new.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& $ BOOL) $ (TYPE%fun%1. K&. K& V&. V&) (Poly%fun%1. (mk_fun (%%lambda%%0 K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)))) (Poly%fun%1. (mk_fun (%%lambda%%1 K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!) K&. K& V&. V& m2! K&. K& V&. V& self!))))) :pattern ((vstd!map_lib.impl&%0.union_prefer_right.? K&. K& V&. V& self! m2!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (m2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type m2! (TYPE%vstd!map.Map. K&. K& V&. V&))) (has_type (vstd!map_lib.impl&%0.union_prefer_right.? K&. K& V&. V& self! m2!) (TYPE%vstd!map.Map. K&. K& V&. V&))) :pattern ((vstd!map_lib.impl&%0.union_prefer_right.? K&. K& V&. V& self! m2!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_index_decreases_finite")
(declare-fun req%vstd!map.axiom_map_index_decreases_finite. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%6 Bool)
(declare-const %%global_location_label%%7 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (req%vstd!map.axiom_map_index_decreases_finite. K&. K& V&. V& m! key!) (and (=> %%global_location_label%%6 (vstd!set.impl&%0.finite.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!))) (=> %%global_location_label%%7 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!)))) :pattern ((req%vstd!map.axiom_map_index_decreases_finite. K&. K& V&. V& m! key!)) )))
(declare-fun ens%vstd!map.axiom_map_index_decreases_finite. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (ens%vstd!map.axiom_map_index_decreases_finite. K&. K& V&. V& m! key!) (height_lt (height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!)) (height m!))) :pattern ((ens%vstd!map.axiom_map_index_decreases_finite. K&. K& V&. V& m! key!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_index_decreases_finite")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (=> (and (vstd!set.impl&%0.finite.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!)) (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!)) (height_lt (height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!)) (height m!)))) :pattern ((height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!))) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_index_decreases_infinite")
(declare-fun req%vstd!map.axiom_map_index_decreases_infinite. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%8 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (req%vstd!map.axiom_map_index_decreases_infinite. K&. K& V&. V& m! key!) (=> %%global_location_label%%8 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((req%vstd!map.axiom_map_index_decreases_infinite. K&. K& V&. V& m! key!)) )))
(declare-fun ens%vstd!map.axiom_map_index_decreases_infinite. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (ens%vstd!map.axiom_map_index_decreases_infinite. K&. K& V&. V& m! key!) (height_lt (height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!)) (height (fun_from_recursive_field m!)))) :pattern ((ens%vstd!map.axiom_map_index_decreases_infinite. K&. K& V&. V& m! key!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_index_decreases_infinite")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!) (height_lt (height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!)) (height (fun_from_recursive_field m!))))) :pattern ((height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!))) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::empty")
(assert (forall ((A&. Dcr) (A& Type)) (! (has_type (vstd!set.impl&%0.empty.? A&. A&) (TYPE%vstd!set.Set. A&. A&)) :pattern ((vstd!set.impl&%0.empty.? A&. A&)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_empty")
(declare-fun ens%vstd!map.axiom_map_empty. (Dcr Type Dcr Type) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type)) (! (= (ens%vstd!map.axiom_map_empty. K&. K& V&. V&) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.empty.? K&. K& V&. V&)) (vstd!set.impl&%0.empty.? K&. K&))) :pattern ((ens%vstd!map.axiom_map_empty. K&. K& V&. V&)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_empty")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type)) (! (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.empty.? K&. K& V&. V&)) (vstd!set.impl&%0.empty.? K&. K&)) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.empty.? K&. K& V&. V&))) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::insert")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (a! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (has_type (vstd!set.impl&%0.insert.? A&. A& self! a!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.insert.? A&. A& self! a!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_insert_domain")
(declare-fun ens%vstd!map.axiom_map_insert_domain. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly) (value! Poly)) (! (= (ens%vstd!map.axiom_map_insert_domain. K&. K& V&. V& m! key! value!) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!)) (vstd!set.impl&%0.insert.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((ens%vstd!map.axiom_map_insert_domain. K&. K& V&. V& m! key! value!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_insert_domain")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly) (value! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&) (has_type value! V&)) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!)) (vstd!set.impl&%0.insert.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!))) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_insert_same")
(declare-fun ens%vstd!map.axiom_map_insert_same. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly) (value! Poly)) (! (= (ens%vstd!map.axiom_map_insert_same. K&. K& V&. V& m! key! value!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!) key!) value!)) :pattern ((ens%vstd!map.axiom_map_insert_same. K&. K& V&. V& m! key! value!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_insert_same")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly) (value! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&) (has_type value! V&)) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!) key!) value!)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!) key!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_insert_different")
(declare-fun req%vstd!map.axiom_map_insert_different. (Dcr Type Dcr Type Poly Poly Poly Poly) Bool)
(declare-const %%global_location_label%%9 Bool)
(declare-const %%global_location_label%%10 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly) (value! Poly)) (! (= (req%vstd!map.axiom_map_insert_different. K&. K& V&. V& m! key1! key2! value!) (and (=> %%global_location_label%%9 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key1!)) (=> %%global_location_label%%10 (not (= key1! key2!))))) :pattern ((req%vstd!map.axiom_map_insert_different. K&. K& V&. V& m! key1! key2! value!)) )))
(declare-fun ens%vstd!map.axiom_map_insert_different. (Dcr Type Dcr Type Poly Poly Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly) (value! Poly)) (! (= (ens%vstd!map.axiom_map_insert_different. K&. K& V&. V& m! key1! key2! value!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key2! value!) key1!) (vstd!map.impl&%0.index.? K&. K& V&. V& m! key1!))) :pattern ((ens%vstd!map.axiom_map_insert_different. K&. K& V&. V& m! key1! key2! value!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_insert_different")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly) (value! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key1! K&) (has_type key2! K&) (has_type value! V&)) (=> (and (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key1!) (not (= key1! key2!))) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key2! value!) key1!) (vstd!map.impl&%0.index.? K&. K& V&. V& m! key1!)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key2! value!) key1!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::remove")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (a! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (has_type (vstd!set.impl&%0.remove.? A&. A& self! a!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.remove.? A&. A& self! a!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_remove_domain")
(declare-fun ens%vstd!map.axiom_map_remove_domain. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (ens%vstd!map.axiom_map_remove_domain. K&. K& V&. V& m! key!) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key!)) (vstd!set.impl&%0.remove.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((ens%vstd!map.axiom_map_remove_domain. K&. K& V&. V& m! key!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_remove_domain")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key!)) (vstd!set.impl&%0.remove.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key!))) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_remove_different")
(declare-fun req%vstd!map.axiom_map_remove_different. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%11 Bool)
(declare-const %%global_location_label%%12 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly)) (! (= (req%vstd!map.axiom_map_remove_different. K&. K& V&. V& m! key1! key2!) (and (=> %%global_location_label%%11 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key1!)) (=> %%global_location_label%%12 (not (= key1! key2!))))) :pattern ((req%vstd!map.axiom_map_remove_different. K&. K& V&. V& m! key1! key2!)) )))
(declare-fun ens%vstd!map.axiom_map_remove_different. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly)) (! (= (ens%vstd!map.axiom_map_remove_different. K&. K& V&. V& m! key1! key2!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key2!) key1!) (vstd!map.impl&%0.index.? K&. K& V&. V& m! key1!))) :pattern ((ens%vstd!map.axiom_map_remove_different. K&. K& V&. V& m! key1! key2!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_remove_different")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key1! K&) (has_type key2! K&)) (=> (and (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key1!) (not (= key1! key2!))) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key2!) key1!) (vstd!map.impl&%0.index.? K&. K& V&. V& m! key1!)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key2!) key1!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_ext_equal")
(declare-fun ens%vstd!map.axiom_map_ext_equal. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (= (ens%vstd!map.axiom_map_ext_equal. K&. K& V&. V& m1! m2!) (= (ext_eq false (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!) (and (ext_eq false (TYPE%vstd!set.Set. K&. K&) (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)) (forall ((k$ Poly)) (! (=> (has_type k$ K&) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) k$) (= (vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$) (vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)) ))))) :pattern ((ens%vstd!map.axiom_map_ext_equal. K&. K& V&. V& m1! m2!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_ext_equal")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (=> (and (has_type m1! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type m2! (TYPE%vstd!map.Map. K&. K& V&. V&))) (= (ext_eq false (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!) (and (ext_eq false (TYPE%vstd!set.Set. K&. K&) (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)) (forall ((k$ Poly)) (! (=> (has_type k$ K&) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) k$) (= (vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$) (vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)) ))))) :pattern ((ext_eq false (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_ext_equal_deep")
(declare-fun ens%vstd!map.axiom_map_ext_equal_deep. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (= (ens%vstd!map.axiom_map_ext_equal_deep. K&. K& V&. V& m1! m2!) (= (ext_eq true (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!) (and (ext_eq true (TYPE%vstd!set.Set. K&. K&) (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)) (forall ((k$ Poly)) (! (=> (has_type k$ K&) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) k$) (ext_eq true V& (vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$) (vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)) ))))) :pattern ((ens%vstd!map.axiom_map_ext_equal_deep. K&. K& V&. V& m1! m2!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_ext_equal_deep")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (=> (and (has_type m1! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type m2! (TYPE%vstd!map.Map. K&. K& V&. V&))) (= (ext_eq true (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!) (and (ext_eq true (TYPE%vstd!set.Set. K&. K&) (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)) (forall ((k$ Poly)) (! (=> (has_type k$ K&) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) k$) (ext_eq true V& (vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$) (vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)) ))))) :pattern ((ext_eq true (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!)) )))
(set-info :comment ";; Function-Axioms vstd::multiset::impl&%0::count")
(assert (forall ((V&. Dcr) (V& Type) (self! Poly) (value! Poly)) (! (=> (and (has_type self! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type value! V&)) (<= 0 (vstd!multiset.impl&%0.count.? V&. V& self! value!))) :pattern ((vstd!multiset.impl&%0.count.? V&. V& self! value!)) )))
(set-info :comment ";; Function-Axioms vstd::multiset::impl&%0::len")
(assert (forall ((V&. Dcr) (V& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!multiset.Multiset. V&. V&)) (<= 0 (vstd!multiset.impl&%0.len.? V&. V& self!))) :pattern ((vstd!multiset.impl&%0.len.? V&. V& self!)) )))
(set-info :comment ";; Function-Axioms vstd::multiset::impl&%0::empty")
(assert (forall ((V&. Dcr) (V& Type)) (! (has_type (vstd!multiset.impl&%0.empty.? V&. V&) (TYPE%vstd!multiset.Multiset. V&. V&)) :pattern ((vstd!multiset.impl&%0.empty.? V&. V&)) )))
(set-info :comment ";; Function-Axioms vstd::multiset::impl&%0::from_map")
(assert (forall ((V&. Dcr) (V& Type) (m! Poly)) (! (=> (has_type m! (TYPE%vstd!map.Map. V&. V& $ NAT)) (has_type (vstd!multiset.impl&%0.from_map.? V&. V& m!) (TYPE%vstd!multiset.Multiset. V&. V&))) :pattern ((vstd!multiset.impl&%0.from_map.? V&. V& m!)) )))
(set-info :comment ";; Function-Axioms vstd::multiset::impl&%0::singleton")
(assert (forall ((V&. Dcr) (V& Type) (v! Poly)) (! (=> (has_type v! V&) (has_type (vstd!multiset.impl&%0.singleton.? V&. V& v!) (TYPE%vstd!multiset.Multiset. V&. V&))) :pattern ((vstd!multiset.impl&%0.singleton.? V&. V& v!)) )))
(set-info :comment ";; Function-Axioms vstd::multiset::impl&%0::add")
(assert (forall ((V&. Dcr) (V& Type) (self! Poly) (m2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type m2! (TYPE%vstd!multiset.Multiset. V&. V&))) (has_type (vstd!multiset.impl&%0.add.? V&. V& self! m2!) (TYPE%vstd!multiset.Multiset. V&. V&))) :pattern ((vstd!multiset.impl&%0.add.? V&. V& self! m2!)) )))
(set-info :comment ";; Function-Axioms vstd::multiset::impl&%0::sub")
(assert (forall ((V&. Dcr) (V& Type) (self! Poly) (m2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type m2! (TYPE%vstd!multiset.Multiset. V&. V&))) (has_type (vstd!multiset.impl&%0.sub.? V&. V& self! m2!) (TYPE%vstd!multiset.Multiset. V&. V&))) :pattern ((vstd!multiset.impl&%0.sub.? V&. V& self! m2!)) )))
(set-info :comment ";; Function-Axioms vstd::multiset::impl&%0::filter")
(assert (forall ((V&. Dcr) (V& Type) (impl%1&. Dcr) (impl%1& Type) (self! Poly) (f! Poly)) (! (=> (and (has_type self! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type f! impl%1&)) (has_type (vstd!multiset.impl&%0.filter.? V&. V& impl%1&. impl%1& self! f!) (TYPE%vstd!multiset.Multiset. V&. V&))) :pattern ((vstd!multiset.impl&%0.filter.? V&. V& impl%1&. impl%1& self! f!)) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_multiset_empty")
(declare-fun ens%vstd!multiset.axiom_multiset_empty. (Dcr Type Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (v! Poly)) (! (= (ens%vstd!multiset.axiom_multiset_empty. V&. V& v!) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.empty.? V&. V&) v!) 0)) :pattern ((ens%vstd!multiset.axiom_multiset_empty. V&. V& v!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_multiset_empty")
(assert (forall ((V&. Dcr) (V& Type) (v! Poly)) (! (=> (has_type v! V&) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.empty.? V&. V&) v!) 0)) :pattern ((vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.empty.? V&. V&) v!)) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_multiset_contained")
(declare-fun req%vstd!multiset.axiom_multiset_contained. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%13 Bool)
(declare-const %%global_location_label%%14 Bool)
(assert (forall ((V&. Dcr) (V& Type) (m! Poly) (v! Poly)) (! (= (req%vstd!multiset.axiom_multiset_contained. V&. V& m! v!) (and (=> %%global_location_label%%13 (vstd!set.impl&%0.finite.? V&. V& (vstd!map.impl&%0.dom.? V&. V& $ NAT m!))) (=> %%global_location_label%%14 (vstd!set.impl&%0.contains.? V&. V& (vstd!map.impl&%0.dom.? V&. V& $ NAT m!) v!)))) :pattern ((req%vstd!multiset.axiom_multiset_contained. V&. V& m! v!)) )))
(declare-fun ens%vstd!multiset.axiom_multiset_contained. (Dcr Type Poly Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (m! Poly) (v! Poly)) (! (= (ens%vstd!multiset.axiom_multiset_contained. V&. V& m! v!) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.from_map.? V&. V& m!) v!) (%I (vstd!map.impl&%0.index.? V&. V& $ NAT m! v!)))) :pattern ((ens%vstd!multiset.axiom_multiset_contained. V&. V& m! v!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_multiset_contained")
(assert (forall ((V&. Dcr) (V& Type) (m! Poly) (v! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. V&. V& $ NAT)) (has_type v! V&)) (=> (and (vstd!set.impl&%0.finite.? V&. V& (vstd!map.impl&%0.dom.? V&. V& $ NAT m!)) (vstd!set.impl&%0.contains.? V&. V& (vstd!map.impl&%0.dom.? V&. V& $ NAT m!) v!)) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.from_map.? V&. V& m!) v!) (%I (vstd!map.impl&%0.index.? V&. V& $ NAT m! v!))))) :pattern ((vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.from_map.? V&. V& m!) v!)) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_multiset_new_not_contained")
(declare-fun req%vstd!multiset.axiom_multiset_new_not_contained. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%15 Bool)
(declare-const %%global_location_label%%16 Bool)
(assert (forall ((V&. Dcr) (V& Type) (m! Poly) (v! Poly)) (! (= (req%vstd!multiset.axiom_multiset_new_not_contained. V&. V& m! v!) (and (=> %%global_location_label%%15 (vstd!set.impl&%0.finite.? V&. V& (vstd!map.impl&%0.dom.? V&. V& $ NAT m!))) (=> %%global_location_label%%16 (not (vstd!set.impl&%0.contains.? V&. V& (vstd!map.impl&%0.dom.? V&. V& $ NAT m!) v!))))) :pattern ((req%vstd!multiset.axiom_multiset_new_not_contained. V&. V& m! v!)) )))
(declare-fun ens%vstd!multiset.axiom_multiset_new_not_contained. (Dcr Type Poly Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (m! Poly) (v! Poly)) (! (= (ens%vstd!multiset.axiom_multiset_new_not_contained. V&. V& m! v!) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.from_map.? V&. V& m!) v!) 0)) :pattern ((ens%vstd!multiset.axiom_multiset_new_not_contained. V&. V& m! v!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_multiset_new_not_contained")
(assert (forall ((V&. Dcr) (V& Type) (m! Poly) (v! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. V&. V& $ NAT)) (has_type v! V&)) (=> (and (vstd!set.impl&%0.finite.? V&. V& (vstd!map.impl&%0.dom.? V&. V& $ NAT m!)) (not (vstd!set.impl&%0.contains.? V&. V& (vstd!map.impl&%0.dom.? V&. V& $ NAT m!) v!))) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.from_map.? V&. V& m!) v!) 0))) :pattern ((vstd!set.impl&%0.contains.? V&. V& (vstd!map.impl&%0.dom.? V&. V& $ NAT m!) v!)) :pattern ((vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.from_map.? V&. V& m!) v!)) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_multiset_singleton")
(declare-fun ens%vstd!multiset.axiom_multiset_singleton. (Dcr Type Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (v! Poly)) (! (= (ens%vstd!multiset.axiom_multiset_singleton. V&. V& v!) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.singleton.? V&. V& v!) v!) 1)) :pattern ((ens%vstd!multiset.axiom_multiset_singleton. V&. V& v!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_multiset_singleton")
(assert (forall ((V&. Dcr) (V& Type) (v! Poly)) (! (=> (has_type v! V&) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.singleton.? V&. V& v!) v!) 1)) :pattern ((vstd!multiset.impl&%0.singleton.? V&. V& v!)) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_multiset_singleton_different")
(declare-fun ens%vstd!multiset.axiom_multiset_singleton_different. (Dcr Type Poly Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (v! Poly) (w! Poly)) (! (= (ens%vstd!multiset.axiom_multiset_singleton_different. V&. V& v! w!) (=> (not (= v! w!)) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.singleton.? V&. V& v!) w!) 0))) :pattern ((ens%vstd!multiset.axiom_multiset_singleton_different. V&. V& v! w!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_multiset_singleton_different")
(assert (forall ((V&. Dcr) (V& Type) (v! Poly) (w! Poly)) (! (=> (and (has_type v! V&) (has_type w! V&)) (=> (not (= v! w!)) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.singleton.? V&. V& v!) w!) 0))) :pattern ((vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.singleton.? V&. V& v!) w!)) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_multiset_add")
(declare-fun ens%vstd!multiset.axiom_multiset_add. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (m1! Poly) (m2! Poly) (v! Poly)) (! (= (ens%vstd!multiset.axiom_multiset_add. V&. V& m1! m2! v!) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.add.? V&. V& m1! m2!) v!) (nClip (Add (vstd!multiset.impl&%0.count.? V&. V& m1! v!) (vstd!multiset.impl&%0.count.? V&. V& m2! v!))))) :pattern ((ens%vstd!multiset.axiom_multiset_add. V&. V& m1! m2! v!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_multiset_add")
(assert (forall ((V&. Dcr) (V& Type) (m1! Poly) (m2! Poly) (v! Poly)) (! (=> (and (has_type m1! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type m2! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type v! V&)) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.add.? V&. V& m1! m2!) v!) (nClip (Add (vstd!multiset.impl&%0.count.? V&. V& m1! v!) (vstd!multiset.impl&%0.count.? V&. V& m2! v!))))) :pattern ((vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.add.? V&. V& m1! m2!) v!)) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_multiset_sub")
(declare-fun ens%vstd!multiset.axiom_multiset_sub. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (m1! Poly) (m2! Poly) (v! Poly)) (! (= (ens%vstd!multiset.axiom_multiset_sub. V&. V& m1! m2! v!) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.sub.? V&. V& m1! m2!) v!) (ite (>= (vstd!multiset.impl&%0.count.? V&. V& m1! v!) (vstd!multiset.impl&%0.count.? V&. V& m2! v!)) (Sub (vstd!multiset.impl&%0.count.? V&. V& m1! v!) (vstd!multiset.impl&%0.count.? V&. V& m2! v!)) 0))) :pattern ((ens%vstd!multiset.axiom_multiset_sub. V&. V& m1! m2! v!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_multiset_sub")
(assert (forall ((V&. Dcr) (V& Type) (m1! Poly) (m2! Poly) (v! Poly)) (! (=> (and (has_type m1! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type m2! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type v! V&)) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.sub.? V&. V& m1! m2!) v!) (ite (>= (vstd!multiset.impl&%0.count.? V&. V& m1! v!) (vstd!multiset.impl&%0.count.? V&. V& m2! v!)) (Sub (vstd!multiset.impl&%0.count.? V&. V& m1! v!) (vstd!multiset.impl&%0.count.? V&. V& m2! v!)) 0))) :pattern ((vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.sub.? V&. V& m1! m2!) v!)) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_multiset_ext_equal")
(declare-fun ens%vstd!multiset.axiom_multiset_ext_equal. (Dcr Type Poly Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (= (ens%vstd!multiset.axiom_multiset_ext_equal. V&. V& m1! m2!) (= (ext_eq false (TYPE%vstd!multiset.Multiset. V&. V&) m1! m2!) (forall ((v$ Poly)) (! (=> (has_type v$ V&) (= (vstd!multiset.impl&%0.count.? V&. V& m1! v$) (vstd!multiset.impl&%0.count.? V&. V& m2! v$))) :pattern ((vstd!multiset.impl&%0.count.? V&. V& m1! v$)) :pattern ((vstd!multiset.impl&%0.count.? V&. V& m2! v$)) )))) :pattern ((ens%vstd!multiset.axiom_multiset_ext_equal. V&. V& m1! m2!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_multiset_ext_equal")
(assert (forall ((V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (=> (and (has_type m1! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type m2! (TYPE%vstd!multiset.Multiset. V&. V&))) (= (ext_eq false (TYPE%vstd!multiset.Multiset. V&. V&) m1! m2!) (forall ((v$ Poly)) (! (=> (has_type v$ V&) (= (vstd!multiset.impl&%0.count.? V&. V& m1! v$) (vstd!multiset.impl&%0.count.? V&. V& m2! v$))) :pattern ((vstd!multiset.impl&%0.count.? V&. V& m1! v$)) :pattern ((vstd!multiset.impl&%0.count.? V&. V& m2! v$)) )))) :pattern ((ext_eq false (TYPE%vstd!multiset.Multiset. V&. V&) m1! m2!)) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_multiset_ext_equal_deep")
(declare-fun ens%vstd!multiset.axiom_multiset_ext_equal_deep. (Dcr Type Poly Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (= (ens%vstd!multiset.axiom_multiset_ext_equal_deep. V&. V& m1! m2!) (= (ext_eq true (TYPE%vstd!multiset.Multiset. V&. V&) m1! m2!) (ext_eq false (TYPE%vstd!multiset.Multiset. V&. V&) m1! m2!))) :pattern ((ens%vstd!multiset.axiom_multiset_ext_equal_deep. V&. V& m1! m2!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_multiset_ext_equal_deep")
(assert (forall ((V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (=> (and (has_type m1! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type m2! (TYPE%vstd!multiset.Multiset. V&. V&))) (= (ext_eq true (TYPE%vstd!multiset.Multiset. V&. V&) m1! m2!) (ext_eq false (TYPE%vstd!multiset.Multiset. V&. V&) m1! m2!))) :pattern ((ext_eq true (TYPE%vstd!multiset.Multiset. V&. V&) m1! m2!)) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_len_empty")
(declare-fun ens%vstd!multiset.axiom_len_empty. (Dcr Type) Bool)
(assert (forall ((V&. Dcr) (V& Type)) (! (= (ens%vstd!multiset.axiom_len_empty. V&. V&) (= (vstd!multiset.impl&%0.len.? V&. V& (vstd!multiset.impl&%0.empty.? V&. V&)) 0)) :pattern ((ens%vstd!multiset.axiom_len_empty. V&. V&)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_len_empty")
(assert (forall ((V&. Dcr) (V& Type)) (! (= (vstd!multiset.impl&%0.len.? V&. V& (vstd!multiset.impl&%0.empty.? V&. V&)) 0) :pattern ((vstd!multiset.impl&%0.len.? V&. V& (vstd!multiset.impl&%0.empty.? V&. V&))) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_len_singleton")
(declare-fun ens%vstd!multiset.axiom_len_singleton. (Dcr Type Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (v! Poly)) (! (= (ens%vstd!multiset.axiom_len_singleton. V&. V& v!) (= (vstd!multiset.impl&%0.len.? V&. V& (vstd!multiset.impl&%0.singleton.? V&. V& v!)) 1)) :pattern ((ens%vstd!multiset.axiom_len_singleton. V&. V& v!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_len_singleton")
(assert (forall ((V&. Dcr) (V& Type) (v! Poly)) (! (=> (has_type v! V&) (= (vstd!multiset.impl&%0.len.? V&. V& (vstd!multiset.impl&%0.singleton.? V&. V& v!)) 1)) :pattern ((vstd!multiset.impl&%0.len.? V&. V& (vstd!multiset.impl&%0.singleton.? V&. V& v!))) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_len_add")
(declare-fun ens%vstd!multiset.axiom_len_add. (Dcr Type Poly Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (= (ens%vstd!multiset.axiom_len_add. V&. V& m1! m2!) (= (vstd!multiset.impl&%0.len.? V&. V& (vstd!multiset.impl&%0.add.? V&. V& m1! m2!)) (nClip (Add (vstd!multiset.impl&%0.len.? V&. V& m1!) (vstd!multiset.impl&%0.len.? V&. V& m2!))))) :pattern ((ens%vstd!multiset.axiom_len_add. V&. V& m1! m2!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_len_add")
(assert (forall ((V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (=> (and (has_type m1! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type m2! (TYPE%vstd!multiset.Multiset. V&. V&))) (= (vstd!multiset.impl&%0.len.? V&. V& (vstd!multiset.impl&%0.add.? V&. V& m1! m2!)) (nClip (Add (vstd!multiset.impl&%0.len.? V&. V& m1!) (vstd!multiset.impl&%0.len.? V&. V& m2!))))) :pattern ((vstd!multiset.impl&%0.len.? V&. V& (vstd!multiset.impl&%0.add.? V&. V& m1! m2!))) )))
(set-info :comment ";; Function-Axioms vstd::multiset::impl&%0::subset_of")
(assert (fuel_bool_default fuel%vstd!multiset.impl&%0.subset_of.))
(assert (=> (fuel_bool fuel%vstd!multiset.impl&%0.subset_of.) (forall ((V&. Dcr) (V& Type) (self! Poly) (m2! Poly)) (! (= (vstd!multiset.impl&%0.subset_of.? V&. V& self! m2!) (forall ((v$ Poly)) (! (=> (has_type v$ V&) (<= (vstd!multiset.impl&%0.count.? V&. V& self! v$) (vstd!multiset.impl&%0.count.? V&. V& m2! v$))) :pattern ((vstd!multiset.impl&%0.count.? V&. V& self! v$)) :pattern ((vstd!multiset.impl&%0.count.? V&. V& m2! v$)) ))) :pattern ((vstd!multiset.impl&%0.subset_of.? V&. V& self! m2!)) ))))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_len_sub")
(declare-fun req%vstd!multiset.axiom_len_sub. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%17 Bool)
(assert (forall ((V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (= (req%vstd!multiset.axiom_len_sub. V&. V& m1! m2!) (=> %%global_location_label%%17 (vstd!multiset.impl&%0.subset_of.? V&. V& m2! m1!))) :pattern ((req%vstd!multiset.axiom_len_sub. V&. V& m1! m2!)) )))
(declare-fun ens%vstd!multiset.axiom_len_sub. (Dcr Type Poly Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (= (ens%vstd!multiset.axiom_len_sub. V&. V& m1! m2!) (= (vstd!multiset.impl&%0.len.? V&. V& (vstd!multiset.impl&%0.sub.? V&. V& m1! m2!)) (Sub (vstd!multiset.impl&%0.len.? V&. V& m1!) (vstd!multiset.impl&%0.len.? V&. V& m2!)))) :pattern ((ens%vstd!multiset.axiom_len_sub. V&. V& m1! m2!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_len_sub")
(assert (forall ((V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (=> (and (has_type m1! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type m2! (TYPE%vstd!multiset.Multiset. V&. V&))) (=> (vstd!multiset.impl&%0.subset_of.? V&. V& m2! m1!) (= (vstd!multiset.impl&%0.len.? V&. V& (vstd!multiset.impl&%0.sub.? V&. V& m1! m2!)) (Sub (vstd!multiset.impl&%0.len.? V&. V& m1!) (vstd!multiset.impl&%0.len.? V&. V& m2!))))) :pattern ((vstd!multiset.impl&%0.len.? V&. V& (vstd!multiset.impl&%0.sub.? V&. V& m1! m2!))) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_count_le_len")
(declare-fun ens%vstd!multiset.axiom_count_le_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (m! Poly) (v! Poly)) (! (= (ens%vstd!multiset.axiom_count_le_len. V&. V& m! v!) (<= (vstd!multiset.impl&%0.count.? V&. V& m! v!) (vstd!multiset.impl&%0.len.? V&. V& m!))) :pattern ((ens%vstd!multiset.axiom_count_le_len. V&. V& m! v!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_count_le_len")
(assert (forall ((V&. Dcr) (V& Type) (m! Poly) (v! Poly)) (! (=> (and (has_type m! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type v! V&)) (<= (vstd!multiset.impl&%0.count.? V&. V& m! v!) (vstd!multiset.impl&%0.len.? V&. V& m!))) :pattern ((vstd!multiset.impl&%0.count.? V&. V& m! v!) (vstd!multiset.impl&%0.len.? V&. V& m!)) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_filter_count")
(declare-fun ens%vstd!multiset.axiom_filter_count. (Dcr Type Poly %%Function%% Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (m! Poly) (f! %%Function%%) (v! Poly)) (! (= (ens%vstd!multiset.axiom_filter_count. V&. V& m! f! v!) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.filter.? V&. V& $ (TYPE%fun%1. V&. V& $ BOOL) m! (Poly%fun%1. f!)) v!) (ite (%B (%%apply%%0 f! v!)) (vstd!multiset.impl&%0.count.? V&. V& m! v!) 0))) :pattern ((ens%vstd!multiset.axiom_filter_count. V&. V& m! f! v!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_filter_count")
(assert (forall ((V&. Dcr) (V& Type) (m! Poly) (f! Poly) (v! Poly)) (! (=> (and (has_type m! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type f! (TYPE%fun%1. V&. V& $ BOOL)) (has_type v! V&)) (= (vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.filter.? V&. V& $ (TYPE%fun%1. V&. V& $ BOOL) m! f!) v!) (ite (%B (%%apply%%0 (%Poly%fun%1. f!) v!)) (vstd!multiset.impl&%0.count.? V&. V& m! v!) 0))) :pattern ((vstd!multiset.impl&%0.count.? V&. V& (vstd!multiset.impl&%0.filter.? V&. V& $ (TYPE%fun%1. V&. V& $ BOOL) m! f!) v!)) )))
(set-info :comment ";; Function-Axioms vstd::multiset::impl&%0::choose")
(assert (fuel_bool_default fuel%vstd!multiset.impl&%0.choose.))
(declare-fun %%choose%%0 (Type Dcr Type Poly Int Dcr Type Poly) Poly)
(assert (forall ((%%hole%%0 Type) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Poly) (%%hole%%4 Int) (%%hole%%5 Dcr) (%%hole%%6 Type) (%%hole%%7 Poly)) (! (=> (exists ((v$ Poly)) (! (and (has_type v$ %%hole%%0) (> (vstd!multiset.impl&%0.count.? %%hole%%1 %%hole%%2 %%hole%%3 v$) %%hole%%4)) :pattern ((vstd!multiset.impl&%0.count.? %%hole%%5 %%hole%%6 %%hole%%7 v$)) )) (exists ((v$ Poly)) (! (and (and (has_type v$ %%hole%%0) (> (vstd!multiset.impl&%0.count.? %%hole%%1 %%hole%%2 %%hole%%3 v$) %%hole%%4)) (= (%%choose%%0 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7) v$)) :pattern ((vstd!multiset.impl&%0.count.? %%hole%%5 %%hole%%6 %%hole%%7 v$))))) :pattern ((%%choose%%0 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7)))))
(assert (=> (fuel_bool fuel%vstd!multiset.impl&%0.choose.) (forall ((V&. Dcr) (V& Type) (self! Poly)) (! (= (vstd!multiset.impl&%0.choose.? V&. V& self!) (as_type (%%choose%%0 V& V&. V& self! 0 V&. V& self!) V&)) :pattern ((vstd!multiset.impl&%0.choose.? V&. V& self!)) ))))
(assert (forall ((V&. Dcr) (V& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type (vstd!multiset.impl&%0.choose.? V&. V& self!) V&)) :pattern ((vstd!multiset.impl&%0.choose.? V&. V& self!)) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_choose_count")
(declare-fun req%vstd!multiset.axiom_choose_count. (Dcr Type Poly) Bool)
(declare-const %%global_location_label%%18 Bool)
(assert (forall ((V&. Dcr) (V& Type) (m! Poly)) (! (= (req%vstd!multiset.axiom_choose_count. V&. V& m!) (=> %%global_location_label%%18 (not (= (vstd!multiset.impl&%0.len.? V&. V& m!) 0)))) :pattern ((req%vstd!multiset.axiom_choose_count. V&. V& m!)) )))
(declare-fun ens%vstd!multiset.axiom_choose_count. (Dcr Type Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (m! Poly)) (! (= (ens%vstd!multiset.axiom_choose_count. V&. V& m!) (> (vstd!multiset.impl&%0.count.? V&. V& m! (vstd!multiset.impl&%0.choose.? V&. V& m!)) 0)) :pattern ((ens%vstd!multiset.axiom_choose_count. V&. V& m!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_choose_count")
(assert (forall ((V&. Dcr) (V& Type) (m! Poly)) (! (=> (has_type m! (TYPE%vstd!multiset.Multiset. V&. V&)) (=> (not (= (vstd!multiset.impl&%0.len.? V&. V& m!) 0)) (> (vstd!multiset.impl&%0.count.? V&. V& m! (vstd!multiset.impl&%0.choose.? V&. V& m!)) 0))) :pattern ((vstd!multiset.impl&%0.len.? V&. V& m!) (vstd!multiset.impl&%0.count.? V&. V& m! (vstd!multiset.impl&%0.choose.? V&. V& m!))) )))
(set-info :comment ";; Function-Axioms vstd::multiset::impl&%0::dom")
(assert (fuel_bool_default fuel%vstd!multiset.impl&%0.dom.))
(declare-fun %%lambda%%2 (Dcr Type Poly Int) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 Int) (v$ Poly)) (! (= (%%apply%%0 (%%lambda%%2 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) v$) (B (> (vstd!multiset.impl&%0.count.? %%hole%%0 %%hole%%1 %%hole%%2 v$) %%hole%%3))) :pattern ((%%apply%%0 (%%lambda%%2 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) v$)))))
(assert (=> (fuel_bool fuel%vstd!multiset.impl&%0.dom.) (forall ((V&. Dcr) (V& Type) (self! Poly)) (! (= (vstd!multiset.impl&%0.dom.? V&. V& self!) (vstd!set.impl&%0.new.? V&. V& $ (TYPE%fun%1. V&. V& $ BOOL) (Poly%fun%1. (mk_fun (%%lambda%%2 V&. V& self! 0))))) :pattern ((vstd!multiset.impl&%0.dom.? V&. V& self!)) ))))
(assert (forall ((V&. Dcr) (V& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type (vstd!multiset.impl&%0.dom.? V&. V& self!) (TYPE%vstd!set.Set. V&. V&))) :pattern ((vstd!multiset.impl&%0.dom.? V&. V& self!)) )))
(set-info :comment ";; Function-Specs vstd::multiset::axiom_multiset_always_finite")
(declare-fun ens%vstd!multiset.axiom_multiset_always_finite. (Dcr Type Poly) Bool)
(assert (forall ((V&. Dcr) (V& Type) (m! Poly)) (! (= (ens%vstd!multiset.axiom_multiset_always_finite. V&. V& m!) (vstd!set.impl&%0.finite.? V&. V& (vstd!multiset.impl&%0.dom.? V&. V& m!))) :pattern ((ens%vstd!multiset.axiom_multiset_always_finite. V&. V& m!)) )))
(set-info :comment ";; Broadcast vstd::multiset::axiom_multiset_always_finite")
(assert (forall ((V&. Dcr) (V& Type) (m! Poly)) (! (=> (has_type m! (TYPE%vstd!multiset.Multiset. V&. V&)) (vstd!set.impl&%0.finite.? V&. V& (vstd!multiset.impl&%0.dom.? V&. V& m!))) :pattern ((vstd!set.impl&%0.finite.? V&. V& (vstd!multiset.impl&%0.dom.? V&. V& m!))) )))
(set-info :comment ";; Function-Axioms vstd::pervasive::arbitrary")
(assert (forall ((A&. Dcr) (A& Type)) (! (has_type (vstd!pervasive.arbitrary.? A&. A&) A&) :pattern ((vstd!pervasive.arbitrary.? A&. A&)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::new")
(assert (forall ((A&. Dcr) (A& Type) (impl%1&. Dcr) (impl%1& Type) (len! Poly) (f! Poly)) (! (=> (and (has_type len! NAT) (has_type f! impl%1&)) (has_type (vstd!seq.Seq.new.? A&. A& impl%1&. impl%1& len! f!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.new.? A&. A& impl%1&. impl%1& len! f!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_index_decreases")
(declare-fun req%vstd!seq.axiom_seq_index_decreases. (Dcr Type Poly Int) Bool)
(declare-const %%global_location_label%%19 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_index_decreases. A&. A& s! i!) (=> %%global_location_label%%19 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_index_decreases. A&. A& s! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_index_decreases. (Dcr Type Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_index_decreases. A&. A& s! i!) (height_lt (height (vstd!seq.Seq.index.? A&. A& s! (I i!))) (height s!))) :pattern ((ens%vstd!seq.axiom_seq_index_decreases. A&. A& s! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_index_decreases")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s!))) (height_lt (height (vstd!seq.Seq.index.? A&. A& s! i!)) (height s!)))) :pattern ((height (vstd!seq.Seq.index.? A&. A& s! i!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_empty")
(declare-fun ens%vstd!seq.axiom_seq_empty. (Dcr Type) Bool)
(assert (forall ((A&. Dcr) (A& Type)) (! (= (ens%vstd!seq.axiom_seq_empty. A&. A&) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.empty.? A&. A&)) 0)) :pattern ((ens%vstd!seq.axiom_seq_empty. A&. A&)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_empty")
(assert (forall ((A&. Dcr) (A& Type)) (! (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.empty.? A&. A&)) 0) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.empty.? A&. A&))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_new_len")
(declare-fun ens%vstd!seq.axiom_seq_new_len. (Dcr Type Int %%Function%%) Bool)
(assert (forall ((A&. Dcr) (A& Type) (len! Int) (f! %%Function%%)) (! (= (ens%vstd!seq.axiom_seq_new_len. A&. A& len! f!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) (I len!) (Poly%fun%1. f!))) len!)) :pattern ((ens%vstd!seq.axiom_seq_new_len. A&. A& len! f!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_new_len")
(assert (forall ((A&. Dcr) (A& Type) (len! Poly) (f! Poly)) (! (=> (and (has_type len! NAT) (has_type f! (TYPE%fun%1. $ INT A&. A&))) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) len! f!)) (%I len!))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) len! f!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_new_index")
(declare-fun req%vstd!seq.axiom_seq_new_index. (Dcr Type Int %%Function%% Int) Bool)
(declare-const %%global_location_label%%20 Bool)
(assert (forall ((A&. Dcr) (A& Type) (len! Int) (f! %%Function%%) (i! Int)) (! (= (req%vstd!seq.axiom_seq_new_index. A&. A& len! f! i!) (=> %%global_location_label%%20 (and (<= 0 i!) (< i! len!)))) :pattern ((req%vstd!seq.axiom_seq_new_index. A&. A& len! f! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_new_index. (Dcr Type Int %%Function%% Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (len! Int) (f! %%Function%%) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_new_index. A&. A& len! f! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) (I len!) (Poly%fun%1. f!)) (I i!)) (%%apply%%0 f! (I i!)))) :pattern ((ens%vstd!seq.axiom_seq_new_index. A&. A& len! f! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_new_index")
(assert (forall ((A&. Dcr) (A& Type) (len! Poly) (f! Poly) (i! Poly)) (! (=> (and (has_type len! NAT) (has_type f! (TYPE%fun%1. $ INT A&. A&)) (has_type i! INT)) (=> (and (<= 0 (%I i!)) (< (%I i!) (%I len!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) len! f!) i!) (%%apply%%0 (%Poly%fun%1. f!) i!)))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) len! f!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_push_len")
(declare-fun ens%vstd!seq.axiom_seq_push_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!seq.axiom_seq_push_len. A&. A& s! a!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!)) (nClip (Add (vstd!seq.Seq.len.? A&. A& s!) 1)))) :pattern ((ens%vstd!seq.axiom_seq_push_len. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_push_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type a! A&)) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!)) (nClip (Add (vstd!seq.Seq.len.? A&. A& s!) 1)))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_push_index_same")
(declare-fun req%vstd!seq.axiom_seq_push_index_same. (Dcr Type Poly Poly Int) Bool)
(declare-const %%global_location_label%%21 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_push_index_same. A&. A& s! a! i!) (=> %%global_location_label%%21 (= i! (vstd!seq.Seq.len.? A&. A& s!)))) :pattern ((req%vstd!seq.axiom_seq_push_index_same. A&. A& s! a! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_push_index_same. (Dcr Type Poly Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_push_index_same. A&. A& s! a! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) (I i!)) a!)) :pattern ((ens%vstd!seq.axiom_seq_push_index_same. A&. A& s! a! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_push_index_same")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type a! A&) (has_type i! INT)) (=> (= (%I i!) (vstd!seq.Seq.len.? A&. A& s!)) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) i!) a!))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_push_index_different")
(declare-fun req%vstd!seq.axiom_seq_push_index_different. (Dcr Type Poly Poly Int) Bool)
(declare-const %%global_location_label%%22 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_push_index_different. A&. A& s! a! i!) (=> %%global_location_label%%22 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_push_index_different. A&. A& s! a! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_push_index_different. (Dcr Type Poly Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_push_index_different. A&. A& s! a! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) (I i!)) (vstd!seq.Seq.index.? A&. A& s! (I i!)))) :pattern ((ens%vstd!seq.axiom_seq_push_index_different. A&. A& s! a! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_push_index_different")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type a! A&) (has_type i! INT)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) i!) (vstd!seq.Seq.index.? A&. A& s! i!)))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_update_len")
(declare-fun req%vstd!seq.axiom_seq_update_len. (Dcr Type Poly Int Poly) Bool)
(declare-const %%global_location_label%%23 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int) (a! Poly)) (! (= (req%vstd!seq.axiom_seq_update_len. A&. A& s! i! a!) (=> %%global_location_label%%23 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_update_len. A&. A& s! i! a!)) )))
(declare-fun ens%vstd!seq.axiom_seq_update_len. (Dcr Type Poly Int Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int) (a! Poly)) (! (= (ens%vstd!seq.axiom_seq_update_len. A&. A& s! i! a!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.update.? A&. A& s! (I i!) a!)) (vstd!seq.Seq.len.? A&. A& s!))) :pattern ((ens%vstd!seq.axiom_seq_update_len. A&. A& s! i! a!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_update_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT) (has_type a! A&)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s!))) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i! a!)) (vstd!seq.Seq.len.? A&. A& s!)))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i! a!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_update_same")
(declare-fun req%vstd!seq.axiom_seq_update_same. (Dcr Type Poly Int Poly) Bool)
(declare-const %%global_location_label%%24 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int) (a! Poly)) (! (= (req%vstd!seq.axiom_seq_update_same. A&. A& s! i! a!) (=> %%global_location_label%%24 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_update_same. A&. A& s! i! a!)) )))
(declare-fun ens%vstd!seq.axiom_seq_update_same. (Dcr Type Poly Int Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int) (a! Poly)) (! (= (ens%vstd!seq.axiom_seq_update_same. A&. A& s! i! a!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! (I i!) a!) (I i!)) a!)) :pattern ((ens%vstd!seq.axiom_seq_update_same. A&. A& s! i! a!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_update_same")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT) (has_type a! A&)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i! a!) i!) a!))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i! a!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_update_different")
(declare-fun req%vstd!seq.axiom_seq_update_different. (Dcr Type Poly Int Int Poly) Bool)
(declare-const %%global_location_label%%25 Bool)
(declare-const %%global_location_label%%26 Bool)
(declare-const %%global_location_label%%27 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i1! Int) (i2! Int) (a! Poly)) (! (= (req%vstd!seq.axiom_seq_update_different. A&. A& s! i1! i2! a!) (and (=> %%global_location_label%%25 (and (<= 0 i1!) (< i1! (vstd!seq.Seq.len.? A&. A& s!)))) (=> %%global_location_label%%26 (and (<= 0 i2!) (< i2! (vstd!seq.Seq.len.? A&. A& s!)))) (=> %%global_location_label%%27 (not (= i1! i2!))))) :pattern ((req%vstd!seq.axiom_seq_update_different. A&. A& s! i1! i2! a!)) )))
(declare-fun ens%vstd!seq.axiom_seq_update_different. (Dcr Type Poly Int Int Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i1! Int) (i2! Int) (a! Poly)) (! (= (ens%vstd!seq.axiom_seq_update_different. A&. A& s! i1! i2! a!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! (I i2!) a!) (I i1!)) (vstd!seq.Seq.index.? A&. A& s! (I i1!)))) :pattern ((ens%vstd!seq.axiom_seq_update_different. A&. A& s! i1! i2! a!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_update_different")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i1! Poly) (i2! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i1! INT) (has_type i2! INT) (has_type a! A&)) (=> (and (and (and (<= 0 (%I i1!)) (< (%I i1!) (vstd!seq.Seq.len.? A&. A& s!))) (and (<= 0 (%I i2!)) (< (%I i2!) (vstd!seq.Seq.len.? A&. A& s!)))) (not (= i1! i2!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i2! a!) i1!) (vstd!seq.Seq.index.? A&. A& s! i1!)))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i2! a!) i1!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_ext_equal")
(declare-fun ens%vstd!seq.axiom_seq_ext_equal. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!seq.axiom_seq_ext_equal. A&. A& s1! s2!) (= (ext_eq false (TYPE%vstd!seq.Seq. A&. A&) s1! s2!) (and (= (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!)) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& s1!))) (= (vstd!seq.Seq.index.? A&. A& s1! i$) (vstd!seq.Seq.index.? A&. A& s2! i$)))) :pattern ((vstd!seq.Seq.index.? A&. A& s1! i$)) :pattern ((vstd!seq.Seq.index.? A&. A& s2! i$)) ))))) :pattern ((ens%vstd!seq.axiom_seq_ext_equal. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_ext_equal")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&))) (= (ext_eq false (TYPE%vstd!seq.Seq. A&. A&) s1! s2!) (and (= (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!)) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& s1!))) (= (vstd!seq.Seq.index.? A&. A& s1! i$) (vstd!seq.Seq.index.? A&. A& s2! i$)))) :pattern ((vstd!seq.Seq.index.? A&. A& s1! i$)) :pattern ((vstd!seq.Seq.index.? A&. A& s2! i$)) ))))) :pattern ((ext_eq false (TYPE%vstd!seq.Seq. A&. A&) s1! s2!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_ext_equal_deep")
(declare-fun ens%vstd!seq.axiom_seq_ext_equal_deep. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!seq.axiom_seq_ext_equal_deep. A&. A& s1! s2!) (= (ext_eq true (TYPE%vstd!seq.Seq. A&. A&) s1! s2!) (and (= (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!)) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& s1!))) (ext_eq true A& (vstd!seq.Seq.index.? A&. A& s1! i$) (vstd!seq.Seq.index.? A&. A& s2! i$)))) :pattern ((vstd!seq.Seq.index.? A&. A& s1! i$)) :pattern ((vstd!seq.Seq.index.? A&. A& s2! i$)) ))))) :pattern ((ens%vstd!seq.axiom_seq_ext_equal_deep. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_ext_equal_deep")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&))) (= (ext_eq true (TYPE%vstd!seq.Seq. A&. A&) s1! s2!) (and (= (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!)) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& s1!))) (ext_eq true A& (vstd!seq.Seq.index.? A&. A& s1! i$) (vstd!seq.Seq.index.? A&. A& s2! i$)))) :pattern ((vstd!seq.Seq.index.? A&. A& s1! i$)) :pattern ((vstd!seq.Seq.index.? A&. A& s2! i$)) ))))) :pattern ((ext_eq true (TYPE%vstd!seq.Seq. A&. A&) s1! s2!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_subrange_len")
(declare-fun req%vstd!seq.axiom_seq_subrange_len. (Dcr Type Poly Int Int) Bool)
(declare-const %%global_location_label%%28 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Int) (k! Int)) (! (= (req%vstd!seq.axiom_seq_subrange_len. A&. A& s! j! k!) (=> %%global_location_label%%28 (and (and (<= 0 j!) (<= j! k!)) (<= k! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_subrange_len. A&. A& s! j! k!)) )))
(declare-fun ens%vstd!seq.axiom_seq_subrange_len. (Dcr Type Poly Int Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Int) (k! Int)) (! (= (ens%vstd!seq.axiom_seq_subrange_len. A&. A& s! j! k!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! (I j!) (I k!))) (Sub k! j!))) :pattern ((ens%vstd!seq.axiom_seq_subrange_len. A&. A& s! j! k!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_subrange_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Poly) (k! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type j! INT) (has_type k! INT)) (=> (and (and (<= 0 (%I j!)) (<= (%I j!) (%I k!))) (<= (%I k!) (vstd!seq.Seq.len.? A&. A& s!))) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! j! k!)) (Sub (%I k!) (%I j!))))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! j! k!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_subrange_index")
(declare-fun req%vstd!seq.axiom_seq_subrange_index. (Dcr Type Poly Int Int Int) Bool)
(declare-const %%global_location_label%%29 Bool)
(declare-const %%global_location_label%%30 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Int) (k! Int) (i! Int)) (! (= (req%vstd!seq.axiom_seq_subrange_index. A&. A& s! j! k! i!) (and (=> %%global_location_label%%29 (and (and (<= 0 j!) (<= j! k!)) (<= k! (vstd!seq.Seq.len.? A&. A& s!)))) (=> %%global_location_label%%30 (and (<= 0 i!) (< i! (Sub k! j!)))))) :pattern ((req%vstd!seq.axiom_seq_subrange_index. A&. A& s! j! k! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_subrange_index. (Dcr Type Poly Int Int Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Int) (k! Int) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_subrange_index. A&. A& s! j! k! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! (I j!) (I k!)) (I i!)) (vstd!seq.Seq.index.? A&. A& s! (I (Add i! j!))))) :pattern ((ens%vstd!seq.axiom_seq_subrange_index. A&. A& s! j! k! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_subrange_index")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Poly) (k! Poly) (i! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type j! INT) (has_type k! INT) (has_type i! INT)) (=> (and (and (and (<= 0 (%I j!)) (<= (%I j!) (%I k!))) (<= (%I k!) (vstd!seq.Seq.len.? A&. A& s!))) (and (<= 0 (%I i!)) (< (%I i!) (Sub (%I k!) (%I j!))))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! j! k!) i!) (vstd!seq.Seq.index.? A&. A& s! (I (Add (%I i!) (%I j!))))))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! j! k!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_add_len")
(declare-fun ens%vstd!seq.axiom_seq_add_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!seq.axiom_seq_add_len. A&. A& s1! s2!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!)) (nClip (Add (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!))))) :pattern ((ens%vstd!seq.axiom_seq_add_len. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_add_len")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&))) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!)) (nClip (Add (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!))))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_add_index1")
(declare-fun req%vstd!seq.axiom_seq_add_index1. (Dcr Type Poly Poly Int) Bool)
(declare-const %%global_location_label%%31 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_add_index1. A&. A& s1! s2! i!) (=> %%global_location_label%%31 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s1!))))) :pattern ((req%vstd!seq.axiom_seq_add_index1. A&. A& s1! s2! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_add_index1. (Dcr Type Poly Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_add_index1. A&. A& s1! s2! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) (I i!)) (vstd!seq.Seq.index.? A&. A& s1! (I i!)))) :pattern ((ens%vstd!seq.axiom_seq_add_index1. A&. A& s1! s2! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_add_index1")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s1!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) i!) (vstd!seq.Seq.index.? A&. A& s1! i!)))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_add_index2")
(declare-fun req%vstd!seq.axiom_seq_add_index2. (Dcr Type Poly Poly Int) Bool)
(declare-const %%global_location_label%%32 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_add_index2. A&. A& s1! s2! i!) (=> %%global_location_label%%32 (and (<= (vstd!seq.Seq.len.? A&. A& s1!) i!) (< i! (nClip (Add (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!))))))) :pattern ((req%vstd!seq.axiom_seq_add_index2. A&. A& s1! s2! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_add_index2. (Dcr Type Poly Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_add_index2. A&. A& s1! s2! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) (I i!)) (vstd!seq.Seq.index.? A&. A& s2! (I (Sub i! (vstd!seq.Seq.len.? A&. A& s1!)))))) :pattern ((ens%vstd!seq.axiom_seq_add_index2. A&. A& s1! s2! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_add_index2")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (=> (and (<= (vstd!seq.Seq.len.? A&. A& s1!) (%I i!)) (< (%I i!) (nClip (Add (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!))))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) i!) (vstd!seq.Seq.index.? A&. A& s2! (I (Sub (%I i!) (vstd!seq.Seq.len.? A&. A& s1!))))))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) i!)) )))
(set-info :comment ";; Function-Axioms vstd::seq_lib::impl&%0::filter")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (pred! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type pred! (TYPE%fun%1. A&. A& $ BOOL))) (has_type (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!)) )))
(set-info :comment ";; Function-Axioms vstd::seq_lib::impl&%0::contains")
(assert (fuel_bool_default fuel%vstd!seq_lib.impl&%0.contains.))
(assert (=> (fuel_bool fuel%vstd!seq_lib.impl&%0.contains.) (forall ((A&. Dcr) (A& Type) (self! Poly) (needle! Poly)) (! (= (vstd!seq_lib.impl&%0.contains.? A&. A& self! needle!) (exists ((i$ Poly)) (! (and (has_type i$ INT) (and (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& self!))) (= (vstd!seq.Seq.index.? A&. A& self! i$) needle!))) :pattern ((vstd!seq.Seq.index.? A&. A& self! i$)) ))) :pattern ((vstd!seq_lib.impl&%0.contains.? A&. A& self! needle!)) ))))
(set-info :comment ";; Function-Specs vstd::seq_lib::impl&%0::filter_lemma_broadcast")
(declare-fun ens%vstd!seq_lib.impl&%0.filter_lemma_broadcast. (Dcr Type Poly %%Function%%) Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (pred! %%Function%%)) (! (= (ens%vstd!seq_lib.impl&%0.filter_lemma_broadcast. A&. A& self! pred!) (and (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!))))) (and (%B (%%apply%%0 pred! (vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) i$))) (vstd!seq_lib.impl&%0.contains.? A&. A& self! (vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) i$))))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) i$)) )) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& self!))) (%B (%%apply%%0 pred! (vstd!seq.Seq.index.? A&. A& self! i$)))) (vstd!seq_lib.impl&%0.contains.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) (vstd!seq.Seq.index.? A&. A& self! i$)))) :pattern ((vstd!seq_lib.impl&%0.contains.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) (vstd!seq.Seq.index.? A&. A& self! i$))) )) (<= (vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!))) (vstd!seq.Seq.len.? A&. A& self!)))) :pattern ((ens%vstd!seq_lib.impl&%0.filter_lemma_broadcast. A&. A& self! pred!)) )))
(set-info :comment ";; Broadcast vstd::seq_lib::impl&%0::filter_lemma_broadcast")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (pred! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type pred! (TYPE%fun%1. A&. A& $ BOOL))) (and (and (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!)))) (and (%B (%%apply%%0 (%Poly%fun%1. pred!) (vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) i$))) (vstd!seq_lib.impl&%0.contains.? A&. A& self! (vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) i$))))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) i$)) )) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& self!))) (%B (%%apply%%0 (%Poly%fun%1. pred!) (vstd!seq.Seq.index.? A&. A& self! i$)))) (vstd!seq_lib.impl&%0.contains.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) (vstd!seq.Seq.index.? A&. A& self! i$)))) :pattern ((vstd!seq_lib.impl&%0.contains.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) (vstd!seq.Seq.index.? A&. A& self! i$))) ))) (<= (vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!)) (vstd!seq.Seq.len.? A&. A& self!)))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!))) )))
(set-info :comment ";; Function-Specs vstd::seq_lib::impl&%0::filter_distributes_over_add_broacast")
(declare-fun ens%vstd!seq_lib.impl&%0.filter_distributes_over_add_broacast. (Dcr Type Poly Poly %%Function%%) Bool)
(assert (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly) (pred! %%Function%%)) (! (= (ens%vstd!seq_lib.impl&%0.filter_distributes_over_add_broacast. A&. A& a! b! pred!) (= (vstd!seq_lib.impl&%0.filter.? A&. A& (vstd!seq.Seq.add.? A&. A& a! b!) (Poly%fun%1. pred!)) (vstd!seq.Seq.add.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& a! (Poly%fun%1. pred!)) (vstd!seq_lib.impl&%0.filter.? A&. A& b! (Poly%fun%1. pred!))))) :pattern ((ens%vstd!seq_lib.impl&%0.filter_distributes_over_add_broacast. A&. A& a! b! pred!)) )))
(set-info :comment ";; Broadcast vstd::seq_lib::impl&%0::filter_distributes_over_add_broacast")
(assert (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly) (pred! Poly)) (! (=> (and (has_type a! (TYPE%vstd!seq.Seq. A&. A&)) (has_type b! (TYPE%vstd!seq.Seq. A&. A&)) (has_type pred! (TYPE%fun%1. A&. A& $ BOOL))) (= (vstd!seq_lib.impl&%0.filter.? A&. A& (vstd!seq.Seq.add.? A&. A& a! b!) pred!) (vstd!seq.Seq.add.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& a! pred!) (vstd!seq_lib.impl&%0.filter.? A&. A& b! pred!)))) :pattern ((vstd!seq_lib.impl&%0.filter.? A&. A& (vstd!seq.Seq.add.? A&. A& a! b!) pred!)) )))
(set-info :comment ";; Function-Axioms vstd::seq_lib::impl&%0::to_set")
(assert (fuel_bool_default fuel%vstd!seq_lib.impl&%0.to_set.))
(declare-fun %%lambda%%3 (Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (a$ Poly)) (! (= (%%apply%%0 (%%lambda%%3 %%hole%%0 %%hole%%1 %%hole%%2) a$) (B (vstd!seq_lib.impl&%0.contains.? %%hole%%0 %%hole%%1 %%hole%%2 a$))) :pattern ((%%apply%%0 (%%lambda%%3 %%hole%%0 %%hole%%1 %%hole%%2) a$)))))
(assert (=> (fuel_bool fuel%vstd!seq_lib.impl&%0.to_set.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!seq_lib.impl&%0.to_set.? A&. A& self!) (vstd!set.impl&%0.new.? A&. A& $ (TYPE%fun%1. A&. A& $ BOOL) (Poly%fun%1. (mk_fun (%%lambda%%3 A&. A& self!))))) :pattern ((vstd!seq_lib.impl&%0.to_set.? A&. A& self!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type (vstd!seq_lib.impl&%0.to_set.? A&. A& self!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!seq_lib.impl&%0.to_set.? A&. A& self!)) )))
(set-info :comment ";; Function-Specs vstd::seq_lib::seq_to_set_is_finite_broadcast")
(declare-fun ens%vstd!seq_lib.seq_to_set_is_finite_broadcast. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (seq! Poly)) (! (= (ens%vstd!seq_lib.seq_to_set_is_finite_broadcast. A&. A& seq!) (vstd!set.impl&%0.finite.? A&. A& (vstd!seq_lib.impl&%0.to_set.? A&. A& seq!))) :pattern ((ens%vstd!seq_lib.seq_to_set_is_finite_broadcast. A&. A& seq!)) )))
(set-info :comment ";; Broadcast vstd::seq_lib::seq_to_set_is_finite_broadcast")
(assert (forall ((A&. Dcr) (A& Type) (seq! Poly)) (! (=> (has_type seq! (TYPE%vstd!seq.Seq. A&. A&)) (vstd!set.impl&%0.finite.? A&. A& (vstd!seq_lib.impl&%0.to_set.? A&. A& seq!))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!seq_lib.impl&%0.to_set.? A&. A& seq!))) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::union")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (s2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (has_type (vstd!set.impl&%0.union.? A&. A& self! s2!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.union.? A&. A& self! s2!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::intersect")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (s2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (has_type (vstd!set.impl&%0.intersect.? A&. A& self! s2!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.intersect.? A&. A& self! s2!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::difference")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (s2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (has_type (vstd!set.impl&%0.difference.? A&. A& self! s2!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.difference.? A&. A& self! s2!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::complement")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type (vstd!set.impl&%0.complement.? A&. A& self!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.complement.? A&. A& self!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::len")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!set.Set. A&. A&)) (<= 0 (vstd!set.impl&%0.len.? A&. A& self!))) :pattern ((vstd!set.impl&%0.len.? A&. A& self!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_empty")
(declare-fun ens%vstd!set.axiom_set_empty. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (a! Poly)) (! (= (ens%vstd!set.axiom_set_empty. A&. A& a!) (not (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.empty.? A&. A&) a!))) :pattern ((ens%vstd!set.axiom_set_empty. A&. A& a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_empty")
(assert (forall ((A&. Dcr) (A& Type) (a! Poly)) (! (=> (has_type a! A&) (not (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.empty.? A&. A&) a!))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.empty.? A&. A&) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_new")
(declare-fun ens%vstd!set.axiom_set_new. (Dcr Type %%Function%% Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (f! %%Function%%) (a! Poly)) (! (= (ens%vstd!set.axiom_set_new. A&. A& f! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.new.? A&. A& $ (TYPE%fun%1. A&. A& $ BOOL) (Poly%fun%1. f!)) a!) (%B (%%apply%%0 f! a!)))) :pattern ((ens%vstd!set.axiom_set_new. A&. A& f! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_new")
(assert (forall ((A&. Dcr) (A& Type) (f! Poly) (a! Poly)) (! (=> (and (has_type f! (TYPE%fun%1. A&. A& $ BOOL)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.new.? A&. A& $ (TYPE%fun%1. A&. A& $ BOOL) f!) a!) (%B (%%apply%%0 (%Poly%fun%1. f!) a!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.new.? A&. A& $ (TYPE%fun%1. A&. A& $ BOOL) f!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_insert_same")
(declare-fun ens%vstd!set.axiom_set_insert_same. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_insert_same. A&. A& s! a!) (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!) a!)) :pattern ((ens%vstd!set.axiom_set_insert_same. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_insert_same")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!) a!)) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_insert_different")
(declare-fun req%vstd!set.axiom_set_insert_different. (Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%33 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (= (req%vstd!set.axiom_set_insert_different. A&. A& s! a1! a2!) (=> %%global_location_label%%33 (not (= a1! a2!)))) :pattern ((req%vstd!set.axiom_set_insert_different. A&. A& s! a1! a2!)) )))
(declare-fun ens%vstd!set.axiom_set_insert_different. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (= (ens%vstd!set.axiom_set_insert_different. A&. A& s! a1! a2!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a2!) a1!) (vstd!set.impl&%0.contains.? A&. A& s! a1!))) :pattern ((ens%vstd!set.axiom_set_insert_different. A&. A& s! a1! a2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_insert_different")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a1! A&) (has_type a2! A&)) (=> (not (= a1! a2!)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a2!) a1!) (vstd!set.impl&%0.contains.? A&. A& s! a1!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a2!) a1!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_same")
(declare-fun ens%vstd!set.axiom_set_remove_same. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_remove_same. A&. A& s! a!) (not (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!))) :pattern ((ens%vstd!set.axiom_set_remove_same. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_same")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (not (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_insert")
(declare-fun req%vstd!set.axiom_set_remove_insert. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%34 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_remove_insert. A&. A& s! a!) (=> %%global_location_label%%34 (vstd!set.impl&%0.contains.? A&. A& s! a!))) :pattern ((req%vstd!set.axiom_set_remove_insert. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_remove_insert. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_remove_insert. A&. A& s! a!) (= (vstd!set.impl&%0.insert.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!) s!)) :pattern ((ens%vstd!set.axiom_set_remove_insert. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_insert")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.contains.? A&. A& s! a!) (= (vstd!set.impl&%0.insert.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!) s!))) :pattern ((vstd!set.impl&%0.remove.? A&. A& s! a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_different")
(declare-fun req%vstd!set.axiom_set_remove_different. (Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%35 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (= (req%vstd!set.axiom_set_remove_different. A&. A& s! a1! a2!) (=> %%global_location_label%%35 (not (= a1! a2!)))) :pattern ((req%vstd!set.axiom_set_remove_different. A&. A& s! a1! a2!)) )))
(declare-fun ens%vstd!set.axiom_set_remove_different. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (= (ens%vstd!set.axiom_set_remove_different. A&. A& s! a1! a2!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a2!) a1!) (vstd!set.impl&%0.contains.? A&. A& s! a1!))) :pattern ((ens%vstd!set.axiom_set_remove_different. A&. A& s! a1! a2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_different")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a1! A&) (has_type a2! A&)) (=> (not (= a1! a2!)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a2!) a1!) (vstd!set.impl&%0.contains.? A&. A& s! a1!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a2!) a1!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_union")
(declare-fun ens%vstd!set.axiom_set_union. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_union. A&. A& s1! s2! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!) a!) (or (vstd!set.impl&%0.contains.? A&. A& s1! a!) (vstd!set.impl&%0.contains.? A&. A& s2! a!)))) :pattern ((ens%vstd!set.axiom_set_union. A&. A& s1! s2! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_union")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!) a!) (or (vstd!set.impl&%0.contains.? A&. A& s1! a!) (vstd!set.impl&%0.contains.? A&. A& s2! a!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_intersect")
(declare-fun ens%vstd!set.axiom_set_intersect. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_intersect. A&. A& s1! s2! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!) a!) (and (vstd!set.impl&%0.contains.? A&. A& s1! a!) (vstd!set.impl&%0.contains.? A&. A& s2! a!)))) :pattern ((ens%vstd!set.axiom_set_intersect. A&. A& s1! s2! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_intersect")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!) a!) (and (vstd!set.impl&%0.contains.? A&. A& s1! a!) (vstd!set.impl&%0.contains.? A&. A& s2! a!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_difference")
(declare-fun ens%vstd!set.axiom_set_difference. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_difference. A&. A& s1! s2! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!) a!) (and (vstd!set.impl&%0.contains.? A&. A& s1! a!) (not (vstd!set.impl&%0.contains.? A&. A& s2! a!))))) :pattern ((ens%vstd!set.axiom_set_difference. A&. A& s1! s2! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_difference")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!) a!) (and (vstd!set.impl&%0.contains.? A&. A& s1! a!) (not (vstd!set.impl&%0.contains.? A&. A& s2! a!))))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_complement")
(declare-fun ens%vstd!set.axiom_set_complement. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_complement. A&. A& s! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.complement.? A&. A& s!) a!) (not (vstd!set.impl&%0.contains.? A&. A& s! a!)))) :pattern ((ens%vstd!set.axiom_set_complement. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_complement")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.complement.? A&. A& s!) a!) (not (vstd!set.impl&%0.contains.? A&. A& s! a!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.complement.? A&. A& s!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_ext_equal")
(declare-fun ens%vstd!set.axiom_set_ext_equal. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_ext_equal. A&. A& s1! s2!) (= (ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!) (forall ((a$ Poly)) (! (=> (has_type a$ A&) (= (vstd!set.impl&%0.contains.? A&. A& s1! a$) (vstd!set.impl&%0.contains.? A&. A& s2! a$))) :pattern ((vstd!set.impl&%0.contains.? A&. A& s1! a$)) :pattern ((vstd!set.impl&%0.contains.? A&. A& s2! a$)) )))) :pattern ((ens%vstd!set.axiom_set_ext_equal. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_ext_equal")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (= (ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!) (forall ((a$ Poly)) (! (=> (has_type a$ A&) (= (vstd!set.impl&%0.contains.? A&. A& s1! a$) (vstd!set.impl&%0.contains.? A&. A& s2! a$))) :pattern ((vstd!set.impl&%0.contains.? A&. A& s1! a$)) :pattern ((vstd!set.impl&%0.contains.? A&. A& s2! a$)) )))) :pattern ((ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_ext_equal_deep")
(declare-fun ens%vstd!set.axiom_set_ext_equal_deep. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_ext_equal_deep. A&. A& s1! s2!) (= (ext_eq true (TYPE%vstd!set.Set. A&. A&) s1! s2!) (ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!))) :pattern ((ens%vstd!set.axiom_set_ext_equal_deep. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_ext_equal_deep")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (= (ext_eq true (TYPE%vstd!set.Set. A&. A&) s1! s2!) (ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!))) :pattern ((ext_eq true (TYPE%vstd!set.Set. A&. A&) s1! s2!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_mk_map_domain")
(declare-fun ens%vstd!set.axiom_mk_map_domain. (Dcr Type Dcr Type Poly %%Function%%) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! %%Function%%)) (! (= (ens%vstd!set.axiom_mk_map_domain. K&. K& V&. V& s! f!) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! (Poly%fun%1. f!))) s!)) :pattern ((ens%vstd!set.axiom_mk_map_domain. K&. K& V&. V& s! f!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_mk_map_domain")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. K&. K&)) (has_type f! (TYPE%fun%1. K&. K& V&. V&))) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! f!)) s!)) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! f!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_mk_map_index")
(declare-fun req%vstd!set.axiom_mk_map_index. (Dcr Type Dcr Type Poly %%Function%% Poly) Bool)
(declare-const %%global_location_label%%36 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! %%Function%%) (key! Poly)) (! (= (req%vstd!set.axiom_mk_map_index. K&. K& V&. V& s! f! key!) (=> %%global_location_label%%36 (vstd!set.impl&%0.contains.? K&. K& s! key!))) :pattern ((req%vstd!set.axiom_mk_map_index. K&. K& V&. V& s! f! key!)) )))
(declare-fun ens%vstd!set.axiom_mk_map_index. (Dcr Type Dcr Type Poly %%Function%% Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! %%Function%%) (key! Poly)) (! (= (ens%vstd!set.axiom_mk_map_index. K&. K& V&. V& s! f! key!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! (Poly%fun%1. f!)) key!) (%%apply%%0 f! key!))) :pattern ((ens%vstd!set.axiom_mk_map_index. K&. K& V&. V& s! f! key!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_mk_map_index")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! Poly) (key! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. K&. K&)) (has_type f! (TYPE%fun%1. K&. K& V&. V&)) (has_type key! K&)) (=> (vstd!set.impl&%0.contains.? K&. K& s! key!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! f!) key!) (%%apply%%0 (%Poly%fun%1. f!) key!)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! f!) key!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_empty_finite")
(declare-fun ens%vstd!set.axiom_set_empty_finite. (Dcr Type) Bool)
(assert (forall ((A&. Dcr) (A& Type)) (! (= (ens%vstd!set.axiom_set_empty_finite. A&. A&) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.empty.? A&. A&))) :pattern ((ens%vstd!set.axiom_set_empty_finite. A&. A&)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_empty_finite")
(assert (forall ((A&. Dcr) (A& Type)) (! (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.empty.? A&. A&)) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.empty.? A&. A&))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_insert_finite")
(declare-fun req%vstd!set.axiom_set_insert_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%37 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_insert_finite. A&. A& s! a!) (=> %%global_location_label%%37 (vstd!set.impl&%0.finite.? A&. A& s!))) :pattern ((req%vstd!set.axiom_set_insert_finite. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_insert_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_insert_finite. A&. A& s! a!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!))) :pattern ((ens%vstd!set.axiom_set_insert_finite. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_insert_finite")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.finite.? A&. A& s!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_finite")
(declare-fun req%vstd!set.axiom_set_remove_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%38 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_remove_finite. A&. A& s! a!) (=> %%global_location_label%%38 (vstd!set.impl&%0.finite.? A&. A& s!))) :pattern ((req%vstd!set.axiom_set_remove_finite. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_remove_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_remove_finite. A&. A& s! a!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!))) :pattern ((ens%vstd!set.axiom_set_remove_finite. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_finite")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.finite.? A&. A& s!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_union_finite")
(declare-fun req%vstd!set.axiom_set_union_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%39 Bool)
(declare-const %%global_location_label%%40 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (req%vstd!set.axiom_set_union_finite. A&. A& s1! s2!) (and (=> %%global_location_label%%39 (vstd!set.impl&%0.finite.? A&. A& s1!)) (=> %%global_location_label%%40 (vstd!set.impl&%0.finite.? A&. A& s2!)))) :pattern ((req%vstd!set.axiom_set_union_finite. A&. A& s1! s2!)) )))
(declare-fun ens%vstd!set.axiom_set_union_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_union_finite. A&. A& s1! s2!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!))) :pattern ((ens%vstd!set.axiom_set_union_finite. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_union_finite")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (=> (and (vstd!set.impl&%0.finite.? A&. A& s1!) (vstd!set.impl&%0.finite.? A&. A& s2!)) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_intersect_finite")
(declare-fun req%vstd!set.axiom_set_intersect_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%41 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (req%vstd!set.axiom_set_intersect_finite. A&. A& s1! s2!) (=> %%global_location_label%%41 (or (vstd!set.impl&%0.finite.? A&. A& s1!) (vstd!set.impl&%0.finite.? A&. A& s2!)))) :pattern ((req%vstd!set.axiom_set_intersect_finite. A&. A& s1! s2!)) )))
(declare-fun ens%vstd!set.axiom_set_intersect_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_intersect_finite. A&. A& s1! s2!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!))) :pattern ((ens%vstd!set.axiom_set_intersect_finite. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_intersect_finite")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (=> (or (vstd!set.impl&%0.finite.? A&. A& s1!) (vstd!set.impl&%0.finite.? A&. A& s2!)) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_difference_finite")
(declare-fun req%vstd!set.axiom_set_difference_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%42 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (req%vstd!set.axiom_set_difference_finite. A&. A& s1! s2!) (=> %%global_location_label%%42 (vstd!set.impl&%0.finite.? A&. A& s1!))) :pattern ((req%vstd!set.axiom_set_difference_finite. A&. A& s1! s2!)) )))
(declare-fun ens%vstd!set.axiom_set_difference_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_difference_finite. A&. A& s1! s2!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!))) :pattern ((ens%vstd!set.axiom_set_difference_finite. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_difference_finite")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (=> (vstd!set.impl&%0.finite.? A&. A& s1!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!))) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::choose")
(assert (fuel_bool_default fuel%vstd!set.impl&%0.choose.))
(declare-fun %%choose%%1 (Type Dcr Type Poly Dcr Type Poly) Poly)
(assert (forall ((%%hole%%0 Type) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Poly) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly)) (! (=> (exists ((a$ Poly)) (! (and (has_type a$ %%hole%%0) (vstd!set.impl&%0.contains.? %%hole%%1 %%hole%%2 %%hole%%3 a$)) :pattern ((vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 %%hole%%6 a$)) )) (exists ((a$ Poly)) (! (and (and (has_type a$ %%hole%%0) (vstd!set.impl&%0.contains.? %%hole%%1 %%hole%%2 %%hole%%3 a$)) (= (%%choose%%1 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) a$)) :pattern ((vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 %%hole%%6 a$))))) :pattern ((%%choose%%1 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6)))))
(assert (=> (fuel_bool fuel%vstd!set.impl&%0.choose.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!set.impl&%0.choose.? A&. A& self!) (as_type (%%choose%%1 A& A&. A& self! A&. A& self!) A&)) :pattern ((vstd!set.impl&%0.choose.? A&. A& self!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type (vstd!set.impl&%0.choose.? A&. A& self!) A&)) :pattern ((vstd!set.impl&%0.choose.? A&. A& self!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_choose_finite")
(declare-fun req%vstd!set.axiom_set_choose_finite. (Dcr Type Poly) Bool)
(declare-const %%global_location_label%%43 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (req%vstd!set.axiom_set_choose_finite. A&. A& s!) (=> %%global_location_label%%43 (not (vstd!set.impl&%0.finite.? A&. A& s!)))) :pattern ((req%vstd!set.axiom_set_choose_finite. A&. A& s!)) )))
(declare-fun ens%vstd!set.axiom_set_choose_finite. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (ens%vstd!set.axiom_set_choose_finite. A&. A& s!) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!))) :pattern ((ens%vstd!set.axiom_set_choose_finite. A&. A& s!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_choose_finite")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (=> (has_type s! (TYPE%vstd!set.Set. A&. A&)) (=> (not (vstd!set.impl&%0.finite.? A&. A& s!)) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_empty_len")
(declare-fun ens%vstd!set.axiom_set_empty_len. (Dcr Type) Bool)
(assert (forall ((A&. Dcr) (A& Type)) (! (= (ens%vstd!set.axiom_set_empty_len. A&. A&) (= (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.empty.? A&. A&)) 0)) :pattern ((ens%vstd!set.axiom_set_empty_len. A&. A&)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_empty_len")
(assert (forall ((A&. Dcr) (A& Type)) (! (= (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.empty.? A&. A&)) 0) :pattern ((vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.empty.? A&. A&))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_insert_len")
(declare-fun req%vstd!set.axiom_set_insert_len. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%44 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_insert_len. A&. A& s! a!) (=> %%global_location_label%%44 (vstd!set.impl&%0.finite.? A&. A& s!))) :pattern ((req%vstd!set.axiom_set_insert_len. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_insert_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_insert_len. A&. A& s! a!) (= (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!)) (Add (vstd!set.impl&%0.len.? A&. A& s!) (ite (vstd!set.impl&%0.contains.? A&. A& s! a!) 0 1)))) :pattern ((ens%vstd!set.axiom_set_insert_len. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_insert_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.finite.? A&. A& s!) (= (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!)) (Add (vstd!set.impl&%0.len.? A&. A& s!) (ite (vstd!set.impl&%0.contains.? A&. A& s! a!) 0 1))))) :pattern ((vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_len")
(declare-fun req%vstd!set.axiom_set_remove_len. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%45 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_remove_len. A&. A& s! a!) (=> %%global_location_label%%45 (vstd!set.impl&%0.finite.? A&. A& s!))) :pattern ((req%vstd!set.axiom_set_remove_len. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_remove_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_remove_len. A&. A& s! a!) (= (vstd!set.impl&%0.len.? A&. A& s!) (Add (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!)) (ite (vstd!set.impl&%0.contains.? A&. A& s! a!) 1 0)))) :pattern ((ens%vstd!set.axiom_set_remove_len. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.finite.? A&. A& s!) (= (vstd!set.impl&%0.len.? A&. A& s!) (Add (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!)) (ite (vstd!set.impl&%0.contains.? A&. A& s! a!) 1 0))))) :pattern ((vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_contains_len")
(declare-fun req%vstd!set.axiom_set_contains_len. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%46 Bool)
(declare-const %%global_location_label%%47 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_contains_len. A&. A& s! a!) (and (=> %%global_location_label%%46 (vstd!set.impl&%0.finite.? A&. A& s!)) (=> %%global_location_label%%47 (vstd!set.impl&%0.contains.? A&. A& s! a!)))) :pattern ((req%vstd!set.axiom_set_contains_len. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_contains_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_contains_len. A&. A& s! a!) (not (= (vstd!set.impl&%0.len.? A&. A& s!) 0))) :pattern ((ens%vstd!set.axiom_set_contains_len. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_contains_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (and (vstd!set.impl&%0.finite.? A&. A& s!) (vstd!set.impl&%0.contains.? A&. A& s! a!)) (not (= (vstd!set.impl&%0.len.? A&. A& s!) 0)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& s! a!) (vstd!set.impl&%0.len.? A&. A& s!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_choose_len")
(declare-fun req%vstd!set.axiom_set_choose_len. (Dcr Type Poly) Bool)
(declare-const %%global_location_label%%48 Bool)
(declare-const %%global_location_label%%49 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (req%vstd!set.axiom_set_choose_len. A&. A& s!) (and (=> %%global_location_label%%48 (vstd!set.impl&%0.finite.? A&. A& s!)) (=> %%global_location_label%%49 (not (= (vstd!set.impl&%0.len.? A&. A& s!) 0))))) :pattern ((req%vstd!set.axiom_set_choose_len. A&. A& s!)) )))
(declare-fun ens%vstd!set.axiom_set_choose_len. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (ens%vstd!set.axiom_set_choose_len. A&. A& s!) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!))) :pattern ((ens%vstd!set.axiom_set_choose_len. A&. A& s!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_choose_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (=> (has_type s! (TYPE%vstd!set.Set. A&. A&)) (=> (and (vstd!set.impl&%0.finite.? A&. A& s!) (not (= (vstd!set.impl&%0.len.? A&. A& s!) 0))) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!)))) :pattern ((vstd!set.impl&%0.len.? A&. A& s!) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!))) )))
(set-info :comment ";; Function-Axioms vstd::set_lib::impl&%0::is_empty")
(assert (fuel_bool_default fuel%vstd!set_lib.impl&%0.is_empty.))
(assert (=> (fuel_bool fuel%vstd!set_lib.impl&%0.is_empty.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!set_lib.impl&%0.is_empty.? A&. A& self!) (= (vstd!set.impl&%0.len.? A&. A& self!) 0)) :pattern ((vstd!set_lib.impl&%0.is_empty.? A&. A& self!)) ))))
(set-info :comment ";; Function-Specs vstd::set_lib::axiom_is_empty")
(declare-fun req%vstd!set_lib.axiom_is_empty. (Dcr Type Poly) Bool)
(declare-const %%global_location_label%%50 Bool)
(declare-const %%global_location_label%%51 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (req%vstd!set_lib.axiom_is_empty. A&. A& s!) (and (=> %%global_location_label%%50 (vstd!set.impl&%0.finite.? A&. A& s!)) (=> %%global_location_label%%51 (not (vstd!set_lib.impl&%0.is_empty.? A&. A& s!))))) :pattern ((req%vstd!set_lib.axiom_is_empty. A&. A& s!)) )))
(declare-fun ens%vstd!set_lib.axiom_is_empty. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (ens%vstd!set_lib.axiom_is_empty. A&. A& s!) (exists ((a$ Poly)) (! (and (has_type a$ A&) (vstd!set.impl&%0.contains.? A&. A& s! a$)) :pattern ((vstd!set.impl&%0.contains.? A&. A& s! a$)) ))) :pattern ((ens%vstd!set_lib.axiom_is_empty. A&. A& s!)) )))
(set-info :comment ";; Broadcast vstd::set_lib::axiom_is_empty")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (=> (has_type s! (TYPE%vstd!set.Set. A&. A&)) (=> (and (vstd!set.impl&%0.finite.? A&. A& s!) (not (vstd!set_lib.impl&%0.is_empty.? A&. A& s!))) (exists ((a$ Poly)) (! (and (has_type a$ A&) (vstd!set.impl&%0.contains.? A&. A& s! a$)) :pattern ((vstd!set.impl&%0.contains.? A&. A& s! a$)) )))) :pattern ((vstd!set_lib.impl&%0.is_empty.? A&. A& s!)) )))
(set-info :comment ";; Function-Axioms vstd::string::impl&%0::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! STRSLICE) (has_type (vstd!string.impl&%0.view.? self!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((vstd!string.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Specs vstd::string::axiom_str_literal_is_ascii")
(declare-fun ens%vstd!string.axiom_str_literal_is_ascii. (StrSlice) Bool)
(assert (forall ((s! StrSlice)) (! (= (ens%vstd!string.axiom_str_literal_is_ascii. s!) (= (vstd!string.impl&%0.is_ascii.? (S s!)) (str%strslice_is_ascii s!))) :pattern ((ens%vstd!string.axiom_str_literal_is_ascii. s!)) )))
(set-info :comment ";; Broadcast vstd::string::axiom_str_literal_is_ascii")
(assert (forall ((s! Poly)) (! (=> (has_type s! STRSLICE) (= (vstd!string.impl&%0.is_ascii.? s!) (str%strslice_is_ascii (%S s!)))) :pattern ((vstd!string.impl&%0.is_ascii.? s!)) )))
(set-info :comment ";; Function-Specs vstd::string::axiom_str_literal_len")
(declare-fun ens%vstd!string.axiom_str_literal_len. (StrSlice) Bool)
(assert (forall ((s! StrSlice)) (! (= (ens%vstd!string.axiom_str_literal_len. s!) (= (vstd!seq.Seq.len.? $ CHAR (vstd!string.impl&%0.view.? (S s!))) (str%strslice_len s!))) :pattern ((ens%vstd!string.axiom_str_literal_len. s!)) )))
(set-info :comment ";; Broadcast vstd::string::axiom_str_literal_len")
(assert (forall ((s! Poly)) (! (=> (has_type s! STRSLICE) (= (vstd!seq.Seq.len.? $ CHAR (vstd!string.impl&%0.view.? s!)) (str%strslice_len (%S s!)))) :pattern ((vstd!seq.Seq.len.? $ CHAR (vstd!string.impl&%0.view.? s!))) )))
(set-info :comment ";; Function-Specs vstd::string::axiom_str_literal_get_char")
(declare-fun ens%vstd!string.axiom_str_literal_get_char. (StrSlice Int) Bool)
(assert (forall ((s! StrSlice) (i! Int)) (! (= (ens%vstd!string.axiom_str_literal_get_char. s! i!) (= (%C (vstd!seq.Seq.index.? $ CHAR (vstd!string.impl&%0.view.? (S s!)) (I i!))) (str%strslice_get_char s! i!))) :pattern ((ens%vstd!string.axiom_str_literal_get_char. s! i!)) )))
(set-info :comment ";; Broadcast vstd::string::axiom_str_literal_get_char")
(assert (forall ((s! Poly) (i! Poly)) (! (=> (and (has_type s! STRSLICE) (has_type i! INT)) (= (%C (vstd!seq.Seq.index.? $ CHAR (vstd!string.impl&%0.view.? s!) i!)) (str%strslice_get_char (%S s!) (%I i!)))) :pattern ((vstd!seq.Seq.index.? $ CHAR (vstd!string.impl&%0.view.? s!) i!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::kind")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.kind.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.kind.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. fluent_controller!kubernetes_api_objects.spec.common.Kind./CustomResourceKind))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::controller_owner_ref")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.) (forall ((self! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? self!) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (B true)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)))))))) (%I (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!))))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::marshal")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.marshal.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/status (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::unmarshal")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. obj!) (Poly%core!result.Result. (ite (not (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. obj!)) ))))
(set-info :comment ";; Function-Axioms vstd::seq_lib::impl&%0::map_values")
(assert (fuel_bool_default fuel%vstd!seq_lib.impl&%0.map_values.))
(declare-fun %%lambda%%4 (Dcr Type Poly %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 %%Function%%) (i$ Poly)) (! (= (%%apply%%0 (%%lambda%%4 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) i$) (%%apply%%0 %%hole%%3 (vstd!seq.Seq.index.? %%hole%%0 %%hole%%1 %%hole%%2 i$))) :pattern ((%%apply%%0 (%%lambda%%4 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) i$)))))
(assert (=> (fuel_bool fuel%vstd!seq_lib.impl&%0.map_values.) (forall ((A&. Dcr) (A& Type) (B&. Dcr) (B& Type) (self! Poly) (f! Poly)) (! (= (vstd!seq_lib.impl&%0.map_values.? A&. A& B&. B& self! f!) (vstd!seq.Seq.new.? B&. B& $ (TYPE%fun%1. $ INT B&. B&) (I (vstd!seq.Seq.len.? A&. A& self!)) (Poly%fun%1. (mk_fun (%%lambda%%4 A&. A& self! (%Poly%fun%1. f!)))))) :pattern ((vstd!seq_lib.impl&%0.map_values.? A&. A& B&. B& self! f!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (B&. Dcr) (B& Type) (self! Poly) (f! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type f! (TYPE%fun%1. A&. A& B&. B&))) (has_type (vstd!seq_lib.impl&%0.map_values.? A&. A& B&. B& self! f!) (TYPE%vstd!seq.Seq. B&. B&))) :pattern ((vstd!seq_lib.impl&%0.map_values.? A&. A& B&. B& self! f!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_service_account_key")
(assert (forall ((Self%&. Dcr) (Self%& Type) (fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account_key.? Self%&. Self%& fb!) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account_key.? Self%&. Self%& fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_role_key")
(assert (forall ((Self%&. Dcr) (Self%& Type) (fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_key.? Self%&. Self%& fb!) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_key.? Self%&. Self%& fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_role_binding_key")
(assert (forall ((Self%&. Dcr) (Self%& Type) (fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding_key.? Self%&. Self%& fb!) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding_key.? Self%&. Self%& fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_service_key")
(assert (forall ((Self%&. Dcr) (Self%& Type) (fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_key.? Self%&. Self%& fb!) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_key.? Self%&. Self%& fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_daemon_set_key")
(assert (forall ((Self%&. Dcr) (Self%& Type) (fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set_key.? Self%&. Self%& fb!) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set_key.? Self%&. Self%& fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_service_account")
(assert (forall ((Self%&. Dcr) (Self%& Type) (fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account.? Self%&. Self%& fb!) TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account.? Self%&. Self%& fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_role")
(assert (forall ((Self%&. Dcr) (Self%& Type) (fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role.? Self%&. Self%& fb!) TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role.? Self%&. Self%& fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_role_binding")
(assert (forall ((Self%&. Dcr) (Self%& Type) (fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding.? Self%&. Self%& fb!) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding.? Self%&. Self%& fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_service")
(assert (forall ((Self%&. Dcr) (Self%& Type) (fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service.? Self%&. Self%& fb!) TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service.? Self%&. Self%& fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::maker::Maker::make_daemon_set")
(assert (forall ((Self%&. Dcr) (Self%& Type) (fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set.? Self%&. Self%& fb!) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set.? Self%&. Self%& fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::deletion_timestamp")
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.deletion_timestamp.? no%param) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.deletion_timestamp.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.default.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) (Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::kind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.kind.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.kind.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. fluent_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::empty_status")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.resource.empty_status.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.resource.empty_status.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.empty_status.? no%param) fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView./EmptyStatusView) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.empty_status.? no%param)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::marshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.marshal.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%tuple%2. (tuple%2./tuple%2 (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data (%Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!))) (Poly%tuple%0. tuple%0./tuple%0))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (fluent_controller!kubernetes_api_objects.spec.resource.empty_status.? (I 0)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::unmarshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. obj!) (Poly%core!result.Result. (ite (not (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (tuple%2./tuple%2/0 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerPortView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView (%I (I 0)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerPortView::set_container_port")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.) (forall ((self! Poly) (container_port! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? self! container_port!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView (%I container_port!) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? self! container_port!)) ))))
(assert (forall ((self! Poly) (container_port! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (has_type container_port! INT)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? self! container_port!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? self! container_port!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerPortView::set_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? self! name!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView (%I (I (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/container_port (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some name!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? self! name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? self! name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::VolumeMountView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (B false)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::EnvVarView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::EnvVarSourceView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.default.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::set_metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.) (forall ((self! Poly) (metadata! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.? self! metadata!) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. metadata!) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.? self! metadata!)) ))))
(assert (forall ((self! Poly) (metadata! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (has_type metadata! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.? self! metadata!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.? self! metadata!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::set_spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.) (forall ((self! Poly) (spec! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.? self! spec!) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some spec!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.? self! spec!)) ))))
(assert (forall ((self! Poly) (spec! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (has_type spec! TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.? self! spec!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.? self! spec!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::kind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.kind.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.kind.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. fluent_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::marshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.marshal.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::unmarshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!) (Poly%core!result.Result. (ite (not (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::label_selector::LabelSelectorView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetSpecView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? (I 0)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? (I 0)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetSpecView::set_selector")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.) (forall ((self! Poly) (selector! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.? self! selector!) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. selector!) (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.? self! selector!)) ))))
(assert (forall ((self! Poly) (selector! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) (has_type selector! TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.? self! selector!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.? self! selector!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetSpecView::set_template")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.) (forall ((self! Poly) (template! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.? self! template!) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. template!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.? self! template!)) ))))
(assert (forall ((self! Poly) (template! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) (has_type template! TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.? self! template!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.? self! template!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::label_selector::LabelSelectorView::set_match_labels")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.) (forall ((self! Poly) (match_labels! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? self! match_labels!) (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some match_labels!))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? self! match_labels!)) ))))
(assert (forall ((self! Poly) (match_labels! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (has_type match_labels! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? self! match_labels!)) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? self! match_labels!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::owner_references_only_contains")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.) (forall ((self! Poly) (owner_ref! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? self! owner_ref!) (let ((tmp%%$ (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (and (is-core!option.Option./Some_ tmp%%$) (let ((owner_refs$ (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)))))) (= owner_refs$ (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) owner_ref!))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? self! owner_ref!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? self! name!) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some name!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? self! name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? self! name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_labels")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.) (forall ((self! Poly) (labels! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? self! labels!) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some labels!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? self! labels!)) ))))
(assert (forall ((self! Poly) (labels! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type labels! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? self! labels!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? self! labels!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_annotations")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.) (forall ((self! Poly) (annotations! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? self! annotations!) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some annotations!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? self! annotations!)) ))))
(assert (forall ((self! Poly) (annotations! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type annotations! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? self! annotations!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? self! annotations!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_owner_references")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.) (forall ((self! Poly) (owner_references! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? self! owner_references!) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some owner_references!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? self! owner_references!)) ))))
(assert (forall ((self! Poly) (owner_references! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type owner_references! (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? self! owner_references!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? self! owner_references!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.default.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::kind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.kind.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.kind.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. fluent_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::marshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.marshal.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::unmarshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. obj!) (Poly%core!result.Result. (ite (not (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.default.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.) (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodView::kind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.kind.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.kind.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.) (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. fluent_controller!kubernetes_api_objects.spec.common.Kind./PodKind))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodView::marshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.marshal.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.)) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodView::unmarshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. obj!) (Poly%core!result.Result. (ite (not (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.)))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::set_metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.) (forall ((self! Poly) (metadata! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? self! metadata!) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some metadata!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? self! metadata!)) ))))
(assert (forall ((self! Poly) (metadata! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type metadata! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? self! metadata!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? self! metadata!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::set_spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.) (forall ((self! Poly) (spec! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? self! spec!) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some spec!))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? self! spec!)) ))))
(assert (forall ((self! Poly) (spec! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type spec! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? self! spec!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? self! spec!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role::RoleView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.default.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.) (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role::RoleView::kind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.kind.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.kind.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.) (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleKind))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role::RoleView::marshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.marshal.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%tuple%2. (tuple%2./tuple%2 (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!))) (Poly%tuple%0. tuple%0./tuple%0))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (fluent_controller!kubernetes_api_objects.spec.resource.empty_status.? (I 0)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role::RoleView::unmarshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. obj!) (Poly%core!result.Result. (ite (not (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (tuple%2./tuple%2/0 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleRefView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.default.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::set_metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_metadata.) (forall ((self! Poly) (metadata! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_metadata.? self! metadata!) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. metadata!) (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/subjects (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_metadata.? self! metadata!)) ))))
(assert (forall ((self! Poly) (metadata! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) (has_type metadata! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_metadata.? self! metadata!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_metadata.? self! metadata!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::set_role_ref")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_role_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_role_ref.) (forall ((self! Poly) (role_ref! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_role_ref.? self! role_ref!) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. role_ref!) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/subjects (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_role_ref.? self! role_ref!)) ))))
(assert (forall ((self! Poly) (role_ref! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) (has_type role_ref! TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_role_ref.? self! role_ref!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_role_ref.? self! role_ref!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::set_subjects")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_subjects.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_subjects.) (forall ((self! Poly) (subjects! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_subjects.? self! subjects!) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some subjects!))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_subjects.? self! subjects!)) ))))
(assert (forall ((self! Poly) (subjects! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) (has_type subjects! (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_subjects.? self! subjects!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_subjects.? self! subjects!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::kind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.kind.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.kind.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleBindingKind))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::marshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.marshal.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!))) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/subjects (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (fluent_controller!kubernetes_api_objects.spec.resource.empty_status.? (I 0)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::unmarshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. obj!) (Poly%core!result.Result. (ite (not (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (tuple%2./tuple%2/0 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (%Poly%core!option.Option. (tuple%2./tuple%2/1 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleRefView::set_api_group")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_api_group.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_api_group.) (forall ((self! Poly) (api_group! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_api_group.? self! api_group!) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView api_group! (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. self!)) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_api_group.? self! api_group!)) ))))
(assert (forall ((self! Poly) (api_group! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) (has_type api_group! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_api_group.? self! api_group!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_api_group.? self! api_group!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleRefView::set_kind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_kind.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_kind.) (forall ((self! Poly) (kind! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_kind.? self! kind!) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/api_group (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. self!)) kind! (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_kind.? self! kind!)) ))))
(assert (forall ((self! Poly) (kind! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) (has_type kind! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_kind.? self! kind!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_kind.? self! kind!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleRefView::set_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_name.? self! name!) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/api_group (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. self!)) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. self!)) name!)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_name.? self! name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_name.? self! name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::SubjectView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::SubjectView::set_kind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_kind.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_kind.) (forall ((self! Poly) (kind! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_kind.? self! kind!) (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView kind! (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_kind.? self! kind!)) ))))
(assert (forall ((self! Poly) (kind! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.) (has_type kind! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_kind.? self! kind!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_kind.? self! kind!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::SubjectView::set_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_name.? self! name!) (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. self!)) name! (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_name.? self! name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_name.? self! name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::SubjectView::set_namespace")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_namespace.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_namespace.) (forall ((self! Poly) (namespace! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_namespace.? self! namespace!) (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. self!)) (fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView./SubjectView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some namespace!))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_namespace.? self! namespace!)) ))))
(assert (forall ((self! Poly) (namespace! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.) (has_type namespace! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_namespace.? self! namespace!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_namespace.? self! namespace!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::secret::SecretView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.default.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.) (Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::secret::SecretView::kind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.kind.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.kind.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.) (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. fluent_controller!kubernetes_api_objects.spec.common.Kind./SecretKind))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::secret::SecretView::marshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.marshal.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.)) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (Poly%tuple%2. (tuple%2./tuple%2 (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/data (%Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!))) (Poly%tuple%0. tuple%0./tuple%0))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (fluent_controller!kubernetes_api_objects.spec.resource.empty_status.? (I 0)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::secret::SecretView::unmarshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. obj!) (Poly%core!result.Result. (ite (not (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.)))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (tuple%2./tuple%2/0 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service::ServiceView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.default.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service::ServiceView::kind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.kind.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.kind.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.) (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service::ServiceView::marshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.marshal.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service::ServiceView::unmarshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. obj!) (Poly%core!result.Result. (ite (not (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service::ServiceSpecView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%2.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%2.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.service.impl&%2.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.impl&%2.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (fluent_controller!kubernetes_api_objects.spec.service.impl&%2.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.impl&%2.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service::ServicePortView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%3.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%3.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.service.impl&%3.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%I (I 0)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.impl&%3.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (fluent_controller!kubernetes_api_objects.spec.service.impl&%3.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.service.impl&%3.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service_account::ServiceAccountView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.default.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.) (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service_account::ServiceAccountView::kind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.kind.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.kind.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.) (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceAccountKind))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service_account::ServiceAccountView::marshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.marshal.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%tuple%2. (tuple%2./tuple%2 (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/automount_service_account_token (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!))) (Poly%tuple%0. tuple%0./tuple%0))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (fluent_controller!kubernetes_api_objects.spec.resource.empty_status.? (I 0)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service_account::ServiceAccountView::unmarshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. obj!) (Poly%core!result.Result. (ite (not (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (tuple%2./tuple%2/0 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.default.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::kind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.kind.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.kind.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. fluent_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::marshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.marshal.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::unmarshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. obj!) (Poly%core!result.Result. (ite (not (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::set_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? self! name!) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) name! (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? self! name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? self! name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::set_host_path")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.) (forall ((self! Poly) (host_path! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? self! host_path!) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some host_path!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? self! host_path!)) ))))
(assert (forall ((self! Poly) (host_path! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type host_path! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? self! host_path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? self! host_path!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::set_secret")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.) (forall ((self! Poly) (secret! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.? self! secret!) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some secret!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.? self! secret!)) ))))
(assert (forall ((self! Poly) (secret! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type secret! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.? self! secret!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.? self! secret!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::HostPathVolumeSourceView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::HostPathVolumeSourceView::set_path")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.) (forall ((self! Poly) (path! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? self! path!) (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView path!)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? self! path!)) ))))
(assert (forall ((self! Poly) (path! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) (has_type path! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? self! path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? self! path!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::SecretVolumeSourceView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::SecretVolumeSourceView::set_secret_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.) (forall ((self! Poly) (secret_name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.? self! secret_name!) (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some secret_name!))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.? self! secret_name!)) ))))
(assert (forall ((self! Poly) (secret_name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) (has_type secret_name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.? self! secret_name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.? self! secret_name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::ObjectFieldSelectorView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? no%param)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::len")
(assert (fuel_bool_default fuel%vstd!map.impl&%0.len.))
(assert (=> (fuel_bool fuel%vstd!map.impl&%0.len.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly)) (! (= (vstd!map.impl&%0.len.? K&. K& V&. V& self!) (vstd!set.impl&%0.len.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& self!))) :pattern ((vstd!map.impl&%0.len.? K&. K& V&. V& self!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (<= 0 (vstd!map.impl&%0.len.? K&. K& V&. V& self!))) :pattern ((vstd!map.impl&%0.len.? K&. K& V&. V& self!)) )))
(set-info :comment ";; Function-Axioms vstd::map_lib::impl&%0::contains_key")
(assert (fuel_bool_default fuel%vstd!map_lib.impl&%0.contains_key.))
(assert (=> (fuel_bool fuel%vstd!map_lib.impl&%0.contains_key.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (k! Poly)) (! (= (vstd!map_lib.impl&%0.contains_key.? K&. K& V&. V& self! k!) (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) k!)) :pattern ((vstd!map_lib.impl&%0.contains_key.? K&. K& V&. V& self! k!)) ))))
(set-info :comment ";; Function-Axioms vstd::map_lib::impl&%0::contains_value")
(assert (fuel_bool_default fuel%vstd!map_lib.impl&%0.contains_value.))
(assert (=> (fuel_bool fuel%vstd!map_lib.impl&%0.contains_value.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (v! Poly)) (! (= (vstd!map_lib.impl&%0.contains_value.? K&. K& V&. V& self! v!) (exists ((i$ Poly)) (! (and (has_type i$ K&) (and (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) i$) (= (vstd!map.impl&%0.index.? K&. K& V&. V& self! i$) v!))) :pattern ((vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) i$)) ))) :pattern ((vstd!map_lib.impl&%0.contains_value.? K&. K& V&. V& self! v!)) ))))
(set-info :comment ";; Function-Axioms vstd::map_lib::impl&%0::values")
(assert (fuel_bool_default fuel%vstd!map_lib.impl&%0.values.))
(declare-fun %%lambda%%5 (Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Poly) (v$ Poly)) (! (= (%%apply%%0 (%%lambda%%5 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) v$) (B (vstd!map_lib.impl&%0.contains_value.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 v$))) :pattern ((%%apply%%0 (%%lambda%%5 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) v$)))))
(assert (=> (fuel_bool fuel%vstd!map_lib.impl&%0.values.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly)) (! (= (vstd!map_lib.impl&%0.values.? K&. K& V&. V& self!) (vstd!set.impl&%0.new.? V&. V& $ (TYPE%fun%1. V&. V& $ BOOL) (Poly%fun%1. (mk_fun (%%lambda%%5 K&. K& V&. V& self!))))) :pattern ((vstd!map_lib.impl&%0.values.? K&. K& V&. V& self!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type (vstd!map_lib.impl&%0.values.? K&. K& V&. V& self!) (TYPE%vstd!set.Set. V&. V&))) :pattern ((vstd!map_lib.impl&%0.values.? K&. K& V&. V& self!)) )))
(set-info :comment ";; Function-Axioms vstd::multiset::impl&%0::remove")
(assert (fuel_bool_default fuel%vstd!multiset.impl&%0.remove.))
(assert (=> (fuel_bool fuel%vstd!multiset.impl&%0.remove.) (forall ((V&. Dcr) (V& Type) (self! Poly) (v! Poly)) (! (= (vstd!multiset.impl&%0.remove.? V&. V& self! v!) (vstd!multiset.impl&%0.sub.? V&. V& self! (vstd!multiset.impl&%0.singleton.? V&. V& v!))) :pattern ((vstd!multiset.impl&%0.remove.? V&. V& self! v!)) ))))
(assert (forall ((V&. Dcr) (V& Type) (self! Poly) (v! Poly)) (! (=> (and (has_type self! (TYPE%vstd!multiset.Multiset. V&. V&)) (has_type v! V&)) (has_type (vstd!multiset.impl&%0.remove.? V&. V& self! v!) (TYPE%vstd!multiset.Multiset. V&. V&))) :pattern ((vstd!multiset.impl&%0.remove.? V&. V& self! v!)) )))
(set-info :comment ";; Function-Axioms vstd::multiset::impl&%0::contains")
(assert (fuel_bool_default fuel%vstd!multiset.impl&%0.contains.))
(assert (=> (fuel_bool fuel%vstd!multiset.impl&%0.contains.) (forall ((V&. Dcr) (V& Type) (self! Poly) (v! Poly)) (! (= (vstd!multiset.impl&%0.contains.? V&. V& self! v!) (> (vstd!multiset.impl&%0.count.? V&. V& self! v!) 0)) :pattern ((vstd!multiset.impl&%0.contains.? V&. V& self! v!)) ))))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::filter")
(assert (fuel_bool_default fuel%vstd!set.impl&%0.filter.))
(assert (=> (fuel_bool fuel%vstd!set.impl&%0.filter.) (forall ((A&. Dcr) (A& Type) (F&. Dcr) (F& Type) (self! Poly) (f! Poly)) (! (= (vstd!set.impl&%0.filter.? A&. A& F&. F& self! f!) (vstd!set.impl&%0.intersect.? A&. A& self! (vstd!set.impl&%0.new.? A&. A& F&. F& f!))) :pattern ((vstd!set.impl&%0.filter.? A&. A& F&. F& self! f!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (F&. Dcr) (F& Type) (self! Poly) (f! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type f! F&)) (has_type (vstd!set.impl&%0.filter.? A&. A& F&. F& self! f!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.filter.? A&. A& F&. F& self! f!)) )))
(set-info :comment ";; Function-Specs vstd::set_lib::impl&%0::to_seq")
(declare-fun req%vstd!set_lib.impl&%0.to_seq. (Dcr Type Poly) Bool)
(declare-const %%global_location_label%%52 Bool)
(declare-const %%global_location_label%%53 Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (req%vstd!set_lib.impl&%0.to_seq. A&. A& self!) (and (=> %%global_location_label%%52 (vstd!set.impl&%0.finite.? A&. A& self!)) (=> %%global_location_label%%53 (vstd!set.impl&%0.finite.? A&. A& self!)))) :pattern ((req%vstd!set_lib.impl&%0.to_seq. A&. A& self!)) )))
(set-info :comment ";; Function-Axioms vstd::set_lib::impl&%0::to_seq")
(assert (fuel_bool_default fuel%vstd!set_lib.impl&%0.to_seq.))
(declare-const fuel_nat%vstd!set_lib.impl&%0.to_seq. Fuel)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (fuel% Fuel)) (! (= (vstd!set_lib.impl&%0.rec%to_seq.? A&. A& self! fuel%) (vstd!set_lib.impl&%0.rec%to_seq.? A&. A& self! zero)) :pattern ((vstd!set_lib.impl&%0.rec%to_seq.? A&. A& self! fuel%)) )))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (fuel% Fuel)) (! (=> (vstd!set.impl&%0.finite.? A&. A& self!) (= (vstd!set_lib.impl&%0.rec%to_seq.? A&. A& self! (succ fuel%)) (ite (= (vstd!set.impl&%0.len.? A&. A& self!) 0) (vstd!seq.Seq.empty.? A&. A&) (let ((x$ (vstd!set.impl&%0.choose.? A&. A& self!))) (vstd!seq.Seq.add.? A&. A& (vstd!seq.Seq.push.? A&. A& (vstd!seq.Seq.empty.? A&. A&) x$) (vstd!set_lib.impl&%0.rec%to_seq.? A&. A& (vstd!set.impl&%0.remove.? A&. A& self! x$) fuel%)))))) :pattern ((vstd!set_lib.impl&%0.rec%to_seq.? A&. A& self! (succ fuel%))) )))
(assert (=> (fuel_bool fuel%vstd!set_lib.impl&%0.to_seq.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (vstd!set.impl&%0.finite.? A&. A& self!) (= (vstd!set_lib.impl&%0.to_seq.? A&. A& self!) (vstd!set_lib.impl&%0.rec%to_seq.? A&. A& self! (succ fuel_nat%vstd!set_lib.impl&%0.to_seq.)))) :pattern ((vstd!set_lib.impl&%0.to_seq.? A&. A& self!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type (vstd!set_lib.impl&%0.to_seq.? A&. A& self!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!set_lib.impl&%0.to_seq.? A&. A& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::common::make_base_labels")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? fb!) (vstd!map.impl&%0.insert.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!map.impl&%0.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!string.impl&%0.view.? (S (str%new_strlit 1588539530315223847722953298287299374188107919534831743833089341130026030232599932513390495630937258371487356320380652074008820394790478717851686026166260))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? fb!) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::common::make_labels")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!) (vstd!map_lib.impl&%0.union_prefer_right.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/labels (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? fb!))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::common::make_owner_references")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? fb!))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_daemon_set_name")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? fb!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? fb!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_daemon_set_key")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.? fb!) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? fb!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::DaemonSetBuilder::get_request")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.get_request.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.get_request.) (forall ((fb! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.? fb!)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service_account::make_service_account_name")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? fb!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? fb!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_env")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.) (forall ((fluentbit! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.? fluentbit!) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (let ((tmp%%$ (vstd!string.impl&%0.view.? (S (str%new_strlit 9550466510480779651798518457849037047237641748796675704158654176747731341429154373116049408924990895415352019938555218772777122838084397998445529115124565))))) (let ((tmp%%$1 (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (let ((tmp%%$2 (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (let ((tmp%%$3 (vstd!string.impl&%0.view.? (S (str%new_strlit 64393076556699018832344577135365479561768770771401520297537358859344473356268027959831425057158022047466927942309151218166757023944512337170110073956888))))) (let ((tmp%%$4 (fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView tmp%%$3 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. tmp%%$4)))))))))))) (let ((tmp%%$5 (fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2))))))))) (let ((tmp%%$6 (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView tmp%%$ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. tmp%%$6))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (let ((tmp%%$ (vstd!string.impl&%0.view.? (S (str%new_strlit 4768814570999511162394561399398956999011928061222181226755600835900975716078550342214188204668845402090277929816219234254995916206960342802930184981260636))))) (let ((tmp%%$8 (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (let ((tmp%%$9 (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (let ((tmp%%$10 (vstd!string.impl&%0.view.? (S (str%new_strlit 10411321872159765285695605998453805166173003670098616158230252450521803095579307289600573816808438699163715549734699717987061629003941626929420819184189838))))) (let ((tmp%%$11 (fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView tmp%%$10 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. tmp%%$11)))))))))))) (let ((tmp%%$12 (fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$9))))))))) (let ((tmp%%$13 (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView tmp%%$ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. tmp%%$13))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$8)))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.? fluentbit!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_fluentbit_pod_spec")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.? fb!) (let ((tmp%%$ (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? fb!)))) (let ((tmp%%$1 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? (I 0)))))))) (let ((tmp%%$2 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? (I 0)))))))) (let ((tmp%%$3 (core!option.Option./Some (let ((config_volume$ (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 6678607023766901003382792270755106839987488175314763130247827673500039439619877039894095328997409234502992370220758737201180362481988301437861459862146975))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.? (I 0))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (let ((varlibcontainers_volume$ (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 2188484148999715820567550310581584205618976198226877163958291952884946948463914907639463823229956356335530263980388391746240019128775406001113048046233606))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? (I 0))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 2986636482548710285677028065817660791431940228625394886827414695412603994254767361533053524611833003592685383424625662914703292184544526931544594539404640))))))))) (let ((varlogs_volume$ (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 3743801436055201967048338775671880418229201396449657765838821313251633754808912614152114010959701525227612556044070361911264437280130628942373770239894540))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 4793832593508748126062412560919596840999431480869477173681988386390804304583718534059870468177480278076944568094705628720994167287570111633928006306301577)))))))) (let ((systemd_volume$ (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 122212878595673449829719842073427176754837956572540612546561083152789401078824327220238293894759906354761009078812220123180886792052392037942955010988387))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 6183886151335330243309781750450179173756400907066207114935617997922946899918062452431260614589004314563657773501759077048031969620057795531086325738747973)))))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (let ((positions_volume$ (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 7889039982558046029918101647923170407751467778923610144010826363328663535128275517520283735849640060036239581749328276675338550581679672548617791033057592))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) (ite (and (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlibcontainers_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlogs_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. systemd_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. positions_volume$)) (ite (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlibcontainers_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlogs_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. systemd_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. positions_volume$)) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. positions_volume$)) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. positions_volume$)))))) (ite (and (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlibcontainers_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlogs_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. systemd_volume$)) (ite (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlibcontainers_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlogs_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. systemd_volume$)) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$))))))))))))) (let ((tmp%%$4 (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (let ((tmp%%$5 (vstd!string.impl&%0.view.? (S (str%new_strlit 7881052882422921235722426700610922165188017386415854660729740325580127329785066396001445078186247073941595726607205695926084835405406421321072071134247673))))) (let ((tmp%%$6 (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (let ((tmp%%$7 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))))))) (let ((tmp%%$8 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (core!option.Option./Some (vstd!seq.Seq.add.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.? fb!)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (core!option.Option./Some (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.? fb!)))))) (let ((tmp%%$9 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))))))) (let ((tmp%%$10 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))))))) (let ((tmp%%$11 (core!option.Option./Some (let ((config_vm$ (let ((tmp%%$12 (vstd!string.impl&%0.view.? (S (str%new_strlit 6678607023766901003382792270755106839987488175314763130247827673500039439619877039894095328997409234502992370220758737201180362481988301437861459862146975))))) (let ((tmp%%$13 (core!option.Option./Some (B true)))) (let ((tmp%%$14 (vstd!string.impl&%0.view.? (S (str%new_strlit 4740988007756251278903355284580602604292836851380638627647227593127321202678737275884742936596140568353736972636041224343058507233621261049226929258853254))))) (let ((tmp%%$15 (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView tmp%%$14 tmp%%$12 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$13)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$15))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$15)))))))))))) (let ((varlibcontainers_vm$ (let ((tmp%%$16 (vstd!string.impl&%0.view.? (S (str%new_strlit 2188484148999715820567550310581584205618976198226877163958291952884946948463914907639463823229956356335530263980388391746240019128775406001113048046233606))))) (let ((tmp%%$17 (core!option.Option./Some (B true)))) (let ((tmp%%$18 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 2986636482548710285677028065817660791431940228625394886827414695412603994254767361533053524611833003592685383424625662914703292184544526931544594539404640)))))) (let ((tmp%%$19 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$20 (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView tmp%%$18 tmp%%$16 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$17)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$20))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$19)))))))))) (let ((varlogs_vm$ (let ((tmp%%$21 (vstd!string.impl&%0.view.? (S (str%new_strlit 3743801436055201967048338775671880418229201396449657765838821313251633754808912614152114010959701525227612556044070361911264437280130628942373770239894540))))) (let ((tmp%%$22 (core!option.Option./Some (B true)))) (let ((tmp%%$23 (vstd!string.impl&%0.view.? (S (str%new_strlit 6272566318008270777155235636746808270676967237696972794859305908012088134347385737708372067337873385443178143250252868832229381275457591864337640110641362))))) (let ((tmp%%$24 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$25 (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView tmp%%$23 tmp%%$21 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$22)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$25))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$24)))))))))) (let ((systemd_vm$ (let ((tmp%%$26 (vstd!string.impl&%0.view.? (S (str%new_strlit 122212878595673449829719842073427176754837956572540612546561083152789401078824327220238293894759906354761009078812220123180886792052392037942955010988387))))) (let ((tmp%%$27 (core!option.Option./Some (B true)))) (let ((tmp%%$28 (vstd!string.impl&%0.view.? (S (str%new_strlit 6183886151335330243309781750450179173756400907066207114935617997922946899918062452431260614589004314563657773501759077048031969620057795531086325738747973))))) (let ((tmp%%$29 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$30 (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView tmp%%$28 tmp%%$26 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$27)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$30))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$29)))))))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (let ((positions_vm$ (let ((tmp%%$31 (vstd!string.impl&%0.view.? (S (str%new_strlit 7889039982558046029918101647923170407751467778923610144010826363328663535128275517520283735849640060036239581749328276675338550581679672548617791033057592))))) (let ((tmp%%$32 (vstd!string.impl&%0.view.? (S (str%new_strlit 8409811131834410820989463516710410339829238541791786943037409582883563673891990171794899796341077643301370401044813077132816831776225250446645593331662015))))) (let ((tmp%%$33 (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView tmp%%$32 tmp%%$31 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$33))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$33))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$33))))))))))) (ite (and (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlibcontainers_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlogs_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. systemd_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. positions_vm$)) (ite (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlibcontainers_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlogs_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. systemd_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. positions_vm$)) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. positions_vm$)) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. positions_vm$)))))) (ite (and (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlibcontainers_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlogs_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. systemd_vm$)) (ite (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlibcontainers_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlogs_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. systemd_vm$)) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$))))))))))))) (let ((tmp%%$34 (let ((metrics_port$ (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 12996891269909683618396389987975855564405211863374334940199411544310622399543574228102322243042075839366557607162402253822598179187328569546822102670603817))))) (I (let ((port$ (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (%I (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) 2020))) port$))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (core!option.Option./Some (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. metrics_port$))) (core!option.Option./Some (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. metrics_port$))))))) (let ((tmp%%$35 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$36 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))))))) (let ((tmp%%$37 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))))))) (let ((tmp%%$38 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))))))) (let ((tmp%%$39 (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$8)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$6)) tmp%%$5 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$34)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$11)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. tmp%%$39))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$35)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$10)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$9)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$37)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$7)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$36)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$38))))))))))))))))))))) (let ((tmp%%$40 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$41 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$42 (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/node_selector (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (let ((tmp%%$43 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/runtime_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$44 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/dns_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$45 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/priority_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$46 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/scheduler_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$47 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$48 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/host_network (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$49 (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$41)) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. tmp%%$4)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$40)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$42)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$43)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$44)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$45)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$46)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$47)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$48)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. tmp%%$49))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1))))))))))))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_daemon_set")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!) (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.? (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.? (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0))) (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? fb!))) (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.? (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.? (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.? (I 0))) (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? (I 0))) (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? fb!))))) (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? (I 0))) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0))) (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.? fb!)))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::DaemonSetBuilder::make")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.make.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.make.) (forall ((fb! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!) (Poly%core!result.Result. (core!result.Result./Ok (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::update_daemon_set")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.) (forall ((fb! Poly) (found_daemon_set! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.? fb! found_daemon_set!) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!))))) (let ((tmp%%$1 core!option.Option./None)) (let ((tmp%%$2 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!))))))))) (let ((tmp%%$3 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!))))))))) (let ((tmp%%$4 (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. found_daemon_set!)))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (let ((tmp%%$ (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!))))))))))) (let ((tmp%%$6 (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. found_daemon_set!)))))))) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. tmp%%$6))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. tmp%%$))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. found_daemon_set!)))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.? fb! found_daemon_set!)) ))))
(assert (forall ((fb! Poly) (found_daemon_set! Poly)) (! (=> (and (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type found_daemon_set! TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.? fb! found_daemon_set!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.? fb! found_daemon_set!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::DaemonSetBuilder::update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.update.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.update.) (forall ((fb! Poly) (state! Poly) (obj! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!) (Poly%core!result.Result. (let ((ds$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!)))) (let ((found_ds$ (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. ds$)))))) (ite (and (and (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. ds$))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. found_ds$)))) (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? fb!)))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. found_ds$))))))))) (core!result.Result./Ok (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.? fb! (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. found_ds$))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0))))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::DaemonSetBuilder::state_after_create")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_create.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_create.) (forall ((fb! Poly) (obj! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!) (Poly%core!result.Result. (let ((ds$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. ds$))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Done))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::DaemonSetBuilder::state_after_update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_update.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_update.) (forall ((fb! Poly) (obj! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!) (Poly%core!result.Result. (let ((ds$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. ds$))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Done))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role::make_role_name")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_name.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_name.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_name.? fb!) (vstd!seq.Seq.add.? $ CHAR (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 8156166674908195230838933353240013283853417389500066066320590005265797182010586667196031019128000652771236495269211875475440895309743564084942140530460532))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_name.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_name.? fb!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_name.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role::make_role_key")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_key.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_key.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_key.? fb!) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_name.? fb!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_key.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_key.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_key.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role::RoleBuilder::get_request")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.get_request.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.get_request.) (forall ((fb! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_key.? fb!)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role::make_role")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role.? fb!) (let ((tmp%%$ (let ((tmp%%$1 (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_name.? fb!)))) (let ((tmp%%$2 (core!option.Option./Some (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!))))) (let ((tmp%%$3 (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!)))) (let ((tmp%%$4 (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (let ((tmp%%$5 (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$4)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))))))))))) (let ((tmp%%$6 (core!option.Option./Some (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView.) (Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (vstd!seq.Seq.push.? $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!seq.Seq.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (vstd!seq.Seq.push.? $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!seq.Seq.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!string.impl&%0.view.? (S (str%new_strlit 12008608409545268432668856100963577904598017581867327734044564692176672279137966545652891231359012519244670467895420564571861508209652503536757562848809642))))))) (vstd!seq.Seq.push.? $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!seq.Seq.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!string.impl&%0.view.? (S (str%new_strlit 7861646061082040740514868495751950454714013105168145019950421332747821396118318341984407215506089513456840623445149872017654112336254159968835901995944792)))))))))) (let ((tmp%%$7 (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)))) (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$6))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role::RoleBuilder::make")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.make.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.make.) (forall ((fb! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!) (Poly%core!result.Result. (core!result.Result./Ok (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role.? fb!)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role::update_role")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.update_role.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.update_role.) (forall ((fb! Poly) (found_role! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.role.update_role.? fb! found_role!) (let ((made_role$ (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role.? fb!))) (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!))))) (let ((tmp%%$1 core!option.Option./None)) (let ((tmp%%$2 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. made_role$)))))))) (let ((tmp%%$3 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. made_role$)))))))) (let ((tmp%%$4 (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. found_role!)))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. made_role$)))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role.update_role.? fb! found_role!)) ))))
(assert (forall ((fb! Poly) (found_role! Poly)) (! (=> (and (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type found_role! TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!fluent_controller.fluentbit.model.resource.role.update_role.? fb! found_role!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role.update_role.? fb! found_role!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role::RoleBuilder::update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.update.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.update.) (forall ((fb! Poly) (state! Poly) (obj! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!) (Poly%core!result.Result. (let ((role$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. role$))))) (core!result.Result./Ok (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!fluent_controller.fluentbit.model.resource.role.update_role.? fb! (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. role$))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role_binding::make_role_binding_name")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_name.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_name.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_name.? fb!) (vstd!seq.Seq.add.? $ CHAR (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 2354462745075999153265968601275698298585846248890221488272404347677679360986198572381942238659970967737848714699647331767288945374694582729999739326434549))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_name.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_name.? fb!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_name.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role_binding::make_role_binding_key")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_key.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_key.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_key.? fb!) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_name.? fb!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_key.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_key.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_key.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role_binding::RoleBindingBuilder::get_request")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.get_request.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.get_request.) (forall ((fb! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_key.? fb!)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role::RoleBuilder::state_after_create")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.state_after_create.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.state_after_create.) (forall ((fb! Poly) (obj! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!) (Poly%core!result.Result. (let ((role$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. role$))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./RoleBinding)))))))) (let ((req$ (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role::RoleBuilder::state_after_update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.state_after_update.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role.impl&%0.state_after_update.) (forall ((fb! Poly) (obj! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!) (Poly%core!result.Result. (let ((role$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. role$))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./RoleBinding)))))))) (let ((req$ (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role_binding::make_role_binding")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding.? fb!) (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_subjects.? (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_role_ref.? (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%0.set_metadata.? (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0))) (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_name.? fb!))) (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!)))) (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_kind.? (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.set_api_group.? (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%2.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 1643544706537938872842697358570489062804509388621932837116990556823382500177806596554082952327726047109157798557386796605561362955784812655076086331008857))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 11284638637874220278420881318989421844606119630941653123133344947675887718486119920625636947185240249796982414662353462343164746484564190857128199404099797))))) (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_name.? fb!))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView.) (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_namespace.? (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.set_kind.? (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.SubjectView. (fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%3.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 9105333184204178090246685139497816263321678952423789000192062081865005347586767295020038745521830152639966870417356420704983111964560078535337126043391893))))) (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? fb!))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role_binding::RoleBindingBuilder::make")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.make.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.make.) (forall ((fb! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!) (Poly%core!result.Result. (core!result.Result./Ok (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding.? fb!)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role_binding::update_role_binding")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.update_role_binding.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.update_role_binding.) (forall ((fb! Poly) (found_role_binding! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.update_role_binding.? fb! found_role_binding!) (let ((made_role_binding$ (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding.? fb!))) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!))))) (let ((tmp%%$1 core!option.Option./None)) (let ((tmp%%$2 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. made_role_binding$)))))))) (let ((tmp%%$3 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. made_role_binding$)))))))) (let ((tmp%%$4 (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. found_role_binding!)))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))))))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. found_role_binding!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/subjects (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. made_role_binding$)))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.update_role_binding.? fb! found_role_binding!)) ))))
(assert (forall ((fb! Poly) (found_role_binding! Poly)) (! (=> (and (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type found_role_binding! TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.update_role_binding.? fb! found_role_binding!)) TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.update_role_binding.? fb! found_role_binding!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role_binding::RoleBindingBuilder::update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.update.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.update.) (forall ((fb! Poly) (state! Poly) (obj! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!) (Poly%core!result.Result. (let ((rb$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. rb$))))) (core!result.Result./Ok (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.update_role_binding.? fb! (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. rb$))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service::make_service_name")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_name.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_name.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_name.? fb!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_name.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_name.? fb!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_name.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service::make_service_key")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_key.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_key.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_key.? fb!) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_name.? fb!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_key.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_key.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_key.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service::ServiceBuilder::get_request")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.get_request.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.get_request.) (forall ((fb! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_key.? fb!)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role_binding::RoleBindingBuilder::state_after_create")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.state_after_create.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.state_after_create.) (forall ((fb! Poly) (obj! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!) (Poly%core!result.Result. (let ((rb$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. rb$))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Service)))))))) (let ((req$ (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::role_binding::RoleBindingBuilder::state_after_update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.state_after_update.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.impl&%0.state_after_update.) (forall ((fb! Poly) (obj! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!) (Poly%core!result.Result. (let ((rb$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. rb$))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Service)))))))) (let ((req$ (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service::make_service_port")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_port.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_port.) (forall ((port! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_port.? port!) (let ((tmp%%$ (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/container_port (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. port!)))) (let ((tmp%%$1 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. port!))))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. port!)) (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (fluent_controller!kubernetes_api_objects.spec.service.impl&%3.default.? (I 0)))))))) (let ((tmp%%$2 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. port!))))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. port!)) (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (fluent_controller!kubernetes_api_objects.spec.service.impl&%3.default.? (I 0)))))))) (let ((tmp%%$3 (fluent_controller!kubernetes_api_objects.spec.service.impl&%3.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%I (I tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. tmp%%$3))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_port.? port!)) ))))
(assert (forall ((port! Poly)) (! (=> (has_type port! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_port.? port!)) TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_port.? port!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service::make_service")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service.))
(declare-fun %%lambda%%6 () %%Function%%)
(assert (forall ((p$ Poly)) (! (= (%%apply%%0 %%lambda%%6 p$) (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_port.? p$))) :pattern ((%%apply%%0 %%lambda%%6 p$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service.? fb!) (let ((tmp%%$ (let ((tmp%%$1 (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_name.? fb!)))) (let ((tmp%%$2 (core!option.Option./Some (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!))))) (let ((tmp%%$3 (ite (> (vstd!map.impl&%0.len.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_labels (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) 0) (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_labels (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!))))) (let ((tmp%%$4 (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (let ((tmp%%$5 (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$4)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))))))))))) (let ((tmp%%$6 (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (let ((tmp%%$7 (let ((metrics_port$ (let ((tmp%%$8 (core!option.Option./Some (vstd!string.impl&%0.view.? (S (str%new_strlit 12996891269909683618396389987975855564405211863374334940199411544310622399543574228102322243042075839366557607162402253822598179187328569546822102670603817)))))) (let ((tmp%%$9 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (%I (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) 2020))) (let ((tmp%%$10 (fluent_controller!kubernetes_api_objects.spec.service.impl&%3.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$8)) (%I (I tmp%%$9)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. tmp%%$10))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. tmp%%$10))))))))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (core!option.Option./Some (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fun%1. (mk_fun %%lambda%%6))) (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. metrics_port$))) (core!option.Option./Some (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView.) (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServicePortView. metrics_port$))))))) (let ((tmp%%$11 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_selector (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_selector (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? fb!))))) (let ((tmp%%$12 (fluent_controller!kubernetes_api_objects.spec.service.impl&%2.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. tmp%%$12))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$7)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$11)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. tmp%%$12))))))))))))) (let ((tmp%%$13 (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)))) (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$6)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. tmp%%$13)))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service::ServiceBuilder::make")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.make.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.make.) (forall ((fb! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!) (Poly%core!result.Result. (core!result.Result./Ok (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service.? fb!)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service::update_service")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.update_service.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.update_service.) (forall ((fb! Poly) (found_service! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.service.update_service.? fb! found_service!) (let ((made_service$ (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service.? fb!))) (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!))))) (let ((tmp%%$1 core!option.Option./None)) (let ((tmp%%$2 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. made_service$)))))))) (let ((tmp%%$3 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. made_service$)))))))) (let ((tmp%%$4 (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. found_service!)))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (let ((tmp%%$ (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. made_service$)))))))))) (let ((tmp%%$6 (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. made_service$)))))))))) (let ((tmp%%$7 (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. found_service!)))))))) (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. tmp%%$7))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$6)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. tmp%%$7))))))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. found_service!))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service.update_service.? fb! found_service!)) ))))
(assert (forall ((fb! Poly) (found_service! Poly)) (! (=> (and (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type found_service! TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!fluent_controller.fluentbit.model.resource.service.update_service.? fb! found_service!)) TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service.update_service.? fb! found_service!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service::ServiceBuilder::update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.update.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.update.) (forall ((fb! Poly) (state! Poly) (obj! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!) (Poly%core!result.Result. (let ((service$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. obj!)))) (ite (and (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. service$))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. service$))))))))))) (core!result.Result./Ok (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!fluent_controller.fluentbit.model.resource.service.update_service.? fb! (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. service$))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service::ServiceBuilder::state_after_create")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.state_after_create.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.state_after_create.) (forall ((fb! Poly) (obj! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!) (Poly%core!result.Result. (let ((service$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. service$))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet)))))))) (let ((req$ (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service::ServiceBuilder::state_after_update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.state_after_update.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service.impl&%0.state_after_update.) (forall ((fb! Poly) (obj! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!) (Poly%core!result.Result. (let ((service$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. service$))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet)))))))) (let ((req$ (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service_account::make_service_account_key")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_key.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_key.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_key.? fb!) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? fb!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_key.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_key.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_key.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service_account::ServiceAccountBuilder::get_request")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.get_request.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.get_request.) (forall ((fb! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_key.? fb!)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service_account::make_service_account")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account.? fb!) (let ((tmp%%$ (let ((tmp%%$1 (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? fb!)))) (let ((tmp%%$2 (core!option.Option./Some (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!))))) (let ((tmp%%$3 (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!)))) (let ((tmp%%$4 (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_account_annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (let ((tmp%%$5 (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$4)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))))))))))) (let ((tmp%%$6 (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)))) (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/automount_service_account_token (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. tmp%%$6))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service_account::ServiceAccountBuilder::make")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.make.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.make.) (forall ((fb! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!) (Poly%core!result.Result. (core!result.Result./Ok (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account.? fb!)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service_account::update_service_account")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.update_service_account.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.update_service_account.) (forall ((fb! Poly) (found_service_account! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.update_service_account.? fb! found_service_account!) (let ((made_service_account$ (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account.? fb!))) (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!))))) (let ((tmp%%$1 core!option.Option./None)) (let ((tmp%%$2 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. made_service_account$)))))))) (let ((tmp%%$3 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. made_service_account$)))))))) (let ((tmp%%$4 (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. found_service_account!)))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/automount_service_account_token (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. found_service_account!))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service_account.update_service_account.? fb! found_service_account!)) ))))
(assert (forall ((fb! Poly) (found_service_account! Poly)) (! (=> (and (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type found_service_account! TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.update_service_account.? fb! found_service_account!)) TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service_account.update_service_account.? fb! found_service_account!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service_account::ServiceAccountBuilder::update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.update.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.update.) (forall ((fb! Poly) (state! Poly) (obj! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!) (Poly%core!result.Result. (let ((sa$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. sa$))))) (core!result.Result./Ok (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.update_service_account.? fb! (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. sa$))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service_account::ServiceAccountBuilder::state_after_create")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.state_after_create.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.state_after_create.) (forall ((fb! Poly) (obj! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!) (Poly%core!result.Result. (let ((sa$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. sa$))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Role)))))))) (let ((req$ (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service_account::ServiceAccountBuilder::state_after_update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.state_after_update.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.impl&%0.state_after_update.) (forall ((fb! Poly) (obj! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!) (Poly%core!result.Result. (let ((sa$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. sa$))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Role)))))))) (let ((req$ (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::resource::get_request")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.))
(define-fun is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./ServiceAccount_ ((c fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) Bool ((_ is fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./ServiceAccount) c))
(define-fun is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Role_ ((c fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) Bool ((_ is fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Role) c))
(define-fun is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./RoleBinding_ ((c fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) Bool ((_ is fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./RoleBinding) c))
(define-fun is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Service_ ((c fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) Bool ((_ is fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Service) c))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.) (forall ((sub_resource! Poly) (fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!) (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./ServiceAccount_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Role_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./RoleBinding_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Service_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::default")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.default.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.default.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (vstd!pervasive.arbitrary.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::metadata")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.metadata.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::object_ref")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.object_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.object_ref.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::spec")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.spec.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.spec.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::status")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.status.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.status.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!) (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/status (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::state_validation")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.state_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.state_validation.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!) (B true)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::transition_validation")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.transition_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.transition_validation.) (forall ((self! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self! old_obj!) (B true)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self! old_obj!)) ))))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.CustomResourceView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.))
(set-info :comment ";; Function-Axioms fluent_controller::external_api::spec::EmptyAPI::transition")
(assert (fuel_bool_default fuel%fluent_controller!external_api.spec.impl&%0.transition.))
(assert (=> (fuel_bool fuel%fluent_controller!external_api.spec.impl&%0.transition.) (forall ((input! Poly) (resources! Poly) (state! Poly)) (! (= (fluent_controller!external_api.spec.ExternalAPI.transition.? $ TYPE%fluent_controller!external_api.spec.EmptyAPI. input! resources! state!) (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!external_api.spec.EmptyTypeView. fluent_controller!external_api.spec.EmptyTypeView./EmptyTypeView) (Poly%fluent_controller!external_api.spec.EmptyTypeView. fluent_controller!external_api.spec.EmptyTypeView./EmptyTypeView)))) :pattern ((fluent_controller!external_api.spec.ExternalAPI.transition.? $ TYPE%fluent_controller!external_api.spec.EmptyAPI. input! resources! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::external_api::spec::EmptyAPI::init_state")
(assert (fuel_bool_default fuel%fluent_controller!external_api.spec.impl&%0.init_state.))
(assert (=> (fuel_bool fuel%fluent_controller!external_api.spec.impl&%0.init_state.) (= (fluent_controller!external_api.spec.ExternalAPI.init_state.? $ TYPE%fluent_controller!external_api.spec.EmptyAPI.) (Poly%fluent_controller!external_api.spec.EmptyTypeView. fluent_controller!external_api.spec.EmptyTypeView./EmptyTypeView))))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!external_api.spec.ExternalAPI. $ TYPE%fluent_controller!external_api.spec.EmptyAPI.))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::reconcile_init_state")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_init_state.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_init_state.) (forall ((no%param Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_init_state.? no%param) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Init)))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_init_state.? no%param)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitReconciler::reconcile_init_state")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_init_state.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_init_state.) (= (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_init_state.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI.) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_init_state.? (I 0))))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::liveness_theorem::desired_secret_key")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_secret_key.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_secret_key.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_secret_key.? fb!) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_secret_key.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_secret_key.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_secret_key.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::get_secret_req")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.get_secret_req.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.get_secret_req.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.reconciler.get_secret_req.? fb!) (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_secret_key.? fb!))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.reconciler.get_secret_req.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.model.reconciler.get_secret_req.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.reconciler.get_secret_req.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIResponse::get_GetResponse_0")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_GetResponse_0.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_GetResponse_0.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_GetResponse_0.? self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_GetResponse_0.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_GetResponse_0.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_GetResponse_0.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::io::ResponseView::get_KResponse_0")
(assert (fuel_bool_default fuel%fluent_controller!reconciler.spec.io.impl&%3.get_KResponse_0.))
(assert (=> (fuel_bool fuel%fluent_controller!reconciler.spec.io.impl&%3.get_KResponse_0.) (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (= (fluent_controller!reconciler.spec.io.impl&%3.get_KResponse_0.? T&. T& self!) (fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 (%Poly%fluent_controller!reconciler.spec.io.ResponseView. self!))) :pattern ((fluent_controller!reconciler.spec.io.impl&%3.get_KResponse_0.? T&. T& self!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!reconciler.spec.io.ResponseView. T&. T&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!reconciler.spec.io.impl&%3.get_KResponse_0.? T&. T& self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) :pattern ((fluent_controller!reconciler.spec.io.impl&%3.get_KResponse_0.? T&. T& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::io::ResponseView::is_KResponse")
(assert (fuel_bool_default fuel%fluent_controller!reconciler.spec.io.impl&%3.is_KResponse.))
(define-fun is-fluent_controller!reconciler.spec.io.ResponseView./KResponse_ ((c fluent_controller!reconciler.spec.io.ResponseView.)) Bool ((_ is fluent_controller!reconciler.spec.io.ResponseView./KResponse) c))
(assert (=> (fuel_bool fuel%fluent_controller!reconciler.spec.io.impl&%3.is_KResponse.) (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (= (fluent_controller!reconciler.spec.io.impl&%3.is_KResponse.? T&. T& self!) (is-fluent_controller!reconciler.spec.io.ResponseView./KResponse_ (%Poly%fluent_controller!reconciler.spec.io.ResponseView. self!))) :pattern ((fluent_controller!reconciler.spec.io.impl&%3.is_KResponse.? T&. T& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIResponse::is_GetResponse")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_GetResponse.))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse_ ((c fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_GetResponse.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_GetResponse.? self!) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_GetResponse.? self!)) ))))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!reconciler.spec.resource_builder.ResourceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::error::APIError::is_ObjectNotFound")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_ObjectNotFound.))
(define-fun is-fluent_controller!kubernetes_api_objects.error.APIError./ObjectNotFound_ ((c fluent_controller!kubernetes_api_objects.error.APIError.)) Bool ((_ is fluent_controller!kubernetes_api_objects.error.APIError./ObjectNotFound) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_ObjectNotFound.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.error.impl&%0.is_ObjectNotFound.? self!) (is-fluent_controller!kubernetes_api_objects.error.APIError./ObjectNotFound_ (%Poly%fluent_controller!kubernetes_api_objects.error.APIError. self!))) :pattern ((fluent_controller!kubernetes_api_objects.error.impl&%0.is_ObjectNotFound.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIResponse::get_CreateResponse_0")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_CreateResponse_0.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_CreateResponse_0.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_CreateResponse_0.? self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_CreateResponse_0.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_CreateResponse_0.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_CreateResponse_0.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIResponse::is_CreateResponse")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_CreateResponse.))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse_ ((c fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_CreateResponse.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_CreateResponse.? self!) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_CreateResponse.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIResponse::get_UpdateResponse_0")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_UpdateResponse_0.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_UpdateResponse_0.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_UpdateResponse_0.? self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_UpdateResponse_0.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_UpdateResponse_0.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.get_UpdateResponse_0.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIResponse::is_UpdateResponse")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_UpdateResponse.))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse_ ((c fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_UpdateResponse.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_UpdateResponse.? self!) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%5.is_UpdateResponse.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::reconcile_helper")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper.))
(define-fun is-fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep_ ((c fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) Bool ((_ is fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep) c))
(define-fun is-fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get_ ((c fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)) Bool ((_ is fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get) c))
(define-fun is-fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Create_ ((c fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)) Bool ((_ is fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Create) c))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper.) (forall ((Builder&. Dcr) (Builder& Type) (fb! Poly) (resp_o! Poly) (state! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper.? Builder&. Builder& fb! resp_o! state!) (let ((step$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state!)))) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep_ step$) (let ((action$ (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/0 (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. step$))))) (let ((resource$ (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/1 (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. step$))))) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get_ action$) (ite (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. resp_o!)))) (is-fluent_controller!reconciler.spec.io.ResponseView./KResponse_ (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (core!option.Option./Some/0 (%Poly%core!option.Option. resp_o!))))) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (core!option.Option./Some/0 (%Poly%core!option.Option. resp_o!)))))))) (let ((get_resp$ (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (core!option.Option./Some/0 (%Poly%core!option.Option. resp_o!)))))))))))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. get_resp$))))) (let ((new_obj$ (%Poly%core!result.Result. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? Builder&. Builder& $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. get_resp$))))))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. new_obj$))))) (let ((updated_obj$ (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. new_obj$)))))) (let ((req_o$ (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? Builder&. Builder& $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!)))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj$)))))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Update)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. resource$)))))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!reconciler.spec.io.RequestView. (fluent_controller!reconciler.spec.io.RequestView./KRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req_o$)))))))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None))))) (ite (is-fluent_controller!kubernetes_api_objects.error.APIError./ObjectNotFound_ (%Poly%fluent_controller!kubernetes_api_objects.error.APIError. (core!result.Result./Err/0 (%Poly%core!result.Result. (Poly%core!result.Result. get_resp$))))) (let ((new_obj$ (%Poly%core!result.Result. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? Builder&. Builder& $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. new_obj$))))) (let ((req_o$ (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. new_obj$)))))))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Create)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. resource$)))))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!reconciler.spec.io.RequestView. (fluent_controller!reconciler.spec.io.RequestView./KRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req_o$))))))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None)))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None)))) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Create_ action$) (let ((create_resp$ (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (core!option.Option./Some/0 (%Poly%core!option.Option. resp_o!)))))))))))) (ite (and (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. resp_o!)))) (is-fluent_controller!reconciler.spec.io.ResponseView./KResponse_ (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (core!option.Option./Some/0 (%Poly%core!option.Option. resp_o!))))) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (core!option.Option./Some/0 (%Poly%core!option.Option. resp_o!)))))))) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. create_resp$)))))) (let ((next_state$ (%Poly%core!result.Result. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? Builder&. Builder& $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. create_resp$))) state!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. next_state$))))) (let ((tmp%%$ (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. next_state$)))))) (let ((state_prime$ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((req$ (%Poly%core!option.Option. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((req_o$ (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. req$))))) (core!option.Option./Some (Poly%fluent_controller!reconciler.spec.io.RequestView. (fluent_controller!reconciler.spec.io.RequestView./KRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. req$))))))) core!option.Option./None))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. req_o$)))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None))))) (let ((update_resp$ (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (core!option.Option./Some/0 (%Poly%core!option.Option. resp_o!)))))))))))) (ite (and (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. resp_o!)))) (is-fluent_controller!reconciler.spec.io.ResponseView./KResponse_ (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (core!option.Option./Some/0 (%Poly%core!option.Option. resp_o!))))) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (core!option.Option./Some/0 (%Poly%core!option.Option. resp_o!)))))))) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. update_resp$)))))) (let ((next_state$ (%Poly%core!result.Result. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? Builder&. Builder& $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. update_resp$))) state!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. next_state$))))) (let ((tmp%%$ (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. next_state$)))))) (let ((state_prime$ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((req$ (%Poly%core!option.Option. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((req_o$ (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. req$))))) (core!option.Option./Some (Poly%fluent_controller!reconciler.spec.io.RequestView. (fluent_controller!reconciler.spec.io.RequestView./KRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. req$))))))) core!option.Option./None))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. req_o$)))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None))))))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None)))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper.? Builder&. Builder& fb! resp_o! state!)) ))))
(assert (forall ((Builder&. Dcr) (Builder& Type) (fb! Poly) (resp_o! Poly) (state! Poly)) (! (=> (and (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type resp_o! (TYPE%core!option.Option. $ (TYPE%fluent_controller!reconciler.spec.io.ResponseView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.))) (has_type state! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)) (has_type (Poly%tuple%2. (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper.? Builder&. Builder& fb! resp_o! state!)) (TYPE%tuple%2. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!reconciler.spec.io.RequestView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper.? Builder&. Builder& fb! resp_o! state!)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!reconciler.spec.resource_builder.ResourceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!reconciler.spec.resource_builder.ResourceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!reconciler.spec.resource_builder.ResourceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!reconciler.spec.resource_builder.ResourceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::reconcile_core")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_core.))
(define-fun is-fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Init_ ((c fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) Bool ((_ is fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Init) c))
(define-fun is-fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterGetSecret_ ((c fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) Bool ((_ is fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterGetSecret) c))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_core.) (forall ((fb! Poly) (resp_o! Poly) (state! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_core.? fb! resp_o! state!) (let ((step$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state!)))) (let ((resp$ (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (core!option.Option./Some/0 (%Poly%core!option.Option. resp_o!))))) (let ((fb_name$ (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (let ((fb_namespace$ (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Init_ step$) (let ((req_o$ (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.model.reconciler.get_secret_req.? fb!)))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterGetSecret))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!reconciler.spec.io.RequestView. (fluent_controller!reconciler.spec.io.RequestView./KRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req_o$))))))))) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterGetSecret_ step$) (let ((get_secret_resp$ (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (core!option.Option./Some/0 (%Poly%core!option.Option. resp_o!)))))))))))) (ite (and (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. resp_o!)))) (is-fluent_controller!reconciler.spec.io.ResponseView./KResponse_ (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (core!option.Option./Some/0 (%Poly%core!option.Option. resp_o!))))) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!reconciler.spec.io.ResponseView./KResponse/0 (%Poly%fluent_controller!reconciler.spec.io.ResponseView. (core!option.Option./Some/0 (%Poly%core!option.Option. resp_o!)))))))) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. get_secret_resp$)))))) (let ((req_o$ (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_key.? fb!))))))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./ServiceAccount)))))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!reconciler.spec.io.RequestView. (fluent_controller!reconciler.spec.io.RequestView./KRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req_o$))))))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None))))) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep_ step$) (let ((resource$ (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/1 (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. step$))))) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./ServiceAccount_ resource$) (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. fb! resp_o! state!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Role_ resource$) (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. fb! resp_o! state!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./RoleBinding_ resource$) (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. fb! resp_o! state!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Service_ resource$) (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. fb! resp_o! state!) (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_helper.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. fb! resp_o! state!)))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. step$))))) (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None))))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_core.? fb! resp_o! state!)) ))))
(assert (forall ((fb! Poly) (resp_o! Poly) (state! Poly)) (! (=> (and (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type resp_o! (TYPE%core!option.Option. $ (TYPE%fluent_controller!reconciler.spec.io.ResponseView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.))) (has_type state! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)) (has_type (Poly%tuple%2. (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_core.? fb! resp_o! state!)) (TYPE%tuple%2. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!reconciler.spec.io.RequestView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_core.? fb! resp_o! state!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitReconciler::reconcile_core")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_core.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_core.) (forall ((fb! Poly) (resp_o! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_core.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. fb! resp_o! state!) (Poly%tuple%2. (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_core.? fb! resp_o! state!))) :pattern ((fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_core.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. fb! resp_o! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::reconcile_done")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_done.))
(define-fun is-fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Done_ ((c fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) Bool ((_ is fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Done) c))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_done.) (forall ((state! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_done.? state!) (let ((tmp%%$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state!)))) (is-fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Done_ tmp%%$))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_done.? state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitReconciler::reconcile_done")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_done.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_done.) (forall ((state! Poly)) (! (= (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_done.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. state!) (B (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_done.? state!))) :pattern ((fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_done.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::reconcile_error")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_error.))
(define-fun is-fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error_ ((c fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) Bool ((_ is fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error) c))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_error.) (forall ((state! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_error.? state!) (let ((tmp%%$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state!)))) (is-fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error_ tmp%%$))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_error.? state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitReconciler::reconcile_error")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_error.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.reconcile_error.) (forall ((state! Poly)) (! (= (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_error.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. state!) (B (fluent_controller!fluent_controller.fluentbit.model.reconciler.reconcile_error.? state!))) :pattern ((fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_error.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitReconciler::expect_from_user")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.expect_from_user.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%0.expect_from_user.) (forall ((obj! Poly)) (! (= (fluent_controller!reconciler.spec.reconciler.Reconciler.expect_from_user.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. obj!) (B (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.))))) :pattern ((fluent_controller!reconciler.spec.reconciler.Reconciler.expect_from_user.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. obj!)) ))))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!reconciler.spec.reconciler.Reconciler. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI.))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::in_flight")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.in_flight.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.in_flight.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.in_flight.? K&. K& E&. E& R&. R& self!) (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. self!)))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.in_flight.? K&. K& E&. E& R&. R& self!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&)) (has_type (fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.in_flight.? K&. K& E&. E& R&. R& self!) (TYPE%vstd!multiset.Multiset. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.in_flight.? K&. K& E&. E& R&. R& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::HostId::is_ApiServer")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%0.is_ApiServer.))
(define-fun is-fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer_ ((c fluent_controller!kubernetes_cluster.spec.message.HostId.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%0.is_ApiServer.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%0.is_ApiServer.? self!) (is-fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%0.is_ApiServer.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_APIRequest")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIRequest.))
(define-fun is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ ((c fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIRequest.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIRequest.? I&. I& O&. O& self!) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIRequest.? I&. I& O&. O& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::is_CreateRequest")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_CreateRequest.))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest_ ((c fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_CreateRequest.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_CreateRequest.? self!) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_CreateRequest.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_APIRequest_0")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIRequest_0.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIRequest_0.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIRequest_0.? I&. I& O&. O& self!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIRequest_0.? I&. I& O&. O& self!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIRequest_0.? I&. I& O&. O& self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIRequest_0.? I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_create_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_create_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_create_request.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_create_request.? I&. I& O&. O& self!) (and (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_create_request.? I&. I& O&. O& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::get_CreateRequest_0")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_CreateRequest_0.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_CreateRequest_0.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_CreateRequest_0.? self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_CreateRequest_0.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_CreateRequest_0.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_CreateRequest_0.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_create_request")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request. (Dcr Type Dcr Type Poly) Bool)
(declare-const %%global_location_label%%54 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request. I&. I& O&. O& self!) (=> %%global_location_label%%54 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_create_request.? I&. I& O&. O& self!))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request. I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_create_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request.? I&. I& O&. O& self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request.? I&. I& O&. O& self!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request.? I&. I& O&. O& self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request.? I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::resource_create_request_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.resource_create_request_msg.))
(declare-fun %%lambda%%7 (Dcr Type Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type core!option.Option. Dcr Type Dcr Type fluent_controller!kubernetes_api_objects.spec.common.Kind.) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Poly) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Dcr) (%%hole%%12 Type) (%%hole%%13 core!option.Option.) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Dcr) (%%hole%%17 Type) (%%hole%%18 fluent_controller!kubernetes_api_objects.spec.common.Kind.) (msg$ Poly)) (! (= (%%apply%%0 (%%lambda%%7 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18) msg$) (B (and (and (and (and (is-fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))) (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_create_request.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))) (= (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request.? %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))))) %%hole%%8)) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request.? %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))))))))))) %%hole%%13)) (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request.? %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$)))))))))) %%hole%%18)))) :pattern ((%%apply%%0 (%%lambda%%7 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18) msg$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.resource_create_request_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (key! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.resource_create_request_msg.? I&. I& O&. O& key!) (mk_fun (%%lambda%%7 I&. I& O&. O& I&. I& O&. O& (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key!)) I&. I& O&. O& (core!option.Option./Some (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key!))) I&. I& O&. O& (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key!))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.resource_create_request_msg.? I&. I& O&. O& key!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (key! Poly)) (! (=> (has_type key! TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.message.resource_create_request_msg.? I&. I& O&. O& key!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&) $ BOOL))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.resource_create_request_msg.? I&. I& O&. O& key!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::is_UpdateRequest")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateRequest.))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest_ ((c fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateRequest.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateRequest.? self!) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateRequest.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_update_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_request.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_request.? I&. I& O&. O& self!) (and (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_request.? I&. I& O&. O& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::UpdateRequest::key")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.? self!) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. self!))))))) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. self!)) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::get_UpdateRequest_0")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateRequest_0.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateRequest_0.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateRequest_0.? self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateRequest_0.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateRequest_0.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateRequest_0.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_update_request")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request. (Dcr Type Dcr Type Poly) Bool)
(declare-const %%global_location_label%%55 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request. I&. I& O&. O& self!) (=> %%global_location_label%%55 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_request.? I&. I& O&. O& self!))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request. I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_update_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? I&. I& O&. O& self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? I&. I& O&. O& self!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? I&. I& O&. O& self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::resource_update_request_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.resource_update_request_msg.))
(declare-fun %%lambda%%8 (Dcr Type Dcr Type Dcr Type Dcr Type fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (msg$ Poly)) (! (= (%%apply%%0 (%%lambda%%8 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8) msg$) (B (and (and (is-fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))) (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_request.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))) (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.? (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$)))))) %%hole%%8)))) :pattern ((%%apply%%0 (%%lambda%%8 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8) msg$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.resource_update_request_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (key! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.resource_update_request_msg.? I&. I& O&. O& key!) (mk_fun (%%lambda%%8 I&. I& O&. O& I&. I& O&. O& (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key!)))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.resource_update_request_msg.? I&. I& O&. O& key!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (key! Poly)) (! (=> (has_type key! TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.message.resource_update_request_msg.? I&. I& O&. O& key!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&) $ BOOL))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.resource_update_request_msg.? I&. I& O&. O& key!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::resources")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.resources.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.resources.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.resources.? K&. K& E&. E& R&. R& self!) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. self!)))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.resources.? K&. K& E&. E& R&. R& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::ongoing_reconciles")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.ongoing_reconciles.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.ongoing_reconciles.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.ongoing_reconciles.? K&. K& E&. E& R&. R& self!) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. self!)))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.ongoing_reconciles.? K&. K& E&. E& R&. R& self!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&)) (has_type (fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.ongoing_reconciles.? K&. K& E&. E& R&. R& self!) (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.ongoing_reconciles.? K&. K& E&. E& R&. R& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::the_object_in_reconcile_satisfies_state_validation")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.the_object_in_reconcile_satisfies_state_validation.))
(declare-fun %%lambda%%9 (Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Poly) (%%hole%%12 Dcr) (%%hole%%13 Type) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%9 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13) s$) (B (=> (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%6) (%B (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? %%hole%%12 %%hole%%13 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%11)))))))) :pattern ((%%apply%%0 (%%lambda%%9 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.the_object_in_reconcile_satisfies_state_validation.) (forall ((key! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.the_object_in_reconcile_satisfies_state_validation.? key!) (mk_fun (%%lambda%%9 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key! $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) key! $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.the_object_in_reconcile_satisfies_state_validation.? key!)) ))))
(assert (forall ((key! Poly)) (! (=> (has_type key! TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.the_object_in_reconcile_satisfies_state_validation.? key!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.the_object_in_reconcile_satisfies_state_validation.? key!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::common::Kind::is_CustomResourceKind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.common.impl&%7.is_CustomResourceKind.))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.common.Kind./CustomResourceKind_ ((c fluent_controller!kubernetes_api_objects.spec.common.Kind.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.common.Kind./CustomResourceKind) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.common.impl&%7.is_CustomResourceKind.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.common.impl&%7.is_CustomResourceKind.? self!) (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./CustomResourceKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.common.impl&%7.is_CustomResourceKind.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref.))
(declare-fun %%lambda%%10 (Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly core!option.Option. core!option.Option. fluent_controller!kubernetes_api_objects.spec.common.Kind. Poly Type Dcr Type Dcr Type Poly core!option.Option. core!option.Option. fluent_controller!kubernetes_api_objects.spec.common.Kind. Poly Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Poly) (%%hole%%12 Dcr) (%%hole%%13 Type) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Poly) (%%hole%%17 core!option.Option.) (%%hole%%18 core!option.Option.) (%%hole%%19 fluent_controller!kubernetes_api_objects.spec.common.Kind.) (%%hole%%20 Poly) (%%hole%%21 Type) (%%hole%%22 Dcr) (%%hole%%23 Type) (%%hole%%24 Dcr) (%%hole%%25 Type) (%%hole%%26 Poly) (%%hole%%27 core!option.Option.) (%%hole%%28 core!option.Option.) (%%hole%%29 fluent_controller!kubernetes_api_objects.spec.common.Kind.) (%%hole%%30 Poly) (%%hole%%31 Dcr) (%%hole%%32 Type) (%%hole%%33 Poly) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%10 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33) s$) (B (=> (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) %%hole%%6) (and (and (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%11))))))))))) (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%16)))))))))))) (exists ((uid$ Poly)) (! (and (has_type uid$ %%hole%%21) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%26)))))) (core!option.Option./Some (vstd!seq.Seq.push.? %%hole%%31 %%hole%%32 %%hole%%33 (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 (%I uid$))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 (%I uid$))) )))))) :pattern ((%%apply%%0 (%%lambda%%10 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref.) (forall ((sub_resource! Poly) (fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref.? sub_resource! fb!) (let ((key$ (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))))) (mk_fun (%%lambda%%10 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (B true)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) INT $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (B true)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.))))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref.? sub_resource! fb!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref.? sub_resource! fb!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref.? sub_resource! fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_APIResponse")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIResponse.))
(define-fun is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse_ ((c fluent_controller!kubernetes_cluster.spec.message.MessageContent.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIResponse.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIResponse.? I&. I& O&. O& self!) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_APIResponse.? I&. I& O&. O& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_APIResponse_0")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIResponse_0.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIResponse_0.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIResponse_0.? I&. I& O&. O& self!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIResponse_0.? I&. I& O&. O& self!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIResponse_0.? I&. I& O&. O& self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_APIResponse_0.? I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_get_response")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_response.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_response.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_response.? I&. I& O&. O& self!) (and (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_response.? I&. I& O&. O& self!)) ))))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_get_response")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response. (Dcr Type Dcr Type Poly) Bool)
(declare-const %%global_location_label%%56 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response. I&. I& O&. O& self!) (=> %%global_location_label%%56 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_response.? I&. I& O&. O& self!))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response. I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_get_response")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.? I&. I& O&. O& self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.? I&. I& O&. O& self!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.? I&. I& O&. O& self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.? I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::spec::dynamic::DynamicObjectView::object_ref")
(declare-fun req%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref. (Poly) Bool)
(declare-const %%global_location_label%%57 Bool)
(declare-const %%global_location_label%%58 Bool)
(assert (forall ((self! Poly)) (! (= (req%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref. self!) (and (=> %%global_location_label%%57 (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!))))))))))) (=> %%global_location_label%%58 (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!))))))))))))) :pattern ((req%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref. self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::dynamic::DynamicObjectView::object_ref")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? self!) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::proof::predicate::at_fb_step")
(declare-fun req%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step. (Poly Poly) Bool)
(declare-const %%global_location_label%%59 Bool)
(assert (forall ((key! Poly) (step! Poly)) (! (= (req%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step. key! step!) (=> %%global_location_label%%59 (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./CustomResourceKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key!))))))) :pattern ((req%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step. key! step!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::predicate::at_fb_step")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step.))
(declare-fun %%lambda%%11 (Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Poly) (%%hole%%12 fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%11 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) s$) (B (and (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%6) (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%11))))) %%hole%%12)))) :pattern ((%%apply%%0 (%%lambda%%11 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step.) (forall ((key! Poly) (step! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step.? key! step!) (mk_fun (%%lambda%%11 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key! $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) key! (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. step!)))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step.? key! step!)) ))))
(assert (forall ((key! Poly) (step! Poly)) (! (=> (and (has_type key! TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type step! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step.? key! step!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step.? key! step!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::is_GetRequest")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_GetRequest.))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest_ ((c fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_GetRequest.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_GetRequest.? self!) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_GetRequest.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_get_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_request.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_request.? I&. I& O&. O& self!) (and (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_request.? I&. I& O&. O& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::get_GetRequest_0")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_GetRequest_0.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_GetRequest_0.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_GetRequest_0.? self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_GetRequest_0.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_GetRequest_0.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_GetRequest_0.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_get_request")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_request. (Dcr Type Dcr Type Poly) Bool)
(declare-const %%global_location_label%%60 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_request. I&. I& O&. O& self!) (=> %%global_location_label%%60 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_request.? I&. I& O&. O& self!))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_request. I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_get_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_request.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_request.? I&. I& O&. O& self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_request.? I&. I& O&. O& self!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_request.? I&. I& O&. O& self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_request.? I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_rest_id")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& self!) (ite (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)) (let ((id$ (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/1 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)))) id$) (ite (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)) (let ((id$ (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/1 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)))) id$) (ite (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)) (let ((id$ (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/1 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)))) id$) (let ((id$ (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/1 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)))) id$))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& self!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (<= 0 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::is_ListRequest")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_ListRequest.))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest_ ((c fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_ListRequest.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_ListRequest.? self!) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_ListRequest.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::is_DeleteRequest")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_DeleteRequest.))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest_ ((c fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_DeleteRequest.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_DeleteRequest.? self!) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_DeleteRequest.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::is_UpdateStatusRequest")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateStatusRequest.))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest_ ((c fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateStatusRequest.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateStatusRequest.? self!) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.is_UpdateStatusRequest.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_ExternalAPIResponse")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIResponse.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIResponse.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIResponse.? I&. I& O&. O& self!) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIResponse.? I&. I& O&. O& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_ExternalAPIRequest")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIRequest.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIRequest.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIRequest.? I&. I& O&. O& self!) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%2.is_ExternalAPIRequest.? I&. I& O&. O& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::resp_msg_matches_req_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.resp_msg_matches_req_msg.))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse_ ((c fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse) c))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse_ ((c fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.resp_msg_matches_req_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp_msg! Poly) (req_msg! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.resp_msg_matches_req_msg.? I&. I& O&. O& resp_msg! req_msg!) (or (and (and (and (and (and (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg!))))) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg!)) (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg!)) (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))) (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg!)))) (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))) (let ((tmp%%$ (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse_ tmp%%$) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse_ tmp%%$) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse_ tmp%%$) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse_ tmp%%$) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse_ tmp%%$) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))))) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))))))))))))) (and (and (and (and (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg!))))) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg!)) (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg!)) (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))) (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg!)))) (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.resp_msg_matches_req_msg.? I&. I& O&. O& resp_msg! req_msg!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::pending_req_msg_is")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.pending_req_msg_is.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.pending_req_msg_is.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (s! Poly) (key! Poly) (req! Poly)) (! (= (fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.pending_req_msg_is.? K&. K& E&. E& R&. R& s! key! req!) (= (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s!))))) key!))) (core!option.Option./Some req!))) :pattern ((fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.pending_req_msg_is.? K&. K& E&. E& R&. R& s! key! req!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::resource::make")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.resource.make.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.resource.make.) (forall ((sub_resource! Poly) (fb! Poly) (state! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.resource.make.? sub_resource! fb! state!) (%Poly%core!result.Result. (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./ServiceAccount_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Role_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./RoleBinding_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Service_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.resource.make.? sub_resource! fb! state!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly) (state! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type state! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)) (has_type (Poly%core!result.Result. (fluent_controller!fluent_controller.fluentbit.proof.resource.make.? sub_resource! fb! state!)) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%tuple%0.))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.resource.make.? sub_resource! fb! state!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::every_resource_create_request_implies_at_after_create_resource_step")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_create_request_implies_at_after_create_resource_step.))
(declare-fun %%lambda%%12 (%%Function%% Type Dcr Type %%Function%% Poly Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 %%Function%%) (%%hole%%5 Poly) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Dcr) (%%hole%%13 Type) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Poly) (%%hole%%17 Poly) (%%hole%%18 Dcr) (%%hole%%19 Type) (%%hole%%20 Dcr) (%%hole%%21 Type) (%%hole%%22 Dcr) (%%hole%%23 Type) (%%hole%%24 Dcr) (%%hole%%25 Type) (%%hole%%26 Poly) (%%hole%%27 Poly) (%%hole%%28 fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%12 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28) s$) (B (let ((key$ %%hole%%28)) (forall ((msg$ Poly)) (! (=> (has_type msg$ %%hole%%1) (=> (and (vstd!multiset.impl&%0.contains.? %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) msg$) (%B (%%apply%%0 %%hole%%4 msg$))) (and (and (and (%B (%%apply%%0 (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step.? (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$) %%hole%%5) s$)) (fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.pending_req_msg_is.? %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 s$ (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$) msg$)) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. (fluent_controller!fluent_controller.fluentbit.proof.resource.make.? %%hole%%16 %%hole%%17 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))))))))) (= (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request.? %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. (fluent_controller!fluent_controller.fluentbit.proof.resource.make.? %%hole%%26 %%hole%%27 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))))))))))) :pattern ((%%apply%%0 %%hole%%0 msg$)) ))))) :pattern ((%%apply%%0 (%%lambda%%12 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_create_request_implies_at_after_create_resource_step.) (forall ((sub_resource! Poly) (fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_create_request_implies_at_after_create_resource_step.? sub_resource! fb!) (mk_fun (%%lambda%%12 (fluent_controller!kubernetes_cluster.spec.message.resource_create_request_msg.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))))) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (fluent_controller!kubernetes_cluster.spec.message.resource_create_request_msg.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))))) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Create)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!))) $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) sub_resource! fb! $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) sub_resource! fb! (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_create_request_implies_at_after_create_resource_step.? sub_resource! fb!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_create_request_implies_at_after_create_resource_step.? sub_resource! fb!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_create_request_implies_at_after_create_resource_step.? sub_resource! fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::resource::update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.resource.update.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.resource.update.) (forall ((sub_resource! Poly) (fb! Poly) (state! Poly) (obj! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.resource.update.? sub_resource! fb! state! obj!) (%Poly%core!result.Result. (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./ServiceAccount_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.ServiceAccountBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Role_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role.RoleBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./RoleBinding_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.RoleBindingBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Service_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.service.ServiceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.resource.update.? sub_resource! fb! state! obj!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly) (state! Poly) (obj! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type state! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.) (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%core!result.Result. (fluent_controller!fluent_controller.fluentbit.proof.resource.update.? sub_resource! fb! state! obj!)) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%tuple%0.))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.resource.update.? sub_resource! fb! state! obj!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::every_resource_update_request_implies_at_after_update_resource_step")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step.))
(declare-fun %%lambda%%13 (%%Function%% Type Dcr Type %%Function%% Poly Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 %%Function%%) (%%hole%%5 Poly) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Dcr) (%%hole%%13 Type) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Dcr) (%%hole%%17 Type) (%%hole%%18 Dcr) (%%hole%%19 Type) (%%hole%%20 Dcr) (%%hole%%21 Type) (%%hole%%22 Dcr) (%%hole%%23 Type) (%%hole%%24 Dcr) (%%hole%%25 Type) (%%hole%%26 Dcr) (%%hole%%27 Type) (%%hole%%28 Dcr) (%%hole%%29 Type) (%%hole%%30 Dcr) (%%hole%%31 Type) (%%hole%%32 Dcr) (%%hole%%33 Type) (%%hole%%34 Dcr) (%%hole%%35 Type) (%%hole%%36 Dcr) (%%hole%%37 Type) (%%hole%%38 Dcr) (%%hole%%39 Type) (%%hole%%40 Dcr) (%%hole%%41 Type) (%%hole%%42 Poly) (%%hole%%43 Poly) (%%hole%%44 Dcr) (%%hole%%45 Type) (%%hole%%46 Dcr) (%%hole%%47 Type) (%%hole%%48 Dcr) (%%hole%%49 Type) (%%hole%%50 Dcr) (%%hole%%51 Type) (%%hole%%52 Dcr) (%%hole%%53 Type) (%%hole%%54 Dcr) (%%hole%%55 Type) (%%hole%%56 Poly) (%%hole%%57 Poly) (%%hole%%58 fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (%%hole%%59 fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%13 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38 %%hole%%39 %%hole%%40 %%hole%%41 %%hole%%42 %%hole%%43 %%hole%%44 %%hole%%45 %%hole%%46 %%hole%%47 %%hole%%48 %%hole%%49 %%hole%%50 %%hole%%51 %%hole%%52 %%hole%%53 %%hole%%54 %%hole%%55 %%hole%%56 %%hole%%57 %%hole%%58 %%hole%%59) s$) (B (let ((key$ %%hole%%59)) (let ((resource_key$ %%hole%%58)) (forall ((msg$ Poly)) (! (=> (has_type msg$ %%hole%%1) (=> (and (vstd!multiset.impl&%0.contains.? %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) msg$) (%B (%%apply%%0 %%hole%%4 msg$))) (and (and (and (and (%B (%%apply%%0 (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step.? (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$) %%hole%%5) s$)) (fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.pending_req_msg_is.? %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 s$ (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$) msg$)) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))))))))))))))))) (< (%I (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))))))))))))))) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) (=> (and (vstd!set.impl&%0.contains.? %%hole%%24 %%hole%%25 (vstd!map.impl&%0.dom.? %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. resource_key$)) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))))))))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. resource_key$))))))))) (and (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. (fluent_controller!fluent_controller.fluentbit.proof.resource.update.? %%hole%%42 %%hole%%43 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)))) (vstd!map.impl&%0.index.? %%hole%%38 %%hole%%39 %%hole%%40 %%hole%%41 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. resource_key$)))))))) (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? %%hole%%44 %%hole%%45 %%hole%%46 %%hole%%47 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. (fluent_controller!fluent_controller.fluentbit.proof.resource.update.? %%hole%%56 %%hole%%57 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%48 %%hole%%49 %%hole%%50 %%hole%%51 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)))) (vstd!map.impl&%0.index.? %%hole%%52 %%hole%%53 %%hole%%54 %%hole%%55 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. resource_key$))))))))))))) :pattern ((%%apply%%0 %%hole%%0 msg$)) )))))) :pattern ((%%apply%%0 (%%lambda%%13 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38 %%hole%%39 %%hole%%40 %%hole%%41 %%hole%%42 %%hole%%43 %%hole%%44 %%hole%%45 %%hole%%46 %%hole%%47 %%hole%%48 %%hole%%49 %%hole%%50 %%hole%%51 %%hole%%52 %%hole%%53 %%hole%%54 %%hole%%55 %%hole%%56 %%hole%%57 %%hole%%58 %%hole%%59) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step.) (forall ((sub_resource! Poly) (fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step.? sub_resource! fb!) (mk_fun (%%lambda%%13 (fluent_controller!kubernetes_cluster.spec.message.resource_update_request_msg.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))))) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (fluent_controller!kubernetes_cluster.spec.message.resource_update_request_msg.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))))) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Update)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!))) $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. sub_resource! fb! $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. sub_resource! fb! (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step.? sub_resource! fb!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step.? sub_resource! fb!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step.? sub_resource! fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::resource_object_only_has_owner_reference_pointing_to_current_cr")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_only_has_owner_reference_pointing_to_current_cr.))
(declare-fun %%lambda%%14 (Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Poly) (%%hole%%12 Poly) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%14 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) s$) (B (=> (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) %%hole%%6) (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%11)))) %%hole%%12)))) :pattern ((%%apply%%0 (%%lambda%%14 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_only_has_owner_reference_pointing_to_current_cr.) (forall ((sub_resource! Poly) (fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_only_has_owner_reference_pointing_to_current_cr.? sub_resource! fb!) (let ((key$ (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))))) (mk_fun (%%lambda%%14 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$) (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? fb!)))))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_only_has_owner_reference_pointing_to_current_cr.? sub_resource! fb!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_only_has_owner_reference_pointing_to_current_cr.? sub_resource! fb!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_only_has_owner_reference_pointing_to_current_cr.? sub_resource! fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_delete_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_delete_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_delete_request.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_delete_request.? I&. I& O&. O& self!) (and (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_delete_request.? I&. I& O&. O& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::get_DeleteRequest_0")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_DeleteRequest_0.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_DeleteRequest_0.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_DeleteRequest_0.? self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_DeleteRequest_0.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_DeleteRequest_0.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_DeleteRequest_0.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_delete_request")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request. (Dcr Type Dcr Type Poly) Bool)
(declare-const %%global_location_label%%61 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request. I&. I& O&. O& self!) (=> %%global_location_label%%61 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_delete_request.? I&. I& O&. O& self!))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request. I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_delete_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request.? I&. I& O&. O& self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request.? I&. I& O&. O& self!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request.? I&. I& O&. O& self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request.? I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::resource_delete_request_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.resource_delete_request_msg.))
(declare-fun %%lambda%%15 (Dcr Type Dcr Type Dcr Type Dcr Type fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (msg$ Poly)) (! (= (%%apply%%0 (%%lambda%%15 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8) msg$) (B (and (and (is-fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))) (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_delete_request.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))) (= (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request.? %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))))) %%hole%%8)))) :pattern ((%%apply%%0 (%%lambda%%15 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8) msg$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.resource_delete_request_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (key! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.resource_delete_request_msg.? I&. I& O&. O& key!) (mk_fun (%%lambda%%15 I&. I& O&. O& I&. I& O&. O& (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key!)))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.resource_delete_request_msg.? I&. I& O&. O& key!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (key! Poly)) (! (=> (has_type key! TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.message.resource_delete_request_msg.? I&. I& O&. O& key!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&) $ BOOL))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.resource_delete_request_msg.? I&. I& O&. O& key!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::no_delete_resource_request_msg_in_flight")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight.))
(declare-fun %%lambda%%16 (%%Function%% Type Dcr Type %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 %%Function%%) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%16 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) s$) (B (forall ((msg$ Poly)) (! (=> (has_type msg$ %%hole%%1) (not (and (vstd!multiset.impl&%0.contains.? %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) msg$) (%B (%%apply%%0 %%hole%%4 msg$))))) :pattern ((%%apply%%0 %%hole%%0 msg$)) )))) :pattern ((%%apply%%0 (%%lambda%%16 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight.) (forall ((sub_resource! Poly) (fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight.? sub_resource! fb!) (mk_fun (%%lambda%%16 (fluent_controller!kubernetes_cluster.spec.message.resource_delete_request_msg.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))))) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (fluent_controller!kubernetes_cluster.spec.message.resource_delete_request_msg.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight.? sub_resource! fb!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight.? sub_resource! fb!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight.? sub_resource! fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_update_status_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_status_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_status_request.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_status_request.? I&. I& O&. O& self!) (and (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_status_request.? I&. I& O&. O& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::UpdateStatusRequest::key")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key.? self!) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. self!))))))) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. self!)) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::get_UpdateStatusRequest_0")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateStatusRequest_0.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateStatusRequest_0.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateStatusRequest_0.? self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateStatusRequest_0.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateStatusRequest_0.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_UpdateStatusRequest_0.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_update_status_request")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request. (Dcr Type Dcr Type Poly) Bool)
(declare-const %%global_location_label%%62 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request. I&. I& O&. O& self!) (=> %%global_location_label%%62 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_status_request.? I&. I& O&. O& self!))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request. I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_update_status_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request.? I&. I& O&. O& self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request.? I&. I& O&. O& self!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request.? I&. I& O&. O& self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request.? I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::resource_update_status_request_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.resource_update_status_request_msg.))
(declare-fun %%lambda%%17 (Dcr Type Dcr Type Dcr Type Dcr Type fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (msg$ Poly)) (! (= (%%apply%%0 (%%lambda%%17 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8) msg$) (B (and (and (is-fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))) (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_status_request.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))) (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key.? (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request.? %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$)))))) %%hole%%8)))) :pattern ((%%apply%%0 (%%lambda%%17 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8) msg$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.resource_update_status_request_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (key! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.resource_update_status_request_msg.? I&. I& O&. O& key!) (mk_fun (%%lambda%%17 I&. I& O&. O& I&. I& O&. O& (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key!)))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.resource_update_status_request_msg.? I&. I& O&. O& key!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (key! Poly)) (! (=> (has_type key! TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.message.resource_update_status_request_msg.? I&. I& O&. O& key!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&) $ BOOL))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.resource_update_status_request_msg.? I&. I& O&. O& key!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::FluentBitMaker::make_service_account_key")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service_account_key.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service_account_key.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account_key.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_key.? fb!))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account_key.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::FluentBitMaker::make_role_key")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role_key.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role_key.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_key.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role_key.? fb!))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_key.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::FluentBitMaker::make_role_binding_key")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role_binding_key.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role_binding_key.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding_key.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding_key.? fb!))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding_key.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::FluentBitMaker::make_service_key")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service_key.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service_key.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_key.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service_key.? fb!))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_key.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::FluentBitMaker::make_daemon_set_key")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_daemon_set_key.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_daemon_set_key.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set_key.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.? fb!))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set_key.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::FluentBitMaker::make_service_account")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service_account.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service_account.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account.? fb!))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::FluentBitMaker::make_role")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!fluent_controller.fluentbit.model.resource.role.make_role.? fb!))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::FluentBitMaker::make_role_binding")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role_binding.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_role_binding.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!fluent_controller.fluentbit.model.resource.role_binding.make_role_binding.? fb!))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::FluentBitMaker::make_service")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_service.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!fluent_controller.fluentbit.model.resource.service.make_service.? fb!))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::reconciler::FluentBitMaker::make_daemon_set")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_daemon_set.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.reconciler.impl&%1.make_daemon_set.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. fb!)) ))))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker. $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker.))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::liveness_theorem::resource_state_matches")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.resource_state_matches.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.resource_state_matches.) (forall ((M&. Dcr) (M& Type) (sub_resource! Poly) (fb! Poly) (resources! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.resource_state_matches.? M&. M& sub_resource! fb! resources!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./ServiceAccount_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (let ((key$ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account_key.? M&. M& fb!)))) (let ((obj$ (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. resources! (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))) (and (and (and (and (vstd!set.impl&%0.contains.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (vstd!map.impl&%0.dom.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. resources!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$))))))) (= (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/automount_service_account_token (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/automount_service_account_token (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account.? M&. M& fb!))))) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account.? M&. M& fb!)))))))) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_account.? M&. M& fb!)))))))))) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Role_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (let ((key$ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_key.? M&. M& fb!)))) (let ((obj$ (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. resources! (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))) (and (and (and (and (vstd!set.impl&%0.contains.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (vstd!map.impl&%0.dom.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. resources!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$))))))) (= (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role.? M&. M& fb!))))) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role.? M&. M& fb!)))))))) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role.? M&. M& fb!)))))))))) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./RoleBinding_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (let ((key$ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding_key.? M&. M& fb!)))) (let ((obj$ (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. resources! (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))) (and (and (and (and (and (vstd!set.impl&%0.contains.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (vstd!map.impl&%0.dom.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. resources!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$))))))) (= (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding.? M&. M& fb!))))) (= (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/subjects (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/subjects (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding.? M&. M& fb!))))) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding.? M&. M& fb!)))))))) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_role_binding.? M&. M& fb!)))))))))) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Service_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (let ((key$ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service_key.? M&. M& fb!)))) (let ((obj$ (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. resources! (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))) (let ((made_spec$ (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service.? M&. M& fb!))))))))) (let ((spec$ (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))))))))) (and (and (and (and (and (vstd!set.impl&%0.contains.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (vstd!map.impl&%0.dom.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. resources!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$))))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))))))))) (= made_spec$ (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. made_spec$))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. spec$))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. spec$))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceSpecView. spec$)))))))) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service.? M&. M& fb!)))))))) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_service.? M&. M& fb!)))))))))))) (let ((key$ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set_key.? M&. M& fb!)))) (let ((obj$ (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. resources! (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))) (let ((made_ds$ (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.trusted.maker.Maker.make_daemon_set.? M&. M& fb!)))) (and (and (and (and (vstd!set.impl&%0.contains.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (vstd!map.impl&%0.dom.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. resources!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$))))))) (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. made_ds$))))) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. made_ds$)))))))) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. made_ds$)))))))))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.resource_state_matches.? M&. M& sub_resource! fb! resources!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::predicate::sub_resource_state_matches")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.))
(declare-fun %%lambda%%18 (Dcr Type Poly Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 Poly) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%18 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) s$) (B (fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.resource_state_matches.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))))) :pattern ((%%apply%%0 (%%lambda%%18 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.) (forall ((sub_resource! Poly) (fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? sub_resource! fb!) (mk_fun (%%lambda%%18 $ TYPE%fluent_controller!fluent_controller.fluentbit.model.reconciler.FluentBitMaker. sub_resource! fb!))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? sub_resource! fb!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? sub_resource! fb!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? sub_resource! fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::stable_resources")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.stable_resources.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.stable_resources.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.stable_resources.? K&. K& E&. E& R&. R& self!) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. self!)))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster.impl&%0.stable_resources.? K&. K& E&. E& R&. R& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::predicate::daemon_set_not_exists_or_matches_or_no_more_status_update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update.))
(declare-fun %%lambda%%19 (Dcr Type Dcr Type Dcr Type %%Function%% %%Function%% Type Dcr Type %%Function%% Dcr Type fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 %%Function%%) (%%hole%%7 %%Function%%) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 %%Function%%) (%%hole%%12 Dcr) (%%hole%%13 Type) (%%hole%%14 fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%19 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14) s$) (B (let ((sts_key$ %%hole%%14)) (or (or (not (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. sts_key$))) (%B (%%apply%%0 %%hole%%6 s$))) (and (forall ((msg$ Poly)) (! (=> (has_type msg$ %%hole%%8) (=> (vstd!multiset.impl&%0.contains.? %%hole%%9 %%hole%%10 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) msg$) (not (%B (%%apply%%0 %%hole%%11 msg$))))) :pattern ((%%apply%%0 %%hole%%7 msg$)) )) (vstd!set.impl&%0.contains.? %%hole%%12 %%hole%%13 (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. sts_key$))))))) :pattern ((%%apply%%0 (%%lambda%%19 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update.? fb!) (mk_fun (%%lambda%%19 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) fb!) (fluent_controller!kubernetes_cluster.spec.message.resource_update_status_request_msg.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) fb!)))))) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (fluent_controller!kubernetes_cluster.spec.message.resource_update_status_request_msg.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) fb!)))))) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) fb!))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update.? fb!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::validation::certain_fields_of_daemon_set_stay_unchanged")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.certain_fields_of_daemon_set_stay_unchanged.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.certain_fields_of_daemon_set_stay_unchanged.) (forall ((obj! Poly) (fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.certain_fields_of_daemon_set_stay_unchanged.? obj! fb!) (let ((made_spec$ (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!)))))))))) (let ((ds$ (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!)))))) (=> (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))) (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? fb!))) (= made_spec$ (let ((tmp%%$ (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. made_spec$))))) (let ((tmp%%$1 (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. ds$))))))))) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. tmp%%$1))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. tmp%%$)))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.certain_fields_of_daemon_set_stay_unchanged.? obj! fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::helper_invariants::validation::daemon_set_in_etcd_satisfies_unchangeable")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.daemon_set_in_etcd_satisfies_unchangeable.))
(declare-fun %%lambda%%20 (Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Dcr) (%%hole%%12 Type) (%%hole%%13 Poly) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Dcr) (%%hole%%17 Type) (%%hole%%18 Poly) (%%hole%%19 Dcr) (%%hole%%20 Type) (%%hole%%21 Dcr) (%%hole%%22 Type) (%%hole%%23 Poly) (%%hole%%24 Dcr) (%%hole%%25 Type) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%20 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25) s$) (B (=> (and (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) %%hole%%6) (vstd!set.impl&%0.contains.? %%hole%%11 %%hole%%12 (vstd!map.impl&%0.dom.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) %%hole%%13)) (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.certain_fields_of_daemon_set_stay_unchanged.? (vstd!map.impl&%0.index.? %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%18) (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? %%hole%%24 %%hole%%25 (vstd!map.impl&%0.index.? %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%23)))))))) :pattern ((%%apply%%0 (%%lambda%%20 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.daemon_set_in_etcd_satisfies_unchangeable.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.daemon_set_in_etcd_satisfies_unchangeable.? fb!) (let ((key$ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))) (let ((ds_key$ (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!))))) (mk_fun (%%lambda%%20 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. ds_key$) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. ds_key$) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$) $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.))))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.daemon_set_in_etcd_satisfies_unchangeable.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.daemon_set_in_etcd_satisfies_unchangeable.? fb!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.daemon_set_in_etcd_satisfies_unchangeable.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::TempPred::new")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.impl&%1.new.))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.impl&%1.new.) (forall ((T&. Dcr) (T& Type) (pred! Poly)) (! (= (fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& pred!) (fluent_controller!temporal_logic.defs.TempPred./TempPred (%Poly%fun%1. pred!))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& pred!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (pred! Poly)) (! (=> (has_type pred! (TYPE%fun%1. $ (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&) $ BOOL)) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& pred!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& pred!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::TempPred::satisfied_by")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.) (forall ((T&. Dcr) (T& Type) (self! Poly) (execution! Poly)) (! (= (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? T&. T& self! execution!) (%B (%%apply%%0 (fluent_controller!temporal_logic.defs.TempPred./TempPred/pred (%Poly%fluent_controller!temporal_logic.defs.TempPred. self!)) execution!))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? T&. T& self! execution!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::TempPred::and")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.impl&%1.and.))
(declare-fun %%lambda%%21 (Dcr Type Poly Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Poly) (ex$ Poly)) (! (= (%%apply%%0 (%%lambda%%21 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) ex$) (B (and (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%0 %%hole%%1 %%hole%%2 ex$) (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%3 %%hole%%4 %%hole%%5 ex$)))) :pattern ((%%apply%%0 (%%lambda%%21 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) ex$)))))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.impl&%1.and.) (forall ((T&. Dcr) (T& Type) (self! Poly) (other! Poly)) (! (= (fluent_controller!temporal_logic.defs.impl&%1.and.? T&. T& self! other!) (fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& (Poly%fun%1. (mk_fun (%%lambda%%21 T&. T& self! T&. T& other!))))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.and.? T&. T& self! other!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (self! Poly) (other! Poly)) (! (=> (and (has_type self! (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&)) (has_type other! (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.and.? T&. T& self! other!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.and.? T&. T& self! other!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::Execution::suffix")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.impl&%0.suffix.))
(declare-fun %%lambda%%22 (Int %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 Int) (%%hole%%1 %%Function%%) (i$ Poly)) (! (= (%%apply%%0 (%%lambda%%22 %%hole%%0 %%hole%%1) i$) (%%apply%%0 %%hole%%1 (I (nClip (Add (%I i$) %%hole%%0))))) :pattern ((%%apply%%0 (%%lambda%%22 %%hole%%0 %%hole%%1) i$)))))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.impl&%0.suffix.) (forall ((T&. Dcr) (T& Type) (self! Poly) (pos! Poly)) (! (= (fluent_controller!temporal_logic.defs.impl&%0.suffix.? T&. T& self! pos!) (fluent_controller!temporal_logic.defs.Execution./Execution (%Poly%fun%1. (Poly%fun%1. (mk_fun (%%lambda%%22 (%I pos!) (fluent_controller!temporal_logic.defs.Execution./Execution/nat_to_state (%Poly%fluent_controller!temporal_logic.defs.Execution. self!)))))))) :pattern ((fluent_controller!temporal_logic.defs.impl&%0.suffix.? T&. T& self! pos!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (self! Poly) (pos! Poly)) (! (=> (and (has_type self! (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&)) (has_type pos! NAT)) (has_type (Poly%fluent_controller!temporal_logic.defs.Execution. (fluent_controller!temporal_logic.defs.impl&%0.suffix.? T&. T& self! pos!)) (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.impl&%0.suffix.? T&. T& self! pos!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::always")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.always.))
(declare-fun %%lambda%%23 (Dcr Type Dcr Type Poly Type Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Poly) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Poly) (ex$ Poly)) (! (= (%%apply%%0 (%%lambda%%23 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10) ex$) (B (forall ((i$ Poly)) (! (=> (has_type i$ %%hole%%5) (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%8 %%hole%%9 %%hole%%10 (Poly%fluent_controller!temporal_logic.defs.Execution. (fluent_controller!temporal_logic.defs.impl&%0.suffix.? %%hole%%6 %%hole%%7 ex$ i$)))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%2 %%hole%%3 %%hole%%4 (Poly%fluent_controller!temporal_logic.defs.Execution. (fluent_controller!temporal_logic.defs.impl&%0.suffix.? %%hole%%0 %%hole%%1 ex$ i$)))) )))) :pattern ((%%apply%%0 (%%lambda%%23 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10) ex$)))))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.always.) (forall ((T&. Dcr) (T& Type) (temp_pred! Poly)) (! (= (fluent_controller!temporal_logic.defs.always.? T&. T& temp_pred!) (fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& (Poly%fun%1. (mk_fun (%%lambda%%23 T&. T& T&. T& temp_pred! NAT T&. T& T&. T& temp_pred!))))) :pattern ((fluent_controller!temporal_logic.defs.always.? T&. T& temp_pred!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (temp_pred! Poly)) (! (=> (has_type temp_pred! (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&)) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? T&. T& temp_pred!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.always.? T&. T& temp_pred!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::Execution::head")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.impl&%0.head.))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.impl&%0.head.) (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (= (fluent_controller!temporal_logic.defs.impl&%0.head.? T&. T& self!) (%%apply%%0 (fluent_controller!temporal_logic.defs.Execution./Execution/nat_to_state (%Poly%fluent_controller!temporal_logic.defs.Execution. self!)) (I 0))) :pattern ((fluent_controller!temporal_logic.defs.impl&%0.head.? T&. T& self!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&)) (has_type (fluent_controller!temporal_logic.defs.impl&%0.head.? T&. T& self!) T&)) :pattern ((fluent_controller!temporal_logic.defs.impl&%0.head.? T&. T& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::Execution::head_next")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.impl&%0.head_next.))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.impl&%0.head_next.) (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (= (fluent_controller!temporal_logic.defs.impl&%0.head_next.? T&. T& self!) (%%apply%%0 (fluent_controller!temporal_logic.defs.Execution./Execution/nat_to_state (%Poly%fluent_controller!temporal_logic.defs.Execution. self!)) (I 1))) :pattern ((fluent_controller!temporal_logic.defs.impl&%0.head_next.? T&. T& self!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&)) (has_type (fluent_controller!temporal_logic.defs.impl&%0.head_next.? T&. T& self!) T&)) :pattern ((fluent_controller!temporal_logic.defs.impl&%0.head_next.? T&. T& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::lift_action")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.lift_action.))
(declare-fun %%lambda%%24 (Dcr Type Dcr Type %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 %%Function%%) (ex$ Poly)) (! (= (%%apply%%0 (%%lambda%%24 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) ex$) (%%apply%%1 %%hole%%4 (fluent_controller!temporal_logic.defs.impl&%0.head.? %%hole%%0 %%hole%%1 ex$) (fluent_controller!temporal_logic.defs.impl&%0.head_next.? %%hole%%2 %%hole%%3 ex$))) :pattern ((%%apply%%0 (%%lambda%%24 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) ex$)))))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.lift_action.) (forall ((T&. Dcr) (T& Type) (action_pred! Poly)) (! (= (fluent_controller!temporal_logic.defs.lift_action.? T&. T& action_pred!) (fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& (Poly%fun%1. (mk_fun (%%lambda%%24 T&. T& T&. T& (%Poly%fun%2. action_pred!)))))) :pattern ((fluent_controller!temporal_logic.defs.lift_action.? T&. T& action_pred!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (action_pred! Poly)) (! (=> (has_type action_pred! (TYPE%fun%2. T&. T& T&. T& $ BOOL)) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_action.? T&. T& action_pred!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.lift_action.? T&. T& action_pred!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::state_machine::action::Action::forward")
(assert (fuel_bool_default fuel%fluent_controller!state_machine.action.impl&%0.forward.))
(declare-fun %%lambda%%25 (%%Function%% Poly %%Function%% Poly) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Poly) (%%hole%%2 %%Function%%) (%%hole%%3 Poly) (s$ Poly) (s_prime$ Poly)) (! (= (%%apply%%1 (%%lambda%%25 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) s$ s_prime$) (B (and (%B (%%apply%%1 %%hole%%0 %%hole%%1 s$)) (= s_prime$ (tuple%2./tuple%2/0 (%Poly%tuple%2. (%%apply%%1 %%hole%%2 %%hole%%3 s$))))))) :pattern ((%%apply%%1 (%%lambda%%25 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) s$ s_prime$)))))
(assert (=> (fuel_bool fuel%fluent_controller!state_machine.action.impl&%0.forward.) (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (Output&. Dcr) (Output& Type) (self! Poly) (input! Poly)) (! (= (fluent_controller!state_machine.action.impl&%0.forward.? State&. State& Input&. Input& Output&. Output& self! input!) (mk_fun (%%lambda%%25 (fluent_controller!state_machine.action.Action./Action/precondition (%Poly%fluent_controller!state_machine.action.Action. self!)) input! (fluent_controller!state_machine.action.Action./Action/transition (%Poly%fluent_controller!state_machine.action.Action. self!)) input!))) :pattern ((fluent_controller!state_machine.action.impl&%0.forward.? State&. State& Input&. Input& Output&. Output& self! input!)) ))))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (Output&. Dcr) (Output& Type) (self! Poly) (input! Poly)) (! (=> (and (has_type self! (TYPE%fluent_controller!state_machine.action.Action. State&. State& Input&. Input& Output&. Output&)) (has_type input! Input&)) (has_type (Poly%fun%2. (fluent_controller!state_machine.action.impl&%0.forward.? State&. State& Input&. Input& Output&. Output& self! input!)) (TYPE%fun%2. State&. State& State&. State& $ BOOL))) :pattern ((fluent_controller!state_machine.action.impl&%0.forward.? State&. State& Input&. Input& Output&. Output& self! input!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::state_machine::state_machine::StateMachine::next_result")
(assert (fuel_bool_default fuel%fluent_controller!state_machine.state_machine.impl&%0.next_result.))
(declare-fun %%choose%%2 (Type %%Function%% %%Function%% Poly Poly %%Function%%) Poly)
(assert (forall ((%%hole%%0 Type) (%%hole%%1 %%Function%%) (%%hole%%2 %%Function%%) (%%hole%%3 Poly) (%%hole%%4 Poly) (%%hole%%5 %%Function%%)) (! (=> (exists ((step$ Poly)) (! (and (has_type step$ %%hole%%0) (%B (%%apply%%1 (fluent_controller!state_machine.action.Action./Action/precondition (%Poly%fluent_controller!state_machine.action.Action. (%%apply%%0 %%hole%%1 step$))) (%%apply%%1 %%hole%%2 step$ %%hole%%3) %%hole%%4))) :pattern ((fluent_controller!state_machine.action.Action./Action/precondition (%Poly%fluent_controller!state_machine.action.Action. (%%apply%%0 %%hole%%5 step$)))) )) (exists ((step$ Poly)) (! (and (and (has_type step$ %%hole%%0) (%B (%%apply%%1 (fluent_controller!state_machine.action.Action./Action/precondition (%Poly%fluent_controller!state_machine.action.Action. (%%apply%%0 %%hole%%1 step$))) (%%apply%%1 %%hole%%2 step$ %%hole%%3) %%hole%%4))) (= (%%choose%%2 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) step$)) :pattern ((fluent_controller!state_machine.action.Action./Action/precondition (%Poly%fluent_controller!state_machine.action.Action. (%%apply%%0 %%hole%%5 step$))))))) :pattern ((%%choose%%2 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5)))))
(assert (=> (fuel_bool fuel%fluent_controller!state_machine.state_machine.impl&%0.next_result.) (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (ActionInput&. Dcr) (ActionInput& Type) (Output&. Dcr) (Output& Type) (Step&. Dcr) (Step& Type) (self! Poly) (input! Poly) (s! Poly)) (! (= (fluent_controller!state_machine.state_machine.impl&%0.next_result.? State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step& self! input! s!) (ite (exists ((step$ Poly)) (! (and (has_type step$ Step&) (%B (%%apply%%1 (fluent_controller!state_machine.action.Action./Action/precondition (%Poly%fluent_controller!state_machine.action.Action. (%%apply%%0 (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/step_to_action (%Poly%fluent_controller!state_machine.state_machine.StateMachine. self!)) step$))) (%%apply%%1 (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/action_input (%Poly%fluent_controller!state_machine.state_machine.StateMachine. self!)) step$ input!) s!))) :pattern ((fluent_controller!state_machine.action.Action./Action/precondition (%Poly%fluent_controller!state_machine.action.Action. (%%apply%%0 (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/step_to_action (%Poly%fluent_controller!state_machine.state_machine.StateMachine. self!)) step$)))) )) (let ((witness_step$ (as_type (%%choose%%2 Step& (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/step_to_action (%Poly%fluent_controller!state_machine.state_machine.StateMachine. self!)) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/action_input (%Poly%fluent_controller!state_machine.state_machine.StateMachine. self!)) input! s! (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/step_to_action (%Poly%fluent_controller!state_machine.state_machine.StateMachine. self!))) Step&))) (let ((action$ (%Poly%fluent_controller!state_machine.action.Action. (%%apply%%0 (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/step_to_action (%Poly%fluent_controller!state_machine.state_machine.StateMachine. self!)) witness_step$)))) (let ((action_input$ (%%apply%%1 (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/action_input (%Poly%fluent_controller!state_machine.state_machine.StateMachine. self!)) witness_step$ input!))) (fluent_controller!state_machine.action.ActionResult./Enabled (tuple%2./tuple%2/0 (%Poly%tuple%2. (%%apply%%1 (fluent_controller!state_machine.action.Action./Action/transition (%Poly%fluent_controller!state_machine.action.Action. (Poly%fluent_controller!state_machine.action.Action. action$))) action_input$ s!))) (tuple%2./tuple%2/1 (%Poly%tuple%2. (%%apply%%1 (fluent_controller!state_machine.action.Action./Action/transition (%Poly%fluent_controller!state_machine.action.Action. (Poly%fluent_controller!state_machine.action.Action. action$))) action_input$ s!))))))) fluent_controller!state_machine.action.ActionResult./Disabled)) :pattern ((fluent_controller!state_machine.state_machine.impl&%0.next_result.? State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step& self! input! s!)) ))))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (ActionInput&. Dcr) (ActionInput& Type) (Output&. Dcr) (Output& Type) (Step&. Dcr) (Step& Type) (self! Poly) (input! Poly) (s! Poly)) (! (=> (and (has_type self! (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&)) (has_type input! Input&) (has_type s! State&)) (has_type (Poly%fluent_controller!state_machine.action.ActionResult. (fluent_controller!state_machine.state_machine.impl&%0.next_result.? State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step& self! input! s!)) (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&))) :pattern ((fluent_controller!state_machine.state_machine.impl&%0.next_result.? State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step& self! input! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::form_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (src! Poly) (dst! Poly) (msg_content! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& src! dst! msg_content!) (fluent_controller!kubernetes_cluster.spec.message.Message./Message (%Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. src!) (%Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. dst!) (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. msg_content!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& src! dst! msg_content!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (src! Poly) (dst! Poly) (msg_content! Poly)) (! (=> (and (has_type src! TYPE%fluent_controller!kubernetes_cluster.spec.message.HostId.) (has_type dst! TYPE%fluent_controller!kubernetes_cluster.spec.message.HostId.) (has_type msg_content! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& src! dst! msg_content!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& src! dst! msg_content!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::get_resp_msg_content")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.get_resp_msg_content.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.get_resp_msg_content.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.get_resp_msg_content.? I&. I& O&. O& resp! resp_id!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./GetResponse (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. resp!)))) (%I resp_id!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.get_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (=> (and (has_type resp! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.) (has_type resp_id! NAT)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.get_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.get_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::Message::form_get_resp_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%63 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg. I&. I& O&. O& req_msg! resp!) (=> %%global_location_label%%63 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_request.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg. I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::form_get_resp_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg.? I&. I& O&. O& req_msg! resp!) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.get_resp_msg_content.? I&. I& O&. O& resp! (I (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg.? I&. I& O&. O& req_msg! resp!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (=> (and (has_type req_msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)) (has_type resp! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg.? I&. I& O&. O& req_msg! resp!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg.? I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::handle_get_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_get_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_get_request.) (forall ((req! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_get_request.? req! s!) (ite (not (vstd!set.impl&%0.contains.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (vstd!map.impl&%0.dom.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. req!))))) (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./ObjectNotFound))))) (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. req!)))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_get_request.? req! s!)) ))))
(assert (forall ((req! Poly) (s! Poly)) (! (=> (and (has_type req! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_get_request.? req! s!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse.)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_get_request.? req! s!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_get_request_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_get_request_msg. (Dcr Type Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%64 Bool)
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_get_request_msg. K&. K& E&. E& R&. R& msg! s!) (=> %%global_location_label%%64 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_get_request.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!)))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_get_request_msg. K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_get_request_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_get_request_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_get_request_msg.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_get_request_msg.? K&. K& E&. E& R&. R& msg! s!) (let ((req$ (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_request.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!)))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) msg! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (ite (not (vstd!set.impl&%0.contains.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (vstd!map.impl&%0.dom.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. req$)))))) (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./ObjectNotFound))))) (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. req$)))))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_get_request_msg.? K&. K& E&. E& R&. R& msg! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (=> (and (has_type msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_get_request_msg.? K&. K& E&. E& R&. R& msg! s!)) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_get_request_msg.? K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::is_list_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_list_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_list_request.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_list_request.? I&. I& O&. O& self!) (and (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_list_request.? I&. I& O&. O& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::api_method::APIRequest::get_ListRequest_0")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_ListRequest_0.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_ListRequest_0.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_ListRequest_0.? self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. self!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_ListRequest_0.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_ListRequest_0.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.impl&%0.get_ListRequest_0.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_list_request")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_list_request. (Dcr Type Dcr Type Poly) Bool)
(declare-const %%global_location_label%%65 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_list_request. I&. I& O&. O& self!) (=> %%global_location_label%%65 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_list_request.? I&. I& O&. O& self!))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_list_request. I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_list_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_list_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_list_request.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_list_request.? I&. I& O&. O& self!) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!)))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_list_request.? I&. I& O&. O& self!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_list_request.? I&. I& O&. O& self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_list_request.? I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::list_resp_msg_content")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.list_resp_msg_content.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.list_resp_msg_content.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.list_resp_msg_content.? I&. I& O&. O& resp! resp_id!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./ListResponse (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. resp!)))) (%I resp_id!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.list_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (=> (and (has_type resp! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.) (has_type resp_id! NAT)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.list_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.list_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::Message::form_list_resp_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%66 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg. I&. I& O&. O& req_msg! resp!) (=> %%global_location_label%%66 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_list_request.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg. I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::form_list_resp_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg.? I&. I& O&. O& req_msg! resp!) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.list_resp_msg_content.? I&. I& O&. O& resp! (I (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg.? I&. I& O&. O& req_msg! resp!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (=> (and (has_type req_msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)) (has_type resp! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg.? I&. I& O&. O& req_msg! resp!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg.? I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::vstd_ext::map_lib::map_to_seq")
(assert (fuel_bool_default fuel%fluent_controller!vstd_ext.map_lib.map_to_seq.))
(assert (=> (fuel_bool fuel%fluent_controller!vstd_ext.map_lib.map_to_seq.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (f! Poly)) (! (= (fluent_controller!vstd_ext.map_lib.map_to_seq.? K&. K& V&. V& m! f!) (vstd!set_lib.impl&%0.to_seq.? V&. V& (vstd!set.impl&%0.filter.? V&. V& $ (TYPE%fun%1. V&. V& $ BOOL) (vstd!map_lib.impl&%0.values.? K&. K& V&. V& m!) f!))) :pattern ((fluent_controller!vstd_ext.map_lib.map_to_seq.? K&. K& V&. V& m! f!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (f! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type f! (TYPE%fun%1. V&. V& $ BOOL))) (has_type (fluent_controller!vstd_ext.map_lib.map_to_seq.? K&. K& V&. V& m! f!) (TYPE%vstd!seq.Seq. V&. V&))) :pattern ((fluent_controller!vstd_ext.map_lib.map_to_seq.? K&. K& V&. V& m! f!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::handle_list_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_list_request.))
(declare-fun %%lambda%%26 (Poly fluent_controller!kubernetes_api_objects.spec.common.Kind.) %%Function%%)
(assert (forall ((%%hole%%0 Poly) (%%hole%%1 fluent_controller!kubernetes_api_objects.spec.common.Kind.) (o$ Poly)) (! (= (%%apply%%0 (%%lambda%%26 %%hole%%0 %%hole%%1) o$) (B (and (= (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? o$)))) %%hole%%0) (= (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? o$)))) %%hole%%1)))) :pattern ((%%apply%%0 (%%lambda%%26 %%hole%%0 %%hole%%1) o$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_list_request.) (forall ((req! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_list_request.? req! s!) (let ((selector$ (mk_fun (%%lambda%%26 (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. req!)) (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. req!)))))) (fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse./ListResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (fluent_controller!vstd_ext.map_lib.map_to_seq.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fun%1. selector$)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_list_request.? req! s!)) ))))
(assert (forall ((req! Poly) (s! Poly)) (! (=> (and (has_type req! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_list_request.? req! s!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse.)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_list_request.? req! s!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_list_request_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_list_request_msg. (Dcr Type Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%67 Bool)
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_list_request_msg. K&. K& E&. E& R&. R& msg! s!) (=> %%global_location_label%%67 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_list_request.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!)))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_list_request_msg. K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_list_request_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_list_request_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_list_request_msg.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_list_request_msg.? K&. K& E&. E& R&. R& msg! s!) (let ((req$ (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_list_request.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!)))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) msg! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. (let ((selector$$0 (mk_fun (%%lambda%%26 (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. req$))) (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. req$))))))) (fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse./ListResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (fluent_controller!vstd_ext.map_lib.map_to_seq.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fun%1. selector$$0))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_list_request_msg.? K&. K& E&. E& R&. R& msg! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (=> (and (has_type msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_list_request_msg.? K&. K& E&. E& R&. R& msg! s!)) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_list_request_msg.? K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::unmarshallable_spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_spec.))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind_ ((c fluent_controller!kubernetes_api_objects.spec.common.Kind.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind) c))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind_ ((c fluent_controller!kubernetes_api_objects.spec.common.Kind.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind) c))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind_ ((c fluent_controller!kubernetes_api_objects.spec.common.Kind.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind) c))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PodKind_ ((c fluent_controller!kubernetes_api_objects.spec.common.Kind.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.common.Kind./PodKind) c))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleBindingKind_ ((c fluent_controller!kubernetes_api_objects.spec.common.Kind.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleBindingKind) c))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleKind_ ((c fluent_controller!kubernetes_api_objects.spec.common.Kind.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleKind) c))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.common.Kind./SecretKind_ ((c fluent_controller!kubernetes_api_objects.spec.common.Kind.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.common.Kind./SecretKind) c))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind_ ((c fluent_controller!kubernetes_api_objects.spec.common.Kind.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind) c))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind_ ((c fluent_controller!kubernetes_api_objects.spec.common.Kind.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind) c))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceAccountKind_ ((c fluent_controller!kubernetes_api_objects.spec.common.Kind.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceAccountKind) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_spec.) (forall ((K&. Dcr) (K& Type) (obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_spec.? K&. K& obj!) (%B (let ((tmp%%$ (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PodKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleBindingKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./SecretKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceAccountKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))))))))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_spec.? K&. K& obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::unmarshallable_status")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_status.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_status.) (forall ((K&. Dcr) (K& Type) (obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_status.? K&. K& obj!) (%B (let ((tmp%%$ (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PodKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleBindingKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./SecretKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceAccountKind_ tmp%%$) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))))))))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_status.? K&. K& obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::unmarshallable_object")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_object.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_object.) (forall ((K&. Dcr) (K& Type) (obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_object.? K&. K& obj!) (and (%B (let ((tmp%%$$0 (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PodKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleBindingKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./SecretKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceAccountKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))))))) (%B (let ((tmp%%$$0 (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PodKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleBindingKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./SecretKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceAccountKind_ tmp%%$$0) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_object.? K&. K& obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::dynamic::DynamicObjectView::set_namespace")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_namespace.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_namespace.) (forall ((self! Poly) (namespace! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_namespace.? self! namespace!) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some namespace!))) (let ((tmp%%$1 (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1)))))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_namespace.? self! namespace!)) ))))
(assert (forall ((self! Poly) (namespace! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type namespace! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_namespace.? self! namespace!)) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_namespace.? self! namespace!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::create_request_admission_check")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.create_request_admission_check.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.create_request_admission_check.) (forall ((K&. Dcr) (K& Type) (req! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.create_request_admission_check.? K&. K& req! s!) (ite (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req!))))))))))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./Invalid)) (ite (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req!))))))))))))) (not (= (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req!)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req!)))))))))))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./BadRequest)) (ite (not (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_object.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req!))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./BadRequest)) (ite (vstd!set.impl&%0.contains.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (vstd!map.impl&%0.dom.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_namespace.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req!))) (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req!))))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./ObjectAlreadyExists)) core!option.Option./None))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.create_request_admission_check.? K&. K& req! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (req! Poly) (s! Poly)) (! (=> (and (has_type req! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.create_request_admission_check.? K&. K& req! s!)) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.create_request_admission_check.? K&. K& req! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::status")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.status.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.status.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (fluent_controller!kubernetes_api_objects.spec.resource.empty_status.? (I 0)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::status")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.status.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.status.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::status")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.status.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.status.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodView::status")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.status.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.status.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::status")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.status.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.status.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (fluent_controller!kubernetes_api_objects.spec.resource.empty_status.? (I 0)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role::RoleView::status")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.status.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.status.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (fluent_controller!kubernetes_api_objects.spec.resource.empty_status.? (I 0)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::secret::SecretView::status")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.status.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.status.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (fluent_controller!kubernetes_api_objects.spec.resource.empty_status.? (I 0)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service::ServiceView::status")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.status.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.status.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::status")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.status.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.status.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service_account::ServiceAccountView::status")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.status.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.status.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (fluent_controller!kubernetes_api_objects.spec.resource.empty_status.? (I 0)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::marshalled_default_status")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.marshalled_default_status.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.marshalled_default_status.) (forall ((K&. Dcr) (K& Type) (kind! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.marshalled_default_status.? K&. K& kind!) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. kind!)) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. kind!)) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. kind!)) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PodKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. kind!)) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleBindingKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. kind!)) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. kind!)) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./SecretKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. kind!)) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. kind!)) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. kind!)) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceAccountKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. kind!)) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.))) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? K&. K& (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.status.? K&. K& (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? K&. K&))))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.marshalled_default_status.? K&. K& kind!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (kind! Poly)) (! (=> (has_type kind! TYPE%fluent_controller!kubernetes_api_objects.spec.common.Kind.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.marshalled_default_status.? K&. K& kind!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.marshalled_default_status.? K&. K& kind!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::metadata_validity_check")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_validity_check.))
(declare-fun %%lambda%%27 () %%Function%%)
(assert (forall ((o$ Poly)) (! (= (%%apply%%0 %%lambda%%27 o$) (B (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. o$))))))) (%B (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. o$))))))))) :pattern ((%%apply%%0 %%lambda%%27 o$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_validity_check.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_validity_check.? obj!) (ite (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))))))))) (> (vstd!seq.Seq.len.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) 1)) (> (vstd!seq.Seq.len.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (vstd!seq_lib.impl&%0.filter.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))))))) (Poly%fun%1. (mk_fun %%lambda%%27)))) 1)) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./Invalid)) core!option.Option./None)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_validity_check.? obj!)) ))))
(assert (forall ((obj! Poly)) (! (=> (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_validity_check.? obj!)) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_validity_check.? obj!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::state_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.state_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.state_validation.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!) (B true)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::state_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.state_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.state_validation.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::state_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.state_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.state_validation.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodView::state_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.state_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.state_validation.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::state_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.state_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.state_validation.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!) (B (and (= (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/api_group (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 1643544706537938872842697358570489062804509388621932837116990556823382500177806596554082952327726047109157798557386796605561362955784812655076086331008857)))) (or (= (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 11284638637874220278420881318989421844606119630941653123133344947675887718486119920625636947185240249796982414662353462343164746484564190857128199404099797)))) (= (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView./RoleRefView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 997953223764610794471358066690909830640626995620451865355609330214170976903082073236401849232670511203686827214674564917416816037267585476364181478208943)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role::PolicyRuleView::state_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%2.state_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%2.state_validation.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.role.impl&%2.state_validation.? self!) (and (and (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/api_groups (%Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. self!))))))) (> (vstd!seq.Seq.len.? $ (TYPE%vstd!seq.Seq. $ CHAR) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/api_groups (%Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. self!)))))) 0)) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. self!)))))))) (> (vstd!seq.Seq.len.? $ (TYPE%vstd!seq.Seq. $ CHAR) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. self!)))))) 0)) (> (vstd!seq.Seq.len.? $ (TYPE%vstd!seq.Seq. $ CHAR) (fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView./PolicyRuleView/verbs (%Poly%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. self!))) 0))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role.impl&%2.state_validation.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role::RoleView::state_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.state_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.state_validation.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!) (B (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!))))))) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!)))))))) (fluent_controller!kubernetes_api_objects.spec.role.impl&%2.state_validation.? (vstd!seq.Seq.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!))))) i$)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.role.impl&%2.state_validation.? (vstd!seq.Seq.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.PolicyRuleView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!))))) i$))) ))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::secret::SecretView::state_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.state_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.state_validation.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!) (B true)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service::ServiceView::state_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.state_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.state_validation.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::state_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.state_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.state_validation.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!) (B (let ((new_spec$ (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))))))) (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!))))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. new_spec$)))))))) (>= (%I (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. new_spec$))))))) 0)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service_account::ServiceAccountView::state_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.state_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.state_validation.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!) (B true)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::valid_object")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_object.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_object.) (forall ((K&. Dcr) (K& Type) (obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_object.? K&. K& obj!) (%B (let ((tmp%%$ (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PodKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleBindingKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./SecretKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceAccountKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. obj!)))) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? K&. K& (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? K&. K& obj!))))))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_object.? K&. K& obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::object_validity_check")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_validity_check.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_validity_check.) (forall ((K&. Dcr) (K& Type) (obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_validity_check.? K&. K& obj!) (ite (not (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_object.? K&. K& obj!)) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./Invalid)) core!option.Option./None)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_validity_check.? K&. K& obj!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (obj! Poly)) (! (=> (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_validity_check.? K&. K& obj!)) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_validity_check.? K&. K& obj!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::created_object_validity_check")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.created_object_validity_check.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.created_object_validity_check.) (forall ((K&. Dcr) (K& Type) (created_obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.created_object_validity_check.? K&. K& created_obj!) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_validity_check.? created_obj!)))))) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_validity_check.? created_obj!) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_validity_check.? K&. K& created_obj!)))))) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_validity_check.? K&. K& created_obj!) core!option.Option./None))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.created_object_validity_check.? K&. K& created_obj!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (created_obj! Poly)) (! (=> (has_type created_obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.created_object_validity_check.? K&. K& created_obj!)) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.created_object_validity_check.? K&. K& created_obj!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::handle_create_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_create_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_create_request.) (forall ((K&. Dcr) (K& Type) (req! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_create_request.? K&. K& req! s!) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.create_request_admission_check.? K&. K& req! s!)))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.create_request_admission_check.? K&. K& req! s!)))))))))) (let ((created_obj$ (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req!))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req!))))) (let ((tmp%%$1 (core!option.Option./Some (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (let ((tmp%%$2 (core!option.Option./Some (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (let ((tmp%%$3 core!option.Option./None)) (let ((tmp%%$4 (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req!))))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)))))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req!))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.marshalled_default_status.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req!)))))))))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.created_object_validity_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. created_obj$))))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.created_object_validity_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. created_obj$))))))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (vstd!map.impl&%0.insert.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. created_obj$))) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. created_obj$))) (%I (I (Add (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)) 1))) (%I (I (Add (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)) 1))) (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (vstd!set.impl&%0.remove.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. created_obj$))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. created_obj$))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_create_request.? K&. K& req! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (req! Poly) (s! Poly)) (! (=> (and (has_type req! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_create_request.? K&. K& req! s!)) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_create_request.? K&. K& req! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::create_resp_msg_content")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_resp_msg_content.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_resp_msg_content.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_resp_msg_content.? I&. I& O&. O& resp! resp_id!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./CreateResponse (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. resp!)))) (%I resp_id!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (=> (and (has_type resp! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.) (has_type resp_id! NAT)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::Message::form_create_resp_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%68 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg. I&. I& O&. O& req_msg! resp!) (=> %%global_location_label%%68 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_create_request.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg. I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::form_create_resp_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg.? I&. I& O&. O& req_msg! resp!) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_resp_msg_content.? I&. I& O&. O& resp! (I (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg.? I&. I& O&. O& req_msg! resp!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (=> (and (has_type req_msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)) (has_type resp! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg.? I&. I& O&. O& req_msg! resp!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg.? I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_create_request_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_create_request_msg. (Dcr Type Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%69 Bool)
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_create_request_msg. K&. K& E&. E& R&. R& msg! s!) (=> %%global_location_label%%69 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_create_request.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!)))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_create_request_msg. K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_create_request_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_create_request_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_create_request_msg.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_create_request_msg.? K&. K& E&. E& R&. R& msg! s!) (let ((req$ (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_create_request.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!)))))) (let ((tmp%%$ (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.create_request_admission_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req$) s!)))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.create_request_admission_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req$) s!)))))))))) (let ((created_obj$$0 (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req$)))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$$0 (core!option.Option./Some (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req$)))))) (let ((tmp%%$$1 (core!option.Option./Some (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (let ((tmp%%$$2 (core!option.Option./Some (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (let ((tmp%%$$3 core!option.Option./None)) (let ((tmp%%$$4 (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req$)))))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$$0)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$$1)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$$2)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$$3)))))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req$)))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.marshalled_default_status.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. req$))))))))))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.created_object_validity_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. created_obj$$0))))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.created_object_validity_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. created_obj$$0))))))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (vstd!map.impl&%0.insert.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. created_obj$$0))) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. created_obj$$0))) (%I (I (Add (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)) 1))) (%I (I (Add (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)) 1))) (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (vstd!set.impl&%0.remove.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. created_obj$$0))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. created_obj$$0)))))))))))) (let ((s_prime$ (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((resp$ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) msg! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. resp$))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_create_request_msg.? K&. K& E&. E& R&. R& msg! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (=> (and (has_type msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_create_request_msg.? K&. K& E&. E& R&. R& msg! s!)) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_create_request_msg.? K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::dynamic::DynamicObjectView::set_resource_version")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version.) (forall ((self! Poly) (resource_version! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version.? self! resource_version!) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some resource_version!))) (let ((tmp%%$1 (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1)))))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version.? self! resource_version!)) ))))
(assert (forall ((self! Poly) (resource_version! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type resource_version! INT)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version.? self! resource_version!)) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version.? self! resource_version!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::dynamic::DynamicObjectView::set_deletion_timestamp")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_deletion_timestamp.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_deletion_timestamp.) (forall ((self! Poly) (deletion_timestamp! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_deletion_timestamp.? self! deletion_timestamp!) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some deletion_timestamp!))) (let ((tmp%%$1 (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$1))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_deletion_timestamp.? self! deletion_timestamp!)) ))))
(assert (forall ((self! Poly) (deletion_timestamp! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type deletion_timestamp! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_deletion_timestamp.? self! deletion_timestamp!)) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_deletion_timestamp.? self! deletion_timestamp!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::handle_delete_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_delete_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_delete_request.) (forall ((req! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_delete_request.? req! s!) (ite (not (vstd!set.impl&%0.contains.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (vstd!map.impl&%0.dom.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. req!))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./ObjectNotFound))))))) (let ((obj$ (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. req!))))))) (ite (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$))))))))))) (> (vstd!seq.Seq.len.? $ (TYPE%vstd!seq.Seq. $ CHAR) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))))))) 0)) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$))))))))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%tuple%0. tuple%0./tuple%0))))))) (let ((stamped_obj_with_new_rv$ (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_deletion_timestamp.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.deletion_timestamp.? (I 0)))) (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (vstd!map.impl&%0.insert.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. req!))) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. stamped_obj_with_new_rv$))) (%I (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))) (%I (I (Add (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)) 1))) (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%tuple%0. tuple%0./tuple%0))))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (vstd!map.impl&%0.remove.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. req!))))) (%I (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))) (%I (I (Add (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)) 1))) (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%tuple%0. tuple%0./tuple%0))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_delete_request.? req! s!)) ))))
(assert (forall ((req! Poly) (s! Poly)) (! (=> (and (has_type req! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_delete_request.? req! s!)) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_delete_request.? req! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::delete_resp_msg_content")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_resp_msg_content.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_resp_msg_content.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_resp_msg_content.? I&. I& O&. O& resp! resp_id!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./DeleteResponse (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. resp!)))) (%I resp_id!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (=> (and (has_type resp! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.) (has_type resp_id! NAT)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::Message::form_delete_resp_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%70 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg. I&. I& O&. O& req_msg! resp!) (=> %%global_location_label%%70 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_delete_request.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg. I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::form_delete_resp_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg.? I&. I& O&. O& req_msg! resp!) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_resp_msg_content.? I&. I& O&. O& resp! (I (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg.? I&. I& O&. O& req_msg! resp!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (=> (and (has_type req_msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)) (has_type resp! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg.? I&. I& O&. O& req_msg! resp!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg.? I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_delete_request_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_delete_request_msg. (Dcr Type Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%71 Bool)
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_delete_request_msg. K&. K& E&. E& R&. R& msg! s!) (=> %%global_location_label%%71 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_delete_request.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!)))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_delete_request_msg. K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_delete_request_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_delete_request_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_delete_request_msg.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_delete_request_msg.? K&. K& E&. E& R&. R& msg! s!) (let ((req$ (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_delete_request.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!)))))) (let ((tmp%%$ (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_delete_request.? (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. req$) s!))) (let ((s_prime$ (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((resp$ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) msg! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. resp$))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_delete_request_msg.? K&. K& E&. E& R&. R& msg! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (=> (and (has_type msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_delete_request_msg.? K&. K& E&. E& R&. R& msg! s!)) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_delete_request_msg.? K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::allow_unconditional_update")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.allow_unconditional_update.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.allow_unconditional_update.) (forall ((kind! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.allow_unconditional_update.? kind!) (not (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./CustomResourceKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. kind!)))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.allow_unconditional_update.? kind!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::update_request_admission_check_helper")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check_helper.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check_helper.) (forall ((K&. Dcr) (K& Type) (name! Poly) (namespace! Poly) (obj! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check_helper.? K&. K& name! namespace! obj! s!) (let ((key$ (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) name! namespace!))) (ite (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))))))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./BadRequest)) (ite (not (= name! (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))))))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./BadRequest)) (ite (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))))))))) (not (= namespace! (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./BadRequest)) (ite (not (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_object.? K&. K& obj!)) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./BadRequest)) (ite (not (vstd!set.impl&%0.contains.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (vstd!map.impl&%0.dom.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./ObjectNotFound)) (ite (and (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))))))))) (not (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.allow_unconditional_update.? (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./Invalid)) (ite (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))))))))) (not (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)))))))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./Conflict)) (ite (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))))))))) (not (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)))))))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./InternalError)) core!option.Option./None)))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check_helper.? K&. K& name! namespace! obj! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (name! Poly) (namespace! Poly) (obj! Poly) (s! Poly)) (! (=> (and (has_type name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check_helper.? K&. K& name! namespace! obj! s!)) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check_helper.? K&. K& name! namespace! obj! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::update_request_admission_check")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check.) (forall ((K&. Dcr) (K& Type) (req! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check.? K&. K& req! s!) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check_helper.? K&. K& (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. req!)) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. req!)) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. req!))) s!)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check.? K&. K& req! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (req! Poly) (s! Poly)) (! (=> (and (has_type req! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check.? K&. K& req! s!)) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check.? K&. K& req! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::updated_object")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object.) (forall ((req! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object.? req! old_obj!) (let ((updated_obj$ (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. req!))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. req!))))) (let ((tmp%%$1 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj!))))))) (let ((tmp%%$2 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj!))))))) (let ((tmp%%$3 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj!))))))) (let ((tmp%%$4 (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. req!))))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)))))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. req!))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj!))))))) updated_obj$)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object.? req! old_obj!)) ))))
(assert (forall ((req! Poly) (old_obj! Poly)) (! (=> (and (has_type req! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type old_obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object.? req! old_obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object.? req! old_obj!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::finalizers_as_set")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.finalizers_as_set.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.finalizers_as_set.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.finalizers_as_set.? self!) (ite (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!))))))) (vstd!set.impl&%0.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!seq_lib.impl&%0.to_set.? $ (TYPE%vstd!seq.Seq. $ CHAR) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.finalizers_as_set.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.finalizers_as_set.? self!) (TYPE%vstd!set.Set. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.finalizers_as_set.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::metadata_transition_validity_check")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_transition_validity_check.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_transition_validity_check.) (forall ((obj! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_transition_validity_check.? obj! old_obj!) (ite (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj!)))))))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))) (not (vstd!set.impl&%0.subset_of.? $ (TYPE%vstd!seq.Seq. $ CHAR) (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.finalizers_as_set.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.finalizers_as_set.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj!))))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./Forbidden)) core!option.Option./None)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_transition_validity_check.? obj! old_obj!)) ))))
(assert (forall ((obj! Poly) (old_obj! Poly)) (! (=> (and (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type old_obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_transition_validity_check.? obj! old_obj!)) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_transition_validity_check.? obj! old_obj!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::transition_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.transition_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.transition_validation.) (forall ((self! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self! old_obj!) (B true)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self! old_obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::transition_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.transition_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.transition_validation.) (forall ((self! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self! old_obj!) (B (let ((old_spec$ (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. old_obj!)))))))) (let ((new_spec$ (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))))))) (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. old_spec$))) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. new_spec$)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self! old_obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::transition_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.transition_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.transition_validation.) (forall ((self! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self! old_obj!) (B true)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self! old_obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodView::transition_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.transition_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.transition_validation.) (forall ((self! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self! old_obj!) (B true)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self! old_obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::transition_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.transition_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.transition_validation.) (forall ((self! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self! old_obj!) (B (= (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. old_obj!)) (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self! old_obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role::RoleView::transition_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.transition_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.transition_validation.) (forall ((self! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self! old_obj!) (B true)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self! old_obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::secret::SecretView::transition_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.transition_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.transition_validation.) (forall ((self! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self! old_obj!) (B true)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self! old_obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service::ServiceView::transition_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.transition_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.transition_validation.) (forall ((self! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self! old_obj!) (B true)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self! old_obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::transition_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.transition_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.transition_validation.) (forall ((self! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self! old_obj!) (B (let ((old_spec$ (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. old_obj!)))))))) (let ((new_spec$ (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))))))) (= old_spec$ (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. old_spec$))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. new_spec$))))) (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. new_spec$))) (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. old_spec$))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. new_spec$))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. new_spec$))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. old_spec$))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self! old_obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service_account::ServiceAccountView::transition_validation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.transition_validation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.transition_validation.) (forall ((self! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self! old_obj!) (B true)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self! old_obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::valid_transition")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_transition.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_transition.) (forall ((K&. Dcr) (K& Type) (obj! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_transition.? K&. K& obj! old_obj!) (%B (let ((tmp%%$ (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. obj!))) (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. old_obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!))) (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. old_obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. obj!))) (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. old_obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./PodKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. obj!))) (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. old_obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleBindingKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. obj!))) (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. old_obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. obj!))) (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. old_obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./SecretKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. obj!))) (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. old_obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. obj!))) (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. old_obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. obj!))) (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. old_obj!)))) (ite (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceAccountKind_ tmp%%$) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. obj!))) (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. old_obj!)))) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.transition_validation.? K&. K& (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? K&. K& obj!))) (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? K&. K& old_obj!))))))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_transition.? K&. K& obj! old_obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::object_transition_validity_check")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_transition_validity_check.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_transition_validity_check.) (forall ((K&. Dcr) (K& Type) (obj! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_transition_validity_check.? K&. K& obj! old_obj!) (ite (not (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.valid_transition.? K&. K& obj! old_obj!)) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.error.APIError. fluent_controller!kubernetes_api_objects.error.APIError./Invalid)) core!option.Option./None)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_transition_validity_check.? K&. K& obj! old_obj!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (obj! Poly) (old_obj! Poly)) (! (=> (and (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type old_obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_transition_validity_check.? K&. K& obj! old_obj!)) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_transition_validity_check.? K&. K& obj! old_obj!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::updated_object_validity_check")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.) (forall ((K&. Dcr) (K& Type) (updated_obj! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.? K&. K& updated_obj! old_obj!) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_validity_check.? updated_obj!)))))) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_validity_check.? updated_obj!) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_transition_validity_check.? updated_obj! old_obj!)))))) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.metadata_transition_validity_check.? updated_obj! old_obj!) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_validity_check.? K&. K& updated_obj!)))))) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_validity_check.? K&. K& updated_obj!) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_transition_validity_check.? K&. K& updated_obj! old_obj!)))))) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.object_transition_validity_check.? K&. K& updated_obj! old_obj!) core!option.Option./None))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.? K&. K& updated_obj! old_obj!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (updated_obj! Poly) (old_obj! Poly)) (! (=> (and (has_type updated_obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type old_obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.? K&. K& updated_obj! old_obj!)) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.? K&. K& updated_obj! old_obj!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::handle_update_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_request.) (forall ((K&. Dcr) (K& Type) (req! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_request.? K&. K& req! s!) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check.? K&. K& req! s!)))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check.? K&. K& req! s!)))))))))) (let ((old_obj$ (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.? req!)))))) (let ((updated_obj$ (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object.? req! (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$)))) (ite (= updated_obj$ old_obj$) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$))))))) (let ((updated_obj_with_new_rv$ (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj$) (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$))))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$))))))))))) (ite (or (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$))))))))))) (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$))))))))))) (> (vstd!seq.Seq.len.? $ (TYPE%vstd!seq.Seq. $ CHAR) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$)))))))))) 0))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (vstd!map.impl&%0.insert.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.? req!)) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$))) (%I (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))) (%I (I (Add (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)) 1))) (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (vstd!set.impl&%0.remove.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.? req!)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (vstd!map.impl&%0.remove.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$))))) (%I (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))) (%I (I (Add (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)) 1))) (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$))))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_request.? K&. K& req! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (req! Poly) (s! Poly)) (! (=> (and (has_type req! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_request.? K&. K& req! s!)) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_request.? K&. K& req! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::update_resp_msg_content")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_resp_msg_content.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_resp_msg_content.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_resp_msg_content.? I&. I& O&. O& resp! resp_id!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateResponse (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. resp!)))) (%I resp_id!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (=> (and (has_type resp! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.) (has_type resp_id! NAT)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::Message::form_update_resp_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%72 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg. I&. I& O&. O& req_msg! resp!) (=> %%global_location_label%%72 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_request.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg. I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::form_update_resp_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg.? I&. I& O&. O& req_msg! resp!) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_resp_msg_content.? I&. I& O&. O& resp! (I (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg.? I&. I& O&. O& req_msg! resp!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (=> (and (has_type req_msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)) (has_type resp! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg.? I&. I& O&. O& req_msg! resp!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg.? I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_update_request_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_request_msg. (Dcr Type Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%73 Bool)
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_request_msg. K&. K& E&. E& R&. R& msg! s!) (=> %%global_location_label%%73 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_request.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!)))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_request_msg. K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_update_request_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_request_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_request_msg.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_request_msg.? K&. K& E&. E& R&. R& msg! s!) (let ((req$ (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!)))))) (let ((tmp%%$ (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. req$) s!)))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. req$) s!)))))))))) (let ((old_obj$$0 (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.? (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. req$))))))) (let ((updated_obj$$0 (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object.? (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. req$) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$$0)))) (ite (= updated_obj$$0 old_obj$$0) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$$0))))))) (let ((updated_obj_with_new_rv$$0 (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj$$0) (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$$0) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$$0))))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$$0) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$$0))))))))))) (ite (or (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$$0))))))))))) (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$$0))))))))))) (> (vstd!seq.Seq.len.? $ (TYPE%vstd!seq.Seq. $ CHAR) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$$0)))))))))) 0))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (vstd!map.impl&%0.insert.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.? (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. req$))) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$$0))) (%I (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))) (%I (I (Add (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)) 1))) (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (vstd!set.impl&%0.remove.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%3.key.? (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. req$))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$$0))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (vstd!map.impl&%0.remove.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$$0))))) (%I (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))) (%I (I (Add (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)) 1))) (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$$0)))))))))))))))) (let ((s_prime$ (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((resp$ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) msg! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. resp$))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_request_msg.? K&. K& E&. E& R&. R& msg! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (=> (and (has_type msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_request_msg.? K&. K& E&. E& R&. R& msg! s!)) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_request_msg.? K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::update_status_request_admission_check")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_status_request_admission_check.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_status_request_admission_check.) (forall ((K&. Dcr) (K& Type) (req! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_status_request_admission_check.? K&. K& req! s!) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_request_admission_check_helper.? K&. K& (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. req!)) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. req!)) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. req!))) s!)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_status_request_admission_check.? K&. K& req! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (req! Poly) (s! Poly)) (! (=> (and (has_type req! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_status_request_admission_check.? K&. K& req! s!)) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_status_request_admission_check.? K&. K& req! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::status_updated_object")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.status_updated_object.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.status_updated_object.) (forall ((req! Poly) (old_obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.status_updated_object.? req! old_obj!) (let ((status_updated_object$ (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. req!))))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. req!)))))))))) status_updated_object$)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.status_updated_object.? req! old_obj!)) ))))
(assert (forall ((req! Poly) (old_obj! Poly)) (! (=> (and (has_type req! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type old_obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.status_updated_object.? req! old_obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.status_updated_object.? req! old_obj!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::api_server::state_machine::handle_update_status_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_status_request.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_status_request.) (forall ((K&. Dcr) (K& Type) (req! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_status_request.? K&. K& req! s!) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_status_request_admission_check.? K&. K& req! s!)))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_status_request_admission_check.? K&. K& req! s!)))))))))) (let ((old_obj$ (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key.? req!)))))) (let ((updated_obj$ (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.status_updated_object.? req! (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$)))) (ite (= updated_obj$ old_obj$) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$))))))) (let ((updated_obj_with_new_rv$ (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj$) (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$))))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$))))))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (vstd!map.impl&%0.insert.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key.? req!)) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$))) (%I (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))) (%I (I (Add (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)) 1))) (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$)))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_status_request.? K&. K& req! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (req! Poly) (s! Poly)) (! (=> (and (has_type req! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_status_request.? K&. K& req! s!)) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.handle_update_status_request.? K&. K& req! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::update_status_resp_msg_content")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_resp_msg_content.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_resp_msg_content.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_resp_msg_content.? I&. I& O&. O& resp! resp_id!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse./UpdateStatusResponse (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. resp!)))) (%I resp_id!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (=> (and (has_type resp! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.) (has_type resp_id! NAT)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::Message::form_update_status_resp_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%74 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg. I&. I& O&. O& req_msg! resp!) (=> %%global_location_label%%74 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_request.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg. I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::form_update_status_resp_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg.? I&. I& O&. O& req_msg! resp!) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_resp_msg_content.? I&. I& O&. O& resp! (I (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg.? I&. I& O&. O& req_msg! resp!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (=> (and (has_type req_msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)) (has_type resp! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg.? I&. I& O&. O& req_msg! resp!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg.? I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_update_status_request_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_status_request_msg. (Dcr Type Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%75 Bool)
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_status_request_msg. K&. K& E&. E& R&. R& msg! s!) (=> %%global_location_label%%75 (fluent_controller!kubernetes_cluster.spec.message.impl&%4.is_update_status_request.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!)))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_status_request_msg. K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_update_status_request_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_status_request_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_status_request_msg.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_status_request_msg.? K&. K& E&. E& R&. R& msg! s!) (let ((req$ (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_status_request.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!)))))) (let ((tmp%%$ (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_status_request_admission_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. req$) s!)))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.update_status_request_admission_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. req$) s!)))))))))) (let ((old_obj$$0 (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key.? (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. req$))))))) (let ((updated_obj$$0 (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.status_updated_object.? (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. req$) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$$0)))) (ite (= updated_obj$$0 old_obj$$0) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$$0))))))) (let ((updated_obj_with_new_rv$$0 (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.set_resource_version.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj$$0) (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$$0) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$$0))))))) (tuple%2./tuple%2 s! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.updated_object_validity_check.? K&. K& (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$$0) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. old_obj$$0))))))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (vstd!map.impl&%0.insert.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.impl&%4.key.? (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. req$))) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$$0))) (%I (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))) (%I (I (Add (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)) 1))) (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s!)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. updated_obj_with_new_rv$$0))))))))))))))) (let ((s_prime$ (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((resp$ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) msg! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. resp$))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_status_request_msg.? K&. K& E&. E& R&. R& msg! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (=> (and (has_type msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_status_request_msg.? K&. K& E&. E& R&. R& msg! s!)) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_status_request_msg.? K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::cluster::Cluster::transition_by_etcd")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.transition_by_etcd. (Dcr Type Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%76 Bool)
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.transition_by_etcd. K&. K& E&. E& R&. R& msg! s!) (=> %%global_location_label%%76 (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!))))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.transition_by_etcd. K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::transition_by_etcd")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.transition_by_etcd.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.transition_by_etcd.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.transition_by_etcd.? K&. K& E&. E& R&. R& msg! s!) (let ((tmp%%$ (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest_ tmp%%$) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_get_request_msg.? K&. K& E&. E& R&. R& msg! s!) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest_ tmp%%$) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_list_request_msg.? K&. K& E&. E& R&. R& msg! s!) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest_ tmp%%$) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_create_request_msg.? K&. K& E&. E& R&. R& msg! s!) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest_ tmp%%$) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_delete_request_msg.? K&. K& E&. E& R&. R& msg! s!) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest_ tmp%%$) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_request_msg.? K&. K& E&. E& R&. R& msg! s!) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_update_status_request_msg.? K&. K& E&. E& R&. R& msg! s!)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.transition_by_etcd.? K&. K& E&. E& R&. R& msg! s!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (msg! Poly) (s! Poly)) (! (=> (and (has_type msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (has_type s! TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState.)) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.transition_by_etcd.? K&. K& E&. E& R&. R& msg! s!)) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.transition_by_etcd.? K&. K& E&. E& R&. R& msg! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_request.))
(declare-fun %%lambda%%28 (fluent_controller!kubernetes_cluster.spec.message.HostId.) %%Function%%)
(assert (forall ((%%hole%%0 fluent_controller!kubernetes_cluster.spec.message.HostId.) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%28 %%hole%%0) input$ s$) (B (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. input$))))))) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. input$))))))))))) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. input$))))))) %%hole%%0)))) :pattern ((%%apply%%1 (%%lambda%%28 %%hole%%0) input$ s$)))))
(declare-fun %%lambda%%29 (Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%29 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7) input$ s$) (Poly%tuple%2. (let ((tmp%%$ (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.transition_by_etcd.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. input$))))) s$))) (let ((s_prime$ (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((etcd_resp$ (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput (vstd!multiset.impl&%0.singleton.? %%hole%%6 %%hole%%7 (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. etcd_resp$)))))))))) :pattern ((%%apply%%1 (%%lambda%%29 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_request.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_request.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%28 fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%29 K&. K& E&. E& R&. R& $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_request.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_request.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_request.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::kubernetes_api")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.kubernetes_api.))
(declare-fun %%lambda%%30 (vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>.) %%Function%%)
(assert (forall ((%%hole%%0 vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>.) (%%hole%%1 vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%30 %%hole%%0 %%hole%%1) s$) (B (and (= (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$)) %%hole%%0) (= (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$)) %%hole%%1)))) :pattern ((%%apply%%0 (%%lambda%%30 %%hole%%0 %%hole%%1) s$)))))
(declare-fun %%lambda%%31 (Poly) %%Function%%)
(assert (forall ((%%hole%%0 Poly) (step$ Poly)) (! (= (%%apply%%0 (%%lambda%%31 %%hole%%0) step$) %%hole%%0) :pattern ((%%apply%%0 (%%lambda%%31 %%hole%%0) step$)))))
(declare-fun %%lambda%%32 () %%Function%%)
(assert (forall ((step$ Poly) (input$ Poly)) (! (= (%%apply%%1 %%lambda%%32 step$ input$) input$) :pattern ((%%apply%%1 %%lambda%%32 step$ input$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.kubernetes_api.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.kubernetes_api.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine (%Poly%fun%1. (Poly%fun%1. (mk_fun (%%lambda%%30 (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (vstd!map.impl&%0.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (vstd!set.impl&%0.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)))))) (vstd!set.impl&%0.insert.? $ (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (vstd!set.impl&%0.empty.? $ (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_request.? K&. K& E&. E& R&. R&))) (%Poly%fun%1. (Poly%fun%1. (mk_fun (%%lambda%%31 (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.handle_request.? K&. K& E&. E& R&. R&)))))) (%Poly%fun%2. (Poly%fun%2. (mk_fun %%lambda%%32))))) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.kubernetes_api.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.kubernetes_api.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.state_machine.StateMachine. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep.)) :pattern ((fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.kubernetes_api.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::state_machine::action::ActionResult::get_Enabled_1")
(assert (fuel_bool_default fuel%fluent_controller!state_machine.action.impl&%1.get_Enabled_1.))
(assert (=> (fuel_bool fuel%fluent_controller!state_machine.action.impl&%1.get_Enabled_1.) (forall ((State&. Dcr) (State& Type) (Output&. Dcr) (Output& Type) (self! Poly)) (! (= (fluent_controller!state_machine.action.impl&%1.get_Enabled_1.? State&. State& Output&. Output& self!) (fluent_controller!state_machine.action.ActionResult./Enabled/1 (%Poly%fluent_controller!state_machine.action.ActionResult. self!))) :pattern ((fluent_controller!state_machine.action.impl&%1.get_Enabled_1.? State&. State& Output&. Output& self!)) ))))
(assert (forall ((State&. Dcr) (State& Type) (Output&. Dcr) (Output& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&)) (has_type (fluent_controller!state_machine.action.impl&%1.get_Enabled_1.? State&. State& Output&. Output& self!) Output&)) :pattern ((fluent_controller!state_machine.action.impl&%1.get_Enabled_1.? State&. State& Output&. Output& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::state_machine::state_machine::NetworkStateMachine::next_result")
(assert (fuel_bool_default fuel%fluent_controller!state_machine.state_machine.impl&%1.next_result.))
(assert (=> (fuel_bool fuel%fluent_controller!state_machine.state_machine.impl&%1.next_result.) (forall ((State&. Dcr) (State& Type) (MessageOps&. Dcr) (MessageOps& Type) (self! Poly) (msg_ops! Poly) (s! Poly)) (! (= (fluent_controller!state_machine.state_machine.impl&%1.next_result.? State&. State& MessageOps&. MessageOps& self! msg_ops! s!) (ite (%B (%%apply%%1 (fluent_controller!state_machine.action.Action./Action/precondition (%Poly%fluent_controller!state_machine.action.Action. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/deliver (%Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. self!))))) msg_ops! s!)) (fluent_controller!state_machine.action.ActionResult./Enabled (tuple%2./tuple%2/0 (%Poly%tuple%2. (%%apply%%1 (fluent_controller!state_machine.action.Action./Action/transition (%Poly%fluent_controller!state_machine.action.Action. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/deliver (%Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. self!))))) msg_ops! s!))) (tuple%2./tuple%2/1 (%Poly%tuple%2. (%%apply%%1 (fluent_controller!state_machine.action.Action./Action/transition (%Poly%fluent_controller!state_machine.action.Action. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine/deliver (%Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. self!))))) msg_ops! s!)))) fluent_controller!state_machine.action.ActionResult./Disabled)) :pattern ((fluent_controller!state_machine.state_machine.impl&%1.next_result.? State&. State& MessageOps&. MessageOps& self! msg_ops! s!)) ))))
(assert (forall ((State&. Dcr) (State& Type) (MessageOps&. Dcr) (MessageOps& Type) (self! Poly) (msg_ops! Poly) (s! Poly)) (! (=> (and (has_type self! (TYPE%fluent_controller!state_machine.state_machine.NetworkStateMachine. State&. State& MessageOps&. MessageOps&)) (has_type msg_ops! MessageOps&) (has_type s! State&)) (has_type (Poly%fluent_controller!state_machine.action.ActionResult. (fluent_controller!state_machine.state_machine.impl&%1.next_result.? State&. State& MessageOps&. MessageOps& self! msg_ops! s!)) (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& $ TYPE%tuple%0.))) :pattern ((fluent_controller!state_machine.state_machine.impl&%1.next_result.? State&. State& MessageOps&. MessageOps& self! msg_ops! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::deliver")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.deliver.))
(declare-fun %%lambda%%33 (Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (msg_ops$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%33 %%hole%%0 %%hole%%1) msg_ops$ s$) (B (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/recv (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$))))))) (vstd!multiset.impl&%0.contains.? %%hole%%0 %%hole%%1 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. s$)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/recv (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$))))))))) :pattern ((%%apply%%1 (%%lambda%%33 %%hole%%0 %%hole%%1) msg_ops$ s$)))))
(declare-fun %%lambda%%34 (Dcr Type Dcr Type Poly Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Poly) (%%hole%%5 Dcr) (%%hole%%6 Type) (%%hole%%7 Poly) (msg_ops$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%34 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7) msg_ops$ s$) (Poly%tuple%2. (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/recv (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$))))))) (let ((s_prime$ (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState (vstd!multiset.impl&%0.add.? %%hole%%2 %%hole%%3 (vstd!multiset.impl&%0.remove.? %%hole%%0 %%hole%%1 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. s$)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/recv (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$)))))) (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/send (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. s_prime$) %%hole%%4)) (let ((s_prime$ (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState (vstd!multiset.impl&%0.add.? %%hole%%5 %%hole%%6 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. s$)) (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps/send (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. s_prime$) %%hole%%7))))) :pattern ((%%apply%%1 (%%lambda%%34 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7) msg_ops$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.deliver.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.deliver.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%33 $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%34 $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (Poly%tuple%0. tuple%0./tuple%0) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (Poly%tuple%0. tuple%0./tuple%0))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.deliver.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.deliver.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ TYPE%tuple%0.)) :pattern ((fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.deliver.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::network")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.))
(declare-fun %%lambda%%35 (Poly) %%Function%%)
(assert (forall ((%%hole%%0 Poly) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%35 %%hole%%0) s$) (B (= (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. s$)) %%hole%%0))) :pattern ((%%apply%%0 (%%lambda%%35 %%hole%%0) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.state_machine.NetworkStateMachine./NetworkStateMachine (%Poly%fun%1. (Poly%fun%1. (mk_fun (%%lambda%%35 (vstd!multiset.impl&%0.empty.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))))) (%Poly%fluent_controller!state_machine.action.Action. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.deliver.? K&. K& E&. E& R&. R&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.state_machine.NetworkStateMachine. $ (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::received_msg_destined_for")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.received_msg_destined_for.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.received_msg_destined_for.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (recv! Poly) (host_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.received_msg_destined_for.? I&. I& O&. O& recv! host_id!) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. recv!)))) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. recv!)))) (%Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. host_id!)))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.received_msg_destined_for.? I&. I& O&. O& recv! host_id!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::state_machine::action::ActionResult::is_Enabled")
(assert (fuel_bool_default fuel%fluent_controller!state_machine.action.impl&%1.is_Enabled.))
(assert (=> (fuel_bool fuel%fluent_controller!state_machine.action.impl&%1.is_Enabled.) (forall ((State&. Dcr) (State& Type) (Output&. Dcr) (Output& Type) (self! Poly)) (! (= (fluent_controller!state_machine.action.impl&%1.is_Enabled.? State&. State& Output&. Output& self!) (is-fluent_controller!state_machine.action.ActionResult./Enabled_ (%Poly%fluent_controller!state_machine.action.ActionResult. self!))) :pattern ((fluent_controller!state_machine.action.impl&%1.is_Enabled.? State&. State& Output&. Output& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::state_machine::action::ActionResult::get_Enabled_0")
(assert (fuel_bool_default fuel%fluent_controller!state_machine.action.impl&%1.get_Enabled_0.))
(assert (=> (fuel_bool fuel%fluent_controller!state_machine.action.impl&%1.get_Enabled_0.) (forall ((State&. Dcr) (State& Type) (Output&. Dcr) (Output& Type) (self! Poly)) (! (= (fluent_controller!state_machine.action.impl&%1.get_Enabled_0.? State&. State& Output&. Output& self!) (fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. self!))) :pattern ((fluent_controller!state_machine.action.impl&%1.get_Enabled_0.? State&. State& Output&. Output& self!)) ))))
(assert (forall ((State&. Dcr) (State& Type) (Output&. Dcr) (Output& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&)) (has_type (fluent_controller!state_machine.action.impl&%1.get_Enabled_0.? State&. State& Output&. Output& self!) State&)) :pattern ((fluent_controller!state_machine.action.impl&%1.get_Enabled_0.? State&. State& Output&. Output& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::kubernetes_api_next")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.))
(declare-fun %%lambda%%36 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Poly) (%%hole%%11 Dcr) (%%hole%%12 Type) (%%hole%%13 Dcr) (%%hole%%14 Type) (%%hole%%15 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%36 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15) input$ s$) (Poly%tuple%2. (let ((host_result$ (fluent_controller!state_machine.state_machine.impl&%0.next_result.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput (%Poly%core!option.Option. input$))) (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (let ((msg_ops$ (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps (%Poly%core!option.Option. input$) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (fluent_controller!state_machine.action.ActionResult./Enabled/1 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))))))) (let ((network_result$ (fluent_controller!state_machine.state_machine.impl&%1.next_result.? %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$) (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!state_machine.action.ActionResult. host_result$) (Poly%fluent_controller!state_machine.action.ActionResult. network_result$))))))) :pattern ((%%apply%%1 (%%lambda%%36 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15) input$ s$)))))
(declare-fun %%lambda%%37 (Dcr Type Dcr Type Poly %%Function%% %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Poly) (%%hole%%5 %%Function%%) (%%hole%%6 %%Function%%) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%37 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) input$ s$) (B (and (and (fluent_controller!kubernetes_cluster.spec.message.received_msg_destined_for.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 input$ %%hole%%4) (is-fluent_controller!state_machine.action.ActionResult./Enabled_ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/0 (%Poly%tuple%2. (%%apply%%1 %%hole%%5 input$ s$)))))) (is-fluent_controller!state_machine.action.ActionResult./Enabled_ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/1 (%Poly%tuple%2. (%%apply%%1 %%hole%%6 input$ s$)))))))) :pattern ((%%apply%%1 (%%lambda%%37 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) input$ s$)))))
(declare-fun %%lambda%%38 (%%Function%% Poly) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%38 %%hole%%0 %%hole%%1) input$ s$) (Poly%tuple%2. (let ((tmp%%$ (%Poly%tuple%2. (%%apply%%1 %%hole%%0 input$ s$)))) (let ((host_result$ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((network_result$ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/client_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. network_result$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%1)))))) :pattern ((%%apply%%1 (%%lambda%%38 %%hole%%0 %%hole%%1) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.? K&. K& E&. E& R&. R&) (let ((result$ (mk_fun (%%lambda%%36 $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep. (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.kubernetes_api.? K&. K& E&. E& R&. R&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.? K&. K& E&. E& R&. R&)))))) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%37 (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer) result$ result$)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%38 result$ (Poly%tuple%0. tuple%0./tuple%0)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) $ TYPE%tuple%0.)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::builtin_controllers::types::BuiltinControllerChoice::is_GarbageCollector")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_GarbageCollector.))
(define-fun is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./GarbageCollector_ ((c fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./GarbageCollector) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_GarbageCollector.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_GarbageCollector.? self!) (is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./GarbageCollector_ (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_GarbageCollector.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::owner_reference::owner_reference_to_object_reference")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.owner_reference.owner_reference_to_object_reference.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.owner_reference.owner_reference_to_object_reference.) (forall ((owner_reference! Poly) (namespace! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.owner_reference.owner_reference_to_object_reference.? owner_reference! namespace!) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. owner_reference!)))) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. owner_reference!)) namespace!)) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.owner_reference_to_object_reference.? owner_reference! namespace!)) ))))
(assert (forall ((owner_reference! Poly) (namespace! Poly)) (! (=> (and (has_type owner_reference! TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (has_type namespace! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.owner_reference.owner_reference_to_object_reference.? owner_reference! namespace!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.owner_reference_to_object_reference.? owner_reference! namespace!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::built_in_controller_req_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.built_in_controller_req_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.built_in_controller_req_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (msg_content! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.built_in_controller_req_msg.? I&. I& O&. O& msg_content!) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId./BuiltinController) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer) msg_content!)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.built_in_controller_req_msg.? I&. I& O&. O& msg_content!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (msg_content! Poly)) (! (=> (has_type msg_content! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.built_in_controller_req_msg.? I&. I& O&. O& msg_content!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.built_in_controller_req_msg.? I&. I& O&. O& msg_content!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::delete_req_msg_content")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_req_msg_content.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_req_msg_content.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (key! Poly) (req_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_req_msg_content.? I&. I& O&. O& key! req_id!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key!))))))) (%I req_id!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_req_msg_content.? I&. I& O&. O& key! req_id!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (key! Poly) (req_id! Poly)) (! (=> (and (has_type key! TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type req_id! NAT)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_req_msg_content.? I&. I& O&. O& key! req_id!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_req_msg_content.? I&. I& O&. O& key! req_id!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::RestIdAllocator::allocate")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? self!) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator./RestIdAllocator (%I (I (nClip (Add (fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator./RestIdAllocator/rest_id_counter (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. self!)) 1)))))) (I (fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator./RestIdAllocator/rest_id_counter (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. self!))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator.) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? self!)) (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. $ NAT))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::run_garbage_collector")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.garbage_collector.impl&%0.run_garbage_collector.))
(declare-fun %%lambda%%39 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Int Dcr Type Type Int Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Dcr) (%%hole%%13 Type) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Dcr) (%%hole%%17 Type) (%%hole%%18 Dcr) (%%hole%%19 Type) (%%hole%%20 Int) (%%hole%%21 Dcr) (%%hole%%22 Type) (%%hole%%23 Type) (%%hole%%24 Int) (%%hole%%25 Dcr) (%%hole%%26 Type) (%%hole%%27 Dcr) (%%hole%%28 Type) (%%hole%%29 Dcr) (%%hole%%30 Type) (%%hole%%31 Dcr) (%%hole%%32 Type) (%%hole%%33 Dcr) (%%hole%%34 Type) (%%hole%%35 Dcr) (%%hole%%36 Type) (%%hole%%37 Dcr) (%%hole%%38 Type) (%%hole%%39 Dcr) (%%hole%%40 Type) (%%hole%%41 Dcr) (%%hole%%42 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%39 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38 %%hole%%39 %%hole%%40 %%hole%%41 %%hole%%42) input$ s$) (B (let ((resources$ (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$)))) (let ((key$ (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$)))) (let ((owner_references$ (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. resources$) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))))))))))) (and (and (and (and (is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./GarbageCollector_ (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/choice (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))) (vstd!set.impl&%0.contains.? %%hole%%8 %%hole%%9 (vstd!map.impl&%0.dom.? %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. resources$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. resources$) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))))))))))) (> (vstd!seq.Seq.len.? %%hole%%18 %%hole%%19 (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. resources$) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))))))))) %%hole%%20)) (forall ((i$ Poly)) (! (=> (has_type i$ %%hole%%23) (=> (and (<= %%hole%%24 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? %%hole%%25 %%hole%%26 (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. owner_references$)))) (or (not (vstd!set.impl&%0.contains.? %%hole%%33 %%hole%%34 (vstd!map.impl&%0.dom.? %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. resources$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.owner_reference.owner_reference_to_object_reference.? (vstd!seq.Seq.index.? %%hole%%31 %%hole%%32 (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. owner_references$) i$) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))))) (not (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%37 %%hole%%38 %%hole%%39 %%hole%%40 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. resources$) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.owner_reference.owner_reference_to_object_reference.? (vstd!seq.Seq.index.? %%hole%%35 %%hole%%36 (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. owner_references$) i$) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))))))))) (core!option.Option./Some (I (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (vstd!seq.Seq.index.? %%hole%%41 %%hole%%42 (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. owner_references$) i$)))))))))) :pattern ((vstd!seq.Seq.index.? %%hole%%21 %%hole%%22 (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. owner_references$) i$)) )))))))) :pattern ((%%apply%%1 (%%lambda%%39 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38 %%hole%%39 %%hole%%40 %%hole%%41 %%hole%%42) input$ s$)))))
(declare-fun %%lambda%%40 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%40 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9) input$ s$) (Poly%tuple%2. (let ((delete_req_msg$ (fluent_controller!kubernetes_cluster.spec.message.impl&%5.built_in_controller_req_msg.? %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_req_msg_content.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))) (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$)))))))))))) (let ((s_prime$ (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$))) (let ((output$ (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput (vstd!multiset.impl&%0.singleton.? %%hole%%8 %%hole%%9 (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. delete_req_msg$)) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. output$))))))) :pattern ((%%apply%%1 (%%lambda%%40 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.garbage_collector.impl&%0.run_garbage_collector.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.garbage_collector.impl&%0.run_garbage_collector.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%39 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. 0 $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. INT 0 $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%40 (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.garbage_collector.impl&%0.run_garbage_collector.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.garbage_collector.impl&%0.run_garbage_collector.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.garbage_collector.impl&%0.run_garbage_collector.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::builtin_controllers::types::BuiltinControllerChoice::is_StatefulSetController")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_StatefulSetController.))
(define-fun is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./StatefulSetController_ ((c fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./StatefulSetController) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_StatefulSetController.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_StatefulSetController.? self!) (is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./StatefulSetController_ (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_StatefulSetController.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::builtin_controllers::types::BuiltinControllerChoice::get_StatefulSetController_ready_replicas")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_StatefulSetController_ready_replicas.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_StatefulSetController_ready_replicas.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_StatefulSetController_ready_replicas.? self!) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./StatefulSetController/ready_replicas (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_StatefulSetController_ready_replicas.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::update_status_req_msg_content")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_req_msg_content.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_req_msg_content.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (namespace! Poly) (name! Poly) (obj! Poly) (req_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_req_msg_content.? I&. I& O&. O& namespace! name! obj! req_id!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest namespace! name! (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%I req_id!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_req_msg_content.? I&. I& O&. O& namespace! name! obj! req_id!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (namespace! Poly) (name! Poly) (obj! Poly) (req_id! Poly)) (! (=> (and (has_type namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type req_id! NAT)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_req_msg_content.? I&. I& O&. O& namespace! name! obj! req_id!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_req_msg_content.? I&. I& O&. O& namespace! name! obj! req_id!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::run_stateful_set_controller")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.stateful_set_controller.impl&%0.run_stateful_set_controller.))
(declare-fun %%lambda%%41 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type fluent_controller!kubernetes_api_objects.spec.common.Kind. Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 fluent_controller!kubernetes_api_objects.spec.common.Kind.) (%%hole%%11 Dcr) (%%hole%%12 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%41 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) input$ s$) (B (let ((resources$ (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$)))) (let ((key$ (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$)))) (let ((owner_references$ (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. resources$) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))))))))))) (and (and (and (is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./StatefulSetController_ (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/choice (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))) (vstd!set.impl&%0.contains.? %%hole%%8 %%hole%%9 (vstd!map.impl&%0.dom.? %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. resources$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))) (= (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))) %%hole%%10)) (not (vstd!set.impl&%0.contains.? %%hole%%11 %%hole%%12 (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))))))) :pattern ((%%apply%%1 (%%lambda%%41 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) input$ s$)))))
(declare-fun %%lambda%%42 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Dcr) (%%hole%%13 Type) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Dcr) (%%hole%%17 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%42 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17) input$ s$) (Poly%tuple%2. (let ((resources$ (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$)))) (let ((key$ (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$)))) (let ((ready_replicas$ (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./StatefulSetController/ready_replicas (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/choice (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))))) (let ((old_stateful_set$ (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.index.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. resources$) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)))))))) (let ((new_stateful_set$ (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. old_stateful_set$))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. old_stateful_set$))))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (I ready_replicas$)))))))))))) (let ((update_status_req_msg$ (fluent_controller!kubernetes_cluster.spec.message.impl&%5.built_in_controller_req_msg.? %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_req_msg_content.? %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? %%hole%%6 %%hole%%7 (Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. new_stateful_set$)) (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$)))))))))))) (let ((s_prime$ (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$))) (let ((output$ (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput (vstd!multiset.impl&%0.singleton.? %%hole%%16 %%hole%%17 (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. update_status_req_msg$)) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. output$)))))))))))) :pattern ((%%apply%%1 (%%lambda%%42 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.stateful_set_controller.impl&%0.run_stateful_set_controller.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.stateful_set_controller.impl&%0.run_stateful_set_controller.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%41 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%42 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.stateful_set_controller.impl&%0.run_stateful_set_controller.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.stateful_set_controller.impl&%0.run_stateful_set_controller.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.stateful_set_controller.impl&%0.run_stateful_set_controller.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::builtin_controllers::types::BuiltinControllerChoice::is_DaemonSetController")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_DaemonSetController.))
(define-fun is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./DaemonSetController_ ((c fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./DaemonSetController) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_DaemonSetController.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_DaemonSetController.? self!) (is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./DaemonSetController_ (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_DaemonSetController.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::builtin_controllers::types::BuiltinControllerChoice::get_DaemonSetController_number_ready")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_DaemonSetController_number_ready.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_DaemonSetController_number_ready.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_DaemonSetController_number_ready.? self!) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./DaemonSetController/number_ready (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.get_DaemonSetController_number_ready.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::run_daemon_set_controller")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.daemon_set_controller.impl&%0.run_daemon_set_controller.))
(declare-fun %%lambda%%43 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type fluent_controller!kubernetes_api_objects.spec.common.Kind. Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 fluent_controller!kubernetes_api_objects.spec.common.Kind.) (%%hole%%11 Dcr) (%%hole%%12 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%43 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) input$ s$) (B (let ((resources$ (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$)))) (let ((key$ (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$)))) (let ((owner_references$ (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. resources$) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))))))))))) (and (and (and (is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./DaemonSetController_ (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/choice (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))) (vstd!set.impl&%0.contains.? %%hole%%8 %%hole%%9 (vstd!map.impl&%0.dom.? %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. resources$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))) (= (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))) %%hole%%10)) (not (vstd!set.impl&%0.contains.? %%hole%%11 %%hole%%12 (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))))))) :pattern ((%%apply%%1 (%%lambda%%43 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) input$ s$)))))
(declare-fun %%lambda%%44 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Dcr) (%%hole%%13 Type) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Dcr) (%%hole%%17 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%44 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17) input$ s$) (Poly%tuple%2. (let ((resources$ (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$)))) (let ((key$ (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$)))) (let ((number_ready$ (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./DaemonSetController/number_ready (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/choice (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))))) (let ((old_daemon_set$ (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.index.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. resources$) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)))))))) (let ((new_daemon_set$ (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. old_daemon_set$))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. old_daemon_set$))))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView./DaemonSetStatusView (%I (I number_ready$)))))))))) (let ((update_status_req_msg$ (fluent_controller!kubernetes_cluster.spec.message.impl&%5.built_in_controller_req_msg.? %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_status_req_msg_content.? %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? %%hole%%6 %%hole%%7 (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. new_daemon_set$)) (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$)))))))))))) (let ((s_prime$ (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$))) (let ((output$ (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput (vstd!multiset.impl&%0.singleton.? %%hole%%16 %%hole%%17 (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. update_status_req_msg$)) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. output$)))))))))))) :pattern ((%%apply%%1 (%%lambda%%44 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.daemon_set_controller.impl&%0.run_daemon_set_controller.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.daemon_set_controller.impl&%0.run_daemon_set_controller.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%43 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%44 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.daemon_set_controller.impl&%0.run_daemon_set_controller.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.daemon_set_controller.impl&%0.run_daemon_set_controller.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.daemon_set_controller.impl&%0.run_daemon_set_controller.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::builtin_controllers::types::BuiltinControllerChoice::is_Stabilizer")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_Stabilizer.))
(define-fun is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./Stabilizer_ ((c fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./Stabilizer) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_Stabilizer.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_Stabilizer.? self!) (is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./Stabilizer_ (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.impl&%1.is_Stabilizer.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::run_stabilizer")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.stabilizer.impl&%0.run_stabilizer.))
(declare-fun %%lambda%%45 (Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%45 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) input$ s$) (B (let ((key$ (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$)))) (and (is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice./Stabilizer_ (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/choice (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))) (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$)))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)))))) :pattern ((%%apply%%1 (%%lambda%%45 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) input$ s$)))))
(declare-fun %%lambda%%46 (Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%46 %%hole%%0 %%hole%%1 %%hole%%2) input$ s$) (Poly%tuple%2. (let ((key$ (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/key (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$)))) (let ((s_prime$ (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$)))) (%I (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$)))) (%I (I (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$)))) (%Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (vstd!set.impl&%0.insert.? %%hole%%0 %%hole%%1 (Poly%vstd!set.Set<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/stable_resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s$))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)))))) (let ((output$ (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput %%hole%%2 (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. input$))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. output$))))))) :pattern ((%%apply%%1 (%%lambda%%46 %%hole%%0 %%hole%%1 %%hole%%2) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.stabilizer.impl&%0.run_stabilizer.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.stabilizer.impl&%0.run_stabilizer.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%45 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%46 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (vstd!multiset.impl&%0.empty.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.stabilizer.impl&%0.run_stabilizer.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.stabilizer.impl&%0.run_stabilizer.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.stabilizer.impl&%0.run_stabilizer.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::builtin_controllers")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.state_machine.impl&%0.builtin_controllers.))
(declare-fun %%lambda%%47 (fluent_controller!state_machine.action.Action. fluent_controller!state_machine.action.Action. fluent_controller!state_machine.action.Action. fluent_controller!state_machine.action.Action.) %%Function%%)
(define-fun is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep./RunGarbageCollector_ ((c fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep./RunGarbageCollector) c))
(define-fun is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep./RunStatefulSetController_ ((c fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep./RunStatefulSetController) c))
(define-fun is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep./RunDaemonSetController_ ((c fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep./RunDaemonSetController) c))
(assert (forall ((%%hole%%0 fluent_controller!state_machine.action.Action.) (%%hole%%1 fluent_controller!state_machine.action.Action.) (%%hole%%2 fluent_controller!state_machine.action.Action.) (%%hole%%3 fluent_controller!state_machine.action.Action.) (step$ Poly)) (! (= (%%apply%%0 (%%lambda%%47 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) step$) (Poly%fluent_controller!state_machine.action.Action. (ite (is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep./RunGarbageCollector_ (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. step$)) %%hole%%3 (ite (is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep./RunStatefulSetController_ (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. step$)) %%hole%%2 (ite (is-fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep./RunDaemonSetController_ (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. step$)) %%hole%%0 %%hole%%1))))) :pattern ((%%apply%%0 (%%lambda%%47 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) step$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.builtin_controllers.state_machine.impl&%0.builtin_controllers.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.builtin_controllers.state_machine.impl&%0.builtin_controllers.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine (%Poly%fun%1. (Poly%fun%1. (mk_fun (%%lambda%%31 (B true))))) (vstd!set.impl&%0.insert.? $ (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (vstd!set.impl&%0.insert.? $ (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (vstd!set.impl&%0.insert.? $ (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (vstd!set.impl&%0.insert.? $ (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (vstd!set.impl&%0.empty.? $ (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.garbage_collector.impl&%0.run_garbage_collector.? K&. K& E&. E& R&. R&))) (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.stateful_set_controller.impl&%0.run_stateful_set_controller.? K&. K& E&. E& R&. R&))) (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.daemon_set_controller.impl&%0.run_daemon_set_controller.? K&. K& E&. E& R&. R&))) (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.stabilizer.impl&%0.run_stabilizer.? K&. K& E&. E& R&. R&))) (%Poly%fun%1. (Poly%fun%1. (mk_fun (%%lambda%%47 (fluent_controller!kubernetes_cluster.spec.builtin_controllers.daemon_set_controller.impl&%0.run_daemon_set_controller.? K&. K& E&. E& R&. R&) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.stabilizer.impl&%0.run_stabilizer.? K&. K& E&. E& R&. R&) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.stateful_set_controller.impl&%0.run_stateful_set_controller.? K&. K& E&. E& R&. R&) (fluent_controller!kubernetes_cluster.spec.builtin_controllers.garbage_collector.impl&%0.run_garbage_collector.? K&. K& E&. E& R&. R&))))) (%Poly%fun%2. (Poly%fun%2. (mk_fun %%lambda%%32))))) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.state_machine.impl&%0.builtin_controllers.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.state_machine.impl&%0.builtin_controllers.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.state_machine.StateMachine. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep.)) :pattern ((fluent_controller!kubernetes_cluster.spec.builtin_controllers.state_machine.impl&%0.builtin_controllers.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::builtin_controllers_next")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.builtin_controllers_next.))
(declare-fun %%lambda%%48 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly core!option.Option. Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Poly) (%%hole%%11 core!option.Option.) (%%hole%%12 Dcr) (%%hole%%13 Type) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%48 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16) input$ s$) (Poly%tuple%2. (let ((host_result$ (fluent_controller!state_machine.state_machine.impl&%0.next_result.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput./BuiltinControllersActionInput (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. (tuple%2./tuple%2/0 (%Poly%tuple%2. input$))) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (tuple%2./tuple%2/1 (%Poly%tuple%2. input$))) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (let ((msg_ops$ (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps %%hole%%11 (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (fluent_controller!state_machine.action.ActionResult./Enabled/1 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))))))) (let ((network_result$ (fluent_controller!state_machine.state_machine.impl&%1.next_result.? %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$) (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!state_machine.action.ActionResult. host_result$) (Poly%fluent_controller!state_machine.action.ActionResult. network_result$))))))) :pattern ((%%apply%%1 (%%lambda%%48 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16) input$ s$)))))
(declare-fun %%lambda%%49 (%%Function%% %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 %%Function%%) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%49 %%hole%%0 %%hole%%1) input$ s$) (B (and (is-fluent_controller!state_machine.action.ActionResult./Enabled_ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/0 (%Poly%tuple%2. (%%apply%%1 %%hole%%0 input$ s$))))) (is-fluent_controller!state_machine.action.ActionResult./Enabled_ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/1 (%Poly%tuple%2. (%%apply%%1 %%hole%%1 input$ s$)))))))) :pattern ((%%apply%%1 (%%lambda%%49 %%hole%%0 %%hole%%1) input$ s$)))))
(declare-fun %%lambda%%50 (%%Function%% Poly) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%50 %%hole%%0 %%hole%%1) input$ s$) (Poly%tuple%2. (let ((tmp%%$ (%Poly%tuple%2. (%%apply%%1 %%hole%%0 input$ s$)))) (let ((host_result$ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((network_result$ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/client_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. network_result$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput./BuiltinControllersActionOutput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (fluent_controller!state_machine.action.ActionResult./Enabled/1 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$))))))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%1)))))) :pattern ((%%apply%%1 (%%lambda%%50 %%hole%%0 %%hole%%1) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.builtin_controllers_next.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.builtin_controllers_next.? K&. K& E&. E& R&. R&) (let ((result$ (mk_fun (%%lambda%%48 $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllersStep. (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.builtin_controllers.state_machine.impl&%0.builtin_controllers.? K&. K& E&. E& R&. R&)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.? K&. K& E&. E& R&. R&)))))) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%49 result$ result$)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%50 result$ (Poly%tuple%0. tuple%0./tuple%0)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.builtin_controllers_next.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.builtin_controllers_next.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) $ TYPE%tuple%0.)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.builtin_controllers_next.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::init_controller_state")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.init_controller_state.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.init_controller_state.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.init_controller_state.? K&. K& E&. E& R&. R&) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState (vstd!map.impl&%0.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&)) (vstd!map.impl&%0.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. K&. K&))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.init_controller_state.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.init_controller_state.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.init_controller_state.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::run_scheduled_reconcile")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.run_scheduled_reconcile.))
(declare-fun %%lambda%%51 (fluent_controller!kubernetes_api_objects.spec.common.Kind. Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 fluent_controller!kubernetes_api_objects.spec.common.Kind.) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Dcr) (%%hole%%6 Type) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Dcr) (%%hole%%12 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%51 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) input$ s$) (B (and (and (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))) (= (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))) %%hole%%0)) (vstd!set.impl&%0.contains.? %%hole%%5 %%hole%%6 (vstd!map.impl&%0.dom.? %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/scheduled_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))) (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$)))))))) (not (vstd!set.impl&%0.contains.? %%hole%%11 %%hole%%12 (vstd!map.impl&%0.dom.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$)))))))))) :pattern ((%%apply%%1 (%%lambda%%51 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) input$ s$)))))
(declare-fun %%lambda%%52 (Dcr Type Dcr Type core!option.Option. Poly Dcr Type Dcr Type Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 core!option.Option.) (%%hole%%5 Poly) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Dcr) (%%hole%%13 Type) (%%hole%%14 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%52 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14) input$ s$) (Poly%tuple%2. (let ((cr_key$ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$)))))))) (let ((initialized_ongoing_reconcile$ (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile (vstd!map.impl&%0.index.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/scheduled_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$)) %%hole%%4 %%hole%%5))) (let ((s_prime$ (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState (vstd!map.impl&%0.insert.? %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$) (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. initialized_ongoing_reconcile$)) (vstd!map.impl&%0.remove.? %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/scheduled_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$))))) (let ((output$ (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput %%hole%%14 (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. output$)))))))) :pattern ((%%apply%%1 (%%lambda%%52 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.run_scheduled_reconcile.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.run_scheduled_reconcile.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%51 (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? K&. K&)) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. K&. K& $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%52 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. K&. K& (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_init_state.? R&. R& K&. K& E&. E&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. K&. K& (vstd!multiset.impl&%0.empty.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.run_scheduled_reconcile.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.run_scheduled_reconcile.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.run_scheduled_reconcile.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_ExternalAPIResponse_0")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIResponse_0.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIResponse_0.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIResponse_0.? I&. I& O&. O& self!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIResponse_0.? I&. I& O&. O& self!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIResponse_0.? I&. I& O&. O& self!) O&)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIResponse_0.? I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::controller_req_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_req_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_req_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req! Poly) (req_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_req_msg.? I&. I& O&. O& req! req_id!) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId./CustomController) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req!) (%I req_id!))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_req_msg.? I&. I& O&. O& req! req_id!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req! Poly) (req_id! Poly)) (! (=> (and (has_type req! TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type req_id! NAT)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_req_msg.? I&. I& O&. O& req! req_id!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_req_msg.? I&. I& O&. O& req! req_id!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::controller_external_req_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_external_req_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_external_req_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req! Poly) (req_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_external_req_msg.? I&. I& O&. O& req! req_id!) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId./CustomController) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId./ExternalAPI) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest req! (%I req_id!))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_external_req_msg.? I&. I& O&. O& req! req_id!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req! Poly) (req_id! Poly)) (! (=> (and (has_type req! I&) (has_type req_id! NAT)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_external_req_msg.? I&. I& O&. O& req! req_id!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_external_req_msg.? I&. I& O&. O& req! req_id!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::continue_reconcile")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.continue_reconcile.))
(declare-fun %%lambda%%53 (fluent_controller!kubernetes_api_objects.spec.common.Kind. Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 fluent_controller!kubernetes_api_objects.spec.common.Kind.) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Dcr) (%%hole%%6 Type) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Dcr) (%%hole%%12 Type) (%%hole%%13 Dcr) (%%hole%%14 Type) (%%hole%%15 Dcr) (%%hole%%16 Type) (%%hole%%17 Dcr) (%%hole%%18 Type) (%%hole%%19 Dcr) (%%hole%%20 Type) (%%hole%%21 Dcr) (%%hole%%22 Type) (%%hole%%23 Dcr) (%%hole%%24 Type) (%%hole%%25 Dcr) (%%hole%%26 Type) (%%hole%%27 Dcr) (%%hole%%28 Type) (%%hole%%29 Dcr) (%%hole%%30 Type) (%%hole%%31 Dcr) (%%hole%%32 Type) (%%hole%%33 Dcr) (%%hole%%34 Type) (%%hole%%35 Dcr) (%%hole%%36 Type) (%%hole%%37 Dcr) (%%hole%%38 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%53 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38) input$ s$) (B (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))) (let ((cr_key$ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$)))))))) (and (and (and (and (= (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$))) %%hole%%0) (vstd!set.impl&%0.contains.? %%hole%%5 %%hole%%6 (vstd!map.impl&%0.dom.? %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$))) (not (%B (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_done.? %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$)))))))) (not (%B (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_error.? %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$)))))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$))))))))) (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))) (or (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$)))))))))) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$)))))))))))) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.resp_msg_matches_req_msg.? %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38 (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$))))))))) (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))))))))) :pattern ((%%apply%%1 (%%lambda%%53 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38) input$ s$)))))
(declare-fun %%lambda%%54 (Dcr Type Dcr Type core!option.Option. Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Dcr Type Dcr Type) %%Function%%)
(define-fun is-fluent_controller!reconciler.spec.io.RequestView./KRequest_ ((c fluent_controller!reconciler.spec.io.RequestView.)) Bool ((_ is fluent_controller!reconciler.spec.io.RequestView./KRequest) c))
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 core!option.Option.) (%%hole%%5 Dcr) (%%hole%%6 Type) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Dcr) (%%hole%%12 Type) (%%hole%%13 Dcr) (%%hole%%14 Type) (%%hole%%15 Dcr) (%%hole%%16 Type) (%%hole%%17 Dcr) (%%hole%%18 Type) (%%hole%%19 Dcr) (%%hole%%20 Type) (%%hole%%21 Poly) (%%hole%%22 Poly) (%%hole%%23 Dcr) (%%hole%%24 Type) (%%hole%%25 Dcr) (%%hole%%26 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%54 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26) input$ s$) (Poly%tuple%2. (let ((cr_key$ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$)))))))) (let ((reconcile_state$ (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$))))) (let ((resp_o$ (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))) (ite (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$)))))))))) (core!option.Option./Some (Poly%fluent_controller!reconciler.spec.io.ResponseView. (fluent_controller!reconciler.spec.io.ResponseView./KResponse (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIResponse. (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIResponse/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))))))))))) (core!option.Option./Some (Poly%fluent_controller!reconciler.spec.io.ResponseView. (fluent_controller!reconciler.spec.io.ResponseView./ExternalResponse (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$)))))))))))))) %%hole%%4))) (let ((tmp%%$ (%Poly%tuple%2. (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_core.? %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. reconcile_state$))) (Poly%core!option.Option. resp_o$) (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. reconcile_state$))))))) (let ((local_state_prime$ (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$))))) (let ((req_o$ (%Poly%core!option.Option. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((tmp%%$1 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. req_o$))))) (let ((pending_req_msg$ (let ((tmp%%$2 (%Poly%fluent_controller!reconciler.spec.io.RequestView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. req_o$)))))) (ite (is-fluent_controller!reconciler.spec.io.RequestView./KRequest_ tmp%%$2) (let ((req$ (fluent_controller!reconciler.spec.io.RequestView./KRequest/0 (%Poly%fluent_controller!reconciler.spec.io.RequestView. (Poly%fluent_controller!reconciler.spec.io.RequestView. tmp%%$2))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_req_msg.? %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$) (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))))))) (let ((req$ (fluent_controller!reconciler.spec.io.RequestView./ExternalRequest/0 (%Poly%fluent_controller!reconciler.spec.io.RequestView. (Poly%fluent_controller!reconciler.spec.io.RequestView. tmp%%$2))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.controller_external_req_msg.? %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 req$ (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))))))))))) (tuple%3./tuple%3 (Poly%core!option.Option. pending_req_msg$) (vstd!multiset.impl&%0.singleton.? %%hole%%19 %%hole%%20 (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. pending_req_msg$)))) (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))))) (tuple%3./tuple%3 %%hole%%21 %%hole%%22 (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))) (let ((pending_req_msg$ (%Poly%core!option.Option. (tuple%3./tuple%3/0 (%Poly%tuple%3. (Poly%tuple%3. tmp%%$1)))))) (let ((send$ (tuple%3./tuple%3/1 (%Poly%tuple%3. (Poly%tuple%3. tmp%%$1))))) (let ((rest_id_allocator_prime$ (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (tuple%3./tuple%3/2 (%Poly%tuple%3. (Poly%tuple%3. tmp%%$1)))))) (let ((reconcile_state_prime$ (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. reconcile_state$))) (%Poly%core!option.Option. (Poly%core!option.Option. pending_req_msg$)) local_state_prime$))) (let ((s_prime$ (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState (vstd!map.impl&%0.insert.? %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$) (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. reconcile_state_prime$)) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/scheduled_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$))))) (let ((output$ (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput send$ (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. rest_id_allocator_prime$))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. output$))))))))))))))))) :pattern ((%%apply%%1 (%%lambda%%54 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.continue_reconcile.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.continue_reconcile.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%53 (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? K&. K&)) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) R&. R& K&. K& E&. E& $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) R&. R& K&. K& E&. E& $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%54 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) core!option.Option./None R&. R& K&. K& E&. E& (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (Poly%core!option.Option. core!option.Option./None) (vstd!multiset.impl&%0.empty.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.continue_reconcile.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.continue_reconcile.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.continue_reconcile.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::end_reconcile")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.end_reconcile.))
(declare-fun %%lambda%%55 (fluent_controller!kubernetes_api_objects.spec.common.Kind. Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 fluent_controller!kubernetes_api_objects.spec.common.Kind.) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Dcr) (%%hole%%6 Type) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Dcr) (%%hole%%12 Type) (%%hole%%13 Dcr) (%%hole%%14 Type) (%%hole%%15 Dcr) (%%hole%%16 Type) (%%hole%%17 Dcr) (%%hole%%18 Type) (%%hole%%19 Dcr) (%%hole%%20 Type) (%%hole%%21 Dcr) (%%hole%%22 Type) (%%hole%%23 Dcr) (%%hole%%24 Type) (%%hole%%25 Dcr) (%%hole%%26 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%55 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26) input$ s$) (B (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))) (let ((cr_key$ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$)))))))) (and (and (and (= (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$))) %%hole%%0) (vstd!set.impl&%0.contains.? %%hole%%5 %%hole%%6 (vstd!map.impl&%0.dom.? %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$))) (or (%B (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_done.? %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$)))))) (%B (fluent_controller!reconciler.spec.reconciler.Reconciler.reconcile_error.? %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$)))))))) (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$)))))))))))) :pattern ((%%apply%%1 (%%lambda%%55 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26) input$ s$)))))
(declare-fun %%lambda%%56 (Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%56 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) input$ s$) (Poly%tuple%2. (let ((cr_key$ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/scheduled_cr_key (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$)))))))) (let ((s_prime$ (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState (vstd!map.impl&%0.remove.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. cr_key$)) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/scheduled_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$))))) (let ((output$ (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput %%hole%%4 (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. input$))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. output$))))))) :pattern ((%%apply%%1 (%%lambda%%56 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.end_reconcile.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.end_reconcile.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%55 (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? K&. K&)) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) R&. R& K&. K& E&. E& $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) R&. R& K&. K& E&. E&)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%56 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) (vstd!multiset.impl&%0.empty.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.end_reconcile.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.end_reconcile.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.end_reconcile.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::controller")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.controller.))
(declare-fun %%lambda%%57 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.) %%Function%%)
(assert (forall ((%%hole%%0 fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%57 %%hole%%0) s$) (B (= (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. s$) %%hole%%0))) :pattern ((%%apply%%0 (%%lambda%%57 %%hole%%0) s$)))))
(declare-fun %%lambda%%58 (fluent_controller!state_machine.action.Action. fluent_controller!state_machine.action.Action. fluent_controller!state_machine.action.Action.) %%Function%%)
(define-fun is-fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep./RunScheduledReconcile_ ((c fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep./RunScheduledReconcile) c))
(define-fun is-fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep./ContinueReconcile_ ((c fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep./ContinueReconcile) c))
(assert (forall ((%%hole%%0 fluent_controller!state_machine.action.Action.) (%%hole%%1 fluent_controller!state_machine.action.Action.) (%%hole%%2 fluent_controller!state_machine.action.Action.) (step$ Poly)) (! (= (%%apply%%0 (%%lambda%%58 %%hole%%0 %%hole%%1 %%hole%%2) step$) (Poly%fluent_controller!state_machine.action.Action. (ite (is-fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep./RunScheduledReconcile_ (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. step$)) %%hole%%2 (ite (is-fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep./ContinueReconcile_ (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. step$)) %%hole%%0 %%hole%%1)))) :pattern ((%%apply%%0 (%%lambda%%58 %%hole%%0 %%hole%%1 %%hole%%2) step$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.controller.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.controller.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine (%Poly%fun%1. (Poly%fun%1. (mk_fun (%%lambda%%57 (fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.init_controller_state.? K&. K& E&. E& R&. R&))))) (vstd!set.impl&%0.insert.? $ (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&)) (vstd!set.impl&%0.insert.? $ (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&)) (vstd!set.impl&%0.insert.? $ (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&)) (vstd!set.impl&%0.empty.? $ (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&))) (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.run_scheduled_reconcile.? K&. K& E&. E& R&. R&))) (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.continue_reconcile.? K&. K& E&. E& R&. R&))) (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.end_reconcile.? K&. K& E&. E& R&. R&))) (%Poly%fun%1. (Poly%fun%1. (mk_fun (%%lambda%%58 (fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.continue_reconcile.? K&. K& E&. E& R&. R&) (fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.end_reconcile.? K&. K& E&. E& R&. R&) (fluent_controller!kubernetes_cluster.spec.controller.controller_runtime.impl&%0.run_scheduled_reconcile.? K&. K& E&. E& R&. R&))))) (%Poly%fun%2. (Poly%fun%2. (mk_fun %%lambda%%32))))) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.controller.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.controller.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.state_machine.StateMachine. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&) $ TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep.)) :pattern ((fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.controller.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::controller_next")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.))
(declare-fun %%lambda%%59 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Poly) (%%hole%%11 Dcr) (%%hole%%12 Type) (%%hole%%13 Dcr) (%%hole%%14 Type) (%%hole%%15 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%59 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15) input$ s$) (Poly%tuple%2. (let ((host_result$ (fluent_controller!state_machine.state_machine.impl&%0.next_result.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput (%Poly%core!option.Option. (tuple%2./tuple%2/0 (%Poly%tuple%2. input$))) (%Poly%core!option.Option. (tuple%2./tuple%2/1 (%Poly%tuple%2. input$))) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (let ((msg_ops$ (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps (%Poly%core!option.Option. (tuple%2./tuple%2/0 (%Poly%tuple%2. input$))) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. (fluent_controller!state_machine.action.ActionResult./Enabled/1 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))))))) (let ((network_result$ (fluent_controller!state_machine.state_machine.impl&%1.next_result.? %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$) (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!state_machine.action.ActionResult. host_result$) (Poly%fluent_controller!state_machine.action.ActionResult. network_result$))))))) :pattern ((%%apply%%1 (%%lambda%%59 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15) input$ s$)))))
(declare-fun %%lambda%%60 (Dcr Type Dcr Type Poly %%Function%% %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Poly) (%%hole%%5 %%Function%%) (%%hole%%6 %%Function%%) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%60 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) input$ s$) (B (and (and (fluent_controller!kubernetes_cluster.spec.message.received_msg_destined_for.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (tuple%2./tuple%2/0 (%Poly%tuple%2. input$)) %%hole%%4) (is-fluent_controller!state_machine.action.ActionResult./Enabled_ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/0 (%Poly%tuple%2. (%%apply%%1 %%hole%%5 input$ s$)))))) (is-fluent_controller!state_machine.action.ActionResult./Enabled_ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/1 (%Poly%tuple%2. (%%apply%%1 %%hole%%6 input$ s$)))))))) :pattern ((%%apply%%1 (%%lambda%%60 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) input$ s$)))))
(declare-fun %%lambda%%61 (%%Function%% Poly) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%61 %%hole%%0 %%hole%%1) input$ s$) (Poly%tuple%2. (let ((tmp%%$ (%Poly%tuple%2. (%%apply%%1 %%hole%%0 input$ s$)))) (let ((host_result$ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((network_result$ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/client_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. network_result$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. (fluent_controller!state_machine.action.ActionResult./Enabled/1 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$))))))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%1)))))) :pattern ((%%apply%%1 (%%lambda%%61 %%hole%%0 %%hole%%1) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.? K&. K& E&. E& R&. R&) (let ((result$ (mk_fun (%%lambda%%59 $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&) $ TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.controller.? K&. K& E&. E& R&. R&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.? K&. K& E&. E& R&. R&)))))) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%60 (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId./CustomController) result$ result$)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%61 result$ (Poly%tuple%0. tuple%0./tuple%0)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) $ TYPE%tuple%0.)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::client_req_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.client_req_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.client_req_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (msg_content! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.client_req_msg.? I&. I& O&. O& msg_content!) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId./Client) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer) msg_content!)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.client_req_msg.? I&. I& O&. O& msg_content!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (msg_content! Poly)) (! (=> (has_type msg_content! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.client_req_msg.? I&. I& O&. O& msg_content!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.client_req_msg.? I&. I& O&. O& msg_content!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::create_req_msg_content")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_req_msg_content.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_req_msg_content.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (namespace! Poly) (obj! Poly) (req_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_req_msg_content.? I&. I& O&. O& namespace! obj! req_id!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest namespace! (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%I req_id!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_req_msg_content.? I&. I& O&. O& namespace! obj! req_id!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (namespace! Poly) (obj! Poly) (req_id! Poly)) (! (=> (and (has_type namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type req_id! NAT)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_req_msg_content.? I&. I& O&. O& namespace! obj! req_id!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_req_msg_content.? I&. I& O&. O& namespace! obj! req_id!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::create_custom_resource")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.create_custom_resource.))
(declare-fun %%lambda%%62 (fluent_controller!kubernetes_api_objects.spec.common.Kind. Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 fluent_controller!kubernetes_api_objects.spec.common.Kind.) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Dcr) (%%hole%%6 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%62 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) input$ s$) (B (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$))))))))))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$)))))))))))))) (or (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$))))) %%hole%%0) (%B (fluent_controller!reconciler.spec.reconciler.Reconciler.expect_from_user.? %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$))))))))) :pattern ((%%apply%%1 (%%lambda%%62 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) input$ s$)))))
(declare-fun %%lambda%%63 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%63 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9) input$ s$) (Poly%tuple%2. (let ((create_req_msg$ (fluent_controller!kubernetes_cluster.spec.message.impl&%5.client_req_msg.? %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.create_req_msg_content.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$))))))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$))) (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$)))))))))))) (let ((s_prime$ (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. s$))) (let ((output$ (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput (vstd!multiset.impl&%0.singleton.? %%hole%%8 %%hole%%9 (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. create_req_msg$)) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$))))))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. output$))))))) :pattern ((%%apply%%1 (%%lambda%%63 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.create_custom_resource.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.create_custom_resource.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%62 (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? K&. K&)) R&. R& K&. K& E&. E&)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%63 (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.create_custom_resource.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.create_custom_resource.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.create_custom_resource.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::delete_custom_resource")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.delete_custom_resource.))
(declare-fun %%lambda%%64 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%64 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9) input$ s$) (Poly%tuple%2. (let ((delete_req_msg$ (fluent_controller!kubernetes_cluster.spec.message.impl&%5.client_req_msg.? %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.delete_req_msg_content.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$))))) (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$)))))))))))) (let ((s_prime$ (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. s$))) (let ((output$ (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput (vstd!multiset.impl&%0.singleton.? %%hole%%8 %%hole%%9 (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. delete_req_msg$)) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$))))))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. output$))))))) :pattern ((%%apply%%1 (%%lambda%%64 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.delete_custom_resource.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.delete_custom_resource.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%62 (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? K&. K&)) R&. R& K&. K& E&. E&)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%64 (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.delete_custom_resource.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.delete_custom_resource.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.delete_custom_resource.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::update_req_msg_content")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_req_msg_content.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_req_msg_content.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (namespace! Poly) (name! Poly) (obj! Poly) (req_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_req_msg_content.? I&. I& O&. O& namespace! name! obj! req_id!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest namespace! name! (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%I req_id!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_req_msg_content.? I&. I& O&. O& namespace! name! obj! req_id!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (namespace! Poly) (name! Poly) (obj! Poly) (req_id! Poly)) (! (=> (and (has_type namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type req_id! NAT)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_req_msg_content.? I&. I& O&. O& namespace! name! obj! req_id!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_req_msg_content.? I&. I& O&. O& namespace! name! obj! req_id!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::update_custom_resource")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.update_custom_resource.))
(declare-fun %%lambda%%65 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%65 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9) input$ s$) (Poly%tuple%2. (let ((update_req_msg$ (fluent_controller!kubernetes_cluster.spec.message.impl&%5.client_req_msg.? %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.update_req_msg_content.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$))))))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$))))))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/obj (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$))) (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$)))))))))))) (let ((s_prime$ (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. s$))) (let ((output$ (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput (vstd!multiset.impl&%0.singleton.? %%hole%%8 %%hole%%9 (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. update_req_msg$)) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.message.impl&%1.allocate.? (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. input$))))))))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. output$))))))) :pattern ((%%apply%%1 (%%lambda%%65 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.update_custom_resource.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.update_custom_resource.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%62 (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? K&. K&)) R&. R& K&. K& E&. E&)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%65 (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.update_custom_resource.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.update_custom_resource.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) :pattern ((fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.update_custom_resource.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::client")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.client.))
(declare-fun %%lambda%%66 (fluent_controller!state_machine.action.Action. fluent_controller!state_machine.action.Action. fluent_controller!state_machine.action.Action.) %%Function%%)
(define-fun is-fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource_ ((c fluent_controller!kubernetes_cluster.spec.client.types.Step.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource) c))
(define-fun is-fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource_ ((c fluent_controller!kubernetes_cluster.spec.client.types.Step.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource) c))
(assert (forall ((%%hole%%0 fluent_controller!state_machine.action.Action.) (%%hole%%1 fluent_controller!state_machine.action.Action.) (%%hole%%2 fluent_controller!state_machine.action.Action.) (step$ Poly)) (! (= (%%apply%%0 (%%lambda%%66 %%hole%%0 %%hole%%1 %%hole%%2) step$) (Poly%fluent_controller!state_machine.action.Action. (ite (is-fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource_ (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. step$)) %%hole%%2 (ite (is-fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource_ (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. step$)) %%hole%%0 %%hole%%1)))) :pattern ((%%apply%%0 (%%lambda%%66 %%hole%%0 %%hole%%1 %%hole%%2) step$)))))
(declare-fun %%lambda%%67 () %%Function%%)
(assert (forall ((step$ Poly) (input$ Poly)) (! (= (%%apply%%1 %%lambda%%67 step$ input$) (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. (ite (is-fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource_ (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. step$)) (let ((obj$ (fluent_controller!kubernetes_cluster.spec.client.types.Step./CreateCustomResource/0 (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. step$)))) (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. input$))) (ite (is-fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource_ (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. step$)) (let ((obj$ (fluent_controller!kubernetes_cluster.spec.client.types.Step./UpdateCustomResource/0 (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. step$)))) (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. input$))) (let ((obj$ (fluent_controller!kubernetes_cluster.spec.client.types.Step./DeleteCustomResource/0 (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.Step. step$)))) (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput./ClientActionInput (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. input$))))))) :pattern ((%%apply%%1 %%lambda%%67 step$ input$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.client.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.client.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine (%Poly%fun%1. (Poly%fun%1. (mk_fun (%%lambda%%31 (B true))))) (vstd!set.impl&%0.insert.? $ (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (vstd!set.impl&%0.insert.? $ (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (vstd!set.impl&%0.insert.? $ (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (vstd!set.impl&%0.empty.? $ (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.create_custom_resource.? K&. K& E&. E& R&. R&))) (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.delete_custom_resource.? K&. K& E&. E& R&. R&))) (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.update_custom_resource.? K&. K& E&. E& R&. R&))) (%Poly%fun%1. (Poly%fun%1. (mk_fun (%%lambda%%66 (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.update_custom_resource.? K&. K& E&. E& R&. R&) (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.delete_custom_resource.? K&. K& E&. E& R&. R&) (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.create_custom_resource.? K&. K& E&. E& R&. R&))))) (%Poly%fun%2. (Poly%fun%2. (mk_fun %%lambda%%67))))) :pattern ((fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.client.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.client.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.state_machine.StateMachine. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. $ TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step.)) :pattern ((fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.client.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::client_next")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.client_next.))
(declare-fun %%lambda%%68 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly core!option.Option. Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Poly) (%%hole%%11 core!option.Option.) (%%hole%%12 Dcr) (%%hole%%13 Type) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%68 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16) input$ s$) (Poly%tuple%2. (let ((host_result$ (fluent_controller!state_machine.state_machine.impl&%0.next_result.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))) (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/client_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (let ((msg_ops$ (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps %%hole%%11 (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (fluent_controller!state_machine.action.ActionResult./Enabled/1 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))))))) (let ((network_result$ (fluent_controller!state_machine.state_machine.impl&%1.next_result.? %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$) (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!state_machine.action.ActionResult. host_result$) (Poly%fluent_controller!state_machine.action.ActionResult. network_result$))))))) :pattern ((%%apply%%1 (%%lambda%%68 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16) input$ s$)))))
(declare-fun %%lambda%%69 (%%Function%% Poly) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%69 %%hole%%0 %%hole%%1) input$ s$) (Poly%tuple%2. (let ((tmp%%$ (%Poly%tuple%2. (%%apply%%1 %%hole%%0 input$ s$)))) (let ((host_result$ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((network_result$ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. network_result$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput./ClientActionOutput/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (fluent_controller!state_machine.action.ActionResult./Enabled/1 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$))))))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%1)))))) :pattern ((%%apply%%1 (%%lambda%%69 %%hole%%0 %%hole%%1) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.client_next.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.client_next.? K&. K& E&. E& R&. R&) (let ((result$ (mk_fun (%%lambda%%68 $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. $ TYPE%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionInput. $ (TYPE%fluent_controller!kubernetes_cluster.spec.client.types.ClientActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ TYPE%fluent_controller!kubernetes_cluster.spec.client.types.Step. (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.client.state_machine.impl&%0.client.? K&. K& E&. E& R&. R&)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.? K&. K& E&. E& R&. R&)))))) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%49 result$ result$)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%69 result$ (Poly%tuple%0. tuple%0./tuple%0)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.client_next.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.client_next.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ TYPE%tuple%0. $ TYPE%tuple%0.)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.client_next.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::MessageContent::get_ExternalAPIRequest_0")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIRequest_0.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIRequest_0.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIRequest_0.? I&. I& O&. O& self!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. self!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIRequest_0.? I&. I& O&. O& self!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (self! Poly)) (! (=> (has_type self! (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&)) (has_type (fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIRequest_0.? I&. I& O&. O& self!) I&)) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%2.get_ExternalAPIRequest_0.? I&. I& O&. O& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::external_resp_msg_content")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.external_resp_msg_content.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.external_resp_msg_content.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.external_resp_msg_content.? I&. I& O&. O& resp! resp_id!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIResponse resp! (%I resp_id!))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.external_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (resp! Poly) (resp_id! Poly)) (! (=> (and (has_type resp! O&) (has_type resp_id! NAT)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.external_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageContent. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.external_resp_msg_content.? I&. I& O&. O& resp! resp_id!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::Message::form_external_resp_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_external_resp_msg. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%77 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_external_resp_msg. I&. I& O&. O& req_msg! resp!) (=> %%global_location_label%%77 (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_external_resp_msg. I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::form_external_resp_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_external_resp_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_external_resp_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_external_resp_msg.? I&. I& O&. O& req_msg! resp!) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_msg.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))) (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.external_resp_msg_content.? I&. I& O&. O& resp! (I (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? I&. I& O&. O& (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_external_resp_msg.? I&. I& O&. O& req_msg! resp!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (resp! Poly)) (! (=> (and (has_type req_msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)) (has_type resp! O&)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_external_resp_msg.? I&. I& O&. O& req_msg! resp!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_external_resp_msg.? I&. I& O&. O& req_msg! resp!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_external_request_helper")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request_helper.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request_helper.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (req_msg! Poly) (s! Poly) (resources! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request_helper.? K&. K& E&. E& R&. R& req_msg! s! resources!) (let ((tmp%%$ (%Poly%tuple%2. (fluent_controller!external_api.spec.ExternalAPI.transition.? E&. E& (fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))) resources! (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState./ExternalAPIState/state (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. s!)))))) (let ((inner_s_prime$ (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$))))) (let ((resp$ (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$))))) (let ((s_prime$ (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState./ExternalAPIState inner_s_prime$))) (let ((resp_msg$ (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_external_resp_msg.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) req_msg! resp$))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg$)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request_helper.? K&. K& E&. E& R&. R& req_msg! s! resources!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (req_msg! Poly) (s! Poly) (resources! Poly)) (! (=> (and (has_type req_msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (has_type s! (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&)) (has_type resources! (TYPE%vstd!map.Map. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) (has_type (Poly%tuple%2. (fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request_helper.? K&. K& E&. E& R&. R& req_msg! s! resources!)) (TYPE%tuple%2. $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) :pattern ((fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request_helper.? K&. K& E&. E& R&. R& req_msg! s! resources!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::handle_external_request")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request.))
(declare-fun %%lambda%%70 (fluent_controller!kubernetes_cluster.spec.message.HostId.) %%Function%%)
(assert (forall ((%%hole%%0 fluent_controller!kubernetes_cluster.spec.message.HostId.) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%70 %%hole%%0) input$ s$) (B (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. input$))))))) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./ExternalAPIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. input$))))))))))) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. input$))))))) %%hole%%0)))) :pattern ((%%apply%%1 (%%lambda%%70 %%hole%%0) input$ s$)))))
(declare-fun %%lambda%%71 (Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%71 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7) input$ s$) (Poly%tuple%2. (let ((req_msg$ (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/recv (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. input$)))))))) (let ((tmp%%$ (fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request_helper.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg$) s$ (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput/resources (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. input$)))))) (let ((s_prime$ (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((resp_msg$ (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. s_prime$) (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput (vstd!multiset.impl&%0.singleton.? %%hole%%6 %%hole%%7 (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg$))))))))))) :pattern ((%%apply%%1 (%%lambda%%71 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%70 fluent_controller!kubernetes_cluster.spec.message.HostId./ExternalAPI)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%71 K&. K& E&. E& R&. R& $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. E&. E&))) :pattern ((fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::external_api")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.external_api.))
(declare-fun %%lambda%%72 (Poly) %%Function%%)
(assert (forall ((%%hole%%0 Poly) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%72 %%hole%%0) s$) (B (= (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState./ExternalAPIState/state (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. s$)) %%hole%%0))) :pattern ((%%apply%%0 (%%lambda%%72 %%hole%%0) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.external_api.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.external_api.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine (%Poly%fun%1. (Poly%fun%1. (mk_fun (%%lambda%%72 (fluent_controller!external_api.spec.ExternalAPI.init_state.? E&. E&))))) (vstd!set.impl&%0.insert.? $ (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. E&. E&)) (vstd!set.impl&%0.empty.? $ (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. E&. E&))) (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request.? K&. K& E&. E& R&. R&))) (%Poly%fun%1. (Poly%fun%1. (mk_fun (%%lambda%%31 (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.handle_external_request.? K&. K& E&. E& R&. R&)))))) (%Poly%fun%2. (Poly%fun%2. (mk_fun %%lambda%%32))))) :pattern ((fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.external_api.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.external_api.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.state_machine.StateMachine. $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. E&. E&) $ TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep.)) :pattern ((fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.external_api.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::external_api_next")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.external_api_next.))
(declare-fun %%lambda%%73 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Poly) (%%hole%%11 Dcr) (%%hole%%12 Type) (%%hole%%13 Dcr) (%%hole%%14 Type) (%%hole%%15 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%73 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15) input$ s$) (Poly%tuple%2. (let ((host_result$ (fluent_controller!state_machine.state_machine.impl&%0.next_result.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput./ExternalAPIActionInput (%Poly%core!option.Option. input$) (%Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))))) (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (let ((msg_ops$ (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps (%Poly%core!option.Option. input$) (fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput./ExternalAPIActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. (fluent_controller!state_machine.action.ActionResult./Enabled/1 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))))))) (let ((network_result$ (fluent_controller!state_machine.state_machine.impl&%1.next_result.? %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$) (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!state_machine.action.ActionResult. host_result$) (Poly%fluent_controller!state_machine.action.ActionResult. network_result$))))))) :pattern ((%%apply%%1 (%%lambda%%73 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15) input$ s$)))))
(declare-fun %%lambda%%74 (%%Function%% Poly) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%74 %%hole%%0 %%hole%%1) input$ s$) (Poly%tuple%2. (let ((tmp%%$ (%Poly%tuple%2. (%%apply%%1 %%hole%%0 input$ s$)))) (let ((host_result$ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/0 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (let ((network_result$ (%Poly%fluent_controller!state_machine.action.ActionResult. (tuple%2./tuple%2/1 (%Poly%tuple%2. (Poly%tuple%2. tmp%%$)))))) (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/client_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. network_result$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%1)))))) :pattern ((%%apply%%1 (%%lambda%%74 %%hole%%0 %%hole%%1) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.external_api_next.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.external_api_next.? K&. K& E&. E& R&. R&) (let ((result$ (mk_fun (%%lambda%%73 $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIActionOutput. E&. E&) $ TYPE%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIStep. (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.external_api.state_machine.impl&%0.external_api.? K&. K& E&. E& R&. R&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.? K&. K& E&. E& R&. R&)))))) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%37 (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId./ExternalAPI) result$ result$)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%74 result$ (Poly%tuple%0. tuple%0./tuple%0)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.external_api_next.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.external_api_next.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) $ TYPE%tuple%0.)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.external_api_next.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::schedule_controller_reconcile")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.schedule_controller_reconcile.))
(declare-fun %%lambda%%75 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%75 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11) input$ s$) (B (and (and (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) input$) (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./CustomResourceKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. input$)))))) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? %%hole%%10 %%hole%%11 (vstd!map.impl&%0.index.? %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) input$))))))))) :pattern ((%%apply%%1 (%%lambda%%75 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11) input$ s$)))))
(declare-fun %%lambda%%76 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%76 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10) input$ s$) (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (let ((tmp%%$ (vstd!map.impl&%0.insert.? %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/scheduled_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) input$ (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.index.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) input$))))))) (let ((tmp%%$1 (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. tmp%%$1))) tmp%%$))))) (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/client_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%10))) :pattern ((%%apply%%1 (%%lambda%%76 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.schedule_controller_reconcile.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.schedule_controller_reconcile.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%75 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. K&. K&)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%76 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. K&. K& $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. K&. K& (Poly%tuple%0. tuple%0./tuple%0))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.schedule_controller_reconcile.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.schedule_controller_reconcile.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%tuple%0.)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.schedule_controller_reconcile.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::restart_controller")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.restart_controller.))
(declare-fun %%lambda%%77 () %%Function%%)
(assert (forall ((input$ Poly) (s$ Poly)) (! (= (%%apply%%1 %%lambda%%77 input$ s$) (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) :pattern ((%%apply%%1 %%lambda%%77 input$ s$)))))
(declare-fun %%lambda%%78 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. Poly) %%Function%%)
(assert (forall ((%%hole%%0 fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState.) (%%hole%%1 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%78 %%hole%%0 %%hole%%1) input$ s$) (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) %%hole%%0 (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/client_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%1))) :pattern ((%%apply%%1 (%%lambda%%78 %%hole%%0 %%hole%%1) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.restart_controller.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.restart_controller.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun %%lambda%%77))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%78 (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.init_controller_state.? K&. K& E&. E& R&. R&))) (Poly%tuple%0. tuple%0./tuple%0))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.restart_controller.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.restart_controller.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ TYPE%tuple%0. $ TYPE%tuple%0.)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.restart_controller.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::disable_crash")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_crash.))
(declare-fun %%lambda%%79 (Poly) %%Function%%)
(assert (forall ((%%hole%%0 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%79 %%hole%%0) input$ s$) %%hole%%0) :pattern ((%%apply%%1 (%%lambda%%79 %%hole%%0) input$ s$)))))
(declare-fun %%lambda%%80 (Bool Poly) %%Function%%)
(assert (forall ((%%hole%%0 Bool) (%%hole%%1 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%80 %%hole%%0 %%hole%%1) input$ s$) (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/client_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) %%hole%%0 (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%1))) :pattern ((%%apply%%1 (%%lambda%%80 %%hole%%0 %%hole%%1) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_crash.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_crash.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%79 (B true))))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%80 (%B (B false)) (Poly%tuple%0. tuple%0./tuple%0))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_crash.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_crash.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ TYPE%tuple%0. $ TYPE%tuple%0.)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_crash.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::message::Message::form_matched_err_resp_msg")
(declare-fun req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_matched_err_resp_msg. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%78 Bool)
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (err! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_matched_err_resp_msg. I&. I& O&. O& req_msg! err!) (=> %%global_location_label%%78 (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))))) :pattern ((req%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_matched_err_resp_msg. I&. I& O&. O& req_msg! err!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::message::Message::form_matched_err_resp_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_matched_err_resp_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_matched_err_resp_msg.) (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (err! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_matched_err_resp_msg.? I&. I& O&. O& req_msg! err!) (let ((tmp%%$ (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest_ tmp%%$) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_get_resp_msg.? I&. I& O&. O& req_msg! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err err!)))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest_ tmp%%$) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_list_resp_msg.? I&. I& O&. O& req_msg! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.ListResponse./ListResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err err!)))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest_ tmp%%$) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_create_resp_msg.? I&. I& O&. O& req_msg! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateResponse./CreateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err err!)))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest_ tmp%%$) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_delete_resp_msg.? I&. I& O&. O& req_msg! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteResponse./DeleteResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err err!)))))) (ite (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest_ tmp%%$) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_resp_msg.? I&. I& O&. O& req_msg! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateResponse./UpdateResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err err!)))))) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_update_status_resp_msg.? I&. I& O&. O& req_msg! (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusResponse./UpdateStatusResponse (%Poly%core!result.Result. (Poly%core!result.Result. (core!result.Result./Err err!))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_matched_err_resp_msg.? I&. I& O&. O& req_msg! err!)) ))))
(assert (forall ((I&. Dcr) (I& Type) (O&. Dcr) (O& Type) (req_msg! Poly) (err! Poly)) (! (=> (and (has_type req_msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&)) (has_type err! TYPE%fluent_controller!kubernetes_api_objects.error.APIError.)) (has_type (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_matched_err_resp_msg.? I&. I& O&. O& req_msg! err!)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. I&. I& O&. O&))) :pattern ((fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_matched_err_resp_msg.? I&. I& O&. O& req_msg! err!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::error::APIError::is_Timeout")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_Timeout.))
(define-fun is-fluent_controller!kubernetes_api_objects.error.APIError./Timeout_ ((c fluent_controller!kubernetes_api_objects.error.APIError.)) Bool ((_ is fluent_controller!kubernetes_api_objects.error.APIError./Timeout) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_Timeout.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.error.impl&%0.is_Timeout.? self!) (is-fluent_controller!kubernetes_api_objects.error.APIError./Timeout_ (%Poly%fluent_controller!kubernetes_api_objects.error.APIError. self!))) :pattern ((fluent_controller!kubernetes_api_objects.error.impl&%0.is_Timeout.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::error::APIError::is_ServerTimeout")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_ServerTimeout.))
(define-fun is-fluent_controller!kubernetes_api_objects.error.APIError./ServerTimeout_ ((c fluent_controller!kubernetes_api_objects.error.APIError.)) Bool ((_ is fluent_controller!kubernetes_api_objects.error.APIError./ServerTimeout) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_ServerTimeout.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.error.impl&%0.is_ServerTimeout.? self!) (is-fluent_controller!kubernetes_api_objects.error.APIError./ServerTimeout_ (%Poly%fluent_controller!kubernetes_api_objects.error.APIError. self!))) :pattern ((fluent_controller!kubernetes_api_objects.error.impl&%0.is_ServerTimeout.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::error::APIError::is_Conflict")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_Conflict.))
(define-fun is-fluent_controller!kubernetes_api_objects.error.APIError./Conflict_ ((c fluent_controller!kubernetes_api_objects.error.APIError.)) Bool ((_ is fluent_controller!kubernetes_api_objects.error.APIError./Conflict) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.error.impl&%0.is_Conflict.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.error.impl&%0.is_Conflict.? self!) (is-fluent_controller!kubernetes_api_objects.error.APIError./Conflict_ (%Poly%fluent_controller!kubernetes_api_objects.error.APIError. self!))) :pattern ((fluent_controller!kubernetes_api_objects.error.impl&%0.is_Conflict.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::fail_request_transiently")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.fail_request_transiently.))
(declare-fun %%lambda%%81 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%81 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10) input$ s$) (Poly%fluent_controller!state_machine.action.ActionResult. (let ((req_msg$ (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (tuple%2./tuple%2/0 (%Poly%tuple%2. input$))))) (let ((api_err$ (%Poly%fluent_controller!kubernetes_api_objects.error.APIError. (tuple%2./tuple%2/1 (%Poly%tuple%2. input$))))) (let ((resp$ (fluent_controller!kubernetes_cluster.spec.message.impl&%5.form_matched_err_resp_msg.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg$) (Poly%fluent_controller!kubernetes_api_objects.error.APIError. api_err$)))) (let ((msg_ops$ (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg$)))) (vstd!multiset.impl&%0.singleton.? %%hole%%4 %%hole%%5 (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp$))))) (let ((result$1 (fluent_controller!state_machine.state_machine.impl&%1.next_result.? %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$) (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) result$1))))))) :pattern ((%%apply%%1 (%%lambda%%81 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10) input$ s$)))))
(declare-fun %%lambda%%82 (%%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%82 %%hole%%0) input$ s$) (B (let ((req_msg$ (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (tuple%2./tuple%2/0 (%Poly%tuple%2. input$))))) (let ((api_err$ (%Poly%fluent_controller!kubernetes_api_objects.error.APIError. (tuple%2./tuple%2/1 (%Poly%tuple%2. input$))))) (and (and (and (and (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)) (is-fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg$))))))) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg$))))))) (or (or (is-fluent_controller!kubernetes_api_objects.error.APIError./Timeout_ (%Poly%fluent_controller!kubernetes_api_objects.error.APIError. (Poly%fluent_controller!kubernetes_api_objects.error.APIError. api_err$))) (is-fluent_controller!kubernetes_api_objects.error.APIError./ServerTimeout_ (%Poly%fluent_controller!kubernetes_api_objects.error.APIError. (Poly%fluent_controller!kubernetes_api_objects.error.APIError. api_err$)))) (is-fluent_controller!kubernetes_api_objects.error.APIError./Conflict_ (%Poly%fluent_controller!kubernetes_api_objects.error.APIError. (Poly%fluent_controller!kubernetes_api_objects.error.APIError. api_err$))))) (is-fluent_controller!state_machine.action.ActionResult./Enabled_ (%Poly%fluent_controller!state_machine.action.ActionResult. (%%apply%%1 %%hole%%0 input$ s$)))))))) :pattern ((%%apply%%1 (%%lambda%%82 %%hole%%0) input$ s$)))))
(declare-fun %%lambda%%83 (%%Function%% Poly) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%83 %%hole%%0 %%hole%%1) input$ s$) (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/client_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!state_machine.action.ActionResult./Enabled/0 (%Poly%fluent_controller!state_machine.action.ActionResult. (%%apply%%1 %%hole%%0 input$ s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%1))) :pattern ((%%apply%%1 (%%lambda%%83 %%hole%%0 %%hole%%1) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.fail_request_transiently.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.fail_request_transiently.? K&. K& E&. E& R&. R&) (let ((result$ (mk_fun (%%lambda%%81 (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.? K&. K& E&. E& R&. R&)))))) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%82 result$)))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%83 result$ (Poly%tuple%0. tuple%0./tuple%0)))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.fail_request_transiently.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.fail_request_transiently.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%tuple%2. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.) $ TYPE%tuple%0.)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.fail_request_transiently.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::disable_transient_failure")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_transient_failure.))
(declare-fun %%lambda%%84 (Bool Poly) %%Function%%)
(assert (forall ((%%hole%%0 Bool) (%%hole%%1 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%84 %%hole%%0 %%hole%%1) input$ s$) (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (Poly%fluent_controller!kubernetes_cluster.spec.client.types.ClientState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/client_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (Poly%fluent_controller!kubernetes_cluster.spec.external_api.types.ExternalAPIState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/external_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) (%B (B (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))) %%hole%%0)) %%hole%%1))) :pattern ((%%apply%%1 (%%lambda%%84 %%hole%%0 %%hole%%1) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_transient_failure.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_transient_failure.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%79 (B true))))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%84 (%B (B false)) (Poly%tuple%0. tuple%0./tuple%0))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_transient_failure.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_transient_failure.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ TYPE%tuple%0. $ TYPE%tuple%0.)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_transient_failure.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::stutter")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.stutter.))
(declare-fun %%lambda%%85 (Poly) %%Function%%)
(assert (forall ((%%hole%%0 Poly) (input$ Poly) (s$ Poly)) (! (= (%%apply%%1 (%%lambda%%85 %%hole%%0) input$ s$) (Poly%tuple%2. (tuple%2./tuple%2 s$ %%hole%%0))) :pattern ((%%apply%%1 (%%lambda%%85 %%hole%%0) input$ s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.stutter.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.stutter.? K&. K& E&. E& R&. R&) (fluent_controller!state_machine.action.Action./Action (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%79 (B true))))) (%Poly%fun%2. (Poly%fun%2. (mk_fun (%%lambda%%85 (Poly%tuple%0. tuple%0./tuple%0))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.stutter.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.stutter.? K&. K& E&. E& R&. R&)) (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ TYPE%tuple%0. $ TYPE%tuple%0.)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.stutter.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::next_step")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next_step.))
(define-fun is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep_ ((c fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep) c))
(define-fun is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ClientStep_ ((c fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ClientStep) c))
(define-fun is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep_ ((c fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep) c))
(define-fun is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./RestartController_ ((c fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./RestartController) c))
(define-fun is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./DisableCrash_ ((c fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./DisableCrash) c))
(define-fun is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./DisableTransientFailure_ ((c fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step.)) Bool ((_ is fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./DisableTransientFailure) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next_step.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (s! Poly) (s_prime! Poly) (step! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next_step.? K&. K& E&. E& R&. R& s! s_prime! step!) (%B (ite (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep_ (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)) (let ((input$ (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ApiServerStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)))) (%%apply%%1 (fluent_controller!state_machine.action.impl&%0.forward.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.? K&. K& E&. E& R&. R&)) (Poly%core!option.Option. input$)) s! s_prime!)) (ite (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep_ (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)) (let ((input$ (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./BuiltinControllersStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)))) (%%apply%%1 (fluent_controller!state_machine.action.impl&%0.forward.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%tuple%2. $ TYPE%fluent_controller!kubernetes_cluster.spec.builtin_controllers.types.BuiltinControllerChoice. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.builtin_controllers_next.? K&. K& E&. E& R&. R&)) (Poly%tuple%2. input$)) s! s_prime!)) (ite (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep_ (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)) (let ((input$ (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ControllerStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)))) (%%apply%%1 (fluent_controller!state_machine.action.impl&%0.forward.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.? K&. K& E&. E& R&. R&)) (Poly%tuple%2. input$)) s! s_prime!)) (ite (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ClientStep_ (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)) (%%apply%%1 (fluent_controller!state_machine.action.impl&%0.forward.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ TYPE%tuple%0. $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.client_next.? K&. K& E&. E& R&. R&)) (Poly%tuple%0. tuple%0./tuple%0)) s! s_prime!) (ite (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep_ (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)) (let ((input$ (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ExternalAPIStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)))) (%%apply%%1 (fluent_controller!state_machine.action.impl&%0.forward.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.external_api_next.? K&. K& E&. E& R&. R&)) (Poly%core!option.Option. input$)) s! s_prime!)) (ite (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep_ (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)) (let ((input$ (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./ScheduleControllerReconcileStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)))) (%%apply%%1 (fluent_controller!state_machine.action.impl&%0.forward.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.schedule_controller_reconcile.? K&. K& E&. E& R&. R&)) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. input$)) s! s_prime!)) (ite (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./RestartController_ (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)) (%%apply%%1 (fluent_controller!state_machine.action.impl&%0.forward.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ TYPE%tuple%0. $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.restart_controller.? K&. K& E&. E& R&. R&)) (Poly%tuple%0. tuple%0./tuple%0)) s! s_prime!) (ite (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./DisableCrash_ (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)) (%%apply%%1 (fluent_controller!state_machine.action.impl&%0.forward.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ TYPE%tuple%0. $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_crash.? K&. K& E&. E& R&. R&)) (Poly%tuple%0. tuple%0./tuple%0)) s! s_prime!) (ite (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep_ (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)) (let ((input$ (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./FailTransientlyStep/0 (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)))) (%%apply%%1 (fluent_controller!state_machine.action.impl&%0.forward.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%tuple%2. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ TYPE%fluent_controller!kubernetes_api_objects.error.APIError.) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.fail_request_transiently.? K&. K& E&. E& R&. R&)) (Poly%tuple%2. input$)) s! s_prime!)) (ite (is-fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step./DisableTransientFailure_ (%Poly%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. step!)) (%%apply%%1 (fluent_controller!state_machine.action.impl&%0.forward.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ TYPE%tuple%0. $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.disable_transient_failure.? K&. K& E&. E& R&. R&)) (Poly%tuple%0. tuple%0./tuple%0)) s! s_prime!) (%%apply%%1 (fluent_controller!state_machine.action.impl&%0.forward.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ TYPE%tuple%0. $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.stutter.? K&. K& E&. E& R&. R&)) (Poly%tuple%0. tuple%0./tuple%0)) s! s_prime!))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next_step.? K&. K& E&. E& R&. R& s! s_prime! step!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::next")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next.))
(declare-fun %%lambda%%86 (Dcr Type Dcr Type Dcr Type Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Type) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Dcr) (%%hole%%12 Type) (s$ Poly) (s_prime$ Poly)) (! (= (%%apply%%1 (%%lambda%%86 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) s$ s_prime$) (B (exists ((step$ Poly)) (! (and (has_type step$ %%hole%%6) (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next_step.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 s$ s_prime$ step$)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next_step.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 s$ s_prime$ step$)) )))) :pattern ((%%apply%%1 (%%lambda%%86 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) s$ s_prime$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next.? K&. K& E&. E& R&. R&) (mk_fun (%%lambda%%86 K&. K& E&. E& R&. R& (TYPE%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.Step. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) K&. K& E&. E& R&. R&))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fun%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next.? K&. K& E&. E& R&. R&)) (TYPE%fun%2. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ BOOL)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::tla_forall")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.tla_forall.))
(declare-fun %%lambda%%87 (%%Function%% Dcr Type Type %%Function%% Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Type) (%%hole%%4 %%Function%%) (%%hole%%5 Dcr) (%%hole%%6 Type) (ex$ Poly)) (! (= (%%apply%%0 (%%lambda%%87 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) ex$) (B (forall ((a$ Poly)) (! (=> (has_type a$ %%hole%%3) (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%5 %%hole%%6 (%%apply%%0 %%hole%%4 a$) ex$)) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%1 %%hole%%2 (%%apply%%0 %%hole%%0 a$) ex$)) )))) :pattern ((%%apply%%0 (%%lambda%%87 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) ex$)))))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.tla_forall.) (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type) (a_to_temp_pred! Poly)) (! (= (fluent_controller!temporal_logic.defs.tla_forall.? T&. T& A&. A& a_to_temp_pred!) (fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& (Poly%fun%1. (mk_fun (%%lambda%%87 (%Poly%fun%1. a_to_temp_pred!) T&. T& A& (%Poly%fun%1. a_to_temp_pred!) T&. T&))))) :pattern ((fluent_controller!temporal_logic.defs.tla_forall.? T&. T& A&. A& a_to_temp_pred!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type) (a_to_temp_pred! Poly)) (! (=> (has_type a_to_temp_pred! (TYPE%fun%1. A&. A& $ (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_forall.? T&. T& A&. A& a_to_temp_pred!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.tla_forall.? T&. T& A&. A& a_to_temp_pred!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::TempPred::implies")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.impl&%1.implies.))
(declare-fun %%lambda%%88 (Dcr Type Poly Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Poly) (ex$ Poly)) (! (= (%%apply%%0 (%%lambda%%88 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) ex$) (B (=> (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%0 %%hole%%1 %%hole%%2 ex$) (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%3 %%hole%%4 %%hole%%5 ex$)))) :pattern ((%%apply%%0 (%%lambda%%88 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) ex$)))))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.impl&%1.implies.) (forall ((T&. Dcr) (T& Type) (self! Poly) (other! Poly)) (! (= (fluent_controller!temporal_logic.defs.impl&%1.implies.? T&. T& self! other!) (fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& (Poly%fun%1. (mk_fun (%%lambda%%88 T&. T& self! T&. T& other!))))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.implies.? T&. T& self! other!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (self! Poly) (other! Poly)) (! (=> (and (has_type self! (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&)) (has_type other! (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.implies.? T&. T& self! other!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.implies.? T&. T& self! other!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::eventually")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.eventually.))
(declare-fun %%lambda%%89 (Dcr Type Dcr Type Poly Type Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Poly) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Poly) (ex$ Poly)) (! (= (%%apply%%0 (%%lambda%%89 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10) ex$) (B (exists ((i$ Poly)) (! (and (has_type i$ %%hole%%5) (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%8 %%hole%%9 %%hole%%10 (Poly%fluent_controller!temporal_logic.defs.Execution. (fluent_controller!temporal_logic.defs.impl&%0.suffix.? %%hole%%6 %%hole%%7 ex$ i$)))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%2 %%hole%%3 %%hole%%4 (Poly%fluent_controller!temporal_logic.defs.Execution. (fluent_controller!temporal_logic.defs.impl&%0.suffix.? %%hole%%0 %%hole%%1 ex$ i$)))) )))) :pattern ((%%apply%%0 (%%lambda%%89 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10) ex$)))))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.eventually.) (forall ((T&. Dcr) (T& Type) (temp_pred! Poly)) (! (= (fluent_controller!temporal_logic.defs.eventually.? T&. T& temp_pred!) (fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& (Poly%fun%1. (mk_fun (%%lambda%%89 T&. T& T&. T& temp_pred! NAT T&. T& T&. T& temp_pred!))))) :pattern ((fluent_controller!temporal_logic.defs.eventually.? T&. T& temp_pred!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (temp_pred! Poly)) (! (=> (has_type temp_pred! (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&)) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.eventually.? T&. T& temp_pred!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.eventually.? T&. T& temp_pred!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::TempPred::leads_to")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.impl&%1.leads_to.))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.impl&%1.leads_to.) (forall ((T&. Dcr) (T& Type) (self! Poly) (other! Poly)) (! (= (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& self! other!) (fluent_controller!temporal_logic.defs.always.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.implies.? T&. T& self! (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.eventually.? T&. T& other!)))))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& self! other!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (self! Poly) (other! Poly)) (! (=> (and (has_type self! (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&)) (has_type other! (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& self! other!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& self! other!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::lift_state")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.lift_state.))
(declare-fun %%lambda%%90 (Dcr Type %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 %%Function%%) (ex$ Poly)) (! (= (%%apply%%0 (%%lambda%%90 %%hole%%0 %%hole%%1 %%hole%%2) ex$) (%%apply%%0 %%hole%%2 (fluent_controller!temporal_logic.defs.impl&%0.head.? %%hole%%0 %%hole%%1 ex$))) :pattern ((%%apply%%0 (%%lambda%%90 %%hole%%0 %%hole%%1 %%hole%%2) ex$)))))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.lift_state.) (forall ((T&. Dcr) (T& Type) (state_pred! Poly)) (! (= (fluent_controller!temporal_logic.defs.lift_state.? T&. T& state_pred!) (fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& (Poly%fun%1. (mk_fun (%%lambda%%90 T&. T& (%Poly%fun%1. state_pred!)))))) :pattern ((fluent_controller!temporal_logic.defs.lift_state.? T&. T& state_pred!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (state_pred! Poly)) (! (=> (has_type state_pred! (TYPE%fun%1. T&. T& $ BOOL)) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? T&. T& state_pred!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.lift_state.? T&. T& state_pred!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::state_machine::action::Action::pre")
(assert (fuel_bool_default fuel%fluent_controller!state_machine.action.impl&%0.pre.))
(declare-fun %%lambda%%91 (%%Function%% Poly) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Poly) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%91 %%hole%%0 %%hole%%1) s$) (%%apply%%1 %%hole%%0 %%hole%%1 s$)) :pattern ((%%apply%%0 (%%lambda%%91 %%hole%%0 %%hole%%1) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!state_machine.action.impl&%0.pre.) (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (Output&. Dcr) (Output& Type) (self! Poly) (input! Poly)) (! (= (fluent_controller!state_machine.action.impl&%0.pre.? State&. State& Input&. Input& Output&. Output& self! input!) (mk_fun (%%lambda%%91 (fluent_controller!state_machine.action.Action./Action/precondition (%Poly%fluent_controller!state_machine.action.Action. self!)) input!))) :pattern ((fluent_controller!state_machine.action.impl&%0.pre.? State&. State& Input&. Input& Output&. Output& self! input!)) ))))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (Output&. Dcr) (Output& Type) (self! Poly) (input! Poly)) (! (=> (and (has_type self! (TYPE%fluent_controller!state_machine.action.Action. State&. State& Input&. Input& Output&. Output&)) (has_type input! Input&)) (has_type (Poly%fun%1. (fluent_controller!state_machine.action.impl&%0.pre.? State&. State& Input&. Input& Output&. Output& self! input!)) (TYPE%fun%1. State&. State& $ BOOL))) :pattern ((fluent_controller!state_machine.action.impl&%0.pre.? State&. State& Input&. Input& Output&. Output& self! input!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::state_machine::action::Action::weak_fairness")
(assert (fuel_bool_default fuel%fluent_controller!state_machine.action.impl&%0.weak_fairness.))
(assert (=> (fuel_bool fuel%fluent_controller!state_machine.action.impl&%0.weak_fairness.) (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (Output&. Dcr) (Output& Type) (self! Poly) (input! Poly)) (! (= (fluent_controller!state_machine.action.impl&%0.weak_fairness.? State&. State& Input&. Input& Output&. Output& self! input!) (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? State&. State& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? State&. State& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? State&. State& (Poly%fun%1. (fluent_controller!state_machine.action.impl&%0.pre.? State&. State& Input&. Input& Output&. Output& self! input!)))))) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_action.? State&. State& (Poly%fun%2. (fluent_controller!state_machine.action.impl&%0.forward.? State&. State& Input&. Input& Output&. Output& self! input!)))))) :pattern ((fluent_controller!state_machine.action.impl&%0.weak_fairness.? State&. State& Input&. Input& Output&. Output& self! input!)) ))))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (Output&. Dcr) (Output& Type) (self! Poly) (input! Poly)) (! (=> (and (has_type self! (TYPE%fluent_controller!state_machine.action.Action. State&. State& Input&. Input& Output&. Output&)) (has_type input! Input&)) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!state_machine.action.impl&%0.weak_fairness.? State&. State& Input&. Input& Output&. Output& self! input!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. State&. State&))) :pattern ((fluent_controller!state_machine.action.impl&%0.weak_fairness.? State&. State& Input&. Input& Output&. Output& self! input!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::every_in_flight_msg_has_unique_id")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id.))
(declare-fun %%lambda%%92 (Dcr Type Type Dcr Type Dcr Type Int Dcr Type Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Type) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Dcr) (%%hole%%6 Type) (%%hole%%7 Int) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Type) (%%hole%%11 Dcr) (%%hole%%12 Type) (%%hole%%13 Dcr) (%%hole%%14 Type) (%%hole%%15 Dcr) (%%hole%%16 Type) (%%hole%%17 Dcr) (%%hole%%18 Type) (%%hole%%19 Dcr) (%%hole%%20 Type) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%92 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20) s$) (B (forall ((msg$ Poly)) (! (=> (has_type msg$ %%hole%%2) (=> (vstd!multiset.impl&%0.contains.? %%hole%%3 %%hole%%4 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) msg$) (and (= (vstd!multiset.impl&%0.count.? %%hole%%5 %%hole%%6 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) msg$) %%hole%%7) (forall ((other_msg$ Poly)) (! (=> (has_type other_msg$ %%hole%%10) (=> (and (vstd!multiset.impl&%0.contains.? %%hole%%11 %%hole%%12 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) other_msg$) (not (= msg$ other_msg$))) (not (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$)))) (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. other_msg$)))))))) :pattern ((vstd!multiset.impl&%0.contains.? %%hole%%8 %%hole%%9 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) other_msg$)) ))))) :pattern ((vstd!multiset.impl&%0.contains.? %%hole%%0 %%hole%%1 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) msg$)) )))) :pattern ((%%apply%%0 (%%lambda%%92 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id.? K&. K& E&. E& R&. R&) (mk_fun (%%lambda%%92 $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) 1 $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) :pattern ((fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id.? K&. K& E&. E& R&. R&)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ BOOL)) :pattern ((fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::pending_req_of_key_is_unique_with_unique_id")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.proof.message.impl&%0.pending_req_of_key_is_unique_with_unique_id.))
(declare-fun %%lambda%%93 (Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type Dcr Type Dcr Type Type Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Poly) (%%hole%%12 Dcr) (%%hole%%13 Type) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Dcr) (%%hole%%17 Type) (%%hole%%18 Type) (%%hole%%19 Dcr) (%%hole%%20 Type) (%%hole%%21 Dcr) (%%hole%%22 Type) (%%hole%%23 Dcr) (%%hole%%24 Type) (%%hole%%25 Poly) (%%hole%%26 Dcr) (%%hole%%27 Type) (%%hole%%28 Dcr) (%%hole%%29 Type) (%%hole%%30 Dcr) (%%hole%%31 Type) (%%hole%%32 Dcr) (%%hole%%33 Type) (%%hole%%34 Poly) (%%hole%%35 Dcr) (%%hole%%36 Type) (%%hole%%37 Dcr) (%%hole%%38 Type) (%%hole%%39 Dcr) (%%hole%%40 Type) (%%hole%%41 Dcr) (%%hole%%42 Type) (%%hole%%43 Dcr) (%%hole%%44 Type) (%%hole%%45 Dcr) (%%hole%%46 Type) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%93 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38 %%hole%%39 %%hole%%40 %%hole%%41 %%hole%%42 %%hole%%43 %%hole%%44 %%hole%%45 %%hole%%46) s$) (B (=> (and (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%6) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%11))))))))) (forall ((other_key$ Poly)) (! (=> (has_type other_key$ %%hole%%18) (=> (and (and (vstd!set.impl&%0.contains.? %%hole%%23 %%hole%%24 (vstd!map.impl&%0.dom.? %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) other_key$) (not (= %%hole%%25 other_key$))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) other_key$))))))))) (not (= (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%34)))))))))) (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_rest_id.? %%hole%%43 %%hole%%44 %%hole%%45 %%hole%%46 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%39 %%hole%%40 %%hole%%41 %%hole%%42 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) other_key$)))))))))))))) :pattern ((vstd!set.impl&%0.contains.? %%hole%%16 %%hole%%17 (vstd!map.impl&%0.dom.? %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) other_key$)) ))))) :pattern ((%%apply%%0 (%%lambda%%93 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38 %%hole%%39 %%hole%%40 %%hole%%41 %%hole%%42 %%hole%%43 %%hole%%44 %%hole%%45 %%hole%%46) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.proof.message.impl&%0.pending_req_of_key_is_unique_with_unique_id.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (key! Poly)) (! (= (fluent_controller!kubernetes_cluster.proof.message.impl&%0.pending_req_of_key_is_unique_with_unique_id.? K&. K& E&. E& R&. R& key!) (mk_fun (%%lambda%%93 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key! $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) key! $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key! $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) key! (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) :pattern ((fluent_controller!kubernetes_cluster.proof.message.impl&%0.pending_req_of_key_is_unique_with_unique_id.? K&. K& E&. E& R&. R& key!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (key! Poly)) (! (=> (has_type key! TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.message.impl&%0.pending_req_of_key_is_unique_with_unique_id.? K&. K& E&. E& R&. R& key!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ BOOL))) :pattern ((fluent_controller!kubernetes_cluster.proof.message.impl&%0.pending_req_of_key_is_unique_with_unique_id.? K&. K& E&. E& R&. R& key!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::well_formed")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.well_formed.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.well_formed.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.well_formed.? self!) (and (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!))))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.well_formed.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::valid_object_except_k")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.valid_object_except_k.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.valid_object_except_k.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (obj! Poly)) (! (= (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.valid_object_except_k.? K&. K& E&. E& R&. R& obj!) (ite (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.))) (%B (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. obj!))))) (ite (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.))) (%B (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!))))) (ite (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.))) (%B (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. obj!))))) (ite (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.))) (%B (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. obj!))))) (ite (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.))) (%B (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. obj!))))) (ite (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.))) (%B (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. obj!))))) (ite (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.))) (%B (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. obj!))))) (ite (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.))) (%B (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. obj!))))) (ite (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.))) (%B (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. obj!))))) (=> (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.))) (%B (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.state_validation.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. obj!)))))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.valid_object_except_k.? K&. K& E&. E& R&. R& obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::etcd_object_is_well_formed")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.etcd_object_is_well_formed.))
(declare-fun %%lambda%%94 (Dcr Type Dcr Type Poly fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Poly) (%%hole%%5 fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Dcr) (%%hole%%13 Type) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%94 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13) s$) (B (let ((obj$ (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%4)))) (and (and (and (and (and (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.well_formed.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$))))) (= (fluent_controller!kubernetes_api_objects.spec.dynamic.impl&%0.object_ref.? (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)) %%hole%%5)) (< (%I (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))))))) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resource_version_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) (< (%I (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))))))) (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/uid_counter (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.unmarshallable_object.? %%hole%%6 %%hole%%7 (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$))) (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.valid_object_except_k.? %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj$)))))) :pattern ((%%apply%%0 (%%lambda%%94 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.etcd_object_is_well_formed.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (key! Poly)) (! (= (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.etcd_object_is_well_formed.? K&. K& E&. E& R&. R& key!) (mk_fun (%%lambda%%94 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. key! (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key!) K&. K& K&. K& E&. E& R&. R&))) :pattern ((fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.etcd_object_is_well_formed.? K&. K& E&. E& R&. R& key!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (key! Poly)) (! (=> (has_type key! TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.etcd_object_is_well_formed.? K&. K& E&. E& R&. R& key!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ BOOL))) :pattern ((fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.etcd_object_is_well_formed.? K&. K& E&. E& R&. R& key!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::each_object_in_etcd_is_well_formed")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed.))
(declare-fun %%lambda%%95 (Dcr Type Dcr Type Dcr Type Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Type) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Dcr) (%%hole%%12 Type) (%%hole%%13 Dcr) (%%hole%%14 Type) (%%hole%%15 Dcr) (%%hole%%16 Type) (%%hole%%17 Dcr) (%%hole%%18 Type) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%95 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18) s$) (B (forall ((key$ Poly)) (! (=> (has_type key$ %%hole%%6) (=> (vstd!set.impl&%0.contains.? %%hole%%11 %%hole%%12 (vstd!map.impl&%0.dom.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) key$) (%B (%%apply%%0 (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.etcd_object_is_well_formed.? %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 key$) s$)))) :pattern ((vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) key$)) )))) :pattern ((%%apply%%0 (%%lambda%%95 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed.? K&. K& E&. E& R&. R&) (mk_fun (%%lambda%%95 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. K&. K& E&. E& R&. R&))) :pattern ((fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed.? K&. K& E&. E& R&. R&)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ BOOL)) :pattern ((fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::each_object_in_reconcile_has_consistent_key_and_valid_metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_reconcile_has_consistent_key_and_valid_metadata.))
(declare-fun %%lambda%%96 (Dcr Type Dcr Type Dcr Type Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Type) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Dcr) (%%hole%%12 Type) (%%hole%%13 Dcr) (%%hole%%14 Type) (%%hole%%15 Dcr) (%%hole%%16 Type) (%%hole%%17 Dcr) (%%hole%%18 Type) (%%hole%%19 Dcr) (%%hole%%20 Type) (%%hole%%21 Dcr) (%%hole%%22 Type) (%%hole%%23 Dcr) (%%hole%%24 Type) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%96 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24) s$) (B (forall ((key$ Poly)) (! (=> (has_type key$ %%hole%%6) (=> (vstd!set.impl&%0.contains.? %%hole%%11 %%hole%%12 (vstd!map.impl&%0.dom.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) key$) (and (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? %%hole%%17 %%hole%%18 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) key$)))) key$) (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.well_formed.? (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? %%hole%%23 %%hole%%24 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) key$)))))))) :pattern ((vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) key$)) )))) :pattern ((%%apply%%0 (%%lambda%%96 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_reconcile_has_consistent_key_and_valid_metadata.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_reconcile_has_consistent_key_and_valid_metadata.? K&. K& E&. E& R&. R&) (mk_fun (%%lambda%%96 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) K&. K& $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) K&. K&))) :pattern ((fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_reconcile_has_consistent_key_and_valid_metadata.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_reconcile_has_consistent_key_and_valid_metadata.? K&. K& E&. E& R&. R&)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ BOOL)) :pattern ((fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_reconcile_has_consistent_key_and_valid_metadata.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::cluster::Cluster::desired_state_is")
(declare-fun req%fluent_controller!kubernetes_cluster.proof.cluster.impl&%0.desired_state_is. (Dcr Type Dcr Type Dcr Type Poly) Bool)
(declare-const %%global_location_label%%79 Bool)
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (cr! Poly)) (! (= (req%fluent_controller!kubernetes_cluster.proof.cluster.impl&%0.desired_state_is. K&. K& E&. E& R&. R& cr!) (=> %%global_location_label%%79 (is-fluent_controller!kubernetes_api_objects.spec.common.Kind./CustomResourceKind_ (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? K&. K&))))) :pattern ((req%fluent_controller!kubernetes_cluster.proof.cluster.impl&%0.desired_state_is. K&. K& E&. E& R&. R& cr!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::desired_state_is")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.proof.cluster.impl&%0.desired_state_is.))
(declare-fun %%lambda%%97 (Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type Dcr Type core!option.Option. Dcr Type Dcr Type Poly Dcr Type Dcr Type core!option.Option. Dcr Type Dcr Type Poly Dcr Type Dcr Type core!option.Option.) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Poly) (%%hole%%12 Dcr) (%%hole%%13 Type) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Dcr) (%%hole%%17 Type) (%%hole%%18 Poly) (%%hole%%19 Dcr) (%%hole%%20 Type) (%%hole%%21 Dcr) (%%hole%%22 Type) (%%hole%%23 Poly) (%%hole%%24 Dcr) (%%hole%%25 Type) (%%hole%%26 Dcr) (%%hole%%27 Type) (%%hole%%28 Poly) (%%hole%%29 Dcr) (%%hole%%30 Type) (%%hole%%31 Dcr) (%%hole%%32 Type) (%%hole%%33 core!option.Option.) (%%hole%%34 Dcr) (%%hole%%35 Type) (%%hole%%36 Dcr) (%%hole%%37 Type) (%%hole%%38 Poly) (%%hole%%39 Dcr) (%%hole%%40 Type) (%%hole%%41 Dcr) (%%hole%%42 Type) (%%hole%%43 core!option.Option.) (%%hole%%44 Dcr) (%%hole%%45 Type) (%%hole%%46 Dcr) (%%hole%%47 Type) (%%hole%%48 Poly) (%%hole%%49 Dcr) (%%hole%%50 Type) (%%hole%%51 Dcr) (%%hole%%52 Type) (%%hole%%53 core!option.Option.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%97 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38 %%hole%%39 %%hole%%40 %%hole%%41 %%hole%%42 %%hole%%43 %%hole%%44 %%hole%%45 %%hole%%46 %%hole%%47 %%hole%%48 %%hole%%49 %%hole%%50 %%hole%%51 %%hole%%52 %%hole%%53) s$) (B (and (and (and (and (and (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) %%hole%%6) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? %%hole%%12 %%hole%%13 (vstd!map.impl&%0.index.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%11))))))) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? %%hole%%21 %%hole%%22 (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? %%hole%%19 %%hole%%20 (vstd!map.impl&%0.index.? %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%18))))) %%hole%%23)) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? %%hole%%31 %%hole%%32 (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? %%hole%%29 %%hole%%30 (vstd!map.impl&%0.index.? %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%28))))))) %%hole%%33)) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? %%hole%%41 %%hole%%42 (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? %%hole%%39 %%hole%%40 (vstd!map.impl&%0.index.? %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%38))))))) %%hole%%43)) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? %%hole%%51 %%hole%%52 (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? %%hole%%49 %%hole%%50 (vstd!map.impl&%0.index.? %%hole%%44 %%hole%%45 %%hole%%46 %%hole%%47 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%48))))))) %%hole%%53)))) :pattern ((%%apply%%0 (%%lambda%%97 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38 %%hole%%39 %%hole%%40 %%hole%%41 %%hole%%42 %%hole%%43 %%hole%%44 %%hole%%45 %%hole%%46 %%hole%%47 %%hole%%48 %%hole%%49 %%hole%%50 %%hole%%51 %%hole%%52 %%hole%%53) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.proof.cluster.impl&%0.desired_state_is.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (cr! Poly)) (! (= (fluent_controller!kubernetes_cluster.proof.cluster.impl&%0.desired_state_is.? K&. K& E&. E& R&. R& cr!) (mk_fun (%%lambda%%97 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? K&. K& cr!) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? K&. K& cr!) K&. K& $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? K&. K& cr!) K&. K& K&. K& (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? K&. K& cr!) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? K&. K& cr!) K&. K& K&. K& (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? K&. K& cr!))) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? K&. K& cr!) K&. K& K&. K& (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? K&. K& cr!))) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? K&. K& cr!) K&. K& K&. K& (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? K&. K& cr!)))))) :pattern ((fluent_controller!kubernetes_cluster.proof.cluster.impl&%0.desired_state_is.? K&. K& E&. E& R&. R& cr!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (cr! Poly)) (! (=> (has_type cr! K&) (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.cluster.impl&%0.desired_state_is.? K&. K& E&. E& R&. R& cr!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ BOOL))) :pattern ((fluent_controller!kubernetes_cluster.proof.cluster.impl&%0.desired_state_is.? K&. K& E&. E& R&. R& cr!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::liveness_theorem::desired_state_is")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_state_is.))
(declare-fun %%lambda%%98 (%%Function%% Dcr Type Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Dcr) (%%hole%%6 Type) (%%hole%%7 Poly) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%98 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7) s$) (B (and (%B (%%apply%%0 %%hole%%0 s$)) (vstd!set.impl&%0.contains.? %%hole%%5 %%hole%%6 (vstd!map.impl&%0.dom.? %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) %%hole%%7)))) :pattern ((%%apply%%0 (%%lambda%%98 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_state_is.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_state_is.? fb!) (mk_fun (%%lambda%%98 (fluent_controller!kubernetes_cluster.proof.cluster.impl&%0.desired_state_is.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. fb!) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_secret_key.? fb!))))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_state_is.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_state_is.? fb!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_state_is.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::crash_disabled")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled.))
(declare-fun %%lambda%%99 () %%Function%%)
(assert (forall ((s$ Poly)) (! (= (%%apply%%0 %%lambda%%99 s$) (B (not (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/crash_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) :pattern ((%%apply%%0 %%lambda%%99 s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled.? K&. K& E&. E& R&. R&) (mk_fun %%lambda%%99)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled.? K&. K& E&. E& R&. R&)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ BOOL)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::busy_disabled")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled.))
(declare-fun %%lambda%%100 () %%Function%%)
(assert (forall ((s$ Poly)) (! (= (%%apply%%0 %%lambda%%100 s$) (B (not (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/transient_failure_enabled (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) :pattern ((%%apply%%0 %%lambda%%100 s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled.? K&. K& E&. E& R&. R&) (mk_fun %%lambda%%100)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled.? K&. K& E&. E& R&. R&)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type)) (! (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled.? K&. K& E&. E& R&. R&)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ BOOL)) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled.? K&. K& E&. E& R&. R&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::step::FluentBitReconcileStep::get_AfterKRequestStep_1")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.step.impl&%0.get_AfterKRequestStep_1.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.step.impl&%0.get_AfterKRequestStep_1.) (forall ((self! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.step.impl&%0.get_AfterKRequestStep_1.? self!) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/1 (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. self!))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.step.impl&%0.get_AfterKRequestStep_1.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::predicate::at_fb_step_with_fb")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb.))
(declare-fun %%lambda%%101 (Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type core!option.Option. Dcr Type Dcr Type Poly fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly) (%%hole%%7 Dcr) (%%hole%%8 Type) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Poly) (%%hole%%12 Dcr) (%%hole%%13 Type) (%%hole%%14 Poly) (%%hole%%15 Dcr) (%%hole%%16 Type) (%%hole%%17 Dcr) (%%hole%%18 Type) (%%hole%%19 Poly) (%%hole%%20 Dcr) (%%hole%%21 Type) (%%hole%%22 Poly) (%%hole%%23 Dcr) (%%hole%%24 Type) (%%hole%%25 Dcr) (%%hole%%26 Type) (%%hole%%27 Poly) (%%hole%%28 Dcr) (%%hole%%29 Type) (%%hole%%30 core!option.Option.) (%%hole%%31 Dcr) (%%hole%%32 Type) (%%hole%%33 Dcr) (%%hole%%34 Type) (%%hole%%35 Poly) (%%hole%%36 fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%101 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36) s$) (B (and (and (and (and (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) %%hole%%6) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? %%hole%%12 %%hole%%13 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%11)))) %%hole%%14)) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? %%hole%%20 %%hole%%21 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%19)))) %%hole%%22)) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? %%hole%%28 %%hole%%29 (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/triggering_cr (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%27)))))) %%hole%%30)) (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/local_state (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%35))))) %%hole%%36)))) :pattern ((%%apply%%0 (%%lambda%%101 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb.) (forall ((fb! Poly) (step! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb.? fb! step!) (mk_fun (%%lambda%%101 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. step!)))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb.? fb! step!)) ))))
(assert (forall ((fb! Poly) (step! Poly)) (! (=> (and (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type step! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb.? fb! step!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb.? fb! step!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::has_pending_k8s_api_req_msg")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.has_pending_k8s_api_req_msg.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.has_pending_k8s_api_req_msg.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (s! Poly) (key! Poly)) (! (= (fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.has_pending_k8s_api_req_msg.? K&. K& E&. E& R&. R& s! key!) (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s!))))) key!)))))))) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. K&. K& E&. E& R&. R&) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s!))))) key!))))))))))))) :pattern ((fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.has_pending_k8s_api_req_msg.? K&. K& E&. E& R&. R& s! key!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::predicate::after_get_k_request_step")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.) (forall ((sub_resource! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.? sub_resource!) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.? sub_resource!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::predicate::after_update_k_request_step")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.after_update_k_request_step.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.after_update_k_request_step.) (forall ((sub_resource! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.after_update_k_request_step.? sub_resource!) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Update)) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.after_update_k_request_step.? sub_resource!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::predicate::next_resource_after")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.next_resource_after.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.next_resource_after.) (forall ((sub_resource! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.next_resource_after.? sub_resource!) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./ServiceAccount_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Role)) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Role_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./RoleBinding)) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./RoleBinding_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Service)) (ite (is-fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Service_ (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet)) fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Done))))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.next_resource_after.? sub_resource!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::predicate::pending_req_in_flight_at_after_get_resource_step")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.))
(declare-fun %%lambda%%102 (Dcr Type Dcr Type Poly Poly Dcr Type Dcr Type Dcr Type Poly Dcr Type fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Poly) (%%hole%%5 Poly) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Poly) (%%hole%%13 Dcr) (%%hole%%14 Type) (%%hole%%15 fluent_controller!kubernetes_cluster.spec.message.HostId.) (%%hole%%16 fluent_controller!kubernetes_cluster.spec.message.HostId.) (%%hole%%17 fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (%%hole%%18 fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%102 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18) s$) (B (let ((step$ %%hole%%18)) (let ((msg$ (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%4))))))))) (let ((request$ (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$)))))))) (and (and (and (and (and (and (and (%B (%%apply%%0 (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb.? %%hole%%5 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. step$)) s$)) (fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.has_pending_k8s_api_req_msg.? %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 s$ %%hole%%12)) (vstd!multiset.impl&%0.contains.? %%hole%%13 %%hole%%14 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))) %%hole%%15)) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))) %%hole%%16)) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))))) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. request$)))) (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. request$))) %%hole%%17))))))) :pattern ((%%apply%%0 (%%lambda%%102 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.) (forall ((sub_resource! Poly) (fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.? sub_resource! fb!) (mk_fun (%%lambda%%102 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) fb! $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) fluent_controller!kubernetes_cluster.spec.message.HostId./CustomController fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!) (fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.? sub_resource!)))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.? sub_resource! fb!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.? sub_resource! fb!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.? sub_resource! fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::predicate::req_msg_is_the_in_flight_pending_req_at_after_get_resource_step")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step.))
(declare-fun %%lambda%%103 (Poly Dcr Type Dcr Type Dcr Type Poly Poly Dcr Type Poly Bool Bool Bool fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) %%Function%%)
(assert (forall ((%%hole%%0 Poly) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Dcr) (%%hole%%6 Type) (%%hole%%7 Poly) (%%hole%%8 Poly) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Poly) (%%hole%%12 Bool) (%%hole%%13 Bool) (%%hole%%14 Bool) (%%hole%%15 fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (%%hole%%16 fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (%%hole%%17 fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%103 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17) s$) (B (let ((step$ %%hole%%17)) (let ((request$ %%hole%%16)) (and (and (and (and (and (and (and (%B (%%apply%%0 (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb.? %%hole%%0 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. step$)) s$)) (fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.pending_req_msg_is.? %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 s$ %%hole%%7 %%hole%%8)) (vstd!multiset.impl&%0.contains.? %%hole%%9 %%hole%%10 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%11)) %%hole%%12) %%hole%%13) %%hole%%14) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. request$)))) (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. request$))) %%hole%%15)))))) :pattern ((%%apply%%0 (%%lambda%%103 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step.) (forall ((sub_resource! Poly) (fb! Poly) (req_msg! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step.? sub_resource! fb! req_msg!) (mk_fun (%%lambda%%103 fb! $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) req_msg! $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) req_msg! (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)) fluent_controller!kubernetes_cluster.spec.message.HostId./CustomController) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)) fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))) (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!) (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))) (fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.? sub_resource!)))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step.? sub_resource! fb! req_msg!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly) (req_msg! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type req_msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.))) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step.? sub_resource! fb! req_msg!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step.? sub_resource! fb! req_msg!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::predicate::req_msg_is_the_in_flight_pending_req_at_after_get_resource_step_and_key_exists")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step_and_key_exists.))
(declare-fun %%lambda%%104 (Dcr Type Dcr Type Dcr Type Poly %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly) (%%hole%%7 %%Function%%) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%104 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7) s$) (B (and (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) %%hole%%6) (%B (%%apply%%0 %%hole%%7 s$))))) :pattern ((%%apply%%0 (%%lambda%%104 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step_and_key_exists.) (forall ((sub_resource! Poly) (fb! Poly) (req_msg! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step_and_key_exists.? sub_resource! fb! req_msg!) (mk_fun (%%lambda%%104 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!))))) (fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step.? sub_resource! fb! req_msg!)))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step_and_key_exists.? sub_resource! fb! req_msg!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly) (req_msg! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type req_msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.))) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step_and_key_exists.? sub_resource! fb! req_msg!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step_and_key_exists.? sub_resource! fb! req_msg!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::predicate::at_after_get_resource_step_and_exists_ok_resp_in_flight")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_after_get_resource_step_and_exists_ok_resp_in_flight.))
(declare-fun %%lambda%%105 (Dcr Type Dcr Type Poly Poly Dcr Type Dcr Type Dcr Type Poly fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. Dcr Type Dcr Type Dcr Type Dcr Type Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Poly) (%%hole%%5 Poly) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Poly) (%%hole%%13 fluent_controller!kubernetes_cluster.spec.message.HostId.) (%%hole%%14 fluent_controller!kubernetes_cluster.spec.message.HostId.) (%%hole%%15 fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (%%hole%%16 Dcr) (%%hole%%17 Type) (%%hole%%18 Dcr) (%%hole%%19 Type) (%%hole%%20 Dcr) (%%hole%%21 Type) (%%hole%%22 Dcr) (%%hole%%23 Type) (%%hole%%24 Type) (%%hole%%25 Dcr) (%%hole%%26 Type) (%%hole%%27 Dcr) (%%hole%%28 Type) (%%hole%%29 Dcr) (%%hole%%30 Type) (%%hole%%31 Dcr) (%%hole%%32 Type) (%%hole%%33 Dcr) (%%hole%%34 Type) (%%hole%%35 Dcr) (%%hole%%36 Type) (%%hole%%37 Dcr) (%%hole%%38 Type) (%%hole%%39 Dcr) (%%hole%%40 Type) (%%hole%%41 Dcr) (%%hole%%42 Type) (%%hole%%43 fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (%%hole%%44 fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%105 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38 %%hole%%39 %%hole%%40 %%hole%%41 %%hole%%42 %%hole%%43 %%hole%%44) s$) (B (let ((step$ %%hole%%44)) (let ((msg$ (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%4))))))))) (let ((request$ (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$)))))))) (let ((key$ %%hole%%43)) (and (and (and (and (and (and (and (and (%B (%%apply%%0 (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb.? %%hole%%5 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. step$)) s$)) (fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.has_pending_k8s_api_req_msg.? %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 s$ %%hole%%12)) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))) %%hole%%13)) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))) %%hole%%14)) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))))) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. request$)))) (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. request$))) %%hole%%15)) (vstd!set.impl&%0.contains.? %%hole%%20 %%hole%%21 (vstd!map.impl&%0.dom.? %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))) (exists ((resp_msg$ Poly)) (! (and (has_type resp_msg$ %%hole%%24) (and (and (and (vstd!multiset.impl&%0.contains.? %%hole%%25 %%hole%%26 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) resp_msg$) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.resp_msg_matches_req_msg.? %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 resp_msg$ (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.? %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg$))))))))))))) (= (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.? %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg$)))))))))) (vstd!map.impl&%0.index.? %%hole%%39 %%hole%%40 %%hole%%41 %%hole%%42 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))))) :pattern ((vstd!multiset.impl&%0.contains.? %%hole%%22 %%hole%%23 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) resp_msg$)) ))))))))) :pattern ((%%apply%%0 (%%lambda%%105 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37 %%hole%%38 %%hole%%39 %%hole%%40 %%hole%%41 %%hole%%42 %%hole%%43 %%hole%%44) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.at_after_get_resource_step_and_exists_ok_resp_in_flight.) (forall ((sub_resource! Poly) (fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_after_get_resource_step_and_exists_ok_resp_in_flight.? sub_resource! fb!) (mk_fun (%%lambda%%105 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) fb! $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) fluent_controller!kubernetes_cluster.spec.message.HostId./CustomController fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))) (fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.? sub_resource!)))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.at_after_get_resource_step_and_exists_ok_resp_in_flight.? sub_resource! fb!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_after_get_resource_step_and_exists_ok_resp_in_flight.? sub_resource! fb!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.at_after_get_resource_step_and_exists_ok_resp_in_flight.? sub_resource! fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::predicate::resp_msg_is_the_in_flight_ok_resp_at_after_get_resource_step")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.resp_msg_is_the_in_flight_ok_resp_at_after_get_resource_step.))
(declare-fun %%lambda%%106 (Dcr Type Dcr Type Poly Poly Dcr Type Dcr Type Dcr Type Poly fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. Dcr Type Dcr Type Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly Bool Dcr Type Dcr Type Poly fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Poly) (%%hole%%5 Poly) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Poly) (%%hole%%13 fluent_controller!kubernetes_cluster.spec.message.HostId.) (%%hole%%14 fluent_controller!kubernetes_cluster.spec.message.HostId.) (%%hole%%15 fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (%%hole%%16 Dcr) (%%hole%%17 Type) (%%hole%%18 Dcr) (%%hole%%19 Type) (%%hole%%20 Dcr) (%%hole%%21 Type) (%%hole%%22 Dcr) (%%hole%%23 Type) (%%hole%%24 Poly) (%%hole%%25 Dcr) (%%hole%%26 Type) (%%hole%%27 Dcr) (%%hole%%28 Type) (%%hole%%29 Poly) (%%hole%%30 Bool) (%%hole%%31 Dcr) (%%hole%%32 Type) (%%hole%%33 Dcr) (%%hole%%34 Type) (%%hole%%35 Poly) (%%hole%%36 fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (%%hole%%37 fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%106 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37) s$) (B (let ((step$ %%hole%%37)) (let ((msg$ (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%4))))))))) (let ((request$ (fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest/0 (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$)))))))) (let ((key$ %%hole%%36)) (and (and (and (and (and (and (and (and (and (and (and (%B (%%apply%%0 (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb.? %%hole%%5 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. step$)) s$)) (fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.has_pending_k8s_api_req_msg.? %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 s$ %%hole%%12)) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))) %%hole%%13)) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/dst (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))) %%hole%%14)) (is-fluent_controller!kubernetes_cluster.spec.message.MessageContent./APIRequest_ (%Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))))))) (is-fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest_ (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. request$)))) (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. request$))) %%hole%%15)) (vstd!set.impl&%0.contains.? %%hole%%20 %%hole%%21 (vstd!map.impl&%0.dom.? %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$))) (vstd!multiset.impl&%0.contains.? %%hole%%22 %%hole%%23 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%24)) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.resp_msg_matches_req_msg.? %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))) %%hole%%30) (= %%hole%%35 (vstd!map.impl&%0.index.? %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. key$)))))))))) :pattern ((%%apply%%0 (%%lambda%%106 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36 %%hole%%37) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.resp_msg_is_the_in_flight_ok_resp_at_after_get_resource_step.) (forall ((sub_resource! Poly) (fb! Poly) (resp_msg! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.resp_msg_is_the_in_flight_ok_resp_at_after_get_resource_step.? sub_resource! fb! resp_msg!) (mk_fun (%%lambda%%106 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) fb! $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) fluent_controller!kubernetes_cluster.spec.message.HostId./CustomController fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) resp_msg! $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. resp_msg! (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg!)))))))))))) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg!)))))))))) (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))) (fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.? sub_resource!)))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.resp_msg_is_the_in_flight_ok_resp_at_after_get_resource_step.? sub_resource! fb! resp_msg!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly) (resp_msg! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type resp_msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.))) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.resp_msg_is_the_in_flight_ok_resp_at_after_get_resource_step.? sub_resource! fb! resp_msg!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.resp_msg_is_the_in_flight_ok_resp_at_after_get_resource_step.? sub_resource! fb! resp_msg!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::predicate::pending_req_in_flight_at_after_update_resource_step")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_update_resource_step.))
(declare-fun %%lambda%%107 (Dcr Type Dcr Type Poly Poly Dcr Type Dcr Type Dcr Type Poly Dcr Type fluent_controller!kubernetes_cluster.spec.message.HostId. %%Function%% Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Poly) (%%hole%%5 Poly) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Poly) (%%hole%%13 Dcr) (%%hole%%14 Type) (%%hole%%15 fluent_controller!kubernetes_cluster.spec.message.HostId.) (%%hole%%16 %%Function%%) (%%hole%%17 Dcr) (%%hole%%18 Type) (%%hole%%19 Dcr) (%%hole%%20 Type) (%%hole%%21 Dcr) (%%hole%%22 Type) (%%hole%%23 Dcr) (%%hole%%24 Type) (%%hole%%25 Dcr) (%%hole%%26 Type) (%%hole%%27 Dcr) (%%hole%%28 Type) (%%hole%%29 Dcr) (%%hole%%30 Type) (%%hole%%31 Dcr) (%%hole%%32 Type) (%%hole%%33 Dcr) (%%hole%%34 Type) (%%hole%%35 fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (%%hole%%36 fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%107 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36) s$) (B (let ((step$ %%hole%%36)) (let ((msg$ (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%4))))))))) (let ((resource_key$ %%hole%%35)) (and (and (and (and (and (and (and (%B (%%apply%%0 (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb.? %%hole%%5 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. step$)) s$)) (fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.has_pending_k8s_api_req_msg.? %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 s$ %%hole%%12)) (vstd!multiset.impl&%0.contains.? %%hole%%13 %%hole%%14 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))) (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$))) %%hole%%15)) (%B (%%apply%%0 %%hole%%16 (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$)))) (vstd!set.impl&%0.contains.? %%hole%%21 %%hole%%22 (vstd!map.impl&%0.dom.? %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. resource_key$))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$)))))))))))))))))))) (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. msg$)))))))))))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. resource_key$)))))))))))))) :pattern ((%%apply%%0 (%%lambda%%107 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27 %%hole%%28 %%hole%%29 %%hole%%30 %%hole%%31 %%hole%%32 %%hole%%33 %%hole%%34 %%hole%%35 %%hole%%36) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_update_resource_step.) (forall ((sub_resource! Poly) (fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_update_resource_step.? sub_resource! fb!) (mk_fun (%%lambda%%107 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) fb! $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) fluent_controller!kubernetes_cluster.spec.message.HostId./CustomController (fluent_controller!kubernetes_cluster.spec.message.resource_update_request_msg.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))))) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))) (fluent_controller!fluent_controller.fluentbit.proof.predicate.after_update_k_request_step.? sub_resource!)))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_update_resource_step.? sub_resource! fb!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_update_resource_step.? sub_resource! fb!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_update_resource_step.? sub_resource! fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::proof::predicate::req_msg_is_the_in_flight_pending_req_at_after_update_resource_step")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_update_resource_step.))
(declare-fun %%lambda%%108 (Poly Dcr Type Dcr Type Dcr Type Poly Poly Dcr Type Poly Bool Bool Dcr Type Dcr Type Dcr Type Bool Dcr Type Dcr Type core!option.Option. fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) %%Function%%)
(assert (forall ((%%hole%%0 Poly) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Dcr) (%%hole%%6 Type) (%%hole%%7 Poly) (%%hole%%8 Poly) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Poly) (%%hole%%12 Bool) (%%hole%%13 Bool) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Dcr) (%%hole%%17 Type) (%%hole%%18 Dcr) (%%hole%%19 Type) (%%hole%%20 Bool) (%%hole%%21 Dcr) (%%hole%%22 Type) (%%hole%%23 Dcr) (%%hole%%24 Type) (%%hole%%25 core!option.Option.) (%%hole%%26 fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (%%hole%%27 fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%108 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27) s$) (B (let ((step$ %%hole%%27)) (let ((resource_key$ %%hole%%26)) (and (and (and (and (and (and (and (%B (%%apply%%0 (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_fb_step_with_fb.? %%hole%%0 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. step$)) s$)) (fluent_controller!kubernetes_cluster.proof.controller_runtime.impl&%0.pending_req_msg_is.? %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 s$ %%hole%%7 %%hole%%8)) (vstd!multiset.impl&%0.contains.? %%hole%%9 %%hole%%10 (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))) %%hole%%11)) %%hole%%12) %%hole%%13) (vstd!set.impl&%0.contains.? %%hole%%18 %%hole%%19 (vstd!map.impl&%0.dom.? %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. resource_key$))) %%hole%%20) (= %%hole%%25 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!map.impl&%0.index.? %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. resource_key$))))))))))))) :pattern ((%%apply%%0 (%%lambda%%108 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20 %%hole%%21 %%hole%%22 %%hole%%23 %%hole%%24 %%hole%%25 %%hole%%26 %%hole%%27) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_update_resource_step.) (forall ((sub_resource! Poly) (fb! Poly) (req_msg! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_update_resource_step.? sub_resource! fb! req_msg!) (mk_fun (%%lambda%%108 fb! $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) req_msg! $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) req_msg! (= (fluent_controller!kubernetes_cluster.spec.message.Message./Message/src (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)) fluent_controller!kubernetes_cluster.spec.message.HostId./CustomController) (%B (%%apply%%0 (fluent_controller!kubernetes_cluster.spec.message.resource_update_request_msg.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))))) req_msg!)) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)))))))))))))))))) $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_update_request.? $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!))))))))))))) (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? sub_resource! fb!)))) (fluent_controller!fluent_controller.fluentbit.proof.predicate.after_update_k_request_step.? sub_resource!)))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_update_resource_step.? sub_resource! fb! req_msg!)) ))))
(assert (forall ((sub_resource! Poly) (fb! Poly) (req_msg! Poly)) (! (=> (and (has_type sub_resource! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type req_msg! (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.))) (has_type (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_update_resource_step.? sub_resource! fb! req_msg!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_update_resource_step.? sub_resource! fb! req_msg!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::valid")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.valid.))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.valid.) (forall ((T&. Dcr) (T& Type) (temp_pred! Poly)) (! (= (fluent_controller!temporal_logic.defs.valid.? T&. T& temp_pred!) (forall ((ex$ Poly)) (! (=> (has_type ex$ (TYPE%fluent_controller!temporal_logic.defs.Execution. T&. T&)) (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? T&. T& temp_pred! ex$)) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? T&. T& temp_pred! ex$)) ))) :pattern ((fluent_controller!temporal_logic.defs.valid.? T&. T& temp_pred!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::TempPred::entails")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.impl&%1.entails.))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.impl&%1.entails.) (forall ((T&. Dcr) (T& Type) (self! Poly) (other! Poly)) (! (= (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& self! other!) (fluent_controller!temporal_logic.defs.valid.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.implies.? T&. T& self! other!)))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& self! other!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.metadata.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::object_ref")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.object_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.object_ref.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.config_map.impl&%1.spec.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!) (Poly%tuple%2. (tuple%2./tuple%2 (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data (%Poly%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!))) (Poly%tuple%0. tuple%0./tuple%0)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.metadata.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::object_ref")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.object_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.object_ref.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.spec.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.metadata.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::object_ref")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.object_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.object_ref.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.spec.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodView::metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.metadata.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodView::object_ref")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.object_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.object_ref.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodView::spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%1.spec.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodView./PodView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role::RoleView::metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.metadata.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role::RoleView::object_ref")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.object_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.object_ref.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role::RoleView::spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role.impl&%1.spec.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!) (Poly%tuple%2. (tuple%2./tuple%2 (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role.RoleView./RoleView/policy_rules (%Poly%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!))) (Poly%tuple%0. tuple%0./tuple%0)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.metadata.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::object_ref")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.object_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.object_ref.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::role_binding::RoleBindingView::spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.role_binding.impl&%1.spec.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!) (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleRefView. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/role_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!))) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView./RoleBindingView/subjects (%Poly%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::secret::SecretView::metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.metadata.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::secret::SecretView::object_ref")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.object_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.object_ref.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::secret::SecretView::spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.secret.impl&%1.spec.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!) (Poly%tuple%2. (tuple%2./tuple%2 (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.secret.SecretView./SecretView/data (%Poly%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!))) (Poly%tuple%0. tuple%0./tuple%0)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service::ServiceView::metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.metadata.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service::ServiceView::object_ref")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.object_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.object_ref.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service::ServiceView::spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service.impl&%1.spec.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service_account::ServiceAccountView::metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.metadata.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service_account::ServiceAccountView::object_ref")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.object_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.object_ref.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::service_account::ServiceAccountView::spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.service_account.impl&%1.spec.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!) (Poly%tuple%2. (tuple%2./tuple%2 (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView./ServiceAccountView/automount_service_account_token (%Poly%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!))) (Poly%tuple%0. tuple%0./tuple%0)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.metadata.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.metadata.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::object_ref")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.object_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.object_ref.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.spec.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::state_machine::state_machine::StateMachine::next_action_result")
(assert (fuel_bool_default fuel%fluent_controller!state_machine.state_machine.impl&%0.next_action_result.))
(assert (=> (fuel_bool fuel%fluent_controller!state_machine.state_machine.impl&%0.next_action_result.) (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (ActionInput&. Dcr) (ActionInput& Type) (Output&. Dcr) (Output& Type) (Step&. Dcr) (Step& Type) (self! Poly) (action! Poly) (action_input! Poly) (s! Poly)) (! (= (fluent_controller!state_machine.state_machine.impl&%0.next_action_result.? State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step& self! action! action_input! s!) (ite (%B (%%apply%%1 (fluent_controller!state_machine.action.Action./Action/precondition (%Poly%fluent_controller!state_machine.action.Action. action!)) action_input! s!)) (fluent_controller!state_machine.action.ActionResult./Enabled (tuple%2./tuple%2/0 (%Poly%tuple%2. (%%apply%%1 (fluent_controller!state_machine.action.Action./Action/transition (%Poly%fluent_controller!state_machine.action.Action. action!)) action_input! s!))) (tuple%2./tuple%2/1 (%Poly%tuple%2. (%%apply%%1 (fluent_controller!state_machine.action.Action./Action/transition (%Poly%fluent_controller!state_machine.action.Action. action!)) action_input! s!)))) fluent_controller!state_machine.action.ActionResult./Disabled)) :pattern ((fluent_controller!state_machine.state_machine.impl&%0.next_action_result.? State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step& self! action! action_input! s!)) ))))
(assert (forall ((State&. Dcr) (State& Type) (Input&. Dcr) (Input& Type) (ActionInput&. Dcr) (ActionInput& Type) (Output&. Dcr) (Output& Type) (Step&. Dcr) (Step& Type) (self! Poly) (action! Poly) (action_input! Poly) (s! Poly)) (! (=> (and (has_type self! (TYPE%fluent_controller!state_machine.state_machine.StateMachine. State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step&)) (has_type action! (TYPE%fluent_controller!state_machine.action.Action. State&. State& ActionInput&. ActionInput& Output&. Output&)) (has_type action_input! ActionInput&) (has_type s! State&)) (has_type (Poly%fluent_controller!state_machine.action.ActionResult. (fluent_controller!state_machine.state_machine.impl&%0.next_action_result.? State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step& self! action! action_input! s!)) (TYPE%fluent_controller!state_machine.action.ActionResult. State&. State& Output&. Output&))) :pattern ((fluent_controller!state_machine.state_machine.impl&%0.next_action_result.? State&. State& Input&. Input& ActionInput&. ActionInput& Output&. Output& Step&. Step& self! action! action_input! s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::kubernetes_api_action_pre")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_action_pre.))
(declare-fun %%lambda%%109 (Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly core!option.Option. Dcr Type Dcr Type Poly Bool) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Poly) (%%hole%%11 Poly) (%%hole%%12 Poly) (%%hole%%13 core!option.Option.) (%%hole%%14 Dcr) (%%hole%%15 Type) (%%hole%%16 Dcr) (%%hole%%17 Type) (%%hole%%18 Poly) (%%hole%%19 Bool) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%109 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19) s$) (B (let ((host_result$ (fluent_controller!state_machine.state_machine.impl&%0.next_action_result.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (let ((msg_ops$ (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps %%hole%%13 (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput./ApiServerActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (fluent_controller!state_machine.action.ActionResult./Enabled/1 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))))))) (let ((network_result$ (fluent_controller!state_machine.state_machine.impl&%1.next_result.? %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$) (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (and (and %%hole%%19 (is-fluent_controller!state_machine.action.ActionResult./Enabled_ (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))) (is-fluent_controller!state_machine.action.ActionResult./Enabled_ (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. network_result$))))))))) :pattern ((%%apply%%0 (%%lambda%%109 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_action_pre.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (action! Poly) (input! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_action_pre.? K&. K& E&. E& R&. R& action! input!) (mk_fun (%%lambda%%109 $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerStep. (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.kubernetes_api.? K&. K& E&. E& R&. R&)) action! (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput./ApiServerActionInput (%Poly%core!option.Option. input!))) (%Poly%core!option.Option. input!) $ (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.? K&. K& E&. E& R&. R&)) (fluent_controller!kubernetes_cluster.spec.message.received_msg_destined_for.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) input! (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId./ApiServer))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_action_pre.? K&. K& E&. E& R&. R& action! input!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (action! Poly) (input! Poly)) (! (=> (and (has_type action! (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)))) (has_type input! (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))))) (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_action_pre.? K&. K& E&. E& R&. R& action! input!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ BOOL))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_action_pre.? K&. K& E&. E& R&. R& action! input!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_cluster::spec::cluster::Cluster::controller_action_pre")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_action_pre.))
(declare-fun %%lambda%%110 (core!option.Option. core!option.Option. Dcr Type Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly core!option.Option. Dcr Type Dcr Type Poly Bool) %%Function%%)
(assert (forall ((%%hole%%0 core!option.Option.) (%%hole%%1 core!option.Option.) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Poly) (%%hole%%13 Poly) (%%hole%%14 core!option.Option.) (%%hole%%15 Dcr) (%%hole%%16 Type) (%%hole%%17 Dcr) (%%hole%%18 Type) (%%hole%%19 Poly) (%%hole%%20 Bool) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%110 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20) s$) (B (let ((host_result$ (fluent_controller!state_machine.state_machine.impl&%0.next_action_result.? %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput./ControllerActionInput %%hole%%0 %%hole%%1 (%Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (Poly%fluent_controller!kubernetes_cluster.spec.message.RestIdAllocator. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/rest_id_allocator (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (let ((msg_ops$ (fluent_controller!kubernetes_cluster.spec.message.MessageOps./MessageOps %%hole%%14 (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput./ControllerActionOutput/send (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. (fluent_controller!state_machine.action.ActionResult./Enabled/1 (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))))))) (let ((network_result$ (fluent_controller!state_machine.state_machine.impl&%1.next_result.? %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageOps. msg_ops$) (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$)))))) (and (and %%hole%%20 (is-fluent_controller!state_machine.action.ActionResult./Enabled_ (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. host_result$)))) (is-fluent_controller!state_machine.action.ActionResult./Enabled_ (%Poly%fluent_controller!state_machine.action.ActionResult. (Poly%fluent_controller!state_machine.action.ActionResult. network_result$))))))))) :pattern ((%%apply%%0 (%%lambda%%110 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20) s$)))))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_action_pre.) (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (action! Poly) (input! Poly)) (! (= (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_action_pre.? K&. K& E&. E& R&. R& action! input!) (mk_fun (%%lambda%%110 (%Poly%core!option.Option. (tuple%2./tuple%2/0 (%Poly%tuple%2. input!))) (%Poly%core!option.Option. (tuple%2./tuple%2/1 (%Poly%tuple%2. input!))) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&) $ TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerStep. (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.controller.? K&. K& E&. E& R&. R&)) action! (%Poly%core!option.Option. (tuple%2./tuple%2/0 (%Poly%tuple%2. input!))) $ (TYPE%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.MessageOps. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) (Poly%fluent_controller!state_machine.state_machine.NetworkStateMachine. (fluent_controller!kubernetes_cluster.spec.network.state_machine.impl&%0.network.? K&. K& E&. E& R&. R&)) (fluent_controller!kubernetes_cluster.spec.message.received_msg_destined_for.? (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (tuple%2./tuple%2/0 (%Poly%tuple%2. input!)) (Poly%fluent_controller!kubernetes_cluster.spec.message.HostId. fluent_controller!kubernetes_cluster.spec.message.HostId./CustomController))))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_action_pre.? K&. K& E&. E& R&. R& action! input!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (action! Poly) (input! Poly)) (! (=> (and (has_type action! (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&))) (has_type input! (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)))) (has_type (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_action_pre.? K&. K& E&. E& R&. R& action! input!)) (TYPE%fun%1. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ BOOL))) :pattern ((fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_action_pre.? K&. K& E&. E& R&. R& action! input!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::TempPred::or")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.impl&%1.or.))
(declare-fun %%lambda%%111 (Dcr Type Poly Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Poly) (ex$ Poly)) (! (= (%%apply%%0 (%%lambda%%111 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) ex$) (B (or (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%0 %%hole%%1 %%hole%%2 ex$) (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%3 %%hole%%4 %%hole%%5 ex$)))) :pattern ((%%apply%%0 (%%lambda%%111 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) ex$)))))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.impl&%1.or.) (forall ((T&. Dcr) (T& Type) (self! Poly) (other! Poly)) (! (= (fluent_controller!temporal_logic.defs.impl&%1.or.? T&. T& self! other!) (fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& (Poly%fun%1. (mk_fun (%%lambda%%111 T&. T& self! T&. T& other!))))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.or.? T&. T& self! other!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (self! Poly) (other! Poly)) (! (=> (and (has_type self! (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&)) (has_type other! (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.or.? T&. T& self! other!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.or.? T&. T& self! other!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::TempPred::equals")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.impl&%1.equals.))
(declare-fun %%lambda%%112 (Dcr Type Poly Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Poly) (ex$ Poly)) (! (= (%%apply%%0 (%%lambda%%112 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) ex$) (B (= (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%0 %%hole%%1 %%hole%%2 ex$) (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%3 %%hole%%4 %%hole%%5 ex$)))) :pattern ((%%apply%%0 (%%lambda%%112 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) ex$)))))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.impl&%1.equals.) (forall ((T&. Dcr) (T& Type) (self! Poly) (other! Poly)) (! (= (fluent_controller!temporal_logic.defs.impl&%1.equals.? T&. T& self! other!) (fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& (Poly%fun%1. (mk_fun (%%lambda%%112 T&. T& self! T&. T& other!))))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.equals.? T&. T& self! other!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (self! Poly) (other! Poly)) (! (=> (and (has_type self! (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&)) (has_type other! (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.equals.? T&. T& self! other!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.equals.? T&. T& self! other!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::later")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.later.))
(declare-fun %%lambda%%113 (Dcr Type Poly Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Poly) (ex$ Poly)) (! (= (%%apply%%0 (%%lambda%%113 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) ex$) (B (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%3 %%hole%%4 %%hole%%5 (Poly%fluent_controller!temporal_logic.defs.Execution. (fluent_controller!temporal_logic.defs.impl&%0.suffix.? %%hole%%0 %%hole%%1 ex$ %%hole%%2))))) :pattern ((%%apply%%0 (%%lambda%%113 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) ex$)))))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.later.) (forall ((T&. Dcr) (T& Type) (temp_pred! Poly)) (! (= (fluent_controller!temporal_logic.defs.later.? T&. T& temp_pred!) (fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& (Poly%fun%1. (mk_fun (%%lambda%%113 T&. T& (I 1) T&. T& temp_pred!))))) :pattern ((fluent_controller!temporal_logic.defs.later.? T&. T& temp_pred!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (temp_pred! Poly)) (! (=> (has_type temp_pred! (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&)) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.later.? T&. T& temp_pred!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.later.? T&. T& temp_pred!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::temporal_logic::defs::tla_exists")
(assert (fuel_bool_default fuel%fluent_controller!temporal_logic.defs.tla_exists.))
(declare-fun %%lambda%%114 (%%Function%% Dcr Type Type %%Function%% Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Type) (%%hole%%4 %%Function%%) (%%hole%%5 Dcr) (%%hole%%6 Type) (ex$ Poly)) (! (= (%%apply%%0 (%%lambda%%114 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) ex$) (B (exists ((a$ Poly)) (! (and (has_type a$ %%hole%%3) (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%5 %%hole%%6 (%%apply%%0 %%hole%%4 a$) ex$)) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? %%hole%%1 %%hole%%2 (%%apply%%0 %%hole%%0 a$) ex$)) )))) :pattern ((%%apply%%0 (%%lambda%%114 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) ex$)))))
(assert (=> (fuel_bool fuel%fluent_controller!temporal_logic.defs.tla_exists.) (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type) (a_to_temp_pred! Poly)) (! (= (fluent_controller!temporal_logic.defs.tla_exists.? T&. T& A&. A& a_to_temp_pred!) (fluent_controller!temporal_logic.defs.impl&%1.new.? T&. T& (Poly%fun%1. (mk_fun (%%lambda%%114 (%Poly%fun%1. a_to_temp_pred!) T&. T& A& (%Poly%fun%1. a_to_temp_pred!) T&. T&))))) :pattern ((fluent_controller!temporal_logic.defs.tla_exists.? T&. T& A&. A& a_to_temp_pred!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type) (a_to_temp_pred! Poly)) (! (=> (has_type a_to_temp_pred! (TYPE%fun%1. A&. A& $ (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_exists.? T&. T& A&. A& a_to_temp_pred!)) (TYPE%fluent_controller!temporal_logic.defs.TempPred. T&. T&))) :pattern ((fluent_controller!temporal_logic.defs.tla_exists.? T&. T& A&. A& a_to_temp_pred!)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((T&. Dcr) (T& Type)) (! (tr_bound%vstd!std_specs.option.OptionAdditionalFns. $ (TYPE%core!option.Option. T&. T&) T&. T&) :pattern ((tr_bound%vstd!std_specs.option.OptionAdditionalFns. $ (TYPE%core!option.Option. T&. T&) T&. T&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type)) (! (tr_bound%vstd!std_specs.result.ResultAdditionalSpecFns. $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E&) :pattern ((tr_bound%vstd!std_specs.result.ResultAdditionalSpecFns. $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role.RoleView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.role_binding.RoleBindingView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.secret.SecretView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.service.ServiceView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.service_account.ServiceAccountView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.))
(set-info :comment ";; Function-Specs vstd::seq_lib::impl&%0::push_distributes_over_add")
(declare-fun ens%vstd!seq_lib.impl&%0.push_distributes_over_add. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly) (elt! Poly)) (! (= (ens%vstd!seq_lib.impl&%0.push_distributes_over_add. A&. A& a! b! elt!) (= (vstd!seq.Seq.push.? A&. A& (vstd!seq.Seq.add.? A&. A& a! b!) elt!) (vstd!seq.Seq.add.? A&. A& a! (vstd!seq.Seq.push.? A&. A& b! elt!)))) :pattern ((ens%vstd!seq_lib.impl&%0.push_distributes_over_add. A&. A& a! b! elt!)) )))
(set-info :comment ";; Broadcast vstd::seq_lib::impl&%0::push_distributes_over_add")
(assert (=> (fuel_bool fuel%vstd!seq_lib.impl&%0.push_distributes_over_add.) (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly) (elt! Poly)) (! (=> (and (has_type a! (TYPE%vstd!seq.Seq. A&. A&)) (has_type b! (TYPE%vstd!seq.Seq. A&. A&)) (has_type elt! A&)) (= (vstd!seq.Seq.push.? A&. A& (vstd!seq.Seq.add.? A&. A& a! b!) elt!) (vstd!seq.Seq.add.? A&. A& a! (vstd!seq.Seq.push.? A&. A& b! elt!)))) :pattern ((vstd!seq.Seq.push.? A&. A& (vstd!seq.Seq.add.? A&. A& a! b!) elt!)) :pattern ((vstd!seq.Seq.add.? A&. A& a! (vstd!seq.Seq.push.? A&. A& b! elt!))) ))))
(set-info :comment ";; Function-Specs vstd::seq_lib::impl&%0::add_empty_right")
(declare-fun req%vstd!seq_lib.impl&%0.add_empty_right. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%80 Bool)
(assert (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly)) (! (= (req%vstd!seq_lib.impl&%0.add_empty_right. A&. A& a! b!) (=> %%global_location_label%%80 (= (vstd!seq.Seq.len.? A&. A& b!) 0))) :pattern ((req%vstd!seq_lib.impl&%0.add_empty_right. A&. A& a! b!)) )))
(declare-fun ens%vstd!seq_lib.impl&%0.add_empty_right. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly)) (! (= (ens%vstd!seq_lib.impl&%0.add_empty_right. A&. A& a! b!) (= (vstd!seq.Seq.add.? A&. A& a! b!) a!)) :pattern ((ens%vstd!seq_lib.impl&%0.add_empty_right. A&. A& a! b!)) )))
(set-info :comment ";; Broadcast vstd::seq_lib::impl&%0::add_empty_right")
(assert (=> (fuel_bool fuel%vstd!seq_lib.impl&%0.add_empty_right.) (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly)) (! (=> (and (has_type a! (TYPE%vstd!seq.Seq. A&. A&)) (has_type b! (TYPE%vstd!seq.Seq. A&. A&))) (=> (= (vstd!seq.Seq.len.? A&. A& b!) 0) (= (vstd!seq.Seq.add.? A&. A& a! b!) a!))) :pattern ((vstd!seq.Seq.add.? A&. A& a! b!)) ))))
(set-info :comment ";; Function-Specs vstd::seq_lib::impl&%0::add_empty_left")
(declare-fun req%vstd!seq_lib.impl&%0.add_empty_left. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%81 Bool)
(assert (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly)) (! (= (req%vstd!seq_lib.impl&%0.add_empty_left. A&. A& a! b!) (=> %%global_location_label%%81 (= (vstd!seq.Seq.len.? A&. A& a!) 0))) :pattern ((req%vstd!seq_lib.impl&%0.add_empty_left. A&. A& a! b!)) )))
(declare-fun ens%vstd!seq_lib.impl&%0.add_empty_left. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly)) (! (= (ens%vstd!seq_lib.impl&%0.add_empty_left. A&. A& a! b!) (= (vstd!seq.Seq.add.? A&. A& a! b!) b!)) :pattern ((ens%vstd!seq_lib.impl&%0.add_empty_left. A&. A& a! b!)) )))
(set-info :comment ";; Broadcast vstd::seq_lib::impl&%0::add_empty_left")
(assert (=> (fuel_bool fuel%vstd!seq_lib.impl&%0.add_empty_left.) (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly)) (! (=> (and (has_type a! (TYPE%vstd!seq.Seq. A&. A&)) (has_type b! (TYPE%vstd!seq.Seq. A&. A&))) (=> (= (vstd!seq.Seq.len.? A&. A& a!) 0) (= (vstd!seq.Seq.add.? A&. A& a! b!) b!))) :pattern ((vstd!seq.Seq.add.? A&. A& a! b!)) ))))
(set-info :comment ";; Function-Specs fluent_controller::temporal_logic::rules::entails_and_temp")
(declare-fun req%fluent_controller!temporal_logic.rules.entails_and_temp. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(declare-const %%global_location_label%%82 Bool)
(declare-const %%global_location_label%%83 Bool)
(assert (forall ((T&. Dcr) (T& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (req%fluent_controller!temporal_logic.rules.entails_and_temp. T&. T& spec! p! q!) (and (=> %%global_location_label%%82 (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. p!))) (=> %%global_location_label%%83 (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))))) :pattern ((req%fluent_controller!temporal_logic.rules.entails_and_temp. T&. T& spec! p! q!)) )))
(declare-fun ens%fluent_controller!temporal_logic.rules.entails_and_temp. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(assert (forall ((T&. Dcr) (T& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (ens%fluent_controller!temporal_logic.rules.entails_and_temp. T&. T& spec! p! q!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.and.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))))) :pattern ((ens%fluent_controller!temporal_logic.rules.entails_and_temp. T&. T& spec! p! q!)) )))
(set-info :comment ";; Function-Specs fluent_controller::temporal_logic::rules::temp_pred_equality")
(declare-fun req%fluent_controller!temporal_logic.rules.temp_pred_equality. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(declare-const %%global_location_label%%84 Bool)
(assert (forall ((T&. Dcr) (T& Type) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (req%fluent_controller!temporal_logic.rules.temp_pred_equality. T&. T& p! q!) (=> %%global_location_label%%84 (fluent_controller!temporal_logic.defs.valid.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.equals.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!)))))) :pattern ((req%fluent_controller!temporal_logic.rules.temp_pred_equality. T&. T& p! q!)) )))
(declare-fun ens%fluent_controller!temporal_logic.rules.temp_pred_equality. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(assert (forall ((T&. Dcr) (T& Type) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (ens%fluent_controller!temporal_logic.rules.temp_pred_equality. T&. T& p! q!) (= p! q!)) :pattern ((ens%fluent_controller!temporal_logic.rules.temp_pred_equality. T&. T& p! q!)) )))
(set-info :comment ";; Function-Specs fluent_controller::temporal_logic::rules::always_and_equality")
(declare-fun ens%fluent_controller!temporal_logic.rules.always_and_equality. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(assert (forall ((T&. Dcr) (T& Type) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (ens%fluent_controller!temporal_logic.rules.always_and_equality. T&. T& p! q!) (= (fluent_controller!temporal_logic.defs.always.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.and.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!)))) (fluent_controller!temporal_logic.defs.impl&%1.and.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!))) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. q!)))))) :pattern ((ens%fluent_controller!temporal_logic.rules.always_and_equality. T&. T& p! q!)) )))
(set-info :comment ";; Function-Specs fluent_controller::temporal_logic::rules::implies_preserved_by_always_temp")
(declare-fun req%fluent_controller!temporal_logic.rules.implies_preserved_by_always_temp. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(declare-const %%global_location_label%%85 Bool)
(assert (forall ((T&. Dcr) (T& Type) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (req%fluent_controller!temporal_logic.rules.implies_preserved_by_always_temp. T&. T& p! q!) (=> %%global_location_label%%85 (fluent_controller!temporal_logic.defs.valid.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.implies.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!)))))) :pattern ((req%fluent_controller!temporal_logic.rules.implies_preserved_by_always_temp. T&. T& p! q!)) )))
(declare-fun ens%fluent_controller!temporal_logic.rules.implies_preserved_by_always_temp. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(assert (forall ((T&. Dcr) (T& Type) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (ens%fluent_controller!temporal_logic.rules.implies_preserved_by_always_temp. T&. T& p! q!) (fluent_controller!temporal_logic.defs.valid.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.implies.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!))) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))))))) :pattern ((ens%fluent_controller!temporal_logic.rules.implies_preserved_by_always_temp. T&. T& p! q!)) )))
(set-info :comment ";; Function-Specs fluent_controller::temporal_logic::rules::valid_implies_trans")
(declare-fun req%fluent_controller!temporal_logic.rules.valid_implies_trans. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(declare-const %%global_location_label%%86 Bool)
(declare-const %%global_location_label%%87 Bool)
(assert (forall ((T&. Dcr) (T& Type) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.) (r! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (req%fluent_controller!temporal_logic.rules.valid_implies_trans. T&. T& p! q! r!) (and (=> %%global_location_label%%86 (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))) (=> %%global_location_label%%87 (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. q!) (Poly%fluent_controller!temporal_logic.defs.TempPred. r!))))) :pattern ((req%fluent_controller!temporal_logic.rules.valid_implies_trans. T&. T& p! q! r!)) )))
(declare-fun ens%fluent_controller!temporal_logic.rules.valid_implies_trans. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(assert (forall ((T&. Dcr) (T& Type) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.) (r! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (ens%fluent_controller!temporal_logic.rules.valid_implies_trans. T&. T& p! q! r!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. r!))) :pattern ((ens%fluent_controller!temporal_logic.rules.valid_implies_trans. T&. T& p! q! r!)) )))
(set-info :comment ";; Function-Specs fluent_controller::temporal_logic::rules::valid_implies_implies_leads_to")
(declare-fun req%fluent_controller!temporal_logic.rules.valid_implies_implies_leads_to. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(declare-const %%global_location_label%%88 Bool)
(assert (forall ((T&. Dcr) (T& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (req%fluent_controller!temporal_logic.rules.valid_implies_implies_leads_to. T&. T& spec! p! q!) (=> %%global_location_label%%88 (fluent_controller!temporal_logic.defs.valid.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.implies.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!)))))) :pattern ((req%fluent_controller!temporal_logic.rules.valid_implies_implies_leads_to. T&. T& spec! p! q!)) )))
(declare-fun ens%fluent_controller!temporal_logic.rules.valid_implies_implies_leads_to. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(assert (forall ((T&. Dcr) (T& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (ens%fluent_controller!temporal_logic.rules.valid_implies_implies_leads_to. T&. T& spec! p! q!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))))) :pattern ((ens%fluent_controller!temporal_logic.rules.valid_implies_implies_leads_to. T&. T& spec! p! q!)) )))
(set-info :comment ";; Function-Specs fluent_controller::temporal_logic::rules::leads_to_trans_temp")
(declare-fun req%fluent_controller!temporal_logic.rules.leads_to_trans_temp. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(declare-const %%global_location_label%%89 Bool)
(declare-const %%global_location_label%%90 Bool)
(assert (forall ((T&. Dcr) (T& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.) (r! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (req%fluent_controller!temporal_logic.rules.leads_to_trans_temp. T&. T& spec! p! q! r!) (and (=> %%global_location_label%%89 (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))))) (=> %%global_location_label%%90 (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. q!) (Poly%fluent_controller!temporal_logic.defs.TempPred. r!))))))) :pattern ((req%fluent_controller!temporal_logic.rules.leads_to_trans_temp. T&. T& spec! p! q! r!)) )))
(declare-fun ens%fluent_controller!temporal_logic.rules.leads_to_trans_temp. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(assert (forall ((T&. Dcr) (T& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.) (r! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (ens%fluent_controller!temporal_logic.rules.leads_to_trans_temp. T&. T& spec! p! q! r!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. r!))))) :pattern ((ens%fluent_controller!temporal_logic.rules.leads_to_trans_temp. T&. T& spec! p! q! r!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::cluster::Cluster::lemma_pre_leads_to_post_by_kubernetes_api")
(declare-fun req%fluent_controller!kubernetes_cluster.proof.api_server_liveness.impl&%0.lemma_pre_leads_to_post_by_kubernetes_api. (Dcr Type Dcr Type Dcr Type fluent_controller!temporal_logic.defs.TempPred. core!option.Option. %%Function%% fluent_controller!state_machine.action.Action. %%Function%% %%Function%%) Bool)
(declare-fun %%lambda%%115 (Dcr Type Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly) (i$ Poly)) (! (= (%%apply%%0 (%%lambda%%115 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) i$) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!state_machine.action.impl&%0.weak_fairness.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 i$))) :pattern ((%%apply%%0 (%%lambda%%115 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) i$)))))
(declare-const %%global_location_label%%91 Bool)
(declare-const %%global_location_label%%92 Bool)
(declare-const %%global_location_label%%93 Bool)
(declare-const %%global_location_label%%94 Bool)
(declare-const %%global_location_label%%95 Bool)
(declare-const %%global_location_label%%96 Bool)
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (input! core!option.Option.) (next! %%Function%%) (action! fluent_controller!state_machine.action.Action.) (pre! %%Function%%) (post! %%Function%%)) (! (= (req%fluent_controller!kubernetes_cluster.proof.api_server_liveness.impl&%0.lemma_pre_leads_to_post_by_kubernetes_api. K&. K& E&. E& R&. R& spec! input! next! action! pre! post!) (and (=> %%global_location_label%%91 (vstd!set.impl&%0.contains.? $ (TYPE%fluent_controller!state_machine.action.Action. $ TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionInput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerActionOutput. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/actions (%Poly%fluent_controller!state_machine.state_machine.StateMachine. (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.api_server.state_machine.impl&%0.kubernetes_api.? K&. K& E&. E& R&. R&)))) (Poly%fluent_controller!state_machine.action.Action. action!))) (=> %%global_location_label%%92 (forall ((s$ Poly) (s_prime$ Poly)) (! (=> (and (has_type s$ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&)) (has_type s_prime$ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&))) (=> (and (%B (%%apply%%0 pre! s$)) (%B (%%apply%%1 next! s$ s_prime$))) (or (%B (%%apply%%0 pre! s_prime$)) (%B (%%apply%%0 post! s_prime$))))) :pattern ((%%apply%%1 next! s$ s_prime$)) ))) (=> %%global_location_label%%93 (forall ((s$ Poly) (s_prime$ Poly)) (! (=> (and (has_type s$ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&)) (has_type s_prime$ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&))) (=> (and (and (%B (%%apply%%0 pre! s$)) (%B (%%apply%%1 next! s$ s_prime$))) (%B (%%apply%%1 (fluent_controller!state_machine.action.impl&%0.forward.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.? K&. K& E&. E& R&. R&)) (Poly%core!option.Option. input!)) s$ s_prime$))) (%B (%%apply%%0 post! s_prime$)))) :pattern ((%%apply%%1 next! s$ s_prime$)) ))) (=> %%global_location_label%%94 (forall ((s$ Poly)) (! (=> (has_type s$ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&)) (=> (%B (%%apply%%0 pre! s$)) (%B (%%apply%%0 (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_action_pre.? K&. K& E&. E& R&. R& (Poly%fluent_controller!state_machine.action.Action. action!) (Poly%core!option.Option. input!)) s$)))) :pattern ((%%apply%%0 pre! s$)) ))) (=> %%global_location_label%%95 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_action.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fun%2. next!))))))) (=> %%global_location_label%%96 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_forall.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) (Poly%fun%1. (mk_fun (%%lambda%%115 $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.? K&. K& E&. E& R&. R&))))))))))) :pattern ((req%fluent_controller!kubernetes_cluster.proof.api_server_liveness.impl&%0.lemma_pre_leads_to_post_by_kubernetes_api. K&. K& E&. E& R&. R& spec! input! next! action! pre! post!)) )))
(declare-fun ens%fluent_controller!kubernetes_cluster.proof.api_server_liveness.impl&%0.lemma_pre_leads_to_post_by_kubernetes_api. (Dcr Type Dcr Type Dcr Type fluent_controller!temporal_logic.defs.TempPred. core!option.Option. %%Function%% fluent_controller!state_machine.action.Action. %%Function%% %%Function%%) Bool)
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (input! core!option.Option.) (next! %%Function%%) (action! fluent_controller!state_machine.action.Action.) (pre! %%Function%%) (post! %%Function%%)) (! (= (ens%fluent_controller!kubernetes_cluster.proof.api_server_liveness.impl&%0.lemma_pre_leads_to_post_by_kubernetes_api. K&. K& E&. E& R&. R& spec! input! next! action! pre! post!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fun%1. pre!))) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fun%1. post!))))))) :pattern ((ens%fluent_controller!kubernetes_cluster.proof.api_server_liveness.impl&%0.lemma_pre_leads_to_post_by_kubernetes_api. K&. K& E&. E& R&. R& spec! input! next! action! pre! post!)) )))
(set-info :comment ";; Function-Specs fluent_controller::temporal_logic::rules::leads_to_exists_intro")
(declare-fun req%fluent_controller!temporal_logic.rules.leads_to_exists_intro. (Dcr Type Dcr Type fluent_controller!temporal_logic.defs.TempPred. %%Function%% fluent_controller!temporal_logic.defs.TempPred.) Bool)
(declare-const %%global_location_label%%97 Bool)
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (a_to_p! %%Function%%) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (req%fluent_controller!temporal_logic.rules.leads_to_exists_intro. T&. T& A&. A& spec! a_to_p! q!) (=> %%global_location_label%%97 (forall ((a$ Poly)) (! (=> (has_type a$ A&) (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& (%%apply%%0 a_to_p! a$) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& (%%apply%%0 a_to_p! a$) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))))) )))) :pattern ((req%fluent_controller!temporal_logic.rules.leads_to_exists_intro. T&. T& A&. A& spec! a_to_p! q!)) )))
(declare-fun ens%fluent_controller!temporal_logic.rules.leads_to_exists_intro. (Dcr Type Dcr Type fluent_controller!temporal_logic.defs.TempPred. %%Function%% fluent_controller!temporal_logic.defs.TempPred.) Bool)
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (a_to_p! %%Function%%) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (ens%fluent_controller!temporal_logic.rules.leads_to_exists_intro. T&. T& A&. A& spec! a_to_p! q!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_exists.? T&. T& A&. A& (Poly%fun%1. a_to_p!))) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))))) :pattern ((ens%fluent_controller!temporal_logic.rules.leads_to_exists_intro. T&. T& A&. A& spec! a_to_p! q!)) )))
(set-info :comment ";; Function-Specs fluent_controller::temporal_logic::rules::leads_to_stable_temp")
(declare-fun req%fluent_controller!temporal_logic.rules.leads_to_stable_temp. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(declare-const %%global_location_label%%98 Bool)
(declare-const %%global_location_label%%99 Bool)
(declare-const %%global_location_label%%100 Bool)
(assert (forall ((T&. Dcr) (T& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (next! fluent_controller!temporal_logic.defs.TempPred.) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (req%fluent_controller!temporal_logic.rules.leads_to_stable_temp. T&. T& spec! next! p! q!) (and (=> %%global_location_label%%98 (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.implies.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.and.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. q!) (Poly%fluent_controller!temporal_logic.defs.TempPred. next!))) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.later.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))))))))) (=> %%global_location_label%%99 (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. next!))))) (=> %%global_location_label%%100 (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))))))) :pattern ((req%fluent_controller!temporal_logic.rules.leads_to_stable_temp. T&. T& spec! next! p! q!)) )))
(declare-fun ens%fluent_controller!temporal_logic.rules.leads_to_stable_temp. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(assert (forall ((T&. Dcr) (T& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (next! fluent_controller!temporal_logic.defs.TempPred.) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (ens%fluent_controller!temporal_logic.rules.leads_to_stable_temp. T&. T& spec! next! p! q!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))))))) :pattern ((ens%fluent_controller!temporal_logic.rules.leads_to_stable_temp. T&. T& spec! next! p! q!)) )))
(set-info :comment ";; Function-Specs fluent_controller::temporal_logic::rules::always_weaken_temp")
(declare-fun req%fluent_controller!temporal_logic.rules.always_weaken_temp. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(declare-const %%global_location_label%%101 Bool)
(declare-const %%global_location_label%%102 Bool)
(assert (forall ((T&. Dcr) (T& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (req%fluent_controller!temporal_logic.rules.always_weaken_temp. T&. T& spec! p! q!) (and (=> %%global_location_label%%101 (fluent_controller!temporal_logic.defs.valid.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.implies.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))))) (=> %%global_location_label%%102 (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!))))))) :pattern ((req%fluent_controller!temporal_logic.rules.always_weaken_temp. T&. T& spec! p! q!)) )))
(declare-fun ens%fluent_controller!temporal_logic.rules.always_weaken_temp. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(assert (forall ((T&. Dcr) (T& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (ens%fluent_controller!temporal_logic.rules.always_weaken_temp. T&. T& spec! p! q!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))))) :pattern ((ens%fluent_controller!temporal_logic.rules.always_weaken_temp. T&. T& spec! p! q!)) )))
(set-info :comment ";; Function-Specs fluent_controller::temporal_logic::rules::or_leads_to_combine_temp")
(declare-fun req%fluent_controller!temporal_logic.rules.or_leads_to_combine_temp. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(declare-const %%global_location_label%%103 Bool)
(declare-const %%global_location_label%%104 Bool)
(assert (forall ((T&. Dcr) (T& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.) (r! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (req%fluent_controller!temporal_logic.rules.or_leads_to_combine_temp. T&. T& spec! p! q! r!) (and (=> %%global_location_label%%103 (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. r!))))) (=> %%global_location_label%%104 (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. q!) (Poly%fluent_controller!temporal_logic.defs.TempPred. r!))))))) :pattern ((req%fluent_controller!temporal_logic.rules.or_leads_to_combine_temp. T&. T& spec! p! q! r!)) )))
(declare-fun ens%fluent_controller!temporal_logic.rules.or_leads_to_combine_temp. (Dcr Type fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred. fluent_controller!temporal_logic.defs.TempPred.) Bool)
(assert (forall ((T&. Dcr) (T& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (p! fluent_controller!temporal_logic.defs.TempPred.) (q! fluent_controller!temporal_logic.defs.TempPred.) (r! fluent_controller!temporal_logic.defs.TempPred.)) (! (= (ens%fluent_controller!temporal_logic.rules.or_leads_to_combine_temp. T&. T& spec! p! q! r!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.or.? T&. T& (Poly%fluent_controller!temporal_logic.defs.TempPred. p!) (Poly%fluent_controller!temporal_logic.defs.TempPred. q!))) (Poly%fluent_controller!temporal_logic.defs.TempPred. r!))))) :pattern ((ens%fluent_controller!temporal_logic.rules.or_leads_to_combine_temp. T&. T& spec! p! q! r!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_cluster::spec::cluster::Cluster::lemma_pre_leads_to_post_by_controller")
(declare-fun req%fluent_controller!kubernetes_cluster.proof.controller_runtime_liveness.impl&%0.lemma_pre_leads_to_post_by_controller. (Dcr Type Dcr Type Dcr Type fluent_controller!temporal_logic.defs.TempPred. tuple%2. %%Function%% fluent_controller!state_machine.action.Action. %%Function%% %%Function%%) Bool)
(declare-const %%global_location_label%%105 Bool)
(declare-const %%global_location_label%%106 Bool)
(declare-const %%global_location_label%%107 Bool)
(declare-const %%global_location_label%%108 Bool)
(declare-const %%global_location_label%%109 Bool)
(declare-const %%global_location_label%%110 Bool)
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (input! tuple%2.) (next! %%Function%%) (action! fluent_controller!state_machine.action.Action.) (pre! %%Function%%) (post! %%Function%%)) (! (= (req%fluent_controller!kubernetes_cluster.proof.controller_runtime_liveness.impl&%0.lemma_pre_leads_to_post_by_controller. K&. K& E&. E& R&. R& spec! input! next! action! pre! post!) (and (=> %%global_location_label%%105 (vstd!set.impl&%0.contains.? $ (TYPE%fluent_controller!state_machine.action.Action. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. K&. K& E&. E& R&. R&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionInput. E&. E&) $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerActionOutput. E&. E&)) (fluent_controller!state_machine.state_machine.StateMachine./StateMachine/actions (%Poly%fluent_controller!state_machine.state_machine.StateMachine. (Poly%fluent_controller!state_machine.state_machine.StateMachine. (fluent_controller!kubernetes_cluster.spec.controller.state_machine.impl&%0.controller.? K&. K& E&. E& R&. R&)))) (Poly%fluent_controller!state_machine.action.Action. action!))) (=> %%global_location_label%%106 (forall ((s$ Poly) (s_prime$ Poly)) (! (=> (and (has_type s$ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&)) (has_type s_prime$ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&))) (=> (and (%B (%%apply%%0 pre! s$)) (%B (%%apply%%1 next! s$ s_prime$))) (or (%B (%%apply%%0 pre! s_prime$)) (%B (%%apply%%0 post! s_prime$))))) :pattern ((%%apply%%1 next! s$ s_prime$)) ))) (=> %%global_location_label%%107 (forall ((s$ Poly) (s_prime$ Poly)) (! (=> (and (has_type s$ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&)) (has_type s_prime$ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&))) (=> (and (and (%B (%%apply%%0 pre! s$)) (%B (%%apply%%1 next! s$ s_prime$))) (%B (%%apply%%1 (fluent_controller!state_machine.action.impl&%0.forward.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.? K&. K& E&. E& R&. R&)) (Poly%tuple%2. input!)) s$ s_prime$))) (%B (%%apply%%0 post! s_prime$)))) :pattern ((%%apply%%1 next! s$ s_prime$)) ))) (=> %%global_location_label%%108 (forall ((s$ Poly)) (! (=> (has_type s$ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&)) (=> (%B (%%apply%%0 pre! s$)) (%B (%%apply%%0 (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_action_pre.? K&. K& E&. E& R&. R& (Poly%fluent_controller!state_machine.action.Action. action!) (Poly%tuple%2. input!)) s$)))) :pattern ((%%apply%%0 pre! s$)) ))) (=> %%global_location_label%%109 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_action.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fun%2. next!))))))) (=> %%global_location_label%%110 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_forall.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (Poly%fun%1. (mk_fun (%%lambda%%115 $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) $ (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. (proj%%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Input E&. E&) (proj%%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&) (proj%fluent_controller!external_api.spec.ExternalAPI./Output E&. E&))) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.? K&. K& E&. E& R&. R&))))))))))) :pattern ((req%fluent_controller!kubernetes_cluster.proof.controller_runtime_liveness.impl&%0.lemma_pre_leads_to_post_by_controller. K&. K& E&. E& R&. R& spec! input! next! action! pre! post!)) )))
(declare-fun ens%fluent_controller!kubernetes_cluster.proof.controller_runtime_liveness.impl&%0.lemma_pre_leads_to_post_by_controller. (Dcr Type Dcr Type Dcr Type fluent_controller!temporal_logic.defs.TempPred. tuple%2. %%Function%% fluent_controller!state_machine.action.Action. %%Function%% %%Function%%) Bool)
(assert (forall ((K&. Dcr) (K& Type) (E&. Dcr) (E& Type) (R&. Dcr) (R& Type) (spec! fluent_controller!temporal_logic.defs.TempPred.) (input! tuple%2.) (next! %%Function%%) (action! fluent_controller!state_machine.action.Action.) (pre! %%Function%%) (post! %%Function%%)) (! (= (ens%fluent_controller!kubernetes_cluster.proof.controller_runtime_liveness.impl&%0.lemma_pre_leads_to_post_by_controller. K&. K& E&. E& R&. R& spec! input! next! action! pre! post!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fun%1. pre!))) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. K&. K& E&. E& R&. R&) (Poly%fun%1. post!))))))) :pattern ((ens%fluent_controller!kubernetes_cluster.proof.controller_runtime_liveness.impl&%0.lemma_pre_leads_to_post_by_controller. K&. K& E&. E& R&. R& spec! input! next! action! pre! post!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::proof::liveness::resource_match::lemma_from_after_get_resource_step_and_key_not_exists_to_resource_matches")
(declare-fun req%fluent_controller!fluent_controller.fluentbit.proof.liveness.resource_match.lemma_from_after_get_resource_step_and_key_not_exists_to_resource_matches. (fluent_controller!temporal_logic.defs.TempPred. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) Bool)
(declare-const %%global_location_label%%111 Bool)
(declare-const %%global_location_label%%112 Bool)
(declare-const %%global_location_label%%113 Bool)
(declare-const %%global_location_label%%114 Bool)
(declare-const %%global_location_label%%115 Bool)
(declare-const %%global_location_label%%116 Bool)
(declare-const %%global_location_label%%117 Bool)
(declare-const %%global_location_label%%118 Bool)
(declare-const %%global_location_label%%119 Bool)
(declare-const %%global_location_label%%120 Bool)
(declare-const %%global_location_label%%121 Bool)
(assert (forall ((spec! fluent_controller!temporal_logic.defs.TempPred.) (sub_resource! fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (next_resource! fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (fb! fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (! (= (req%fluent_controller!fluent_controller.fluentbit.proof.liveness.resource_match.lemma_from_after_get_resource_step_and_key_not_exists_to_resource_matches. spec! sub_resource! next_resource! fb!) (and (=> %%global_location_label%%111 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_action.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%112 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_forall.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (Poly%fun%1. (mk_fun (%%lambda%%115 $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))))))))) (=> %%global_location_label%%113 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_forall.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) (Poly%fun%1. (mk_fun (%%lambda%%115 $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))))))))) (=> %%global_location_label%%114 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%115 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%116 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%117 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%118 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.message.impl&%0.pending_req_of_key_is_unique_with_unique_id.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (=> %%global_location_label%%119 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_reconcile_has_consistent_key_and_valid_metadata.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%120 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.the_object_in_reconcile_satisfies_state_validation.? (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (=> %%global_location_label%%121 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_create_request_implies_at_after_create_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) :pattern ((req%fluent_controller!fluent_controller.fluentbit.proof.liveness.resource_match.lemma_from_after_get_resource_step_and_key_not_exists_to_resource_matches. spec! sub_resource! next_resource! fb!)) )))
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.resource_match.lemma_from_after_get_resource_step_and_key_not_exists_to_resource_matches. (fluent_controller!temporal_logic.defs.TempPred. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) Bool)
(declare-fun %%lambda%%116 (Dcr Type Dcr Type Dcr Type Poly %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly) (%%hole%%7 %%Function%%) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%116 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7) s$) (B (and (not (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) %%hole%%6)) (%B (%%apply%%0 %%hole%%7 s$))))) :pattern ((%%apply%%0 (%%lambda%%116 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7) s$)))))
(assert (forall ((spec! fluent_controller!temporal_logic.defs.TempPred.) (sub_resource! fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (next_resource! fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (fb! fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.resource_match.lemma_from_after_get_resource_step_and_key_not_exists_to_resource_matches. spec! sub_resource! next_resource! fb!) (and (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%116 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (=> (= (fluent_controller!fluent_controller.fluentbit.proof.predicate.next_resource_after.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.after_get_k_request_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. next_resource!))) (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%116 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. sub_resource!) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. next_resource!) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.resource_match.lemma_from_after_get_resource_step_and_key_not_exists_to_resource_matches. spec! sub_resource! next_resource! fb!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::proof::liveness::daemon_set_match::lemma_from_key_exists_to_receives_ok_resp_at_after_get_daemon_set_step")
(declare-fun req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_key_exists_to_receives_ok_resp_at_after_get_daemon_set_step. (fluent_controller!temporal_logic.defs.TempPred. fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fluent_controller!kubernetes_cluster.spec.message.Message.) Bool)
(declare-const %%global_location_label%%122 Bool)
(declare-const %%global_location_label%%123 Bool)
(declare-const %%global_location_label%%124 Bool)
(declare-const %%global_location_label%%125 Bool)
(declare-const %%global_location_label%%126 Bool)
(declare-const %%global_location_label%%127 Bool)
(declare-const %%global_location_label%%128 Bool)
(declare-const %%global_location_label%%129 Bool)
(assert (forall ((spec! fluent_controller!temporal_logic.defs.TempPred.) (fb! fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (req_msg! fluent_controller!kubernetes_cluster.spec.message.Message.)) (! (= (req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_key_exists_to_receives_ok_resp_at_after_get_daemon_set_step. spec! fb! req_msg!) (and (=> %%global_location_label%%122 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_action.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%123 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_forall.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) (Poly%fun%1. (mk_fun (%%lambda%%115 $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))))))))) (=> %%global_location_label%%124 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%125 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%126 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%127 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%128 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%129 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) :pattern ((req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_key_exists_to_receives_ok_resp_at_after_get_daemon_set_step. spec! fb! req_msg!)) )))
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_key_exists_to_receives_ok_resp_at_after_get_daemon_set_step. (fluent_controller!temporal_logic.defs.TempPred. fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fluent_controller!kubernetes_cluster.spec.message.Message.) Bool)
(declare-fun %%lambda%%117 (%%Function%% %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 %%Function%%) (%%hole%%1 %%Function%%) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%117 %%hole%%0 %%hole%%1) s$) (B (and (%B (%%apply%%0 %%hole%%0 s$)) (not (%B (%%apply%%0 %%hole%%1 s$)))))) :pattern ((%%apply%%0 (%%lambda%%117 %%hole%%0 %%hole%%1) s$)))))
(assert (forall ((spec! fluent_controller!temporal_logic.defs.TempPred.) (fb! fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (req_msg! fluent_controller!kubernetes_cluster.spec.message.Message.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_key_exists_to_receives_ok_resp_at_after_get_daemon_set_step. spec! fb! req_msg!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%117 (fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step_and_key_exists.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%117 (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_after_get_resource_step_and_exists_ok_resp_in_flight.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_key_exists_to_receives_ok_resp_at_after_get_daemon_set_step. spec! fb! req_msg!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::proof::liveness::daemon_set_match::lemma_from_after_get_daemon_set_step_to_after_update_daemon_set_step")
(declare-fun req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_to_after_update_daemon_set_step. (fluent_controller!temporal_logic.defs.TempPred. fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fluent_controller!kubernetes_cluster.spec.message.Message.) Bool)
(declare-const %%global_location_label%%130 Bool)
(declare-const %%global_location_label%%131 Bool)
(declare-const %%global_location_label%%132 Bool)
(declare-const %%global_location_label%%133 Bool)
(declare-const %%global_location_label%%134 Bool)
(declare-const %%global_location_label%%135 Bool)
(declare-const %%global_location_label%%136 Bool)
(declare-const %%global_location_label%%137 Bool)
(declare-const %%global_location_label%%138 Bool)
(declare-const %%global_location_label%%139 Bool)
(declare-const %%global_location_label%%140 Bool)
(declare-const %%global_location_label%%141 Bool)
(declare-const %%global_location_label%%142 Bool)
(assert (forall ((spec! fluent_controller!temporal_logic.defs.TempPred.) (fb! fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (resp_msg! fluent_controller!kubernetes_cluster.spec.message.Message.)) (! (= (req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_to_after_update_daemon_set_step. spec! fb! resp_msg!) (and (=> %%global_location_label%%130 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_action.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%131 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_forall.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (Poly%fun%1. (mk_fun (%%lambda%%115 $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))))))))) (=> %%global_location_label%%132 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%133 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%134 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.message.impl&%0.pending_req_of_key_is_unique_with_unique_id.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (=> %%global_location_label%%135 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%136 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%137 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_state_is.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%138 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%139 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%140 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%141 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_only_has_owner_reference_pointing_to_current_cr.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%142 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.daemon_set_in_etcd_satisfies_unchangeable.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) :pattern ((req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_to_after_update_daemon_set_step. spec! fb! resp_msg!)) )))
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_to_after_update_daemon_set_step. (fluent_controller!temporal_logic.defs.TempPred. fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fluent_controller!kubernetes_cluster.spec.message.Message.) Bool)
(assert (forall ((spec! fluent_controller!temporal_logic.defs.TempPred.) (fb! fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (resp_msg! fluent_controller!kubernetes_cluster.spec.message.Message.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_to_after_update_daemon_set_step. spec! fb! resp_msg!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%117 (fluent_controller!fluent_controller.fluentbit.proof.predicate.resp_msg_is_the_in_flight_ok_resp_at_after_get_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%117 (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_update_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_to_after_update_daemon_set_step. spec! fb! resp_msg!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::proof::liveness::daemon_set_match::lemma_daemon_set_state_matches_at_after_update_daemon_set_step")
(declare-fun req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_daemon_set_state_matches_at_after_update_daemon_set_step. (fluent_controller!temporal_logic.defs.TempPred. fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fluent_controller!kubernetes_cluster.spec.message.Message.) Bool)
(declare-const %%global_location_label%%143 Bool)
(declare-const %%global_location_label%%144 Bool)
(declare-const %%global_location_label%%145 Bool)
(declare-const %%global_location_label%%146 Bool)
(declare-const %%global_location_label%%147 Bool)
(declare-const %%global_location_label%%148 Bool)
(declare-const %%global_location_label%%149 Bool)
(declare-const %%global_location_label%%150 Bool)
(declare-const %%global_location_label%%151 Bool)
(declare-const %%global_location_label%%152 Bool)
(declare-const %%global_location_label%%153 Bool)
(declare-const %%global_location_label%%154 Bool)
(declare-const %%global_location_label%%155 Bool)
(declare-const %%global_location_label%%156 Bool)
(assert (forall ((spec! fluent_controller!temporal_logic.defs.TempPred.) (fb! fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (req_msg! fluent_controller!kubernetes_cluster.spec.message.Message.)) (! (= (req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_daemon_set_state_matches_at_after_update_daemon_set_step. spec! fb! req_msg!) (and (=> %%global_location_label%%143 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_action.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%144 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_forall.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) (Poly%fun%1. (mk_fun (%%lambda%%115 $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))))))))) (=> %%global_location_label%%145 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%146 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%147 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%148 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%149 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_state_is.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%150 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.the_object_in_reconcile_satisfies_state_validation.? (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (=> %%global_location_label%%151 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%152 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%153 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%154 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%155 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_only_has_owner_reference_pointing_to_current_cr.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%156 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.daemon_set_in_etcd_satisfies_unchangeable.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) :pattern ((req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_daemon_set_state_matches_at_after_update_daemon_set_step. spec! fb! req_msg!)) )))
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_daemon_set_state_matches_at_after_update_daemon_set_step. (fluent_controller!temporal_logic.defs.TempPred. fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fluent_controller!kubernetes_cluster.spec.message.Message.) Bool)
(assert (forall ((spec! fluent_controller!temporal_logic.defs.TempPred.) (fb! fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (req_msg! fluent_controller!kubernetes_cluster.spec.message.Message.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_daemon_set_state_matches_at_after_update_daemon_set_step. spec! fb! req_msg!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%117 (fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_update_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_daemon_set_state_matches_at_after_update_daemon_set_step. spec! fb! req_msg!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::proof::liveness::daemon_set_match::lemma_from_after_get_daemon_set_step_and_key_exists_to_daemon_set_matches")
(declare-fun req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_and_key_exists_to_daemon_set_matches. (fluent_controller!temporal_logic.defs.TempPred. fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) Bool)
(declare-const %%global_location_label%%157 Bool)
(declare-const %%global_location_label%%158 Bool)
(declare-const %%global_location_label%%159 Bool)
(declare-const %%global_location_label%%160 Bool)
(declare-const %%global_location_label%%161 Bool)
(declare-const %%global_location_label%%162 Bool)
(declare-const %%global_location_label%%163 Bool)
(declare-const %%global_location_label%%164 Bool)
(declare-const %%global_location_label%%165 Bool)
(declare-const %%global_location_label%%166 Bool)
(declare-const %%global_location_label%%167 Bool)
(declare-const %%global_location_label%%168 Bool)
(declare-const %%global_location_label%%169 Bool)
(declare-const %%global_location_label%%170 Bool)
(declare-const %%global_location_label%%171 Bool)
(declare-const %%global_location_label%%172 Bool)
(assert (forall ((spec! fluent_controller!temporal_logic.defs.TempPred.) (fb! fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (! (= (req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_and_key_exists_to_daemon_set_matches. spec! fb!) (and (=> %%global_location_label%%157 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_action.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%158 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_forall.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (Poly%fun%1. (mk_fun (%%lambda%%115 $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))))))))) (=> %%global_location_label%%159 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_forall.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) (Poly%fun%1. (mk_fun (%%lambda%%115 $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))))))))) (=> %%global_location_label%%160 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%161 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%162 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.message.impl&%0.pending_req_of_key_is_unique_with_unique_id.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (=> %%global_location_label%%163 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%164 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))) (=> %%global_location_label%%165 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_state_is.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%166 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.the_object_in_reconcile_satisfies_state_validation.? (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (=> %%global_location_label%%167 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%168 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%169 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%170 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_only_has_owner_reference_pointing_to_current_cr.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%171 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (=> %%global_location_label%%172 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.daemon_set_in_etcd_satisfies_unchangeable.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) :pattern ((req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_and_key_exists_to_daemon_set_matches. spec! fb!)) )))
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_and_key_exists_to_daemon_set_matches. (fluent_controller!temporal_logic.defs.TempPred. fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) Bool)
(assert (forall ((spec! fluent_controller!temporal_logic.defs.TempPred.) (fb! fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_and_key_exists_to_daemon_set_matches. spec! fb!) (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%104 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_and_key_exists_to_daemon_set_matches. spec! fb!)) )))
(set-info :comment ";; Function-Def fluent_controller::fluent_controller::fluentbit::proof::liveness::daemon_set_match::lemma_from_after_get_daemon_set_step_and_key_exists_to_daemon_set_matches")
(set-info :comment ";; controller_examples/fluent_controller/fluentbit/proof/liveness/daemon_set_match.rs:66:7: 66:129 (#0)")
(declare-const spec! fluent_controller!temporal_logic.defs.TempPred.)
(declare-const fb! fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)
(declare-const req_msg@ Poly)
(declare-const ex@ Poly)
(declare-const tmp%1 Bool)
(declare-const req_msg$1@ fluent_controller!kubernetes_cluster.spec.message.Message.)
(declare-const tmp%2 fluent_controller!temporal_logic.defs.TempPred.)
(declare-const resp_msg@ Poly)
(declare-const ex$1@ Poly)
(declare-const tmp%3 Bool)
(declare-const resp_msg$1@ fluent_controller!kubernetes_cluster.spec.message.Message.)
(declare-const tmp%4 fluent_controller!temporal_logic.defs.TempPred.)
(declare-const req_msg$2@ Poly)
(declare-const ex$2@ Poly)
(declare-const tmp%5 Bool)
(declare-const req_msg$3@ fluent_controller!kubernetes_cluster.spec.message.Message.)
(declare-const tmp%6 fluent_controller!temporal_logic.defs.TempPred.)
(declare-const pre1@ %%Function%%)
(declare-const post1@ fluent_controller!temporal_logic.defs.TempPred.)
(declare-const pre2@ %%Function%%)
(declare-const post2@ fluent_controller!temporal_logic.defs.TempPred.)
(declare-const pre3@ %%Function%%)
(declare-const tmp%7 fluent_controller!temporal_logic.defs.TempPred.)
(declare-const ds_key@ fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(declare-const pre@ fluent_controller!temporal_logic.defs.TempPred.)
(declare-const daemon_set_matches@ fluent_controller!temporal_logic.defs.TempPred.)
(declare-const daemon_set_not_matches@ fluent_controller!temporal_logic.defs.TempPred.)
(declare-const post@ fluent_controller!temporal_logic.defs.TempPred.)
(assert fuel_defaults)
(assert (has_type (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (TYPE%fluent_controller!temporal_logic.defs.TempPred. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))))
(assert (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_action.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%2. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_forall.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (Poly%fun%1. (mk_fun (%%lambda%%115 $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.controller_next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_forall.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) (Poly%fun%1. (mk_fun (%%lambda%%115 $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%core!option.Option. $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) $ TYPE%tuple%0. (Poly%fluent_controller!state_machine.action.Action. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.kubernetes_api_next.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.crash_disabled.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.spec.cluster_state_machine.impl&%2.busy_disabled.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.message.impl&%0.pending_req_of_key_is_unique_with_unique_id.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.cluster_safety.impl&%0.each_object_in_etcd_is_well_formed.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!kubernetes_cluster.proof.message.impl&%0.every_in_flight_msg_has_unique_id.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.trusted.liveness_theorem.desired_state_is.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.the_object_in_reconcile_satisfies_state_validation.? (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.every_resource_update_request_implies_at_after_update_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.daemon_set_not_exists_or_matches_or_no_more_status_update.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.no_delete_resource_request_msg_in_flight.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_only_has_owner_reference_pointing_to_current_cr.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.predicate.resource_object_has_no_finalizers_or_timestamp_and_only_has_controller_owner_ref.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))
(assert (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.always.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.helper_invariants.validation.daemon_set_in_etcd_satisfies_unchangeable.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))
(declare-fun %%lambda%%118 (Dcr Type Dcr Type Dcr Type Poly %%Function%% %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly) (%%hole%%7 %%Function%%) (%%hole%%8 %%Function%%) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%118 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8) s$) (B (and (and (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) %%hole%%6) (%B (%%apply%%0 %%hole%%7 s$))) (%B (%%apply%%0 %%hole%%8 s$))))) :pattern ((%%apply%%0 (%%lambda%%118 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8) s$)))))
(declare-fun %%lambda%%119 (Dcr Type Dcr Type Dcr Type Poly %%Function%% %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Dcr) (%%hole%%3 Type) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly) (%%hole%%7 %%Function%%) (%%hole%%8 %%Function%%) (s$ Poly)) (! (= (%%apply%%0 (%%lambda%%119 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8) s$) (B (and (and (vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 (vstd!map.impl&%0.dom.? %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. s$))))))) %%hole%%6) (not (%B (%%apply%%0 %%hole%%7 s$)))) (%B (%%apply%%0 %%hole%%8 s$))))) :pattern ((%%apply%%0 (%%lambda%%119 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8) s$)))))
(declare-fun %%lambda%%120 (Poly Poly %%Function%% Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Poly) (%%hole%%1 Poly) (%%hole%%2 %%Function%%) (%%hole%%3 Dcr) (%%hole%%4 Type) (req_msg$ Poly)) (! (= (%%apply%%0 (%%lambda%%120 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) req_msg$) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? %%hole%%3 %%hole%%4 (Poly%fun%1. (mk_fun (%%lambda%%117 (fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_get_resource_step_and_key_exists.? %%hole%%0 %%hole%%1 req_msg$) %%hole%%2)))))) :pattern ((%%apply%%0 (%%lambda%%120 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) req_msg$)))))
(declare-fun %%lambda%%121 (Poly Poly %%Function%% Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Poly) (%%hole%%1 Poly) (%%hole%%2 %%Function%%) (%%hole%%3 Dcr) (%%hole%%4 Type) (resp_msg$ Poly)) (! (= (%%apply%%0 (%%lambda%%121 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) resp_msg$) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? %%hole%%3 %%hole%%4 (Poly%fun%1. (mk_fun (%%lambda%%117 (fluent_controller!fluent_controller.fluentbit.proof.predicate.resp_msg_is_the_in_flight_ok_resp_at_after_get_resource_step.? %%hole%%0 %%hole%%1 resp_msg$) %%hole%%2)))))) :pattern ((%%apply%%0 (%%lambda%%121 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) resp_msg$)))))
(declare-fun %%choose%%3 (Type Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type Dcr Type Dcr Type Dcr Type Poly Dcr Type Poly) Poly)
(assert (forall ((%%hole%%0 Type) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Poly) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Dcr) (%%hole%%7 Type) (%%hole%%8 Poly) (%%hole%%9 Dcr) (%%hole%%10 Type) (%%hole%%11 Dcr) (%%hole%%12 Type) (%%hole%%13 Dcr) (%%hole%%14 Type) (%%hole%%15 Dcr) (%%hole%%16 Type) (%%hole%%17 Poly) (%%hole%%18 Dcr) (%%hole%%19 Type) (%%hole%%20 Poly)) (! (=> (exists ((resp_msg$2 Poly)) (! (and (has_type resp_msg$2 %%hole%%0) (and (and (and (vstd!multiset.impl&%0.contains.? %%hole%%1 %%hole%%2 %%hole%%3 resp_msg$2) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.resp_msg_matches_req_msg.? %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 resp_msg$2 %%hole%%8)) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.? %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg$2))))))))))))) (= (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.? %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg$2)))))))))) %%hole%%17))) :pattern ((vstd!multiset.impl&%0.contains.? %%hole%%18 %%hole%%19 %%hole%%20 resp_msg$2)) )) (exists ((resp_msg$2 Poly)) (! (and (and (has_type resp_msg$2 %%hole%%0) (and (and (and (vstd!multiset.impl&%0.contains.? %%hole%%1 %%hole%%2 %%hole%%3 resp_msg$2) (fluent_controller!kubernetes_cluster.spec.message.impl&%5.resp_msg_matches_req_msg.? %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 resp_msg$2 %%hole%%8)) (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.? %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg$2))))))))))))) (= (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse./GetResponse/res (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetResponse. (fluent_controller!kubernetes_cluster.spec.message.impl&%4.get_get_response.? %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 (Poly%fluent_controller!kubernetes_cluster.spec.message.MessageContent. (fluent_controller!kubernetes_cluster.spec.message.Message./Message/content (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg$2)))))))))) %%hole%%17))) (= (%%choose%%3 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20) resp_msg$2)) :pattern ((vstd!multiset.impl&%0.contains.? %%hole%%18 %%hole%%19 %%hole%%20 resp_msg$2))))) :pattern ((%%choose%%3 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 %%hole%%13 %%hole%%14 %%hole%%15 %%hole%%16 %%hole%%17 %%hole%%18 %%hole%%19 %%hole%%20)))))
(declare-fun %%lambda%%122 (Poly Poly %%Function%% Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Poly) (%%hole%%1 Poly) (%%hole%%2 %%Function%%) (%%hole%%3 Dcr) (%%hole%%4 Type) (req_msg$ Poly)) (! (= (%%apply%%0 (%%lambda%%122 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) req_msg$) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? %%hole%%3 %%hole%%4 (Poly%fun%1. (mk_fun (%%lambda%%117 (fluent_controller!fluent_controller.fluentbit.proof.predicate.req_msg_is_the_in_flight_pending_req_at_after_update_resource_step.? %%hole%%0 %%hole%%1 req_msg$) %%hole%%2)))))) :pattern ((%%apply%%0 (%%lambda%%122 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4) req_msg$)))))
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%0 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%1 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%2 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%3 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%4 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%5 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%6 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%7 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%8 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%9 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%10 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%11 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%12 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%13 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%14 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%15 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%16 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%17 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%18 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%19 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%20 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%21 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%22 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%23 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%24 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%25 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%26 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%27 Bool)
(set-info :comment ";; postcondition not satisfied")
(declare-const %%location_label%%28 Bool)
(declare-const %%query%% Bool)
(assert (=> %%query%% (not (=> (= ds_key@ (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (=> (= pre@ (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%104 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (=> (= daemon_set_matches@ (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%118 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. ds_key@) (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (=> (= daemon_set_not_matches@ (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%119 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. ds_key@) (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (=> (= post@ (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (and (and (=> %%location_label%%0 (req%fluent_controller!temporal_logic.rules.valid_implies_implies_leads_to. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) spec! daemon_set_matches@ post@)) (=> (ens%fluent_controller!temporal_logic.rules.valid_implies_implies_leads_to. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) spec! daemon_set_matches@ post@) (=> %%location_label%%1 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. daemon_set_matches@) (Poly%fluent_controller!temporal_logic.defs.TempPred. post@))))))) (=> (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. daemon_set_matches@) (Poly%fluent_controller!temporal_logic.defs.TempPred. post@)))) (and (=> (= pre1@ (mk_fun (%%lambda%%120 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))) (=> (= post1@ (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%117 (fluent_controller!fluent_controller.fluentbit.proof.predicate.at_after_get_resource_step_and_exists_ok_resp_in_flight.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (and (=> (has_type req_msg@ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) (and (=> %%location_label%%2 (req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_key_exists_to_receives_ok_resp_at_after_get_daemon_set_step. spec! fb! (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg@))) (=> (ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_key_exists_to_receives_ok_resp_at_after_get_daemon_set_step. spec! fb! (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg@)) (=> %%location_label%%3 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (%%apply%%0 pre1@ req_msg@) (Poly%fluent_controller!temporal_logic.defs.TempPred. post1@)))))))) (=> (forall ((req_msg$ Poly)) (! (=> (has_type req_msg$ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (%%apply%%0 pre1@ req_msg$) (Poly%fluent_controller!temporal_logic.defs.TempPred. post1@))))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (%%apply%%0 pre1@ req_msg$) (Poly%fluent_controller!temporal_logic.defs.TempPred. post1@))) )) (and (=> %%location_label%%4 (req%fluent_controller!temporal_logic.rules.leads_to_exists_intro. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) spec! pre1@ post1@)) (=> (ens%fluent_controller!temporal_logic.rules.leads_to_exists_intro. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) spec! pre1@ post1@) (and (and (=> (has_type ex@ (TYPE%fluent_controller!temporal_logic.defs.Execution. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))) (=> (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. daemon_set_not_matches@) ex@) (=> (= req_msg$1@ (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!temporal_logic.defs.impl&%0.head.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) ex@)))))) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (=> (= tmp%1 (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (%%apply%%0 pre1@ (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg$1@)) ex@)) (and (=> %%location_label%%5 tmp%1) (=> tmp%1 (=> %%location_label%%6 (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre1@))) ex@)))))))) (=> (forall ((ex$ Poly)) (! (=> (has_type ex$ (TYPE%fluent_controller!temporal_logic.defs.Execution. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))) (=> (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. daemon_set_not_matches@) ex$) (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre1@))) ex$))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. daemon_set_not_matches@) ex$)) )) (=> (= tmp%2 (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre1@))) (and (=> %%location_label%%7 (req%fluent_controller!temporal_logic.rules.temp_pred_equality. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) tmp%2 daemon_set_not_matches@)) (=> (ens%fluent_controller!temporal_logic.rules.temp_pred_equality. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) tmp%2 daemon_set_not_matches@) (=> %%location_label%%8 (= (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre1@)) daemon_set_not_matches@))))))) (=> (= (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre1@)) daemon_set_not_matches@) (=> (= pre2@ (mk_fun (%%lambda%%121 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))) (=> (= post2@ (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%117 (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_update_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)) (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (and (=> (has_type resp_msg@ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) (and (=> %%location_label%%9 (req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_to_after_update_daemon_set_step. spec! fb! (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg@))) (=> (ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_from_after_get_daemon_set_step_to_after_update_daemon_set_step. spec! fb! (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg@)) (=> %%location_label%%10 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (%%apply%%0 pre2@ resp_msg@) (Poly%fluent_controller!temporal_logic.defs.TempPred. post2@)))))))) (=> (forall ((resp_msg$ Poly)) (! (=> (has_type resp_msg$ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (%%apply%%0 pre2@ resp_msg$) (Poly%fluent_controller!temporal_logic.defs.TempPred. post2@))))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (%%apply%%0 pre2@ resp_msg$) (Poly%fluent_controller!temporal_logic.defs.TempPred. post2@))) )) (and (=> %%location_label%%11 (req%fluent_controller!temporal_logic.rules.leads_to_exists_intro. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) spec! pre2@ post2@)) (=> (ens%fluent_controller!temporal_logic.rules.leads_to_exists_intro. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) spec! pre2@ post2@) (and (and (=> (has_type ex$1@ (TYPE%fluent_controller!temporal_logic.defs.Execution. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))) (=> (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. post1@) ex$1@) (=> (= resp_msg$1@ (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (as_type (%%choose%%3 (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!temporal_logic.defs.impl&%0.head.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) ex$1@)))))) $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!temporal_logic.defs.impl&%0.head.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) ex$1@)))))) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%vstd!map.Map<fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.>. (fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState./ApiServerState/resources (%Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (Poly%fluent_controller!kubernetes_cluster.spec.api_server.types.ApiServerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/kubernetes_api_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!temporal_logic.defs.impl&%0.head.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) ex$1@))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. ds_key@)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (fluent_controller!kubernetes_cluster.spec.network.types.NetworkState./NetworkState/in_flight (%Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (Poly%fluent_controller!kubernetes_cluster.spec.network.types.NetworkState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/network_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!temporal_logic.defs.impl&%0.head.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) ex$1@))))))) (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)))) (=> (= tmp%3 (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (%%apply%%0 pre2@ (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. resp_msg$1@)) ex$1@)) (and (=> %%location_label%%12 tmp%3) (=> tmp%3 (=> %%location_label%%13 (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre2@))) ex$1@)))))))) (=> (forall ((ex$ Poly)) (! (=> (has_type ex$ (TYPE%fluent_controller!temporal_logic.defs.Execution. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))) (=> (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. post1@) ex$) (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre2@))) ex$))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. post1@) ex$)) )) (=> (= tmp%4 (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre2@))) (and (=> %%location_label%%14 (req%fluent_controller!temporal_logic.rules.temp_pred_equality. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) tmp%4 post1@)) (=> (ens%fluent_controller!temporal_logic.rules.temp_pred_equality. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) tmp%4 post1@) (=> %%location_label%%15 (= (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre2@)) post1@))))))) (=> (= (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre2@)) post1@) (=> (= pre3@ (mk_fun (%%lambda%%122 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!) (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)) $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.)))) (and (=> (has_type req_msg$2@ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) (and (=> %%location_label%%16 (req%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_daemon_set_state_matches_at_after_update_daemon_set_step. spec! fb! (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg$2@))) (=> (ens%fluent_controller!fluent_controller.fluentbit.proof.liveness.daemon_set_match.lemma_daemon_set_state_matches_at_after_update_daemon_set_step. spec! fb! (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg$2@)) (=> %%location_label%%17 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (%%apply%%0 pre3@ req_msg$2@) (Poly%fluent_controller!temporal_logic.defs.TempPred. post@)))))))) (=> (forall ((req_msg$ Poly)) (! (=> (has_type req_msg$ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.)) (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (%%apply%%0 pre3@ req_msg$) (Poly%fluent_controller!temporal_logic.defs.TempPred. post@))))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (%%apply%%0 pre3@ req_msg$) (Poly%fluent_controller!temporal_logic.defs.TempPred. post@))) )) (and (=> %%location_label%%18 (req%fluent_controller!temporal_logic.rules.leads_to_exists_intro. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) spec! pre3@ post@)) (=> (ens%fluent_controller!temporal_logic.rules.leads_to_exists_intro. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) spec! pre3@ post@) (and (and (=> (has_type ex$2@ (TYPE%fluent_controller!temporal_logic.defs.Execution. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))) (=> (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. post2@) ex$2@) (=> (= req_msg$3@ (%Poly%fluent_controller!kubernetes_cluster.spec.message.Message. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile./OngoingReconcile/pending_req_msg (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. (vstd!map.impl&%0.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ (TYPE%fluent_controller!kubernetes_cluster.spec.controller.types.OngoingReconcile. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState./ControllerState/ongoing_reconciles (%Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (Poly%fluent_controller!kubernetes_cluster.spec.controller.types.ControllerState. (fluent_controller!kubernetes_cluster.spec.cluster.Cluster./Cluster/controller_state (%Poly%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. (fluent_controller!temporal_logic.defs.impl&%0.head.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) ex$2@)))))) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.object_ref.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (=> (= tmp%5 (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (%%apply%%0 pre3@ (Poly%fluent_controller!kubernetes_cluster.spec.message.Message. req_msg$3@)) ex$2@)) (and (=> %%location_label%%19 tmp%5) (=> tmp%5 (=> %%location_label%%20 (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre3@))) ex$2@)))))))) (=> (forall ((ex$ Poly)) (! (=> (has_type ex$ (TYPE%fluent_controller!temporal_logic.defs.Execution. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.))) (=> (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. post2@) ex$) (fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre3@))) ex$))) :pattern ((fluent_controller!temporal_logic.defs.impl&%1.satisfied_by.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. post2@) ex$)) )) (=> (= tmp%6 (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre3@))) (and (=> %%location_label%%21 (req%fluent_controller!temporal_logic.rules.temp_pred_equality. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) tmp%6 post2@)) (=> (ens%fluent_controller!temporal_logic.rules.temp_pred_equality. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) tmp%6 post2@) (=> %%location_label%%22 (= (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre3@)) post2@))))))) (=> (= (fluent_controller!temporal_logic.defs.tla_exists.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) $ (TYPE%fluent_controller!kubernetes_cluster.spec.message.Message. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView. $ TYPE%fluent_controller!external_api.spec.EmptyTypeView.) (Poly%fun%1. pre3@)) post2@) (and (=> %%location_label%%23 (req%fluent_controller!temporal_logic.rules.leads_to_trans_temp. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) spec! daemon_set_not_matches@ post1@ post2@)) (=> (ens%fluent_controller!temporal_logic.rules.leads_to_trans_temp. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) spec! daemon_set_not_matches@ post1@ post2@) (and (=> %%location_label%%24 (req%fluent_controller!temporal_logic.rules.leads_to_trans_temp. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) spec! daemon_set_not_matches@ post2@ post@)) (=> (ens%fluent_controller!temporal_logic.rules.leads_to_trans_temp. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) spec! daemon_set_not_matches@ post2@ post@) (=> %%location_label%%25 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. daemon_set_not_matches@) (Poly%fluent_controller!temporal_logic.defs.TempPred. post@)))))))))))))))))))))))))))))))) (=> (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. daemon_set_not_matches@) (Poly%fluent_controller!temporal_logic.defs.TempPred. post@)))) (and (=> %%location_label%%26 (req%fluent_controller!temporal_logic.rules.or_leads_to_combine_temp. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) spec! daemon_set_matches@ daemon_set_not_matches@ post@)) (=> (ens%fluent_controller!temporal_logic.rules.or_leads_to_combine_temp. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) spec! daemon_set_matches@ daemon_set_not_matches@ post@) (=> (= tmp%7 (fluent_controller!temporal_logic.defs.impl&%1.or.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. daemon_set_matches@) (Poly%fluent_controller!temporal_logic.defs.TempPred. daemon_set_not_matches@))) (and (=> %%location_label%%27 (req%fluent_controller!temporal_logic.rules.temp_pred_equality. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) tmp%7 pre@)) (=> (ens%fluent_controller!temporal_logic.rules.temp_pred_equality. $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) tmp%7 pre@) (=> %%location_label%%28 (fluent_controller!temporal_logic.defs.impl&%1.entails.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. spec!) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.impl&%1.leads_to.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (mk_fun (%%lambda%%104 $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!fluent_controller.fluentbit.proof.resource.get_request.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (fluent_controller!fluent_controller.fluentbit.proof.predicate.pending_req_in_flight_at_after_get_resource_step.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (Poly%fluent_controller!temporal_logic.defs.TempPred. (fluent_controller!temporal_logic.defs.lift_state.? $ (TYPE%fluent_controller!kubernetes_cluster.spec.cluster.Cluster. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!external_api.spec.EmptyAPI. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconciler.) (Poly%fun%1. (fluent_controller!fluent_controller.fluentbit.proof.predicate.sub_resource_state_matches.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))))))))))))))))))
(assert %%query%%)
(check-sat)
(exit)
