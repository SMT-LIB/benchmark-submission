(set-info :smt-lib-version 2.6)
(set-logic UFDTLIA)
(set-info :source |
Generated by: Amar Shah
Generated on: 2024-12-11
Generator: Verus
Application: Verification of Rust Program
Target solver: z3
Time limit: 60
Benchmarks generated by the Rust verifier Verus (https://verus-lang.github.io/verus/guide/) on the project Anvil (https://www.usenix.org/conference/osdi24/presentation/sun-xudong) 
and processed using Mariposa (https://github.com/secure-foundations/mariposa).
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(set-option :auto_config false)
(set-option :smt.mbqi false)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100.0)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.arith.nl false)
(set-option :pi.enabled false)
(set-info :comment ";; Prelude")
(set-info :comment ";; AIR prelude")
(declare-sort %%Function%% 0)
(declare-sort FuelId 0)
(declare-sort Fuel 0)
(declare-const zero Fuel)
(declare-fun succ (Fuel) Fuel)
(declare-fun fuel_bool (FuelId) Bool)
(declare-fun fuel_bool_default (FuelId) Bool)
(declare-const fuel_defaults Bool)
(assert (=> fuel_defaults (forall ((id FuelId)) (! (= (fuel_bool id) (fuel_bool_default id)) :pattern ((fuel_bool id)) ))))
(declare-sort Char 0)
(declare-fun char%from_unicode (Int) Char)
(declare-fun char%to_unicode (Char) Int)
(declare-sort StrSlice 0)
(declare-fun str%strslice_is_ascii (StrSlice) Bool)
(declare-fun str%strslice_len (StrSlice) Int)
(declare-fun str%strslice_get_char (StrSlice Int) Char)
(declare-fun str%new_strlit (Int) StrSlice)
(declare-fun str%from_strlit (StrSlice) Int)
(declare-datatypes ((fndef 0)) (((fndef_singleton ))))
(declare-sort Poly 0)
(declare-sort Height 0)
(declare-fun I (Int) Poly)
(declare-fun B (Bool) Poly)
(declare-fun F (fndef) Poly)
(declare-fun %I (Poly) Int)
(declare-fun %B (Poly) Bool)
(declare-fun %F (Poly) fndef)
(declare-fun S (StrSlice) Poly)
(declare-fun %S (Poly) StrSlice)
(declare-fun C (Char) Poly)
(declare-fun %C (Poly) Char)
(declare-sort Type 0)
(declare-const BOOL Type)
(declare-const INT Type)
(declare-const NAT Type)
(declare-const STRSLICE Type)
(declare-const CHAR Type)
(declare-fun UINT (Int) Type)
(declare-fun SINT (Int) Type)
(declare-fun CONST_INT (Int) Type)
(declare-sort Dcr 0)
(declare-const $ Dcr)
(declare-fun REF (Dcr) Dcr)
(declare-fun MUT_REF (Dcr) Dcr)
(declare-fun BOX (Dcr) Dcr)
(declare-fun RC (Dcr) Dcr)
(declare-fun ARC (Dcr) Dcr)
(declare-fun GHOST (Dcr) Dcr)
(declare-fun TRACKED (Dcr) Dcr)
(declare-fun NEVER (Dcr) Dcr)
(declare-fun ARRAY (Dcr Type Dcr Type) Type)
(declare-fun SLICE (Dcr Type) Type)
(declare-fun has_type (Poly Type) Bool)
(declare-fun as_type (Poly Type) Poly)
(declare-fun mk_fun (%%Function%%) %%Function%%)
(declare-fun const_int (Type) Int)
(assert (forall ((i Int)) (! (= i (const_int (CONST_INT i))) :pattern ((CONST_INT i)) )))
(assert (forall ((b Bool)) (! (has_type (B b) BOOL) :pattern ((has_type (B b) BOOL)) )))
(assert (forall ((x Poly) (t Type)) (! (and (has_type (as_type x t) t) (=> (has_type x t) (= x (as_type x t)))) :pattern ((as_type x t)) )))
(assert (forall ((x %%Function%%)) (! (= (mk_fun x) x) :pattern ((mk_fun x)) )))
(assert (forall ((x Bool)) (! (= x (%B (B x))) :pattern ((B x)) )))
(assert (forall ((x Int)) (! (= x (%I (I x))) :pattern ((I x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x BOOL) (= x (B (%B x)))) :pattern ((has_type x BOOL)) )))
(assert (forall ((x Poly)) (! (=> (has_type x INT) (= x (I (%I x)))) :pattern ((has_type x INT)) )))
(assert (forall ((x Poly)) (! (=> (has_type x NAT) (= x (I (%I x)))) :pattern ((has_type x NAT)) )))
(assert (forall ((bits Int) (x Poly)) (! (=> (has_type x (UINT bits)) (= x (I (%I x)))) :pattern ((has_type x (UINT bits))) )))
(assert (forall ((bits Int) (x Poly)) (! (=> (has_type x (SINT bits)) (= x (I (%I x)))) :pattern ((has_type x (SINT bits))) )))
(assert (forall ((x Int)) (! (= (str%from_strlit (str%new_strlit x)) x) :pattern ((str%new_strlit x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x STRSLICE) (= x (S (%S x)))) :pattern ((has_type x STRSLICE)) )))
(assert (forall ((x StrSlice)) (! (= x (%S (S x))) :pattern ((S x)) )))
(assert (forall ((x StrSlice)) (! (has_type (S x) STRSLICE) :pattern ((has_type (S x) STRSLICE)) )))
(declare-fun ext_eq (Bool Type Poly Poly) Bool)
(assert (forall ((deep Bool) (t Type) (x Poly) (y Poly)) (! (= (= x y) (ext_eq deep t x y)) :pattern ((ext_eq deep t x y)) )))
(declare-const SZ Int)
(assert (or (= SZ 32) (= SZ 64)))
(declare-fun uHi (Int) Int)
(declare-fun iLo (Int) Int)
(declare-fun iHi (Int) Int)
(assert (= (uHi 8) 256))
(assert (= (uHi 16) 65536))
(assert (= (uHi 32) 4294967296))
(assert (= (uHi 64) 18446744073709551616))
(assert (= (uHi 128) (+ 1 340282366920938463463374607431768211455)))
(assert (= (iLo 8) (- 128)))
(assert (= (iLo 16) (- 32768)))
(assert (= (iLo 32) (- 2147483648)))
(assert (= (iLo 64) (- 9223372036854775808)))
(assert (= (iLo 128) (- 170141183460469231731687303715884105728)))
(assert (= (iHi 8) 128))
(assert (= (iHi 16) 32768))
(assert (= (iHi 32) 2147483648))
(assert (= (iHi 64) 9223372036854775808))
(assert (= (iHi 128) 170141183460469231731687303715884105728))
(declare-fun nClip (Int) Int)
(declare-fun uClip (Int Int) Int)
(declare-fun iClip (Int Int) Int)
(assert (forall ((i Int)) (! (and (<= 0 (nClip i)) (=> (<= 0 i) (= i (nClip i)))) :pattern ((nClip i)) )))
(assert (forall ((bits Int) (i Int)) (! (and (<= 0 (uClip bits i)) (< (uClip bits i) (uHi bits)) (=> (and (<= 0 i) (< i (uHi bits))) (= i (uClip bits i)))) :pattern ((uClip bits i)) )))
(assert (forall ((bits Int) (i Int)) (! (and (<= (iLo bits) (iClip bits i)) (< (iClip bits i) (iHi bits)) (=> (and (<= (iLo bits) i) (< i (iHi bits))) (= i (iClip bits i)))) :pattern ((iClip bits i)) )))
(declare-fun uInv (Int Int) Bool)
(declare-fun iInv (Int Int) Bool)
(assert (forall ((bits Int) (i Int)) (! (= (uInv bits i) (and (<= 0 i) (< i (uHi bits)))) :pattern ((uInv bits i)) )))
(assert (forall ((bits Int) (i Int)) (! (= (iInv bits i) (and (<= (iLo bits) i) (< i (iHi bits)))) :pattern ((iInv bits i)) )))
(assert (forall ((x Int)) (! (has_type (I x) INT) :pattern ((has_type (I x) INT)) )))
(assert (forall ((x Int)) (! (=> (<= 0 x) (has_type (I x) NAT)) :pattern ((has_type (I x) NAT)) )))
(assert (forall ((bits Int) (x Int)) (! (=> (uInv bits x) (has_type (I x) (UINT bits))) :pattern ((has_type (I x) (UINT bits))) )))
(assert (forall ((bits Int) (x Int)) (! (=> (iInv bits x) (has_type (I x) (SINT bits))) :pattern ((has_type (I x) (SINT bits))) )))
(assert (forall ((x Poly)) (! (=> (has_type x NAT) (<= 0 (%I x))) :pattern ((has_type x NAT)) )))
(assert (forall ((bits Int) (x Poly)) (! (=> (has_type x (UINT bits)) (uInv bits (%I x))) :pattern ((has_type x (UINT bits))) )))
(assert (forall ((bits Int) (x Poly)) (! (=> (has_type x (SINT bits)) (iInv bits (%I x))) :pattern ((has_type x (SINT bits))) )))
(declare-fun Add (Int Int) Int)
(declare-fun Sub (Int Int) Int)
(assert (forall ((x Int) (y Int)) (! (= (Add x y) (+ x y)) :pattern ((Add x y)))))
(assert (forall ((x Int) (y Int)) (! (= (Sub x y) (- x y)) :pattern ((Sub x y)))))
(assert (forall ((x Poly)) (! (=> (has_type x CHAR) (= x (C (%C x)))) :pattern ((has_type x CHAR)) )))
(assert (forall ((x Char)) (! (= x (%C (C x))) :pattern ((C x)) )))
(assert (forall ((x Char)) (! (has_type (C x) CHAR) :pattern ((has_type (C x) CHAR)) )))
(assert (forall ((x Int)) (! (=> (and (<= 0 x) (< x (uHi 32))) (= x (char%to_unicode (char%from_unicode x)))) :pattern ((char%from_unicode x)) )))
(assert (forall ((c Char)) (! (and (<= 0 (char%to_unicode c)) (< (char%to_unicode c) (uHi 32))) :pattern ((char%to_unicode c)) )))
(declare-fun height (Poly) Height)
(declare-fun height_lt (Height Height) Bool)
(declare-fun partial-order (Height Height) Bool)
(assert (forall ((x Height)) (partial-order x x)))
(assert (forall ((x Height) (y Height)) (=> (and (partial-order x y) (partial-order y x)) (= x y))))
(assert (forall ((x Height) (y Height) (z Height)) (=> (and (partial-order x y) (partial-order y z)) (partial-order x z))))
(assert (forall ((x Height) (y Height)) (! (= (height_lt x y) (and (partial-order x y) (not (= x y)))) :pattern ((height_lt x y)))))
(declare-fun fun_from_recursive_field (Poly) Poly)
(declare-fun check_decrease_int (Int Int Bool) Bool)
(assert (forall ((cur Int) (prev Int) (otherwise Bool)) (! (= (check_decrease_int cur prev otherwise) (or (and (<= 0 cur) (< cur prev)) (and (= cur prev) otherwise))) :pattern ((check_decrease_int cur prev otherwise)) )))
(declare-fun check_decrease_height (Poly Poly Bool) Bool)
(assert (forall ((cur Poly) (prev Poly) (otherwise Bool)) (! (= (check_decrease_height cur prev otherwise) (or (height_lt (height cur) (height prev)) (and (= (height cur) (height prev)) otherwise))) :pattern ((check_decrease_height cur prev otherwise)) )))
(declare-fun uintxor (Int Poly Poly) Int)
(declare-fun uintand (Int Poly Poly) Int)
(declare-fun uintor (Int Poly Poly) Int)
(declare-fun uintshr (Int Poly Poly) Int)
(declare-fun uintshl (Int Poly Poly) Int)
(declare-fun uintnot (Int Poly) Int)
(declare-fun singular_mod (Int Int) Int)
(declare-fun closure_req (Type Dcr Type Poly Poly) Bool)
(declare-fun closure_ens (Type Dcr Type Poly Poly Poly) Bool)
(set-info :comment ";; MODULE 'module zookeeper_controller::exec::resource::client_service'")
(set-info :comment ";; Fuel")
(declare-const fuel%vstd!std_specs.option.impl&%0.is_Some. FuelId)
(declare-const fuel%vstd!std_specs.option.impl&%0.get_Some_0. FuelId)
(declare-const fuel%vstd!std_specs.option.is_some. FuelId)
(declare-const fuel%vstd!std_specs.option.spec_unwrap. FuelId)
(declare-const fuel%vstd!std_specs.result.impl&%0.is_Ok. FuelId)
(declare-const fuel%vstd!std_specs.result.impl&%0.get_Ok_0. FuelId)
(declare-const fuel%vstd!std_specs.result.is_ok. FuelId)
(declare-const fuel%vstd!map.impl&%0.new. FuelId)
(declare-const fuel%vstd!map.impl&%0.spec_index. FuelId)
(declare-const fuel%vstd!map_lib.impl&%0.union_prefer_right. FuelId)
(declare-const fuel%vstd!seq.impl&%0.spec_index. FuelId)
(declare-const fuel%vstd!seq.impl&%0.spec_add. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.map_values. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.add_empty_left. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.add_empty_right. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.push_distributes_over_add. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.contains. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.to_set. FuelId)
(declare-const fuel%vstd!seq_lib.check_argument_is_seq. FuelId)
(declare-const fuel%vstd!set.impl&%0.choose. FuelId)
(declare-const fuel%vstd!view.impl&%0.view. FuelId)
(declare-const fuel%vstd!view.impl&%1.view. FuelId)
(declare-const fuel%vstd!view.impl&%2.view. FuelId)
(declare-const fuel%vstd!view.impl&%3.view. FuelId)
(declare-const fuel%vstd!view.impl&%4.view. FuelId)
(declare-const fuel%vstd!view.impl&%5.view. FuelId)
(declare-const fuel%vstd!view.impl&%11.view. FuelId)
(declare-const fuel%vstd!view.impl&%14.view. FuelId)
(declare-const fuel%vstd!view.impl&%19.view. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.impl&%0.requirements. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.exec.resource.client_service.impl&%0.requirements. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.get_request. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.make. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.update. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.state_after_create. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.state_after_update. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_key. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_name. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.update_admin_server_service. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.get_request. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.make. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.update. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.state_after_create. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.state_after_update. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_key. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_name. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.update_client_service. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_base_labels. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_labels. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_service. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.get_request. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.make. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.update. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.state_after_create. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.state_after_update. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_key. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_name. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.update_config_map. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_config. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_quiet_config. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_env_config. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.get_request. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.make. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.update. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.state_after_create. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.state_after_update. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_key. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_name. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_stateful_set. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_zk_pod_spec. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_zk_status. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%2.view. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%4.view. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%6.view. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%8.view. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%10.view. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%12.view. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%13.view. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.kind. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.marshal. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.unmarshal. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%0.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.set_pre_stop. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.set_exec. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_name. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_exec. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_failure_threshold. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_initial_delay_seconds. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_period_seconds. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_success_threshold. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_timeout_seconds. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.set_command. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_metadata. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_spec. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.kind. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.marshal. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.unmarshal. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_access_modes. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_resources. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_storage_class_name. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.pod.impl&%2.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.resource.empty_status. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.set_requests. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_metadata. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_spec. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.kind. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.marshal. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.unmarshal. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_ports. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_selector. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.unset_publish_not_ready_addresses. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_name. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_port. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_metadata. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_spec. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.kind. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.marshal. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.unmarshal. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_replicas. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_selector. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_service_name. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_template. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_volume_claim_templates. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_pvc_retention_policy. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_deleted. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_scaled. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_config_map. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_empty_dir. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%1.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.default. FuelId)
(declare-const fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.set_name. FuelId)
(declare-const fuel%zookeeper_controller!reconciler.exec.resource_builder.resource_res_to_view. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.trusted.config_map.make_zk_config. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%1.view. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.well_formed. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.controller_owner_ref. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.default. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.kind. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.marshal. FuelId)
(declare-const fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.unmarshal. FuelId)
(assert (distinct fuel%vstd!std_specs.option.impl&%0.is_Some. fuel%vstd!std_specs.option.impl&%0.get_Some_0. fuel%vstd!std_specs.option.is_some. fuel%vstd!std_specs.option.spec_unwrap. fuel%vstd!std_specs.result.impl&%0.is_Ok. fuel%vstd!std_specs.result.impl&%0.get_Ok_0. fuel%vstd!std_specs.result.is_ok. fuel%vstd!map.impl&%0.new. fuel%vstd!map.impl&%0.spec_index. fuel%vstd!map_lib.impl&%0.union_prefer_right. fuel%vstd!seq.impl&%0.spec_index. fuel%vstd!seq.impl&%0.spec_add. fuel%vstd!seq_lib.impl&%0.map_values. fuel%vstd!seq_lib.impl&%0.add_empty_left. fuel%vstd!seq_lib.impl&%0.add_empty_right. fuel%vstd!seq_lib.impl&%0.push_distributes_over_add. fuel%vstd!seq_lib.impl&%0.contains. fuel%vstd!seq_lib.impl&%0.to_set. fuel%vstd!seq_lib.check_argument_is_seq. fuel%vstd!set.impl&%0.choose. fuel%vstd!view.impl&%0.view. fuel%vstd!view.impl&%1.view. fuel%vstd!view.impl&%2.view. fuel%vstd!view.impl&%3.view. fuel%vstd!view.impl&%4.view. fuel%vstd!view.impl&%5.view. fuel%vstd!view.impl&%11.view. fuel%vstd!view.impl&%14.view. fuel%vstd!view.impl&%19.view. fuel%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.impl&%0.requirements. fuel%zookeeper_controller!zookeeper_controller.exec.resource.client_service.impl&%0.requirements. fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.get_request. fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.make. fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.update. fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.state_after_create. fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.state_after_update. fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_key. fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_name. fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.update_admin_server_service. fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service. fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.get_request. fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.make. fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.update. fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.state_after_create. fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.state_after_update. fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_key. fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_name. fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.update_client_service. fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service. fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_base_labels. fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_labels. fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references. fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_service. fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.get_request. fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.make. fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.update. fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.state_after_create. fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.state_after_update. fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_key. fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_name. fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map. fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.update_config_map. fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_config. fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_quiet_config. fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_env_config. fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.get_request. fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.make. fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.update. fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.state_after_create. fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.state_after_update. fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_key. fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_name. fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_stateful_set. fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set. fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_zk_pod_spec. fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_zk_status. fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%2.view. fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%4.view. fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%6.view. fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%8.view. fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%10.view. fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%12.view. fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%13.view. fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view. fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.kind. fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.marshal. fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.unmarshal. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%0.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.set_pre_stop. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.set_exec. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_name. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_exec. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_failure_threshold. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_initial_delay_seconds. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_period_seconds. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_success_threshold. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_timeout_seconds. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.set_command. fuel%zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels. fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains. fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name. fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels. fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations. fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references. fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers. fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_metadata. fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_spec. fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.kind. fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.marshal. fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.unmarshal. fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_access_modes. fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_resources. fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_storage_class_name. fuel%zookeeper_controller!kubernetes_api_objects.spec.pod.impl&%2.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata. fuel%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec. fuel%zookeeper_controller!kubernetes_api_objects.spec.resource.empty_status. fuel%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.set_requests. fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_metadata. fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_spec. fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.kind. fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.marshal. fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.unmarshal. fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_ports. fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_selector. fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.unset_publish_not_ready_addresses. fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_name. fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_port. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_metadata. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_spec. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.kind. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.marshal. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.unmarshal. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_replicas. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_selector. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_service_name. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_template. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_volume_claim_templates. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_pvc_retention_policy. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_deleted. fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_scaled. fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_config_map. fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name. fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_empty_dir. fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%1.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.default. fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.set_name. fuel%zookeeper_controller!reconciler.exec.resource_builder.resource_res_to_view. fuel%zookeeper_controller!zookeeper_controller.trusted.config_map.make_zk_config. fuel%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%1.view. fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.well_formed. fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.controller_owner_ref. fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.default. fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.kind. fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.marshal. fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.unmarshal.))
(set-info :comment ";; Associated-Type-Decls")
(declare-fun proj%%vstd!view.View./V (Dcr Type) Dcr)
(declare-fun proj%vstd!view.View./V (Dcr Type) Type)
(declare-fun proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec (Dcr Type) Dcr)
(declare-fun proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec (Dcr Type) Type)
(declare-fun proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status (Dcr Type) Dcr)
(declare-fun proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status (Dcr Type) Type)
(set-info :comment ";; Datatypes")
(declare-sort alloc!alloc.Global. 0)
(declare-sort alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. 0)
(declare-sort alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. 0)
(declare-sort vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. 0)
(declare-sort vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. 0)
(declare-sort vstd!string.String. 0)
(declare-sort zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. 0)
(declare-sort zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. 0)
(declare-sort zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. 0)
(declare-sort zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. 0)
(declare-sort zookeeper_controller!kubernetes_api_objects.exec.service.Service. 0)
(declare-sort zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. 0)
(declare-sort zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. 0)
(declare-sort zookeeper_controller!vstd_ext.string_map.StringMap. 0)
(declare-sort zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. 0)
(declare-sort zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. 0)
(declare-sort zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. 0)
(declare-datatypes ((core!option.Option. 0) (core!result.Result. 0) (zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder. 0) (zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. 0) (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. 0) (zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. 0) (zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. 0) (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. 0) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. 0) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. 0) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. 0) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. 0) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. 0) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. 0) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. 0) (zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView. 0) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. 0) (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. 0) (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. 0) (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. 0) (zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. 0) (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. 0) (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. 0) (zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. 0) (zookeeper_controller!kubernetes_api_objects.spec.common.Kind. 0) (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. 0) (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. 0) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. 0) (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. 0) (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. 0) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. 0) (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. 0) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. 0) (zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. 0) (zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. 0) (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. 0) (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. 0) (zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView. 0) (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. 0) (zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. 0) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. 0) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. 0) (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. 0) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. 0) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. 0) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. 0) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. 0) (zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. 0) (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. 0) (zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. 0) (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. 0) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. 0) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. 0) (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. 0) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. 0) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. 0) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. 0) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. 0) (zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView. 0) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. 0) (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. 0) (zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. 0) (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. 0) (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. 0) (zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. 0) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. 0) (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. 0) (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. 0) (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. 0) (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. 0) (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. 0) (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. 0) (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. 0) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. 0) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. 0) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. 0) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. 0) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. 0) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. 0) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView. 0) (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. 0) (zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. 0) (zookeeper_controller!zookeeper_controller.trusted.step.SubResource. 0) (zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. 0) (tuple%0. 0) (tuple%2. 0)) (((core!option.Option./None ) (core!option.Option./Some (core!option.Option./Some/?0 Poly))) ((core!result.Result./Ok (core!result.Result./Ok/?0 Poly)) (core!result.Result./Err (core!result.Result./Err/?0 Poly))) ((zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder./AdminServerServiceBuilder )) ((zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder./ClientServiceBuilder )) ((zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder./AdminServerServiceBuilder )) ((zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder./ClientServiceBuilder )) ((zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder./ConfigMapBuilder )) ((zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder./StatefulSetBuilder )) ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest/?0 zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest/?0 zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest/?0 zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest/?0 zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest/?0 zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest/?0 zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.))) ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/?api_resource zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/?name vstd!string.String.) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/?namespace vstd!string.String.))) ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/?api_resource zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/?namespace vstd!string.String.))) ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/?api_resource zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/?namespace vstd!string.String.) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/?obj zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.))) ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/?api_resource zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/?name vstd!string.String.) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/?namespace vstd!string.String.))) ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?api_resource zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?name vstd!string.String.) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?namespace vstd!string.String.) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?obj zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.))) ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?api_resource zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?name vstd!string.String.) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?namespace vstd!string.String.) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?obj zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.))) ((zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView./AffinityView )) ((zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/?0 zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/?0 zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/?0 zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/?0 zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/?0 zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/?0 zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.))) ((zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/?key zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.))) ((zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/?kind zookeeper_controller!kubernetes_api_objects.spec.common.Kind.) (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/?namespace Poly))) ((zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/?namespace Poly) (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/?obj zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) ((zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest (zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/?key zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.))) ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?namespace Poly) (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?name Poly) (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?obj zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?namespace Poly) (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?name Poly) (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?obj zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) ((zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView (zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/?kind zookeeper_controller!kubernetes_api_objects.spec.common.Kind.))) ((zookeeper_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind ) (zookeeper_controller!kubernetes_api_objects.spec.common.Kind./CustomResourceKind ) (zookeeper_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind ) (zookeeper_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind ) (zookeeper_controller!kubernetes_api_objects.spec.common.Kind./PodKind ) (zookeeper_controller!kubernetes_api_objects.spec.common.Kind./RoleKind ) (zookeeper_controller!kubernetes_api_objects.spec.common.Kind./RoleBindingKind ) (zookeeper_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind ) (zookeeper_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind ) (zookeeper_controller!kubernetes_api_objects.spec.common.Kind./ServiceAccountKind ) (zookeeper_controller!kubernetes_api_objects.spec.common.Kind./SecretKind )) ((zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?kind zookeeper_controller!kubernetes_api_objects.spec.common.Kind.) (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?name Poly) (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?namespace Poly))) ((zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/?metadata zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/?data core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?env core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?image core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?name Poly) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?ports core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?volume_mounts core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?lifecycle core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?resources core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?readiness_probe core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?liveness_probe core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?command core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?image_pull_policy core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?args core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?security_context core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/?pre_stop core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/?exec_ core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?container_port Int) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?name core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?protocol core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?mount_path Poly) (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?name Poly) (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?read_only core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?sub_path core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?mount_propagation core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?exec_ core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?failure_threshold core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?initial_delay_seconds core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?period_seconds core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?success_threshold core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?tcp_socket core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?timeout_seconds core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView (zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/?command core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView (zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/?host core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/?port Int))) ((zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?name Poly) (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?value core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?value_from core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/?field_ref core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView./SecurityContextView )) ((zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?kind zookeeper_controller!kubernetes_api_objects.spec.common.Kind.) (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?metadata zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?spec zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?status zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.))) ((zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView (zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/?match_labels core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Null ) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Bool (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Bool/?0 Bool)) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Nat (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Nat/?0 Int)) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Int (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Int/?0 Int)) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./String (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./String/?0 Poly)) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Array (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Array/?0 vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/?0 Poly)) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object/?0 vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.))) ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?name core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?namespace core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?resource_version core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?uid core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?labels core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?annotations core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?owner_references core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?finalizers core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?deletion_timestamp core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?block_owner_deletion core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?controller core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?kind zookeeper_controller!kubernetes_api_objects.spec.common.Kind.) (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?name Poly) (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?uid Int))) ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/?metadata zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/?spec core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/?status core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/?storage_class_name core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/?access_modes core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/?resources core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?affinity core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?containers vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?volumes core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?init_containers core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?service_account_name core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?tolerations core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?node_selector core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?runtime_class_name core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?dns_policy core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?priority_class_name core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?scheduler_name core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?security_context core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?host_network core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?termination_grace_period_seconds core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?image_pull_secrets core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView./PodSecurityContextView )) ((zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView./LocalObjectReferenceView )) ((zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/?metadata core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/?spec core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView./EmptyStatusView )) ((zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/?limits core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/?requests core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/?metadata zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/?spec core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/?status core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?cluster_ip core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?ports core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?selector core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?publish_not_ready_addresses core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?name core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?port Int) (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?app_protocol core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?protocol core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/?metadata zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/?spec core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/?status core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?replicas core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?selector zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?service_name Poly) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?template zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?volume_claim_templates core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?pod_management_policy core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?persistent_volume_claim_retention_policy core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/?when_deleted core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/?when_scaled core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/?ready_replicas core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView./TolerationView )) ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?host_path core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?config_map core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?name Poly) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?projected core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?secret core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?downward_api core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?empty_dir core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/?medium core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/?size_limit core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView (zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/?path Poly))) ((zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/?name core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/?secret_name core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView (zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/?sources core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/?config_map core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/?secret core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/?items core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/?name core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/?items core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/?name core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/?key Poly) (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/?path Poly))) ((zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/?items core!option.Option.))) ((zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/?field_ref core!option.Option.) (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/?path Poly))) ((zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/?field_path Poly) (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/?api_version core!option.Option.))) ((zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/?reconcile_step zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.) (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/?latest_config_map_rv_opt core!option.Option.))) ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/?reconcile_step zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/?latest_config_map_rv_opt core!option.Option.))) ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/?metadata zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/?spec zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/?status core!option.Option.))) ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?replicas Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?image Poly) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?ports zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?conf zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?persistence zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?resources core!option.Option.) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?affinity core!option.Option.) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?tolerations core!option.Option.) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?node_selector Poly) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?labels Poly) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?annotations Poly))) ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/?client Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/?quorum Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/?leader_election Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/?metrics Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/?admin_server Int))) ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?init_limit Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?tick_time Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?sync_limit Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?global_outstanding_limit Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?pre_alloc_size Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?snap_count Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?commit_log_count Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?snap_size_limit_in_kb Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?max_cnxns Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?max_client_cnxns Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?min_session_timeout Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?max_session_timeout Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?auto_purge_snap_retain_count Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?auto_purge_purge_interval Int) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?quorum_listen_on_all_ips Bool))) ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/?enabled Bool) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/?storage_size Poly) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/?storage_class_name Poly))) ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView./ZookeeperClusterStatusView (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView./ZookeeperClusterStatusView/?ready_replicas Int))) ((zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./Init ) (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep/?0 zookeeper_controller!zookeeper_controller.trusted.step.ActionKind.) (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep/?1 zookeeper_controller!zookeeper_controller.trusted.step.SubResource.)) (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterExistsStatefulSet ) (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterExistsZKNode ) (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterCreateZKParentNode ) (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterCreateZKNode ) (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterUpdateZKNode ) (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterUpdateStatus ) (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./Done ) (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./Error )) ((zookeeper_controller!zookeeper_controller.trusted.step.ActionKind./Get ) (zookeeper_controller!zookeeper_controller.trusted.step.ActionKind./Update ) (zookeeper_controller!zookeeper_controller.trusted.step.ActionKind./Create )) ((zookeeper_controller!zookeeper_controller.trusted.step.SubResource./HeadlessService ) (zookeeper_controller!zookeeper_controller.trusted.step.SubResource./ClientService ) (zookeeper_controller!zookeeper_controller.trusted.step.SubResource./AdminServerService ) (zookeeper_controller!zookeeper_controller.trusted.step.SubResource./ConfigMap ) (zookeeper_controller!zookeeper_controller.trusted.step.SubResource./StatefulSet )) ((zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./MissingField ) (zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnexpectedType ) (zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError ) (zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./ExecError )) ((tuple%0./tuple%0 )) ((tuple%2./tuple%2 (tuple%2./tuple%2/?0 Poly) (tuple%2./tuple%2/?1 Poly)))))
(declare-fun core!option.Option./Some/0 (core!option.Option.) Poly)
(declare-fun core!result.Result./Ok/0 (core!result.Result.) Poly)
(declare-fun core!result.Result./Err/0 (core!result.Result.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest/0 (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest/0 (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest/0 (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest/0 (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest/0 (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest/0 (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/api_resource (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/name (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) vstd!string.String.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/namespace (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) vstd!string.String.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/api_resource (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/namespace (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) vstd!string.String.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/api_resource (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/namespace (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) vstd!string.String.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/obj (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/api_resource (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/name (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) vstd!string.String.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/namespace (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) vstd!string.String.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/api_resource (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/name (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) vstd!string.String.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/namespace (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) vstd!string.String.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/obj (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/api_resource (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/name (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) vstd!string.String.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/namespace (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) vstd!string.String.)
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/obj (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.) zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/kind (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.) zookeeper_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind (zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.) zookeeper_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.) zookeeper_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/container_port (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.) Int)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command (zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host (zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/port (zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) Int)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) zookeeper_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels (zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Bool/0 (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) Bool)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) Int)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Int/0 (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) Int)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./String/0 (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/kind (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) zookeeper_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/uid (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) Int)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/storage_class_name (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/access_modes (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/resources (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/name (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/port (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.) Int)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_deleted (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_scaled (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/ready_replicas (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path (zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources (zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) core!option.Option.)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) core!option.Option.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/reconcile_step (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.) zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.) core!option.Option.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/reconcile_step (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.) zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.) core!option.Option.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/status (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) core!option.Option.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/replicas (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/image (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) Poly)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/persistence (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/resources (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/affinity (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/tolerations (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) core!option.Option.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/node_selector (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) Poly)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/labels (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) Poly)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/annotations (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) Poly)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/client (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/quorum (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/leader_election (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/metrics (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/admin_server (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/init_limit (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/tick_time (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/sync_limit (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/global_outstanding_limit (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/pre_alloc_size (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/snap_count (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/commit_log_count (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/snap_size_limit_in_kb (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/max_cnxns (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/max_client_cnxns (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/min_session_timeout (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/max_session_timeout (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/auto_purge_snap_retain_count (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/auto_purge_purge_interval (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/quorum_listen_on_all_ips (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Bool)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/enabled (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.) Bool)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/storage_size (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.) Poly)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/storage_class_name (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.) Poly)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView./ZookeeperClusterStatusView/ready_replicas (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView.) Int)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep/0 (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.) zookeeper_controller!zookeeper_controller.trusted.step.ActionKind.)
(declare-fun zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep/1 (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.) zookeeper_controller!zookeeper_controller.trusted.step.SubResource.)
(declare-fun tuple%2./tuple%2/0 (tuple%2.) Poly)
(declare-fun tuple%2./tuple%2/1 (tuple%2.) Poly)
(declare-fun TYPE%fun%1. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%core!option.Option. (Dcr Type) Type)
(declare-fun TYPE%core!result.Result. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%alloc!vec.Vec. (Dcr Type Dcr Type) Type)
(declare-const TYPE%alloc!alloc.Global. Type)
(declare-fun TYPE%vstd!map.Map. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%vstd!seq.Seq. (Dcr Type) Type)
(declare-fun TYPE%vstd!set.Set. (Dcr Type) Type)
(declare-const TYPE%vstd!string.String. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. Type)
(declare-const TYPE%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. Type)
(declare-const TYPE%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. Type)
(declare-const TYPE%zookeeper_controller!vstd_ext.string_map.StringMap. Type)
(declare-const TYPE%tuple%0. Type)
(declare-fun TYPE%tuple%2. (Dcr Type Dcr Type) Type)
(declare-fun Poly%fun%1. (%%Function%%) Poly)
(declare-fun %Poly%fun%1. (Poly) %%Function%%)
(declare-fun Poly%alloc!alloc.Global. (alloc!alloc.Global.) Poly)
(declare-fun %Poly%alloc!alloc.Global. (Poly) alloc!alloc.Global.)
(declare-fun Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. (alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.) Poly)
(declare-fun %Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. (Poly) alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.)
(declare-fun Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. (alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>.) Poly)
(declare-fun %Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. (Poly) alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>.)
(declare-fun Poly%vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.) Poly)
(declare-fun %Poly%vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (Poly) vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>.)
(declare-fun Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>.)
(declare-fun Poly%vstd!string.String. (vstd!string.String.) Poly)
(declare-fun %Poly%vstd!string.String. (Poly) vstd!string.String.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (Poly) zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly) zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. (Poly) zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. (zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. (Poly) zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (zookeeper_controller!kubernetes_api_objects.exec.service.Service.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (Poly) zookeeper_controller!kubernetes_api_objects.exec.service.Service.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. (zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. (Poly) zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. (zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. (Poly) zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.)
(declare-fun Poly%zookeeper_controller!vstd_ext.string_map.StringMap. (zookeeper_controller!vstd_ext.string_map.StringMap.) Poly)
(declare-fun %Poly%zookeeper_controller!vstd_ext.string_map.StringMap. (Poly) zookeeper_controller!vstd_ext.string_map.StringMap.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. (Poly) zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. (Poly) zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. (Poly) zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts.)
(declare-fun Poly%core!option.Option. (core!option.Option.) Poly)
(declare-fun %Poly%core!option.Option. (Poly) core!option.Option.)
(declare-fun Poly%core!result.Result. (core!result.Result.) Poly)
(declare-fun %Poly%core!result.Result. (Poly) core!result.Result.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder. (zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder. (Poly) zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. (zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. (Poly) zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. (Poly) zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. (zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. (Poly) zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. (zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. (Poly) zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. (Poly) zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. (Poly) zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. (Poly) zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. (Poly) zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. (Poly) zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. (Poly) zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. (Poly) zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. (Poly) zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView. (zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly) zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly) zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. (Poly) zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly) zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (Poly) zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly) zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (Poly) zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.common.Kind.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (Poly) zookeeper_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly) zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView. (zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (Poly) zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView. (zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. (Poly) zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. (Poly) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (Poly) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (Poly) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView. (Poly) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (Poly) zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. (zookeeper_controller!zookeeper_controller.trusted.step.ActionKind.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. (Poly) zookeeper_controller!zookeeper_controller.trusted.step.ActionKind.)
(declare-fun Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. (zookeeper_controller!zookeeper_controller.trusted.step.SubResource.) Poly)
(declare-fun %Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. (Poly) zookeeper_controller!zookeeper_controller.trusted.step.SubResource.)
(declare-fun Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. (zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError.) Poly)
(declare-fun %Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. (Poly) zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)
(declare-fun Poly%tuple%0. (tuple%0.) Poly)
(declare-fun %Poly%tuple%0. (Poly) tuple%0.)
(declare-fun Poly%tuple%2. (tuple%2.) Poly)
(declare-fun %Poly%tuple%2. (Poly) tuple%2.)
(assert (forall ((x %%Function%%)) (! (= x (%Poly%fun%1. (Poly%fun%1. x))) :pattern ((Poly%fun%1. x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x Poly)) (! (=> (has_type x (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (= x (Poly%fun%1. (%Poly%fun%1. x)))) :pattern ((has_type x (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) )))
(declare-fun %%apply%%0 (%%Function%% Poly) Poly)
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x %%Function%%)) (! (=> (forall ((T%0 Poly)) (! (=> (has_type T%0 T%0&) (has_type (%%apply%%0 x T%0) T%1&)) :pattern ((has_type (%%apply%%0 x T%0) T%1&)) )) (has_type (Poly%fun%1. (mk_fun x)) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) :pattern ((has_type (Poly%fun%1. (mk_fun x)) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%0 Poly) (x %%Function%%)) (! (=> (and (has_type (Poly%fun%1. x) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (has_type T%0 T%0&)) (has_type (%%apply%%0 x T%0) T%1&)) :pattern ((%%apply%%0 x T%0) (has_type (Poly%fun%1. x) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%0 Poly) (x %%Function%%)) (! (=> (and (has_type (Poly%fun%1. x) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (has_type T%0 T%0&)) (height_lt (height (%%apply%%0 x T%0)) (height (fun_from_recursive_field (Poly%fun%1. (mk_fun x)))))) :pattern ((height (%%apply%%0 x T%0)) (has_type (Poly%fun%1. x) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (has_type y (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (forall ((T%0 Poly)) (! (=> (has_type T%0 T%0&) (ext_eq deep T%1& (%%apply%%0 (%Poly%fun%1. x) T%0) (%%apply%%0 (%Poly%fun%1. y) T%0))) :pattern ((ext_eq deep T%1& (%%apply%%0 (%Poly%fun%1. x) T%0) (%%apply%%0 (%Poly%fun%1. y) T%0))) ))) (ext_eq deep (TYPE%fun%1. T%0&. T%0& T%1&. T%1&) x y)) :pattern ((ext_eq deep (TYPE%fun%1. T%0&. T%0& T%1&. T%1&) x y)) )))
(assert (forall ((x alloc!alloc.Global.)) (! (= x (%Poly%alloc!alloc.Global. (Poly%alloc!alloc.Global. x))) :pattern ((Poly%alloc!alloc.Global. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%alloc!alloc.Global.) (= x (Poly%alloc!alloc.Global. (%Poly%alloc!alloc.Global. x)))) :pattern ((has_type x TYPE%alloc!alloc.Global.)) )))
(assert (forall ((x alloc!alloc.Global.)) (! (has_type (Poly%alloc!alloc.Global. x) TYPE%alloc!alloc.Global.) :pattern ((has_type (Poly%alloc!alloc.Global. x) TYPE%alloc!alloc.Global.)) )))
(assert (forall ((x alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.)) (! (= x (%Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. (Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. x))) :pattern ((Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%alloc!alloc.Global.)) (= x (Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. (%Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. x)))) :pattern ((has_type x (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.)) (! (has_type (Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%alloc!alloc.Global.)) :pattern ((has_type (Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>.)) (! (= x (%Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. (Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. x))) :pattern ((Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. $ TYPE%alloc!alloc.Global.)) (= x (Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. (%Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. x)))) :pattern ((has_type x (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>.)) (! (has_type (Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. $ TYPE%alloc!alloc.Global.)) :pattern ((has_type (Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (= x (%Poly%vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (Poly%vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. x))) :pattern ((Poly%vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!map.Map. $ NAT $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (= x (Poly%vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (%Poly%vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. x)))) :pattern ((has_type x (TYPE%vstd!map.Map. $ NAT $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.))) )))
(assert (forall ((x vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (has_type (Poly%vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. x) (TYPE%vstd!map.Map. $ NAT $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. x) (TYPE%vstd!map.Map. $ NAT $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>.)) (! (= x (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x))) :pattern ((Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (= x (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.))) )))
(assert (forall ((x vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>.)) (! (has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((has_type (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.))) )))
(assert (forall ((x vstd!string.String.)) (! (= x (%Poly%vstd!string.String. (Poly%vstd!string.String. x))) :pattern ((Poly%vstd!string.String. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%vstd!string.String.) (= x (Poly%vstd!string.String. (%Poly%vstd!string.String. x)))) :pattern ((has_type x TYPE%vstd!string.String.)) )))
(assert (forall ((x vstd!string.String.)) (! (has_type (Poly%vstd!string.String. x) TYPE%vstd!string.String.) :pattern ((has_type (Poly%vstd!string.String. x) TYPE%vstd!string.String.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. (Poly%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.service.Service.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.service.Service.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.)) )))
(assert (forall ((x zookeeper_controller!vstd_ext.string_map.StringMap.)) (! (= x (%Poly%zookeeper_controller!vstd_ext.string_map.StringMap. (Poly%zookeeper_controller!vstd_ext.string_map.StringMap. x))) :pattern ((Poly%zookeeper_controller!vstd_ext.string_map.StringMap. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!vstd_ext.string_map.StringMap.) (= x (Poly%zookeeper_controller!vstd_ext.string_map.StringMap. (%Poly%zookeeper_controller!vstd_ext.string_map.StringMap. x)))) :pattern ((has_type x TYPE%zookeeper_controller!vstd_ext.string_map.StringMap.)) )))
(assert (forall ((x zookeeper_controller!vstd_ext.string_map.StringMap.)) (! (has_type (Poly%zookeeper_controller!vstd_ext.string_map.StringMap. x) TYPE%zookeeper_controller!vstd_ext.string_map.StringMap.) :pattern ((has_type (Poly%zookeeper_controller!vstd_ext.string_map.StringMap. x) TYPE%zookeeper_controller!vstd_ext.string_map.StringMap.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts.)) )))
(assert (forall ((x core!option.Option.)) (! (= x (%Poly%core!option.Option. (Poly%core!option.Option. x))) :pattern ((Poly%core!option.Option. x)) )))
(assert (forall ((V&. Dcr) (V& Type) (x Poly)) (! (=> (has_type x (TYPE%core!option.Option. V&. V&)) (= x (Poly%core!option.Option. (%Poly%core!option.Option. x)))) :pattern ((has_type x (TYPE%core!option.Option. V&. V&))) )))
(assert (forall ((V&. Dcr) (V& Type)) (! (has_type (Poly%core!option.Option. core!option.Option./None) (TYPE%core!option.Option. V&. V&)) :pattern ((has_type (Poly%core!option.Option. core!option.Option./None) (TYPE%core!option.Option. V&. V&))) )))
(assert (forall ((V&. Dcr) (V& Type) (_0! Poly)) (! (=> (has_type _0! V&) (has_type (Poly%core!option.Option. (core!option.Option./Some _0!)) (TYPE%core!option.Option. V&. V&))) :pattern ((has_type (Poly%core!option.Option. (core!option.Option./Some _0!)) (TYPE%core!option.Option. V&. V&))) )))
(assert (forall ((x core!option.Option.)) (! (= (core!option.Option./Some/0 x) (core!option.Option./Some/?0 x)) :pattern ((core!option.Option./Some/0 x)) )))
(assert (forall ((V&. Dcr) (V& Type) (x Poly)) (! (=> (has_type x (TYPE%core!option.Option. V&. V&)) (has_type (core!option.Option./Some/0 (%Poly%core!option.Option. x)) V&)) :pattern ((core!option.Option./Some/0 (%Poly%core!option.Option. x)) (has_type x (TYPE%core!option.Option. V&. V&))) )))
(define-fun is-core!option.Option./Some_ ((c core!option.Option.)) Bool ((_ is core!option.Option./Some) c))
(assert (forall ((x core!option.Option.)) (! (=> (is-core!option.Option./Some_ x) (height_lt (height (core!option.Option./Some/0 x)) (height (Poly%core!option.Option. x)))) :pattern ((height (core!option.Option./Some/0 x))) )))
(define-fun is-core!option.Option./None_ ((c core!option.Option.)) Bool ((_ is core!option.Option./None) c))
(assert (forall ((V&. Dcr) (V& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%core!option.Option. V&. V&)) (has_type y (TYPE%core!option.Option. V&. V&)) (is-core!option.Option./None_ (%Poly%core!option.Option. x)) (is-core!option.Option./None_ (%Poly%core!option.Option. y))) (ext_eq deep (TYPE%core!option.Option. V&. V&) x y)) :pattern ((ext_eq deep (TYPE%core!option.Option. V&. V&) x y)) )))
(assert (forall ((V&. Dcr) (V& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%core!option.Option. V&. V&)) (has_type y (TYPE%core!option.Option. V&. V&)) (is-core!option.Option./Some_ (%Poly%core!option.Option. x)) (is-core!option.Option./Some_ (%Poly%core!option.Option. y)) (ext_eq deep V& (core!option.Option./Some/0 (%Poly%core!option.Option. x)) (core!option.Option./Some/0 (%Poly%core!option.Option. y)))) (ext_eq deep (TYPE%core!option.Option. V&. V&) x y)) :pattern ((ext_eq deep (TYPE%core!option.Option. V&. V&) x y)) )))
(assert (forall ((x core!result.Result.)) (! (= x (%Poly%core!result.Result. (Poly%core!result.Result. x))) :pattern ((Poly%core!result.Result. x)) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%core!result.Result. T&. T& E&. E&)) (= x (Poly%core!result.Result. (%Poly%core!result.Result. x)))) :pattern ((has_type x (TYPE%core!result.Result. T&. T& E&. E&))) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (_0! Poly)) (! (=> (has_type _0! T&) (has_type (Poly%core!result.Result. (core!result.Result./Ok _0!)) (TYPE%core!result.Result. T&. T& E&. E&))) :pattern ((has_type (Poly%core!result.Result. (core!result.Result./Ok _0!)) (TYPE%core!result.Result. T&. T& E&. E&))) )))
(assert (forall ((x core!result.Result.)) (! (= (core!result.Result./Ok/0 x) (core!result.Result./Ok/?0 x)) :pattern ((core!result.Result./Ok/0 x)) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%core!result.Result. T&. T& E&. E&)) (has_type (core!result.Result./Ok/0 (%Poly%core!result.Result. x)) T&)) :pattern ((core!result.Result./Ok/0 (%Poly%core!result.Result. x)) (has_type x (TYPE%core!result.Result. T&. T& E&. E&))) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (_0! Poly)) (! (=> (has_type _0! E&) (has_type (Poly%core!result.Result. (core!result.Result./Err _0!)) (TYPE%core!result.Result. T&. T& E&. E&))) :pattern ((has_type (Poly%core!result.Result. (core!result.Result./Err _0!)) (TYPE%core!result.Result. T&. T& E&. E&))) )))
(assert (forall ((x core!result.Result.)) (! (= (core!result.Result./Err/0 x) (core!result.Result./Err/?0 x)) :pattern ((core!result.Result./Err/0 x)) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%core!result.Result. T&. T& E&. E&)) (has_type (core!result.Result./Err/0 (%Poly%core!result.Result. x)) E&)) :pattern ((core!result.Result./Err/0 (%Poly%core!result.Result. x)) (has_type x (TYPE%core!result.Result. T&. T& E&. E&))) )))
(define-fun is-core!result.Result./Ok_ ((c core!result.Result.)) Bool ((_ is core!result.Result./Ok) c))
(assert (forall ((x core!result.Result.)) (! (=> (is-core!result.Result./Ok_ x) (height_lt (height (core!result.Result./Ok/0 x)) (height (Poly%core!result.Result. x)))) :pattern ((height (core!result.Result./Ok/0 x))) )))
(define-fun is-core!result.Result./Err_ ((c core!result.Result.)) Bool ((_ is core!result.Result./Err) c))
(assert (forall ((x core!result.Result.)) (! (=> (is-core!result.Result./Err_ x) (height_lt (height (core!result.Result./Err/0 x)) (height (Poly%core!result.Result. x)))) :pattern ((height (core!result.Result./Err/0 x))) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder. (Poly%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder.) (= x (Poly%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder. (%Poly%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder. x) TYPE%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder. x) TYPE%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. (Poly%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder.) (= x (Poly%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. (%Poly%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. x) TYPE%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. x) TYPE%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. (Poly%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder.) (= x (Poly%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. (%Poly%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. x) TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. x) TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. (Poly%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder.) (= x (Poly%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. (%Poly%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. x) TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. x) TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. (Poly%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder.) (= x (Poly%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. (%Poly%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. x) TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. x) TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. (Poly%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder.) (= x (Poly%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. (%Poly%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. x) TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. x) TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest/0 x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest/0 x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest/0 x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest/0 x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest/0 x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest/0 x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest/0 x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest/0 x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest/0 x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest/0 x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest/0 x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest/0 x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/api_resource x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/?api_resource x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/api_resource x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/name x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/name x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/namespace x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/?namespace x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/namespace x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/api_resource x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/?api_resource x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/api_resource x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/namespace x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/?namespace x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/namespace x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/api_resource x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/?api_resource x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/api_resource x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/namespace x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/?namespace x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/namespace x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/obj x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/?obj x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/obj x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/api_resource x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/?api_resource x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/api_resource x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/name x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/name x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/namespace x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/?namespace x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/namespace x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/api_resource x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?api_resource x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/api_resource x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/name x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/name x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/namespace x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?namespace x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/namespace x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/obj x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?obj x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/obj x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/api_resource x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?api_resource x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/api_resource x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/name x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/name x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/namespace x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?namespace x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/namespace x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/obj x) (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?obj x)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/obj x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. x) TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) (! (=> (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. _0!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (! (=> (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. _0!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (! (=> (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. _0!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) (! (=> (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. _0!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (=> (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. _0!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (=> (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. _0!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) )))
(assert (forall ((_key! zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (=> (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. _key!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest _key!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest _key!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/?key x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) )))
(assert (forall ((_kind! zookeeper_controller!kubernetes_api_objects.spec.common.Kind.) (_namespace! Poly)) (! (=> (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest _kind! _namespace!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest _kind! _namespace!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/kind x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/?kind x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/kind x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/?namespace x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) )))
(assert (forall ((_namespace! Poly) (_obj! zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (=> (and (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. _obj!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest _namespace! _obj!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest _namespace! _obj!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/?namespace x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/?obj x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) )))
(assert (forall ((_key! zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (=> (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. _key!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest _key!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest _key!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/?key x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((_namespace! Poly) (_name! Poly) (_obj! zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (=> (and (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. _obj!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest _namespace! _name! _obj!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest _namespace! _name! _obj!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?namespace x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?obj x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((_namespace! Poly) (_name! Poly) (_obj! zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (=> (and (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. _obj!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest _namespace! _name! _obj!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest _namespace! _name! _obj!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?namespace x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj x) (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?obj x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind x) (zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/?kind x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.common.Kind.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.Kind.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.Kind.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.common.Kind.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.Kind.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.Kind.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) )))
(assert (forall ((_kind! zookeeper_controller!kubernetes_api_objects.spec.common.Kind.) (_name! Poly) (_namespace! Poly)) (! (=> (and (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef _kind! _name! _namespace!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef _kind! _name! _namespace!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind x) (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?kind x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name x) (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace x) (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?namespace x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) )))
(assert (forall ((_metadata! zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_data! core!option.Option.)) (! (=> (and (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _data!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView _metadata! _data!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView _metadata! _data!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata x) (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/?metadata x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data x) (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/?data x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((_env! core!option.Option.) (_image! core!option.Option.) (_name! Poly) (_ports! core!option.Option.) (_volume_mounts! core!option.Option.) (_lifecycle! core!option.Option.) (_resources! core!option.Option.) (_readiness_probe! core!option.Option.) (_liveness_probe! core!option.Option.) (_command! core!option.Option.) (_image_pull_policy! core!option.Option.) (_args! core!option.Option.) (_security_context! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _env!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.))) (has_type (Poly%core!option.Option. _image!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _ports!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.))) (has_type (Poly%core!option.Option. _volume_mounts!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.))) (has_type (Poly%core!option.Option. _lifecycle!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.)) (has_type (Poly%core!option.Option. _resources!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (has_type (Poly%core!option.Option. _readiness_probe!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) (has_type (Poly%core!option.Option. _liveness_probe!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) (has_type (Poly%core!option.Option. _command!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _image_pull_policy!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _args!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _security_context!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView _env! _image! _name! _ports! _volume_mounts! _lifecycle! _resources! _readiness_probe! _liveness_probe! _command! _image_pull_policy! _args! _security_context!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView _env! _image! _name! _ports! _volume_mounts! _lifecycle! _resources! _readiness_probe! _liveness_probe! _command! _image_pull_policy! _args! _security_context!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?env x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?image x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?ports x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?volume_mounts x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?lifecycle x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?resources x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?readiness_probe x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?liveness_probe x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?command x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?image_pull_policy x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?args x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?security_context x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.)) )))
(assert (forall ((_pre_stop! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _pre_stop!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView _pre_stop!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView _pre_stop!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop x) (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/?pre_stop x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) )))
(assert (forall ((_exec_! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _exec_!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView _exec_!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView _exec_!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ x) (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/?exec_ x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) )))
(assert (forall ((_container_port! Int) (_name! core!option.Option.) (_protocol! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _protocol!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView _container_port! _name! _protocol!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView _container_port! _name! _protocol!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/container_port x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?container_port x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/container_port x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol x) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?protocol x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((_mount_path! Poly) (_name! Poly) (_read_only! core!option.Option.) (_sub_path! core!option.Option.) (_mount_propagation! core!option.Option.)) (! (=> (and (has_type _mount_path! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _read_only!) (TYPE%core!option.Option. $ BOOL)) (has_type (Poly%core!option.Option. _sub_path!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _mount_propagation!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView _mount_path! _name! _read_only! _sub_path! _mount_propagation!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView _mount_path! _name! _read_only! _sub_path! _mount_propagation!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path x) (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?mount_path x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name x) (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only x) (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?read_only x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path x) (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?sub_path x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation x) (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?mount_propagation x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((_exec_! core!option.Option.) (_failure_threshold! core!option.Option.) (_initial_delay_seconds! core!option.Option.) (_period_seconds! core!option.Option.) (_success_threshold! core!option.Option.) (_tcp_socket! core!option.Option.) (_timeout_seconds! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _exec_!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (has_type (Poly%core!option.Option. _failure_threshold!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _initial_delay_seconds!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _period_seconds!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _success_threshold!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _tcp_socket!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) (has_type (Poly%core!option.Option. _timeout_seconds!) (TYPE%core!option.Option. $ INT))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView _exec_! _failure_threshold! _initial_delay_seconds! _period_seconds! _success_threshold! _tcp_socket! _timeout_seconds!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView _exec_! _failure_threshold! _initial_delay_seconds! _period_seconds! _success_threshold! _tcp_socket! _timeout_seconds!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ x) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?exec_ x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold x) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?failure_threshold x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds x) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?initial_delay_seconds x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds x) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?period_seconds x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold x) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?success_threshold x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket x) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?tcp_socket x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds x) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?timeout_seconds x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)) )))
(assert (forall ((_command! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _command!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView _command!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView _command!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command x) (zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/?command x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) )))
(assert (forall ((_host! core!option.Option.) (_port! Int)) (! (=> (has_type (Poly%core!option.Option. _host!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView _host! _port!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView _host! _port!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host x) (zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/?host x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/port x) (zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/?port x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/port x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((_name! Poly) (_value! core!option.Option.) (_value_from! core!option.Option.)) (! (=> (and (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _value!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _value_from!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView _name! _value! _value_from!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView _name! _value! _value_from!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name x) (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value x) (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?value x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from x) (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?value_from x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) )))
(assert (forall ((_field_ref! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _field_ref!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView _field_ref!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView _field_ref!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref x) (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/?field_ref x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((_kind! zookeeper_controller!kubernetes_api_objects.spec.common.Kind.) (_metadata! zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) (_status! zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (=> (and (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. _spec!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. _status!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView _kind! _metadata! _spec! _status!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView _kind! _metadata! _spec! _status!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind x) (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?kind x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata x) (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?metadata x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec x) (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?spec x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status x) (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?status x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) )))
(assert (forall ((_match_labels! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _match_labels!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView _match_labels!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView _match_labels!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels x) (zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/?match_labels x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Null) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.))
(assert (forall ((_0! Bool)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Bool _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Bool _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Bool/0 x) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Bool/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Bool/0 x)) )))
(assert (forall ((_0! Int)) (! (=> (<= 0 _0!) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Nat _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Nat _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 x) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Nat/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) (<= 0 (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((_0! Int)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Int _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Int _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Int/0 x) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Int/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Int/0 x)) )))
(assert (forall ((_0! Poly)) (! (=> (has_type _0! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./String _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./String _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./String/0 x) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./String/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./String/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./String/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./String/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((_0! vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Array _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Array _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 x) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Array/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 x)) )))
(assert (forall ((_0! Poly)) (! (=> (has_type _0! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 x) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((_0! vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object _0!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x) (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object/?0 x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x)) )))
(define-fun is-zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Array_ ((c zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) Bool ((_ is zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Array) c))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (=> (is-zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Array_ x) (height_lt (height (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 x))) (height (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((height (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 x)))) )))
(define-fun is-zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object_ ((c zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) Bool ((_ is zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object) c))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (=> (is-zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object_ x) (height_lt (height (Poly%vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x))) (height (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((height (Poly%vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x)))) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (=> (is-zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object_ x) (height_lt (height (fun_from_recursive_field (Poly%vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x)))) (height (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((height (fun_from_recursive_field (Poly%vstd!map.Map<nat./zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.>. (zookeeper_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x))))) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((_name! core!option.Option.) (_namespace! core!option.Option.) (_resource_version! core!option.Option.) (_uid! core!option.Option.) (_labels! core!option.Option.) (_annotations! core!option.Option.) (_owner_references! core!option.Option.) (_finalizers! core!option.Option.) (_deletion_timestamp! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _namespace!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _resource_version!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _uid!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _labels!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _annotations!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _owner_references!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.))) (has_type (Poly%core!option.Option. _finalizers!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _deletion_timestamp!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView _name! _namespace! _resource_version! _uid! _labels! _annotations! _owner_references! _finalizers! _deletion_timestamp!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView _name! _namespace! _resource_version! _uid! _labels! _annotations! _owner_references! _finalizers! _deletion_timestamp!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name x) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace x) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?namespace x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version x) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?resource_version x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid x) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?uid x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels x) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?labels x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations x) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?annotations x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references x) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?owner_references x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers x) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?finalizers x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp x) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?deletion_timestamp x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((_block_owner_deletion! core!option.Option.) (_controller! core!option.Option.) (_kind! zookeeper_controller!kubernetes_api_objects.spec.common.Kind.) (_name! Poly) (_uid! Int)) (! (=> (and (has_type (Poly%core!option.Option. _block_owner_deletion!) (TYPE%core!option.Option. $ BOOL)) (has_type (Poly%core!option.Option. _controller!) (TYPE%core!option.Option. $ BOOL)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView _block_owner_deletion! _controller! _kind! _name! _uid!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView _block_owner_deletion! _controller! _kind! _name! _uid!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion x) (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?block_owner_deletion x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion (%Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion (%Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller x) (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?controller x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller (%Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller (%Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/kind x) (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?kind x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/kind x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name x) (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/uid x) (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?uid x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/uid x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) )))
(assert (forall ((_metadata! zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! core!option.Option.) (_status! core!option.Option.)) (! (=> (and (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _spec!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) (has_type (Poly%core!option.Option. _status!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView _metadata! _spec! _status!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView _metadata! _spec! _status!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata x) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/?metadata x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec x) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/?spec x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status x) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/?status x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) )))
(assert (forall ((_storage_class_name! core!option.Option.) (_access_modes! core!option.Option.) (_resources! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _storage_class_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _access_modes!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _resources!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView _storage_class_name! _access_modes! _resources!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView _storage_class_name! _access_modes! _resources!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/storage_class_name x) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/?storage_class_name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/storage_class_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/storage_class_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/storage_class_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/access_modes x) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/?access_modes x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/access_modes x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/access_modes (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/access_modes (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/resources x) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/?resources x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/resources x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/resources (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/resources (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((_affinity! core!option.Option.) (_containers! vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>.) (_volumes! core!option.Option.) (_init_containers! core!option.Option.) (_service_account_name! core!option.Option.) (_tolerations! core!option.Option.) (_node_selector! core!option.Option.) (_runtime_class_name! core!option.Option.) (_dns_policy! core!option.Option.) (_priority_class_name! core!option.Option.) (_scheduler_name! core!option.Option.) (_security_context! core!option.Option.) (_host_network! core!option.Option.) (_termination_grace_period_seconds! core!option.Option.) (_image_pull_secrets! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _affinity!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) (has_type (Poly%core!option.Option. _volumes!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.))) (has_type (Poly%core!option.Option. _init_containers!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.))) (has_type (Poly%core!option.Option. _service_account_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _tolerations!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.))) (has_type (Poly%core!option.Option. _node_selector!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _runtime_class_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _dns_policy!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _priority_class_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _scheduler_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _security_context!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) (has_type (Poly%core!option.Option. _host_network!) (TYPE%core!option.Option. $ BOOL)) (has_type (Poly%core!option.Option. _termination_grace_period_seconds!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _image_pull_secrets!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView _affinity! _containers! _volumes! _init_containers! _service_account_name! _tolerations! _node_selector! _runtime_class_name! _dns_policy! _priority_class_name! _scheduler_name! _security_context! _host_network! _termination_grace_period_seconds! _image_pull_secrets!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView _affinity! _containers! _volumes! _init_containers! _service_account_name! _tolerations! _node_selector! _runtime_class_name! _dns_policy! _priority_class_name! _scheduler_name! _security_context! _host_network! _termination_grace_period_seconds! _image_pull_secrets!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?affinity x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?containers x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?volumes x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?init_containers x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?service_account_name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?tolerations x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?node_selector x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?runtime_class_name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?dns_policy x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?priority_class_name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?scheduler_name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?security_context x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?host_network x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?termination_grace_period_seconds x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets x) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?image_pull_secrets x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) )))
(assert (forall ((_metadata! core!option.Option.) (_spec! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _metadata!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (has_type (Poly%core!option.Option. _spec!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView _metadata! _spec!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView _metadata! _spec!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata x) (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/?metadata x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec x) (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/?spec x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) )))
(assert (forall ((_limits! core!option.Option.) (_requests! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _limits!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _requests!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView _limits! _requests!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView _limits! _requests!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits x) (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/?limits x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits (%Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits (%Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests x) (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/?requests x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests (%Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests (%Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) )))
(assert (forall ((_metadata! zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! core!option.Option.) (_status! core!option.Option.)) (! (=> (and (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _spec!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) (has_type (Poly%core!option.Option. _status!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView _metadata! _spec! _status!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView _metadata! _spec! _status!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata x) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/?metadata x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec x) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/?spec x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status x) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/?status x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) )))
(assert (forall ((_cluster_ip! core!option.Option.) (_ports! core!option.Option.) (_selector! core!option.Option.) (_publish_not_ready_addresses! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _cluster_ip!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _ports!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.))) (has_type (Poly%core!option.Option. _selector!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _publish_not_ready_addresses!) (TYPE%core!option.Option. $ BOOL))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView _cluster_ip! _ports! _selector! _publish_not_ready_addresses!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView _cluster_ip! _ports! _selector! _publish_not_ready_addresses!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip x) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?cluster_ip x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports x) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?ports x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector x) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?selector x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses x) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/?publish_not_ready_addresses x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) )))
(assert (forall ((_name! core!option.Option.) (_port! Int) (_app_protocol! core!option.Option.) (_protocol! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _app_protocol!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _protocol!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView _name! _port! _app_protocol! _protocol!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView _name! _port! _app_protocol! _protocol!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/name x) (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/port x) (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?port x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/port x)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol x) (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?app_protocol x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol x) (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/?protocol x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) )))
(assert (forall ((_metadata! zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! core!option.Option.) (_status! core!option.Option.)) (! (=> (and (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _spec!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (has_type (Poly%core!option.Option. _status!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView _metadata! _spec! _status!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView _metadata! _spec! _status!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata x) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/?metadata x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec x) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/?spec x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status x) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/?status x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((_replicas! core!option.Option.) (_selector! zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (_service_name! Poly) (_template! zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (_volume_claim_templates! core!option.Option.) (_pod_management_policy! core!option.Option.) (_persistent_volume_claim_retention_policy! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _replicas!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. _selector!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (has_type _service_name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. _template!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type (Poly%core!option.Option. _volume_claim_templates!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.))) (has_type (Poly%core!option.Option. _pod_management_policy!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _persistent_volume_claim_retention_policy!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView _replicas! _selector! _service_name! _template! _volume_claim_templates! _pod_management_policy! _persistent_volume_claim_retention_policy!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView _replicas! _selector! _service_name! _template! _volume_claim_templates! _pod_management_policy! _persistent_volume_claim_retention_policy!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas x) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?replicas x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector x) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?selector x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name x) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?service_name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template x) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?template x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates x) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?volume_claim_templates x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy x) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?pod_management_policy x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy x) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/?persistent_volume_claim_retention_policy x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) )))
(assert (forall ((_when_deleted! core!option.Option.) (_when_scaled! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _when_deleted!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _when_scaled!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView _when_deleted! _when_scaled!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView _when_deleted! _when_scaled!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_deleted x) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/?when_deleted x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_deleted x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_deleted (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_deleted (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_scaled x) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/?when_scaled x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_scaled x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_scaled (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_scaled (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)) )))
(assert (forall ((_ready_replicas! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _ready_replicas!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView _ready_replicas!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView _ready_replicas!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/ready_replicas x) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/?ready_replicas x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/ready_replicas x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/ready_replicas (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/ready_replicas (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView. x) TYPE%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((_host_path! core!option.Option.) (_config_map! core!option.Option.) (_name! Poly) (_projected! core!option.Option.) (_secret! core!option.Option.) (_downward_api! core!option.Option.) (_empty_dir! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _host_path!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) (has_type (Poly%core!option.Option. _config_map!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _projected!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) (has_type (Poly%core!option.Option. _secret!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) (has_type (Poly%core!option.Option. _downward_api!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) (has_type (Poly%core!option.Option. _empty_dir!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView _host_path! _config_map! _name! _projected! _secret! _downward_api! _empty_dir!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView _host_path! _config_map! _name! _projected! _secret! _downward_api! _empty_dir!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path x) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?host_path x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map x) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?config_map x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name x) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected x) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?projected x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret x) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?secret x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api x) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?downward_api x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir x) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?empty_dir x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) )))
(assert (forall ((_medium! core!option.Option.) (_size_limit! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _medium!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (has_type (Poly%core!option.Option. _size_limit!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView _medium! _size_limit!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView _medium! _size_limit!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium x) (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/?medium x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x))) (TYPE%core!option.Option. $ TYPE%vstd!string.String.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit x) (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/?size_limit x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) )))
(assert (forall ((_path! Poly)) (! (=> (has_type _path! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView _path!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView _path!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path x) (zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/?path x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) )))
(assert (forall ((_name! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView _name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView _name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name x) (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) )))
(assert (forall ((_secret_name! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _secret_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView _secret_name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView _secret_name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name x) (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/?secret_name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) )))
(assert (forall ((_sources! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _sources!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView _sources!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView _sources!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources x) (zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/?sources x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) )))
(assert (forall ((_config_map! core!option.Option.) (_secret! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _config_map!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) (has_type (Poly%core!option.Option. _secret!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView _config_map! _secret!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView _config_map! _secret!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map x) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/?config_map x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret x) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/?secret x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) )))
(assert (forall ((_items! core!option.Option.) (_name! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _items!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.))) (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView _items! _name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView _items! _name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items x) (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/?items x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name x) (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) )))
(assert (forall ((_items! core!option.Option.) (_name! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _items!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.))) (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView _items! _name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView _items! _name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items x) (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/?items x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name x) (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/?name x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) )))
(assert (forall ((_key! Poly) (_path! Poly)) (! (=> (and (has_type _key! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _path! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView _key! _path!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView _key! _path!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key x) (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/?key x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path x) (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/?path x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) )))
(assert (forall ((_items! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _items!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView _items!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView _items!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items x) (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/?items x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) )))
(assert (forall ((_field_ref! core!option.Option.) (_path! Poly)) (! (=> (and (has_type (Poly%core!option.Option. _field_ref!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (has_type _path! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView _field_ref! _path!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView _field_ref! _path!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref x) (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/?field_ref x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path x) (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/?path x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) )))
(assert (forall ((_field_path! Poly) (_api_version! core!option.Option.)) (! (=> (and (has_type _field_path! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _api_version!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView _field_path! _api_version!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView _field_path! _api_version!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path x) (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/?field_path x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version x) (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/?api_version x)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)) (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.)) )))
(assert (forall ((_reconcile_step! zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.) (_latest_config_map_rv_opt! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _latest_config_map_rv_opt!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState _reconcile_step! _latest_config_map_rv_opt!)) TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.)) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState _reconcile_step! _latest_config_map_rv_opt!)) TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/reconcile_step x) (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/?reconcile_step x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/reconcile_step x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt x) (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/?latest_config_map_rv_opt x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.) (has_type (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. x))) (TYPE%core!option.Option. $ TYPE%vstd!string.String.))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.)) )))
(assert (forall ((_reconcile_step! zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.) (_latest_config_map_rv_opt! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _latest_config_map_rv_opt!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState _reconcile_step! _latest_config_map_rv_opt!)) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.)) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState _reconcile_step! _latest_config_map_rv_opt!)) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/reconcile_step x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/?reconcile_step x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/reconcile_step x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/?latest_config_map_rv_opt x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.) (has_type (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)) )))
(assert (forall ((_metadata! zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) (_status! core!option.Option.)) (! (=> (and (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. _spec!) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) (has_type (Poly%core!option.Option. _status!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView.))) (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView _metadata! _spec! _status!)) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView _metadata! _spec! _status!)) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/?metadata x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. x))) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/?spec x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. x))) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/status x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/?status x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/status (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView.))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/status (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) )))
(assert (forall ((_replicas! Int) (_image! Poly) (_ports! zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.) (_conf! zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) (_persistence! zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.) (_resources! core!option.Option.) (_affinity! core!option.Option.) (_tolerations! core!option.Option.) (_node_selector! Poly) (_labels! Poly) (_annotations! Poly)) (! (=> (and (has_type _image! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. _persistence!) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.) (has_type (Poly%core!option.Option. _resources!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (has_type (Poly%core!option.Option. _affinity!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) (has_type (Poly%core!option.Option. _tolerations!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.))) (has_type _node_selector! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type _labels! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type _annotations! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView _replicas! _image! _ports! _conf! _persistence! _resources! _affinity! _tolerations! _node_selector! _labels! _annotations!)) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView _replicas! _image! _ports! _conf! _persistence! _resources! _affinity! _tolerations! _node_selector! _labels! _annotations!)) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/replicas x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?replicas x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/replicas x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/image x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?image x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/image x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) (has_type (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/image (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/image (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?ports x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?conf x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/persistence x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?persistence x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/persistence x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/persistence (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x))) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/persistence (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/resources x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?resources x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/resources x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/resources (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/resources (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/affinity x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?affinity x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/affinity x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/affinity (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x))) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.affinity.AffinityView.))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/affinity (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/tolerations x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?tolerations x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/tolerations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) (has_type (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/tolerations (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.toleration.TolerationView.)))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/tolerations (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/node_selector x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?node_selector x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/node_selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) (has_type (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/node_selector (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/node_selector (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/labels x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?labels x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/labels x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) (has_type (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/labels (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/labels (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/annotations x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/?annotations x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/annotations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.) (has_type (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/annotations (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/annotations (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/client x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/?client x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/client x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/quorum x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/?quorum x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/quorum x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/leader_election x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/?leader_election x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/leader_election x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/metrics x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/?metrics x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/metrics x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/admin_server x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/?admin_server x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/admin_server x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/init_limit x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?init_limit x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/init_limit x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/tick_time x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?tick_time x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/tick_time x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/sync_limit x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?sync_limit x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/sync_limit x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/global_outstanding_limit x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?global_outstanding_limit x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/global_outstanding_limit x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/pre_alloc_size x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?pre_alloc_size x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/pre_alloc_size x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/snap_count x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?snap_count x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/snap_count x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/commit_log_count x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?commit_log_count x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/commit_log_count x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/snap_size_limit_in_kb x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?snap_size_limit_in_kb x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/snap_size_limit_in_kb x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/max_cnxns x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?max_cnxns x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/max_cnxns x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/max_client_cnxns x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?max_client_cnxns x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/max_client_cnxns x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/min_session_timeout x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?min_session_timeout x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/min_session_timeout x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/max_session_timeout x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?max_session_timeout x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/max_session_timeout x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/auto_purge_snap_retain_count x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?auto_purge_snap_retain_count x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/auto_purge_snap_retain_count x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/auto_purge_purge_interval x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?auto_purge_purge_interval x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/auto_purge_purge_interval x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/quorum_listen_on_all_ips x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/?quorum_listen_on_all_ips x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/quorum_listen_on_all_ips x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.)) )))
(assert (forall ((_enabled! Bool) (_storage_size! Poly) (_storage_class_name! Poly)) (! (=> (and (has_type _storage_size! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _storage_class_name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView _enabled! _storage_size! _storage_class_name!)) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.)) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView _enabled! _storage_size! _storage_class_name!)) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/enabled x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/?enabled x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/enabled x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/storage_size x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/?storage_size x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/storage_size x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.) (has_type (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/storage_size (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/storage_size (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/storage_class_name x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/?storage_class_name x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/storage_class_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.) (has_type (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/storage_class_name (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/storage_class_name (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. x)) (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView. (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView./ZookeeperClusterStatusView/ready_replicas x) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView./ZookeeperClusterStatusView/?ready_replicas x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView./ZookeeperClusterStatusView/ready_replicas x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep/0 x) (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep/?0 x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep/0 x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.)) (! (= (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep/1 x) (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep/?1 x)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep/1 x)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.step.ActionKind.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.step.ActionKind.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.step.SubResource.)) (! (= x (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. x))) :pattern ((Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.step.SubResource.) (= x (Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. x)))) :pattern ((has_type x TYPE%zookeeper_controller!zookeeper_controller.trusted.step.SubResource.)) )))
(assert (forall ((x zookeeper_controller!zookeeper_controller.trusted.step.SubResource.)) (! (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.step.SubResource.) :pattern ((has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. x) TYPE%zookeeper_controller!zookeeper_controller.trusted.step.SubResource.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) (! (= x (%Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x))) :pattern ((Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError.) (= x (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. (%Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x)))) :pattern ((has_type x TYPE%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) )))
(assert (forall ((x zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) (! (has_type (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x) TYPE%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError.) :pattern ((has_type (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x) TYPE%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) )))
(assert (forall ((x tuple%0.)) (! (= x (%Poly%tuple%0. (Poly%tuple%0. x))) :pattern ((Poly%tuple%0. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%tuple%0.) (= x (Poly%tuple%0. (%Poly%tuple%0. x)))) :pattern ((has_type x TYPE%tuple%0.)) )))
(assert (forall ((x tuple%0.)) (! (has_type (Poly%tuple%0. x) TYPE%tuple%0.) :pattern ((has_type (Poly%tuple%0. x) TYPE%tuple%0.)) )))
(assert (forall ((x tuple%2.)) (! (= x (%Poly%tuple%2. (Poly%tuple%2. x))) :pattern ((Poly%tuple%2. x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x Poly)) (! (=> (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (= x (Poly%tuple%2. (%Poly%tuple%2. x)))) :pattern ((has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (_0! Poly) (_1! Poly)) (! (=> (and (has_type _0! T%0&) (has_type _1! T%1&)) (has_type (Poly%tuple%2. (tuple%2./tuple%2 _0! _1!)) (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) :pattern ((has_type (Poly%tuple%2. (tuple%2./tuple%2 _0! _1!)) (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((x tuple%2.)) (! (= (tuple%2./tuple%2/0 x) (tuple%2./tuple%2/?0 x)) :pattern ((tuple%2./tuple%2/0 x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x Poly)) (! (=> (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (has_type (tuple%2./tuple%2/0 (%Poly%tuple%2. x)) T%0&)) :pattern ((tuple%2./tuple%2/0 (%Poly%tuple%2. x)) (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((x tuple%2.)) (! (= (tuple%2./tuple%2/1 x) (tuple%2./tuple%2/?1 x)) :pattern ((tuple%2./tuple%2/1 x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x Poly)) (! (=> (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (has_type (tuple%2./tuple%2/1 (%Poly%tuple%2. x)) T%1&)) :pattern ((tuple%2./tuple%2/1 (%Poly%tuple%2. x)) (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) )))
(define-fun is-tuple%2./tuple%2_ ((c tuple%2.)) Bool ((_ is tuple%2./tuple%2) c))
(assert (forall ((x tuple%2.)) (! (=> (is-tuple%2./tuple%2_ x) (height_lt (height (tuple%2./tuple%2/0 x)) (height (Poly%tuple%2. x)))) :pattern ((height (tuple%2./tuple%2/0 x))) )))
(assert (forall ((x tuple%2.)) (! (=> (is-tuple%2./tuple%2_ x) (height_lt (height (tuple%2./tuple%2/1 x)) (height (Poly%tuple%2. x)))) :pattern ((height (tuple%2./tuple%2/1 x))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (has_type y (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (ext_eq deep T%0& (tuple%2./tuple%2/0 (%Poly%tuple%2. x)) (tuple%2./tuple%2/0 (%Poly%tuple%2. y))) (ext_eq deep T%1& (tuple%2./tuple%2/1 (%Poly%tuple%2. x)) (tuple%2./tuple%2/1 (%Poly%tuple%2. y)))) (ext_eq deep (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&) x y)) :pattern ((ext_eq deep (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&) x y)) )))
(set-info :comment ";; Traits")
(declare-fun tr_bound%vstd!view.View. (Dcr Type) Bool)
(declare-fun tr_bound%vstd!std_specs.option.OptionAdditionalFns. (Dcr Type Dcr Type) Bool)
(declare-fun tr_bound%vstd!std_specs.result.ResultAdditionalSpecFns. (Dcr Type Dcr Type Dcr Type) Bool)
(declare-fun tr_bound%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView. (Dcr Type) Bool)
(declare-fun tr_bound%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder. (Dcr Type Dcr Type Dcr Type Dcr Type) Bool)
(declare-fun tr_bound%zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder. (Dcr Type Dcr Type Dcr Type) Bool)
(set-info :comment ";; Associated-Type-Impls")
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%%vstd!view.View./V (REF A&.) A&) (proj%%vstd!view.View./V A&. A&)) :pattern ((proj%%vstd!view.View./V (REF A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%vstd!view.View./V (REF A&.) A&) (proj%vstd!view.View./V A&. A&)) :pattern ((proj%vstd!view.View./V (REF A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%%vstd!view.View./V (BOX A&.) A&) (proj%%vstd!view.View./V A&. A&)) :pattern ((proj%%vstd!view.View./V (BOX A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%vstd!view.View./V (BOX A&.) A&) (proj%vstd!view.View./V A&. A&)) :pattern ((proj%vstd!view.View./V (BOX A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%%vstd!view.View./V (RC A&.) A&) (proj%%vstd!view.View./V A&. A&)) :pattern ((proj%%vstd!view.View./V (RC A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%vstd!view.View./V (RC A&.) A&) (proj%vstd!view.View./V A&. A&)) :pattern ((proj%vstd!view.View./V (RC A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%%vstd!view.View./V (ARC A&.) A&) (proj%%vstd!view.View./V A&. A&)) :pattern ((proj%%vstd!view.View./V (ARC A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%vstd!view.View./V (ARC A&.) A&) (proj%vstd!view.View./V A&. A&)) :pattern ((proj%vstd!view.View./V (ARC A&.) A&)) )))
(assert (= (proj%%vstd!view.View./V $ TYPE%tuple%0.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%tuple%0.) TYPE%tuple%0.))
(assert (= (proj%%vstd!view.View./V $ BOOL) $))
(assert (= (proj%vstd!view.View./V $ BOOL) BOOL))
(assert (= (proj%%vstd!view.View./V $ (UINT SZ)) $))
(assert (= (proj%vstd!view.View./V $ (UINT SZ)) (UINT SZ)))
(assert (= (proj%%vstd!view.View./V $ (SINT 32)) $))
(assert (= (proj%vstd!view.View./V $ (SINT 32)) (SINT 32)))
(assert (forall ((A0&. Dcr) (A0& Type) (A1&. Dcr) (A1& Type)) (! (= (proj%%vstd!view.View./V $ (TYPE%tuple%2. A0&. A0& A1&. A1&)) $) :pattern ((proj%%vstd!view.View./V $ (TYPE%tuple%2. A0&. A0& A1&. A1&))) )))
(assert (forall ((A0&. Dcr) (A0& Type) (A1&. Dcr) (A1& Type)) (! (= (proj%vstd!view.View./V $ (TYPE%tuple%2. A0&. A0& A1&. A1&)) (TYPE%tuple%2. (proj%%vstd!view.View./V A0&. A0&) (proj%vstd!view.View./V A0&. A0&) (proj%%vstd!view.View./V A1&. A1&) (proj%vstd!view.View./V A1&. A1&))) :pattern ((proj%vstd!view.View./V $ (TYPE%tuple%2. A0&. A0& A1&. A1&))) )))
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type)) (! (= (proj%%vstd!view.View./V $ (TYPE%alloc!vec.Vec. T&. T& A&. A&)) $) :pattern ((proj%%vstd!view.View./V $ (TYPE%alloc!vec.Vec. T&. T& A&. A&))) )))
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type)) (! (= (proj%vstd!view.View./V $ (TYPE%alloc!vec.Vec. T&. T& A&. A&)) (TYPE%vstd!seq.Seq. T&. T&)) :pattern ((proj%vstd!view.View./V $ (TYPE%alloc!vec.Vec. T&. T& A&. A&))) )))
(assert (= (proj%%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))
(assert (= (proj%%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service.) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.))
(assert (= (proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) $))
(assert (= (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) (TYPE%tuple%2. $ (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) $ TYPE%tuple%0.)))
(assert (= (proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) $))
(assert (= (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))
(assert (= (proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) $))
(assert (= (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)))
(assert (= (proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) $))
(assert (= (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)))
(assert (= (proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) $))
(assert (= (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)))
(assert (= (proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) $))
(assert (= (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)))
(assert (= (proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) $))
(assert (= (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)))
(assert (= (proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) $))
(assert (= (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView.)))
(assert (= (proj%%vstd!view.View./V $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.))
(assert (= (proj%%vstd!view.View./V $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.))
(assert (= (proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) $))
(assert (= (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.))
(assert (= (proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) $))
(assert (= (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView.)))
(set-info :comment ";; Function-Decl vstd::std_specs::option::OptionAdditionalFns::is_Some")
(declare-fun vstd!std_specs.option.OptionAdditionalFns.is_Some.? (Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.option.OptionAdditionalFns.is_Some%default%.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::option::OptionAdditionalFns::get_Some_0")
(declare-fun vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? (Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.option.OptionAdditionalFns.get_Some_0%default%.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::option::is_some")
(declare-fun vstd!std_specs.option.is_some.? (Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl vstd::std_specs::option::spec_unwrap")
(declare-fun vstd!std_specs.option.spec_unwrap.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::result::ResultAdditionalSpecFns::is_Ok")
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok%default%.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::result::ResultAdditionalSpecFns::get_Ok_0")
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0%default%.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::result::is_ok")
(declare-fun vstd!std_specs.result.is_ok.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl vstd::std_specs::vec::spec_vec_len")
(declare-fun vstd!std_specs.vec.spec_vec_len.? (Dcr Type Dcr Type Poly) Int)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::empty")
(declare-fun vstd!map.impl&%0.empty.? (Dcr Type Dcr Type) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::new")
(declare-fun vstd!map.impl&%0.new.? (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::dom")
(declare-fun vstd!map.impl&%0.dom.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::index")
(declare-fun vstd!map.impl&%0.index.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::spec_index")
(declare-fun vstd!map.impl&%0.spec_index.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::insert")
(declare-fun vstd!map.impl&%0.insert.? (Dcr Type Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::remove")
(declare-fun vstd!map.impl&%0.remove.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map_lib::impl&%0::union_prefer_right")
(declare-fun vstd!map_lib.impl&%0.union_prefer_right.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::pervasive::arbitrary")
(declare-fun vstd!pervasive.arbitrary.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::empty")
(declare-fun vstd!seq.Seq.empty.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::new")
(declare-fun vstd!seq.Seq.new.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::len")
(declare-fun vstd!seq.Seq.len.? (Dcr Type Poly) Int)
(set-info :comment ";; Function-Decl vstd::seq::Seq::index")
(declare-fun vstd!seq.Seq.index.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::impl&%0::spec_index")
(declare-fun vstd!seq.impl&%0.spec_index.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::push")
(declare-fun vstd!seq.Seq.push.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::update")
(declare-fun vstd!seq.Seq.update.? (Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::subrange")
(declare-fun vstd!seq.Seq.subrange.? (Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::add")
(declare-fun vstd!seq.Seq.add.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::impl&%0::spec_add")
(declare-fun vstd!seq.impl&%0.spec_add.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq_lib::impl&%0::map_values")
(declare-fun vstd!seq_lib.impl&%0.map_values.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq_lib::impl&%0::filter")
(declare-fun vstd!seq_lib.impl&%0.filter.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq_lib::impl&%0::contains")
(declare-fun vstd!seq_lib.impl&%0.contains.? (Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl vstd::seq_lib::impl&%0::to_set")
(declare-fun vstd!seq_lib.impl&%0.to_set.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq_lib::check_argument_is_seq")
(declare-fun vstd!seq_lib.check_argument_is_seq.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::empty")
(declare-fun vstd!set.impl&%0.empty.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::new")
(declare-fun vstd!set.impl&%0.new.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::contains")
(declare-fun vstd!set.impl&%0.contains.? (Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::insert")
(declare-fun vstd!set.impl&%0.insert.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::remove")
(declare-fun vstd!set.impl&%0.remove.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::union")
(declare-fun vstd!set.impl&%0.union.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::intersect")
(declare-fun vstd!set.impl&%0.intersect.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::difference")
(declare-fun vstd!set.impl&%0.difference.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::complement")
(declare-fun vstd!set.impl&%0.complement.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::finite")
(declare-fun vstd!set.impl&%0.finite.? (Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::len")
(declare-fun vstd!set.impl&%0.len.? (Dcr Type Poly) Int)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::choose")
(declare-fun vstd!set.impl&%0.choose.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::mk_map")
(declare-fun vstd!set.impl&%0.mk_map.? (Dcr Type Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::string::impl&%0::view")
(declare-fun vstd!string.impl&%0.view.? (Poly) Poly)
(set-info :comment ";; Function-Decl vstd::string::impl&%0::is_ascii")
(declare-fun vstd!string.impl&%0.is_ascii.? (Poly) Bool)
(set-info :comment ";; Function-Decl vstd::string::impl&%1::view")
(declare-fun vstd!string.impl&%1.view.? (Poly) Poly)
(set-info :comment ";; Function-Decl vstd::string::impl&%1::is_ascii")
(declare-fun vstd!string.impl&%1.is_ascii.? (Poly) Bool)
(set-info :comment ";; Function-Decl vstd::view::View::view")
(declare-fun vstd!view.View.view.? (Dcr Type Poly) Poly)
(declare-fun vstd!view.View.view%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::admin_server_service::make_admin_server_service_key")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_key.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::admin_server_service::make_admin_server_service_name")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_name.? (Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::admin_server_service::update_admin_server_service")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.update_admin_server_service.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::admin_server_service::make_admin_server_service")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::client_service::make_client_service_key")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_key.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::client_service::make_client_service_name")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_name.? (Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::client_service::update_client_service")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.client_service.update_client_service.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::client_service::make_client_service")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::common::make_base_labels")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.common.make_base_labels.? (Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::common::make_labels")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.common.make_labels.? (Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::common::make_owner_references")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references.? (Poly) vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::common::make_service")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.common.make_service.? (Poly Poly Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::config_map::make_config_map_key")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_key.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::config_map::make_config_map_name")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_name.? (Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::config_map::make_config_map")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::config_map::update_config_map")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.config_map.update_config_map.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::config_map::make_log4j_config")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_config.? (Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::config_map::make_log4j_quiet_config")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_quiet_config.? (Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::config_map::make_env_config")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.config_map.make_env_config.? (Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::stateful_set::make_stateful_set_key")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_key.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::stateful_set::make_stateful_set_name")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_name.? (Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::stateful_set::update_stateful_set")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_stateful_set.? (Poly Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::stateful_set::make_stateful_set")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::stateful_set::make_zk_pod_spec")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_zk_pod_spec.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::model::resource::stateful_set::update_zk_status")
(declare-fun zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_zk_status.? (Poly Poly) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::exec::api_method::opt_req_to_view")
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? (Poly) core!option.Option.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::exec::api_resource::ApiResource::view")
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.api_resource.impl&%0.view.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::view")
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::exec::owner_reference::OwnerReference::view")
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.owner_reference.impl&%0.view.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::exec::service::ServiceSpec::view")
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::exec::service::ServicePort::view")
(declare-fun zookeeper_controller!kubernetes_api_objects.exec.service.impl&%3.view.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::ContainerView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::LifecycleView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::LifecycleView::set_pre_stop")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.set_pre_stop.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::LifecycleHandlerView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::LifecycleHandlerView::set_exec")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.set_exec.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::ContainerPortView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::ContainerPortView::set_container_port")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::ContainerPortView::set_name")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::VolumeMountView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::VolumeMountView::set_mount_path")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::VolumeMountView::set_name")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::set_exec")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_exec.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::set_failure_threshold")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_failure_threshold.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::set_initial_delay_seconds")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_initial_delay_seconds.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::set_period_seconds")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_period_seconds.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::set_success_threshold")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_success_threshold.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::set_timeout_seconds")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_timeout_seconds.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::ExecActionView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::container::ExecActionView::set_command")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.set_command.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::label_selector::LabelSelectorView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::label_selector::LabelSelectorView::set_match_labels")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::owner_references_only_contains")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? (Poly Poly) Bool)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_name")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_labels")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_annotations")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_owner_references")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::unset_finalizers")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::set_metadata")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_metadata.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::set_spec")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_spec.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimSpecView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimSpecView::set_access_modes")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_access_modes.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimSpecView::set_resources")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_resources.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimSpecView::set_storage_class_name")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_storage_class_name.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::pod::PodSpecView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::set_metadata")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::set_spec")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? (Dcr Type) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default%default%.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::kind")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? (Dcr Type) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind%default%.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? (Dcr Type Poly) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? (Dcr Type Poly) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal_spec")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? (Dcr Type Poly) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal_spec")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? (Dcr Type Poly) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal_status")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? (Dcr Type Poly) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal_status")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? (Dcr Type Poly) Poly)
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::resource::empty_status")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource.empty_status.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::resource_requirements::ResourceRequirementsView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::resource_requirements::ResourceRequirementsView::set_requests")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.set_requests.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::service::ServiceView::set_metadata")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_metadata.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::service::ServiceView::set_spec")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_spec.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::service::ServiceSpecView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::service::ServiceSpecView::set_ports")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_ports.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::service::ServiceSpecView::set_selector")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_selector.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::service::ServiceSpecView::unset_publish_not_ready_addresses")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.unset_publish_not_ready_addresses.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::service::ServicePortView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::service::ServicePortView::set_name")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_name.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::service::ServicePortView::set_port")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_port.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::set_metadata")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_metadata.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::set_spec")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_spec.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::set_replicas")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_replicas.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::set_selector")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_selector.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::set_service_name")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_service_name.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::set_template")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_template.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::set_volume_claim_templates")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_volume_claim_templates.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::set_pvc_retention_policy")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_pvc_retention_policy.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetPersistentVolumeClaimRetentionPolicyView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetPersistentVolumeClaimRetentionPolicyView::set_when_deleted")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_deleted.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetPersistentVolumeClaimRetentionPolicyView::set_when_scaled")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_scaled.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::volume::VolumeView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::volume::VolumeView::set_config_map")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_config_map.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::volume::VolumeView::set_name")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::volume::VolumeView::set_empty_dir")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_empty_dir.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::volume::EmptyDirVolumeSourceView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%1.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::volume::ConfigMapVolumeSourceView::default")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.default.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)
(set-info :comment ";; Function-Decl zookeeper_controller::kubernetes_api_objects::spec::volume::ConfigMapVolumeSourceView::set_name")
(declare-fun zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.set_name.? (Poly Poly) zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)
(set-info :comment ";; Function-Decl zookeeper_controller::reconciler::exec::resource_builder::ResourceBuilder::requirements")
(declare-fun zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? (Dcr Type Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements%default%.? (Dcr Type Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::reconciler::exec::resource_builder::resource_res_to_view")
(declare-fun zookeeper_controller!reconciler.exec.resource_builder.resource_res_to_view.? (Dcr Type Poly) core!result.Result.)
(set-info :comment ";; Function-Decl zookeeper_controller::reconciler::spec::resource_builder::ResourceBuilder::get_request")
(declare-fun zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request%default%.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::reconciler::spec::resource_builder::ResourceBuilder::make")
(declare-fun zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? (Dcr Type Dcr Type Dcr Type Poly Poly) Poly)
(declare-fun zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.make%default%.? (Dcr Type Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::reconciler::spec::resource_builder::ResourceBuilder::update")
(declare-fun zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(declare-fun zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.update%default%.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::reconciler::spec::resource_builder::ResourceBuilder::state_after_create")
(declare-fun zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(declare-fun zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create%default%.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::reconciler::spec::resource_builder::ResourceBuilder::state_after_update")
(declare-fun zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(declare-fun zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update%default%.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::trusted::config_map::make_zk_config")
(declare-fun zookeeper_controller!zookeeper_controller.trusted.config_map.make_zk_config.? (Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::trusted::exec_types::ZookeeperClusterSpec::view")
(declare-fun zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%5.view.? (Poly) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::trusted::exec_types::ZookeeperPorts::view")
(declare-fun zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%6.view.? (Poly) zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView.)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::trusted::spec_types::ZookeeperClusterView::well_formed")
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.well_formed.? (Poly) Bool)
(set-info :comment ";; Function-Decl zookeeper_controller::zookeeper_controller::trusted::spec_types::ZookeeperClusterView::controller_owner_ref")
(declare-fun zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.controller_owner_ref.? (Poly) zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)
(set-info :comment ";; Function-Decl zookeeper_controller::vstd_ext::string_map::StringMap::view")
(declare-fun zookeeper_controller!vstd_ext.string_map.impl&%0.view.? (Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::vstd_ext::string_view::int_to_string_view")
(declare-fun zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (Poly) Poly)
(set-info :comment ";; Function-Decl zookeeper_controller::vstd_ext::string_view::bool_to_string_view")
(declare-fun zookeeper_controller!vstd_ext.string_view.bool_to_string_view.? (Poly) Poly)
(set-info :comment ";; Function-Axioms vstd::view::View::view")
(assert (forall ((Self%&. Dcr) (Self%& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!view.View.view.? Self%&. Self%& self!) (proj%vstd!view.View./V Self%&. Self%&))) :pattern ((vstd!view.View.view.? Self%&. Self%& self!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::default")
(assert (forall ((Self%&. Dcr) (Self%& Type)) (! (has_type (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? Self%&. Self%&) Self%&) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? Self%&. Self%&)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::kind")
(assert (forall ((Self%&. Dcr) (Self%& Type)) (! (has_type (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? Self%&. Self%&) TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.Kind.) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? Self%&. Self%&)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::OptionAdditionalFns::is_Some")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.option.OptionAdditionalFns.is_Some.? Self%&. Self%& T&. T& self!) BOOL)) :pattern ((vstd!std_specs.option.OptionAdditionalFns.is_Some.? Self%&. Self%& T&. T& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::OptionAdditionalFns::get_Some_0")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? Self%&. Self%& T&. T& self!) T&)) :pattern ((vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? Self%&. Self%& T&. T& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::impl&%0::get_Some_0")
(assert (fuel_bool_default fuel%vstd!std_specs.option.impl&%0.get_Some_0.))
(assert (=> (fuel_bool fuel%vstd!std_specs.option.impl&%0.get_Some_0.) (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (= (vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!) (core!option.Option./Some/0 (%Poly%core!option.Option. self!))) :pattern ((vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal")
(assert (forall ((Self%&. Dcr) (Self%& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? Self%&. Self%& self!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? Self%&. Self%& self!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal")
(assert (forall ((Self%&. Dcr) (Self%& Type) (obj! Poly)) (! (=> (has_type obj! TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? Self%&. Self%& obj!) (TYPE%core!result.Result. Self%&. Self%& $ TYPE%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? Self%&. Self%& obj!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::ResultAdditionalSpecFns::is_Ok")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? Self%&. Self%& T&. T& E&. E& self!) BOOL)) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? Self%&. Self%& T&. T& E&. E& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::ResultAdditionalSpecFns::get_Ok_0")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? Self%&. Self%& T&. T& E&. E& self!) T&)) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? Self%&. Self%& T&. T& E&. E& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::impl&%0::is_Ok")
(assert (fuel_bool_default fuel%vstd!std_specs.result.impl&%0.is_Ok.))
(assert (=> (fuel_bool fuel%vstd!std_specs.result.impl&%0.is_Ok.) (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (= (vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. self!)))) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::impl&%0::get_Ok_0")
(assert (fuel_bool_default fuel%vstd!std_specs.result.impl&%0.get_Ok_0.))
(assert (=> (fuel_bool fuel%vstd!std_specs.result.impl&%0.get_Ok_0.) (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (= (vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!) (core!result.Result./Ok/0 (%Poly%core!result.Result. self!))) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal_spec")
(assert (forall ((Self%&. Dcr) (Self%& Type) (s! Poly)) (! (=> (has_type s! (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec Self%&. Self%&)) (has_type (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? Self%&. Self%& s!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? Self%&. Self%& s!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal_spec")
(assert (forall ((Self%&. Dcr) (Self%& Type) (v! Poly)) (! (=> (has_type v! TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? Self%&. Self%& v!) (TYPE%core!result.Result. (proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec Self%&. Self%&) (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec Self%&. Self%&) $ TYPE%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? Self%&. Self%& v!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal_status")
(assert (forall ((Self%&. Dcr) (Self%& Type) (s! Poly)) (! (=> (has_type s! (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status Self%&. Self%&)) (has_type (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? Self%&. Self%& s!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? Self%&. Self%& s!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal_status")
(assert (forall ((Self%&. Dcr) (Self%& Type) (v! Poly)) (! (=> (has_type v! TYPE%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? Self%&. Self%& v!) (TYPE%core!result.Result. (proj%%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status Self%&. Self%&) (proj%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView./Status Self%&. Self%&) $ TYPE%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError.))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? Self%&. Self%& v!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::reconciler::spec::resource_builder::ResourceBuilder::get_request")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly)) (! (=> (has_type cr! K&) (has_type (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? Self%&. Self%& K&. K& T&. T& cr!) TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? Self%&. Self%& K&. K& T&. T& cr!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::reconciler::spec::resource_builder::ResourceBuilder::make")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly) (state! Poly)) (! (=> (and (has_type cr! K&) (has_type state! T&)) (has_type (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? Self%&. Self%& K&. K& T&. T& cr! state!) (TYPE%core!result.Result. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%tuple%0.))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? Self%&. Self%& K&. K& T&. T& cr! state!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::reconciler::spec::resource_builder::ResourceBuilder::update")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly) (state! Poly) (obj! Poly)) (! (=> (and (has_type cr! K&) (has_type state! T&) (has_type obj! TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? Self%&. Self%& K&. K& T&. T& cr! state! obj!) (TYPE%core!result.Result. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%tuple%0.))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? Self%&. Self%& K&. K& T&. T& cr! state! obj!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::reconciler::spec::resource_builder::ResourceBuilder::state_after_create")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly) (obj! Poly) (state! Poly)) (! (=> (and (has_type cr! K&) (has_type obj! TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type state! T&)) (has_type (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? Self%&. Self%& K&. K& T&. T& cr! obj! state!) (TYPE%core!result.Result. $ (TYPE%tuple%2. T&. T& $ (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) $ TYPE%tuple%0.))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? Self%&. Self%& K&. K& T&. T& cr! obj! state!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::reconciler::spec::resource_builder::ResourceBuilder::state_after_update")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly) (obj! Poly) (state! Poly)) (! (=> (and (has_type cr! K&) (has_type obj! TYPE%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type state! T&)) (has_type (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? Self%&. Self%& K&. K& T&. T& cr! obj! state!) (TYPE%core!result.Result. $ (TYPE%tuple%2. T&. T& $ (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) $ TYPE%tuple%0.))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? Self%&. Self%& K&. K& T&. T& cr! obj! state!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::reconciler::exec::resource_builder::ResourceBuilder::requirements")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly)) (! (=> (has_type cr! (proj%vstd!view.View./V K&. K&)) (has_type (zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr!) BOOL)) :pattern ((zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr!)) )))
(set-info :comment ";; Function-Axioms vstd::string::impl&%1::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%vstd!string.String.) (has_type (vstd!string.impl&%1.view.? self!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((vstd!string.impl&%1.view.? self!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::exec::api_method::KubeGetRequest::view")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%2.view.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%2.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. self!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (zookeeper_controller!kubernetes_api_objects.exec.api_resource.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/api_resource (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. self!))))))))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/name (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. self!)))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. self!)))))))))) :pattern ((vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. self!)) ))))
(set-info :comment ";; Function-Specs zookeeper_controller::reconciler::exec::resource_builder::ResourceBuilder::get_request")
(declare-fun req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.get_request. (Dcr Type Dcr Type Dcr Type Dcr Type Poly) Bool)
(declare-const %%global_location_label%%0 Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly)) (! (= (req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.get_request. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr!) (=> %%global_location_label%%0 (%B (zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& (vstd!view.View.view.? K&. K& cr!))))) :pattern ((req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.get_request. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr!)) )))
(declare-fun ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.get_request. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (req! Poly)) (! (= (ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.get_request. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! req!) (and (has_type req! TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) (= (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. req!) (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!))))) :pattern ((ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.get_request. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! req!)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.))
(set-info :comment ";; Function-Axioms zookeeper_controller::reconciler::exec::resource_builder::resource_res_to_view")
(assert (fuel_bool_default fuel%zookeeper_controller!reconciler.exec.resource_builder.resource_res_to_view.))
(assert (=> (fuel_bool fuel%zookeeper_controller!reconciler.exec.resource_builder.resource_res_to_view.) (forall ((T&. Dcr) (T& Type) (res! Poly)) (! (= (zookeeper_controller!reconciler.exec.resource_builder.resource_res_to_view.? T&. T& res!) (ite (is-core!result.Result./Ok_ (%Poly%core!result.Result. res!)) (let ((resource$ (core!result.Result./Ok/0 (%Poly%core!result.Result. res!)))) (core!result.Result./Ok (vstd!view.View.view.? T&. T& resource$))) (let ((err$ (%Poly%tuple%0. (core!result.Result./Err/0 (%Poly%core!result.Result. res!))))) (core!result.Result./Err (Poly%tuple%0. err$))))) :pattern ((zookeeper_controller!reconciler.exec.resource_builder.resource_res_to_view.? T&. T& res!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (res! Poly)) (! (=> (has_type res! (TYPE%core!result.Result. T&. T& $ TYPE%tuple%0.)) (has_type (Poly%core!result.Result. (zookeeper_controller!reconciler.exec.resource_builder.resource_res_to_view.? T&. T& res!)) (TYPE%core!result.Result. (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) $ TYPE%tuple%0.))) :pattern ((zookeeper_controller!reconciler.exec.resource_builder.resource_res_to_view.? T&. T& res!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::reconciler::exec::resource_builder::ResourceBuilder::make")
(declare-fun req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.make. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%1 Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (state! Poly)) (! (= (req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.make. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state!) (=> %%global_location_label%%1 (%B (zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& (vstd!view.View.view.? K&. K& cr!))))) :pattern ((req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.make. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state!)) )))
(declare-fun ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.make. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly) Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (state! Poly) (res! Poly)) (! (= (ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.make. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state! res!) (and (has_type res! (TYPE%core!result.Result. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. $ TYPE%tuple%0.)) (= (zookeeper_controller!reconciler.exec.resource_builder.resource_res_to_view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. res!) (%Poly%core!result.Result. (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!) (vstd!view.View.view.? T&. T& state!)))))) :pattern ((ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.make. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state! res!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::reconciler::exec::resource_builder::ResourceBuilder::update")
(declare-fun req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.update. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%2 Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (state! Poly) (obj! Poly)) (! (= (req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state! obj!) (=> %%global_location_label%%2 (%B (zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& (vstd!view.View.view.? K&. K& cr!))))) :pattern ((req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state! obj!)) )))
(declare-fun ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.update. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly Poly) Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (state! Poly) (obj! Poly) (res! Poly)) (! (= (ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state! obj! res!) (and (has_type res! (TYPE%core!result.Result. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. $ TYPE%tuple%0.)) (= (zookeeper_controller!reconciler.exec.resource_builder.resource_res_to_view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. res!) (%Poly%core!result.Result. (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!) (vstd!view.View.view.? T&. T& state!) (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!)))))) :pattern ((ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state! obj! res!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::exec::api_method::KubeListRequest::view")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%4.view.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%4.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. self!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (zookeeper_controller!kubernetes_api_objects.exec.api_resource.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/api_resource (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. self!))))))))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. self!))))))) :pattern ((vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::exec::api_method::KubeCreateRequest::view")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%6.view.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%6.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. self!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. self!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/obj (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. self!)))))))) :pattern ((vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::exec::api_method::KubeDeleteRequest::view")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%8.view.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%8.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. self!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (zookeeper_controller!kubernetes_api_objects.exec.api_resource.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/api_resource (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. self!))))))))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/name (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. self!)))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. self!)))))))))) :pattern ((vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::exec::api_method::KubeUpdateRequest::view")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%10.view.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%10.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. self!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. self!)))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/name (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. self!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/obj (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. self!)))))))) :pattern ((vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::exec::api_method::KubeUpdateStatusRequest::view")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%12.view.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%12.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. self!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. self!)))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/name (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. self!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/obj (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. self!)))))))) :pattern ((vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::exec::api_method::KubeAPIRequest::view")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%13.view.))
(define-fun is-zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest_ ((c zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) Bool ((_ is zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest) c))
(define-fun is-zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest_ ((c zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) Bool ((_ is zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest) c))
(define-fun is-zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest_ ((c zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) Bool ((_ is zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest) c))
(define-fun is-zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest_ ((c zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) Bool ((_ is zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest) c))
(define-fun is-zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest_ ((c zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) Bool ((_ is zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest) c))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.impl&%13.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. (ite (is-zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest_ (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)) (let ((get_req$ (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)))) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. get_req$))))) (ite (is-zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest_ (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)) (let ((list_req$ (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)))) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.ListRequest. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. list_req$))))) (ite (is-zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest_ (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)) (let ((create_req$ (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)))) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. create_req$))))) (ite (is-zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest_ (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)) (let ((delete_req$ (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)))) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. delete_req$))))) (ite (is-zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest_ (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)) (let ((update_req$ (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)))) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. update_req$))))) (let ((update_status_req$ (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest/0 (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)))) (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. update_status_req$)))))))))))) :pattern ((vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::exec::api_method::opt_req_to_view")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.) (forall ((req! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? req!) (ite (is-core!option.Option./Some_ (%Poly%core!option.Option. req!)) (let ((req$ (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. (core!option.Option./Some/0 (%Poly%core!option.Option. req!))))) (core!option.Option./Some (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. req$)))) core!option.Option./None)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? req!)) ))))
(assert (forall ((req! Poly)) (! (=> (has_type req! (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (has_type (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? req!)) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest.))) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? req!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::reconciler::exec::resource_builder::ResourceBuilder::state_after_create")
(declare-fun req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_create. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%3 Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (obj! Poly) (state! Poly)) (! (= (req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_create. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state!) (=> %%global_location_label%%3 (%B (zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& (vstd!view.View.view.? K&. K& cr!))))) :pattern ((req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_create. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state!)) )))
(declare-fun ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_create. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly Poly) Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (obj! Poly) (state! Poly) (res! Poly)) (! (= (ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_create. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state! res!) (and (has_type res! (TYPE%core!result.Result. $ (TYPE%tuple%2. T&. T& $ (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) $ TYPE%tuple%0.)) (= (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. res!))) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!) (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!) (vstd!view.View.view.? T&. T& state!)))))) (=> (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. res!)))) (= (tuple%2./tuple%2 (vstd!view.View.view.? T&. T& (tuple%2./tuple%2/0 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. res!))))) (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? (tuple%2./tuple%2/1 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. res!))))))) (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!) (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!) (vstd!view.View.view.? T&. T& state!))))))))) :pattern ((ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_create. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state! res!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::reconciler::exec::resource_builder::ResourceBuilder::state_after_update")
(declare-fun req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_update. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%4 Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (obj! Poly) (state! Poly)) (! (= (req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state!) (=> %%global_location_label%%4 (%B (zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& (vstd!view.View.view.? K&. K& cr!))))) :pattern ((req%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state!)) )))
(declare-fun ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_update. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly Poly) Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (obj! Poly) (state! Poly) (res! Poly)) (! (= (ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state! res!) (and (has_type res! (TYPE%core!result.Result. $ (TYPE%tuple%2. T&. T& $ (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) $ TYPE%tuple%0.)) (= (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. res!))) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!) (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!) (vstd!view.View.view.? T&. T& state!)))))) (=> (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. res!)))) (= (tuple%2./tuple%2 (vstd!view.View.view.? T&. T& (tuple%2./tuple%2/0 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. res!))))) (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? (tuple%2./tuple%2/1 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. res!))))))) (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!) (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!) (vstd!view.View.view.? T&. T& state!))))))))) :pattern ((ens%zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state! res!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::is_some")
(assert (fuel_bool_default fuel%vstd!std_specs.option.is_some.))
(assert (=> (fuel_bool fuel%vstd!std_specs.option.is_some.) (forall ((T&. Dcr) (T& Type) (option! Poly)) (! (= (vstd!std_specs.option.is_some.? T&. T& option!) (is-core!option.Option./Some_ (%Poly%core!option.Option. option!))) :pattern ((vstd!std_specs.option.is_some.? T&. T& option!)) ))))
(set-info :comment ";; Function-Specs core::option::impl&%0::is_some")
(declare-fun ens%core!option.impl&%0.is_some. (Dcr Type core!option.Option. Bool) Bool)
(assert (forall ((T&. Dcr) (T& Type) (option! core!option.Option.) (b! Bool)) (! (= (ens%core!option.impl&%0.is_some. T&. T& option! b!) (= b! (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. option!))))) :pattern ((ens%core!option.impl&%0.is_some. T&. T& option! b!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::impl&%0::is_Some")
(assert (fuel_bool_default fuel%vstd!std_specs.option.impl&%0.is_Some.))
(assert (=> (fuel_bool fuel%vstd!std_specs.option.impl&%0.is_Some.) (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (= (vstd!std_specs.option.OptionAdditionalFns.is_Some.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. self!)))) :pattern ((vstd!std_specs.option.OptionAdditionalFns.is_Some.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!)) ))))
(set-info :comment ";; Function-Specs vstd::std_specs::option::spec_unwrap")
(declare-fun req%vstd!std_specs.option.spec_unwrap. (Dcr Type Poly) Bool)
(declare-const %%global_location_label%%5 Bool)
(assert (forall ((T&. Dcr) (T& Type) (option! Poly)) (! (= (req%vstd!std_specs.option.spec_unwrap. T&. T& option!) (=> %%global_location_label%%5 (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. option!)))))) :pattern ((req%vstd!std_specs.option.spec_unwrap. T&. T& option!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::spec_unwrap")
(assert (fuel_bool_default fuel%vstd!std_specs.option.spec_unwrap.))
(assert (=> (fuel_bool fuel%vstd!std_specs.option.spec_unwrap.) (forall ((T&. Dcr) (T& Type) (option! Poly)) (! (= (vstd!std_specs.option.spec_unwrap.? T&. T& option!) (core!option.Option./Some/0 (%Poly%core!option.Option. option!))) :pattern ((vstd!std_specs.option.spec_unwrap.? T&. T& option!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (option! Poly)) (! (=> (has_type option! (TYPE%core!option.Option. T&. T&)) (has_type (vstd!std_specs.option.spec_unwrap.? T&. T& option!) T&)) :pattern ((vstd!std_specs.option.spec_unwrap.? T&. T& option!)) )))
(set-info :comment ";; Function-Specs core::option::impl&%0::unwrap")
(declare-fun req%core!option.impl&%0.unwrap. (Dcr Type core!option.Option.) Bool)
(declare-const %%global_location_label%%6 Bool)
(assert (forall ((T&. Dcr) (T& Type) (option! core!option.Option.)) (! (= (req%core!option.impl&%0.unwrap. T&. T& option!) (=> %%global_location_label%%6 (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. option!))))))) :pattern ((req%core!option.impl&%0.unwrap. T&. T& option!)) )))
(declare-fun ens%core!option.impl&%0.unwrap. (Dcr Type core!option.Option. Poly) Bool)
(assert (forall ((T&. Dcr) (T& Type) (option! core!option.Option.) (t! Poly)) (! (= (ens%core!option.impl&%0.unwrap. T&. T& option! t!) (and (has_type t! T&) (= t! (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. option!)))))) :pattern ((ens%core!option.impl&%0.unwrap. T&. T& option! t!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::is_ok")
(assert (fuel_bool_default fuel%vstd!std_specs.result.is_ok.))
(assert (=> (fuel_bool fuel%vstd!std_specs.result.is_ok.) (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (result! Poly)) (! (= (vstd!std_specs.result.is_ok.? T&. T& E&. E& result!) (is-core!result.Result./Ok_ (%Poly%core!result.Result. result!))) :pattern ((vstd!std_specs.result.is_ok.? T&. T& E&. E& result!)) ))))
(set-info :comment ";; Function-Specs core::result::impl&%0::is_ok")
(declare-fun ens%core!result.impl&%0.is_ok. (Dcr Type Dcr Type core!result.Result. Bool) Bool)
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (result! core!result.Result.) (b! Bool)) (! (= (ens%core!result.impl&%0.is_ok. T&. T& E&. E& result! b!) (= b! (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. result!))))) :pattern ((ens%core!result.impl&%0.is_ok. T&. T& E&. E& result! b!)) )))
(set-info :comment ";; Function-Specs core::result::impl&%0::unwrap")
(declare-fun req%core!result.impl&%0.unwrap. (Dcr Type Dcr Type core!result.Result.) Bool)
(declare-const %%global_location_label%%7 Bool)
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (result! core!result.Result.)) (! (= (req%core!result.impl&%0.unwrap. T&. T& E&. E& result!) (=> %%global_location_label%%7 (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. result!))))))) :pattern ((req%core!result.impl&%0.unwrap. T&. T& E&. E& result!)) )))
(declare-fun ens%core!result.impl&%0.unwrap. (Dcr Type Dcr Type core!result.Result. Poly) Bool)
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (result! core!result.Result.) (t! Poly)) (! (= (ens%core!result.impl&%0.unwrap. T&. T& E&. E& result! t!) (and (has_type t! T&) (= t! (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. result!)))))) :pattern ((ens%core!result.impl&%0.unwrap. T&. T& E&. E& result! t!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::len")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (<= 0 (vstd!seq.Seq.len.? A&. A& self!))) :pattern ((vstd!seq.Seq.len.? A&. A& self!)) )))
(set-info :comment ";; Function-Specs vstd::seq::Seq::index")
(declare-fun req%vstd!seq.Seq.index. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%8 Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (= (req%vstd!seq.Seq.index. A&. A& self! i!) (=> %%global_location_label%%8 (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& self!))))) :pattern ((req%vstd!seq.Seq.index. A&. A& self! i!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::index")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (has_type (vstd!seq.Seq.index.? A&. A& self! i!) A&)) :pattern ((vstd!seq.Seq.index.? A&. A& self! i!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::vec::spec_vec_len")
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type) (v! Poly)) (! (=> (has_type v! (TYPE%alloc!vec.Vec. T&. T& A&. A&)) (uInv SZ (vstd!std_specs.vec.spec_vec_len.? T&. T& A&. A& v!))) :pattern ((vstd!std_specs.vec.spec_vec_len.? T&. T& A&. A& v!)) )))
(set-info :comment ";; Function-Specs vstd::std_specs::vec::axiom_spec_len")
(declare-fun ens%vstd!std_specs.vec.axiom_spec_len. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (v! Poly)) (! (= (ens%vstd!std_specs.vec.axiom_spec_len. A&. A& v!) (= (vstd!std_specs.vec.spec_vec_len.? A&. A& $ TYPE%alloc!alloc.Global. v!) (vstd!seq.Seq.len.? A&. A& (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. A&. A& $ TYPE%alloc!alloc.Global.) v!)))) :pattern ((ens%vstd!std_specs.vec.axiom_spec_len. A&. A& v!)) )))
(set-info :comment ";; Broadcast vstd::std_specs::vec::axiom_spec_len")
(assert (forall ((A&. Dcr) (A& Type) (v! Poly)) (! (=> (has_type v! (TYPE%alloc!vec.Vec. A&. A& $ TYPE%alloc!alloc.Global.)) (= (vstd!std_specs.vec.spec_vec_len.? A&. A& $ TYPE%alloc!alloc.Global. v!) (vstd!seq.Seq.len.? A&. A& (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. A&. A& $ TYPE%alloc!alloc.Global.) v!)))) :pattern ((vstd!std_specs.vec.spec_vec_len.? A&. A& $ TYPE%alloc!alloc.Global. v!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::empty")
(assert (forall ((A&. Dcr) (A& Type)) (! (has_type (vstd!seq.Seq.empty.? A&. A&) (TYPE%vstd!seq.Seq. A&. A&)) :pattern ((vstd!seq.Seq.empty.? A&. A&)) )))
(set-info :comment ";; Function-Specs alloc::vec::impl&%0::new")
(declare-fun ens%alloc!vec.impl&%0.new. (Dcr Type Poly) Bool)
(assert (forall ((T&. Dcr) (T& Type) (v! Poly)) (! (= (ens%alloc!vec.impl&%0.new. T&. T& v!) (and (has_type v! (TYPE%alloc!vec.Vec. T&. T& $ TYPE%alloc!alloc.Global.)) (= (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. T&. T& $ TYPE%alloc!alloc.Global.) v!) (vstd!seq.Seq.empty.? T&. T&)))) :pattern ((ens%alloc!vec.impl&%0.new. T&. T& v!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::push")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (a! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type a! A&)) (has_type (vstd!seq.Seq.push.? A&. A& self! a!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.push.? A&. A& self! a!)) )))
(set-info :comment ";; Function-Specs alloc::vec::impl&%1::push")
(declare-fun ens%alloc!vec.impl&%1.push. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type) (pre%vec! Poly) (vec! Poly) (value! Poly)) (! (= (ens%alloc!vec.impl&%1.push. T&. T& A&. A& pre%vec! vec! value!) (and (has_type vec! (TYPE%alloc!vec.Vec. T&. T& A&. A&)) (= (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. T&. T& A&. A&) vec!) (vstd!seq.Seq.push.? T&. T& (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. T&. T& A&. A&) pre%vec!) value!)))) :pattern ((ens%alloc!vec.impl&%1.push. T&. T& A&. A& pre%vec! vec! value!)) )))
(set-info :comment ";; Function-Specs vstd::seq::impl&%0::spec_index")
(declare-fun req%vstd!seq.impl&%0.spec_index. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%9 Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (= (req%vstd!seq.impl&%0.spec_index. A&. A& self! i!) (=> %%global_location_label%%9 (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& self!))))) :pattern ((req%vstd!seq.impl&%0.spec_index. A&. A& self! i!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::impl&%0::spec_index")
(assert (fuel_bool_default fuel%vstd!seq.impl&%0.spec_index.))
(assert (=> (fuel_bool fuel%vstd!seq.impl&%0.spec_index.) (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (= (vstd!seq.impl&%0.spec_index.? A&. A& self! i!) (vstd!seq.Seq.index.? A&. A& self! i!)) :pattern ((vstd!seq.impl&%0.spec_index.? A&. A& self! i!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (has_type (vstd!seq.impl&%0.spec_index.? A&. A& self! i!) A&)) :pattern ((vstd!seq.impl&%0.spec_index.? A&. A& self! i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::Seq::subrange")
(declare-fun req%vstd!seq.Seq.subrange. (Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%10 Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (start_inclusive! Poly) (end_exclusive! Poly)) (! (= (req%vstd!seq.Seq.subrange. A&. A& self! start_inclusive! end_exclusive!) (=> %%global_location_label%%10 (and (and (<= 0 (%I start_inclusive!)) (<= (%I start_inclusive!) (%I end_exclusive!))) (<= (%I end_exclusive!) (vstd!seq.Seq.len.? A&. A& self!))))) :pattern ((req%vstd!seq.Seq.subrange. A&. A& self! start_inclusive! end_exclusive!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::subrange")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (start_inclusive! Poly) (end_exclusive! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type start_inclusive! INT) (has_type end_exclusive! INT)) (has_type (vstd!seq.Seq.subrange.? A&. A& self! start_inclusive! end_exclusive!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.subrange.? A&. A& self! start_inclusive! end_exclusive!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::add")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (rhs! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type rhs! (TYPE%vstd!seq.Seq. A&. A&))) (has_type (vstd!seq.Seq.add.? A&. A& self! rhs!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.add.? A&. A& self! rhs!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::impl&%0::spec_add")
(assert (fuel_bool_default fuel%vstd!seq.impl&%0.spec_add.))
(assert (=> (fuel_bool fuel%vstd!seq.impl&%0.spec_add.) (forall ((A&. Dcr) (A& Type) (self! Poly) (rhs! Poly)) (! (= (vstd!seq.impl&%0.spec_add.? A&. A& self! rhs!) (vstd!seq.Seq.add.? A&. A& self! rhs!)) :pattern ((vstd!seq.impl&%0.spec_add.? A&. A& self! rhs!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (rhs! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type rhs! (TYPE%vstd!seq.Seq. A&. A&))) (has_type (vstd!seq.impl&%0.spec_add.? A&. A& self! rhs!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.impl&%0.spec_add.? A&. A& self! rhs!)) )))
(set-info :comment ";; Function-Specs vstd::seq::Seq::update")
(declare-fun req%vstd!seq.Seq.update. (Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%11 Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly) (a! Poly)) (! (= (req%vstd!seq.Seq.update. A&. A& self! i! a!) (=> %%global_location_label%%11 (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& self!))))) :pattern ((req%vstd!seq.Seq.update. A&. A& self! i! a!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::update")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly) (a! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT) (has_type a! A&)) (has_type (vstd!seq.Seq.update.? A&. A& self! i! a!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.update.? A&. A& self! i! a!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::empty")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type)) (! (has_type (vstd!map.impl&%0.empty.? K&. K& V&. V&) (TYPE%vstd!map.Map. K&. K& V&. V&)) :pattern ((vstd!map.impl&%0.empty.? K&. K& V&. V&)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::dom")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) (TYPE%vstd!set.Set. K&. K&))) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& self!)) )))
(set-info :comment ";; Function-Specs vstd::map::impl&%0::index")
(declare-fun req%vstd!map.impl&%0.index. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%12 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (= (req%vstd!map.impl&%0.index. K&. K& V&. V& self! key!) (=> %%global_location_label%%12 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) key!))) :pattern ((req%vstd!map.impl&%0.index. K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::index")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (has_type (vstd!map.impl&%0.index.? K&. K& V&. V& self! key!) V&)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::insert")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly) (value! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&) (has_type value! V&)) (has_type (vstd!map.impl&%0.insert.? K&. K& V&. V& self! key! value!) (TYPE%vstd!map.Map. K&. K& V&. V&))) :pattern ((vstd!map.impl&%0.insert.? K&. K& V&. V& self! key! value!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::remove")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (has_type (vstd!map.impl&%0.remove.? K&. K& V&. V& self! key!) (TYPE%vstd!map.Map. K&. K& V&. V&))) :pattern ((vstd!map.impl&%0.remove.? K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Specs vstd::map::impl&%0::spec_index")
(declare-fun req%vstd!map.impl&%0.spec_index. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%13 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (= (req%vstd!map.impl&%0.spec_index. K&. K& V&. V& self! key!) (=> %%global_location_label%%13 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) key!))) :pattern ((req%vstd!map.impl&%0.spec_index. K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::spec_index")
(assert (fuel_bool_default fuel%vstd!map.impl&%0.spec_index.))
(assert (=> (fuel_bool fuel%vstd!map.impl&%0.spec_index.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (= (vstd!map.impl&%0.spec_index.? K&. K& V&. V& self! key!) (vstd!map.impl&%0.index.? K&. K& V&. V& self! key!)) :pattern ((vstd!map.impl&%0.spec_index.? K&. K& V&. V& self! key!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (has_type (vstd!map.impl&%0.spec_index.? K&. K& V&. V& self! key!) V&)) :pattern ((vstd!map.impl&%0.spec_index.? K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::mk_map")
(assert (forall ((A&. Dcr) (A& Type) (V&. Dcr) (V& Type) (F&. Dcr) (F& Type) (self! Poly) (f! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type f! F&)) (has_type (vstd!set.impl&%0.mk_map.? A&. A& V&. V& F&. F& self! f!) (TYPE%vstd!map.Map. A&. A& V&. V&))) :pattern ((vstd!set.impl&%0.mk_map.? A&. A& V&. V& F&. F& self! f!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::new")
(assert (forall ((A&. Dcr) (A& Type) (F&. Dcr) (F& Type) (f! Poly)) (! (=> (has_type f! F&) (has_type (vstd!set.impl&%0.new.? A&. A& F&. F& f!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.new.? A&. A& F&. F& f!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::new")
(assert (fuel_bool_default fuel%vstd!map.impl&%0.new.))
(assert (=> (fuel_bool fuel%vstd!map.impl&%0.new.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (impl%2&. Dcr) (impl%2& Type) (impl%3&. Dcr) (impl%3& Type) (fk! Poly) (fv! Poly)) (! (= (vstd!map.impl&%0.new.? K&. K& V&. V& impl%2&. impl%2& impl%3&. impl%3& fk! fv!) (vstd!set.impl&%0.mk_map.? K&. K& V&. V& impl%3&. impl%3& (vstd!set.impl&%0.new.? K&. K& impl%2&. impl%2& fk!) fv!)) :pattern ((vstd!map.impl&%0.new.? K&. K& V&. V& impl%2&. impl%2& impl%3&. impl%3& fk! fv!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (impl%2&. Dcr) (impl%2& Type) (impl%3&. Dcr) (impl%3& Type) (fk! Poly) (fv! Poly)) (! (=> (and (has_type fk! impl%2&) (has_type fv! impl%3&)) (has_type (vstd!map.impl&%0.new.? K&. K& V&. V& impl%2&. impl%2& impl%3&. impl%3& fk! fv!) (TYPE%vstd!map.Map. K&. K& V&. V&))) :pattern ((vstd!map.impl&%0.new.? K&. K& V&. V& impl%2&. impl%2& impl%3&. impl%3& fk! fv!)) )))
(set-info :comment ";; Function-Axioms vstd::map_lib::impl&%0::union_prefer_right")
(assert (fuel_bool_default fuel%vstd!map_lib.impl&%0.union_prefer_right.))
(declare-fun %%lambda%%0 (Dcr Type Poly Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Poly) (k$ Poly)) (! (= (%%apply%%0 (%%lambda%%0 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) k$) (B (or (vstd!set.impl&%0.contains.? %%hole%%0 %%hole%%1 %%hole%%2 k$) (vstd!set.impl&%0.contains.? %%hole%%3 %%hole%%4 %%hole%%5 k$)))) :pattern ((%%apply%%0 (%%lambda%%0 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) k$)))))
(declare-fun %%lambda%%1 (Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Dcr) (%%hole%%6 Type) (%%hole%%7 Poly) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Poly) (k$ Poly)) (! (= (%%apply%%0 (%%lambda%%1 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) k$) (ite (vstd!set.impl&%0.contains.? %%hole%%0 %%hole%%1 %%hole%%2 k$) (vstd!map.impl&%0.index.? %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 k$) (vstd!map.impl&%0.index.? %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 k$))) :pattern ((%%apply%%0 (%%lambda%%1 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) k$)))))
(assert (=> (fuel_bool fuel%vstd!map_lib.impl&%0.union_prefer_right.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (m2! Poly)) (! (= (vstd!map_lib.impl&%0.union_prefer_right.? K&. K& V&. V& self! m2!) (vstd!map.impl&%0.new.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& $ BOOL) $ (TYPE%fun%1. K&. K& V&. V&) (Poly%fun%1. (mk_fun (%%lambda%%0 K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)))) (Poly%fun%1. (mk_fun (%%lambda%%1 K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!) K&. K& V&. V& m2! K&. K& V&. V& self!))))) :pattern ((vstd!map_lib.impl&%0.union_prefer_right.? K&. K& V&. V& self! m2!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (m2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type m2! (TYPE%vstd!map.Map. K&. K& V&. V&))) (has_type (vstd!map_lib.impl&%0.union_prefer_right.? K&. K& V&. V& self! m2!) (TYPE%vstd!map.Map. K&. K& V&. V&))) :pattern ((vstd!map_lib.impl&%0.union_prefer_right.? K&. K& V&. V& self! m2!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_index_decreases_finite")
(declare-fun req%vstd!map.axiom_map_index_decreases_finite. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%14 Bool)
(declare-const %%global_location_label%%15 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (req%vstd!map.axiom_map_index_decreases_finite. K&. K& V&. V& m! key!) (and (=> %%global_location_label%%14 (vstd!set.impl&%0.finite.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!))) (=> %%global_location_label%%15 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!)))) :pattern ((req%vstd!map.axiom_map_index_decreases_finite. K&. K& V&. V& m! key!)) )))
(declare-fun ens%vstd!map.axiom_map_index_decreases_finite. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (ens%vstd!map.axiom_map_index_decreases_finite. K&. K& V&. V& m! key!) (height_lt (height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!)) (height m!))) :pattern ((ens%vstd!map.axiom_map_index_decreases_finite. K&. K& V&. V& m! key!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_index_decreases_finite")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (=> (and (vstd!set.impl&%0.finite.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!)) (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!)) (height_lt (height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!)) (height m!)))) :pattern ((height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!))) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_index_decreases_infinite")
(declare-fun req%vstd!map.axiom_map_index_decreases_infinite. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%16 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (req%vstd!map.axiom_map_index_decreases_infinite. K&. K& V&. V& m! key!) (=> %%global_location_label%%16 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((req%vstd!map.axiom_map_index_decreases_infinite. K&. K& V&. V& m! key!)) )))
(declare-fun ens%vstd!map.axiom_map_index_decreases_infinite. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (ens%vstd!map.axiom_map_index_decreases_infinite. K&. K& V&. V& m! key!) (height_lt (height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!)) (height (fun_from_recursive_field m!)))) :pattern ((ens%vstd!map.axiom_map_index_decreases_infinite. K&. K& V&. V& m! key!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_index_decreases_infinite")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!) (height_lt (height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!)) (height (fun_from_recursive_field m!))))) :pattern ((height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!))) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::empty")
(assert (forall ((A&. Dcr) (A& Type)) (! (has_type (vstd!set.impl&%0.empty.? A&. A&) (TYPE%vstd!set.Set. A&. A&)) :pattern ((vstd!set.impl&%0.empty.? A&. A&)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_empty")
(declare-fun ens%vstd!map.axiom_map_empty. (Dcr Type Dcr Type) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type)) (! (= (ens%vstd!map.axiom_map_empty. K&. K& V&. V&) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.empty.? K&. K& V&. V&)) (vstd!set.impl&%0.empty.? K&. K&))) :pattern ((ens%vstd!map.axiom_map_empty. K&. K& V&. V&)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_empty")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type)) (! (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.empty.? K&. K& V&. V&)) (vstd!set.impl&%0.empty.? K&. K&)) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.empty.? K&. K& V&. V&))) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::insert")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (a! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (has_type (vstd!set.impl&%0.insert.? A&. A& self! a!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.insert.? A&. A& self! a!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_insert_domain")
(declare-fun ens%vstd!map.axiom_map_insert_domain. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly) (value! Poly)) (! (= (ens%vstd!map.axiom_map_insert_domain. K&. K& V&. V& m! key! value!) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!)) (vstd!set.impl&%0.insert.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((ens%vstd!map.axiom_map_insert_domain. K&. K& V&. V& m! key! value!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_insert_domain")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly) (value! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&) (has_type value! V&)) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!)) (vstd!set.impl&%0.insert.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!))) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_insert_same")
(declare-fun ens%vstd!map.axiom_map_insert_same. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly) (value! Poly)) (! (= (ens%vstd!map.axiom_map_insert_same. K&. K& V&. V& m! key! value!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!) key!) value!)) :pattern ((ens%vstd!map.axiom_map_insert_same. K&. K& V&. V& m! key! value!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_insert_same")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly) (value! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&) (has_type value! V&)) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!) key!) value!)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!) key!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_insert_different")
(declare-fun req%vstd!map.axiom_map_insert_different. (Dcr Type Dcr Type Poly Poly Poly Poly) Bool)
(declare-const %%global_location_label%%17 Bool)
(declare-const %%global_location_label%%18 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly) (value! Poly)) (! (= (req%vstd!map.axiom_map_insert_different. K&. K& V&. V& m! key1! key2! value!) (and (=> %%global_location_label%%17 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key1!)) (=> %%global_location_label%%18 (not (= key1! key2!))))) :pattern ((req%vstd!map.axiom_map_insert_different. K&. K& V&. V& m! key1! key2! value!)) )))
(declare-fun ens%vstd!map.axiom_map_insert_different. (Dcr Type Dcr Type Poly Poly Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly) (value! Poly)) (! (= (ens%vstd!map.axiom_map_insert_different. K&. K& V&. V& m! key1! key2! value!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key2! value!) key1!) (vstd!map.impl&%0.index.? K&. K& V&. V& m! key1!))) :pattern ((ens%vstd!map.axiom_map_insert_different. K&. K& V&. V& m! key1! key2! value!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_insert_different")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly) (value! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key1! K&) (has_type key2! K&) (has_type value! V&)) (=> (and (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key1!) (not (= key1! key2!))) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key2! value!) key1!) (vstd!map.impl&%0.index.? K&. K& V&. V& m! key1!)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key2! value!) key1!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::remove")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (a! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (has_type (vstd!set.impl&%0.remove.? A&. A& self! a!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.remove.? A&. A& self! a!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_remove_domain")
(declare-fun ens%vstd!map.axiom_map_remove_domain. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (ens%vstd!map.axiom_map_remove_domain. K&. K& V&. V& m! key!) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key!)) (vstd!set.impl&%0.remove.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((ens%vstd!map.axiom_map_remove_domain. K&. K& V&. V& m! key!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_remove_domain")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key!)) (vstd!set.impl&%0.remove.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key!))) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_remove_different")
(declare-fun req%vstd!map.axiom_map_remove_different. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%19 Bool)
(declare-const %%global_location_label%%20 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly)) (! (= (req%vstd!map.axiom_map_remove_different. K&. K& V&. V& m! key1! key2!) (and (=> %%global_location_label%%19 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key1!)) (=> %%global_location_label%%20 (not (= key1! key2!))))) :pattern ((req%vstd!map.axiom_map_remove_different. K&. K& V&. V& m! key1! key2!)) )))
(declare-fun ens%vstd!map.axiom_map_remove_different. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly)) (! (= (ens%vstd!map.axiom_map_remove_different. K&. K& V&. V& m! key1! key2!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key2!) key1!) (vstd!map.impl&%0.index.? K&. K& V&. V& m! key1!))) :pattern ((ens%vstd!map.axiom_map_remove_different. K&. K& V&. V& m! key1! key2!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_remove_different")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key1! K&) (has_type key2! K&)) (=> (and (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key1!) (not (= key1! key2!))) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key2!) key1!) (vstd!map.impl&%0.index.? K&. K& V&. V& m! key1!)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key2!) key1!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_ext_equal")
(declare-fun ens%vstd!map.axiom_map_ext_equal. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (= (ens%vstd!map.axiom_map_ext_equal. K&. K& V&. V& m1! m2!) (= (ext_eq false (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!) (and (ext_eq false (TYPE%vstd!set.Set. K&. K&) (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)) (forall ((k$ Poly)) (! (=> (has_type k$ K&) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) k$) (= (vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$) (vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)) ))))) :pattern ((ens%vstd!map.axiom_map_ext_equal. K&. K& V&. V& m1! m2!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_ext_equal")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (=> (and (has_type m1! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type m2! (TYPE%vstd!map.Map. K&. K& V&. V&))) (= (ext_eq false (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!) (and (ext_eq false (TYPE%vstd!set.Set. K&. K&) (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)) (forall ((k$ Poly)) (! (=> (has_type k$ K&) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) k$) (= (vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$) (vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)) ))))) :pattern ((ext_eq false (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_ext_equal_deep")
(declare-fun ens%vstd!map.axiom_map_ext_equal_deep. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (= (ens%vstd!map.axiom_map_ext_equal_deep. K&. K& V&. V& m1! m2!) (= (ext_eq true (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!) (and (ext_eq true (TYPE%vstd!set.Set. K&. K&) (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)) (forall ((k$ Poly)) (! (=> (has_type k$ K&) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) k$) (ext_eq true V& (vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$) (vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)) ))))) :pattern ((ens%vstd!map.axiom_map_ext_equal_deep. K&. K& V&. V& m1! m2!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_ext_equal_deep")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (=> (and (has_type m1! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type m2! (TYPE%vstd!map.Map. K&. K& V&. V&))) (= (ext_eq true (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!) (and (ext_eq true (TYPE%vstd!set.Set. K&. K&) (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)) (forall ((k$ Poly)) (! (=> (has_type k$ K&) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) k$) (ext_eq true V& (vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$) (vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)) ))))) :pattern ((ext_eq true (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!)) )))
(set-info :comment ";; Function-Axioms vstd::pervasive::arbitrary")
(assert (forall ((A&. Dcr) (A& Type)) (! (has_type (vstd!pervasive.arbitrary.? A&. A&) A&) :pattern ((vstd!pervasive.arbitrary.? A&. A&)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::new")
(assert (forall ((A&. Dcr) (A& Type) (impl%1&. Dcr) (impl%1& Type) (len! Poly) (f! Poly)) (! (=> (and (has_type len! NAT) (has_type f! impl%1&)) (has_type (vstd!seq.Seq.new.? A&. A& impl%1&. impl%1& len! f!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.new.? A&. A& impl%1&. impl%1& len! f!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_index_decreases")
(declare-fun req%vstd!seq.axiom_seq_index_decreases. (Dcr Type Poly Int) Bool)
(declare-const %%global_location_label%%21 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_index_decreases. A&. A& s! i!) (=> %%global_location_label%%21 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_index_decreases. A&. A& s! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_index_decreases. (Dcr Type Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_index_decreases. A&. A& s! i!) (height_lt (height (vstd!seq.Seq.index.? A&. A& s! (I i!))) (height s!))) :pattern ((ens%vstd!seq.axiom_seq_index_decreases. A&. A& s! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_index_decreases")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s!))) (height_lt (height (vstd!seq.Seq.index.? A&. A& s! i!)) (height s!)))) :pattern ((height (vstd!seq.Seq.index.? A&. A& s! i!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_empty")
(declare-fun ens%vstd!seq.axiom_seq_empty. (Dcr Type) Bool)
(assert (forall ((A&. Dcr) (A& Type)) (! (= (ens%vstd!seq.axiom_seq_empty. A&. A&) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.empty.? A&. A&)) 0)) :pattern ((ens%vstd!seq.axiom_seq_empty. A&. A&)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_empty")
(assert (forall ((A&. Dcr) (A& Type)) (! (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.empty.? A&. A&)) 0) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.empty.? A&. A&))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_new_len")
(declare-fun ens%vstd!seq.axiom_seq_new_len. (Dcr Type Int %%Function%%) Bool)
(assert (forall ((A&. Dcr) (A& Type) (len! Int) (f! %%Function%%)) (! (= (ens%vstd!seq.axiom_seq_new_len. A&. A& len! f!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) (I len!) (Poly%fun%1. f!))) len!)) :pattern ((ens%vstd!seq.axiom_seq_new_len. A&. A& len! f!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_new_len")
(assert (forall ((A&. Dcr) (A& Type) (len! Poly) (f! Poly)) (! (=> (and (has_type len! NAT) (has_type f! (TYPE%fun%1. $ INT A&. A&))) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) len! f!)) (%I len!))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) len! f!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_new_index")
(declare-fun req%vstd!seq.axiom_seq_new_index. (Dcr Type Int %%Function%% Int) Bool)
(declare-const %%global_location_label%%22 Bool)
(assert (forall ((A&. Dcr) (A& Type) (len! Int) (f! %%Function%%) (i! Int)) (! (= (req%vstd!seq.axiom_seq_new_index. A&. A& len! f! i!) (=> %%global_location_label%%22 (and (<= 0 i!) (< i! len!)))) :pattern ((req%vstd!seq.axiom_seq_new_index. A&. A& len! f! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_new_index. (Dcr Type Int %%Function%% Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (len! Int) (f! %%Function%%) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_new_index. A&. A& len! f! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) (I len!) (Poly%fun%1. f!)) (I i!)) (%%apply%%0 f! (I i!)))) :pattern ((ens%vstd!seq.axiom_seq_new_index. A&. A& len! f! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_new_index")
(assert (forall ((A&. Dcr) (A& Type) (len! Poly) (f! Poly) (i! Poly)) (! (=> (and (has_type len! NAT) (has_type f! (TYPE%fun%1. $ INT A&. A&)) (has_type i! INT)) (=> (and (<= 0 (%I i!)) (< (%I i!) (%I len!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) len! f!) i!) (%%apply%%0 (%Poly%fun%1. f!) i!)))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) len! f!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_push_len")
(declare-fun ens%vstd!seq.axiom_seq_push_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!seq.axiom_seq_push_len. A&. A& s! a!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!)) (nClip (Add (vstd!seq.Seq.len.? A&. A& s!) 1)))) :pattern ((ens%vstd!seq.axiom_seq_push_len. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_push_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type a! A&)) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!)) (nClip (Add (vstd!seq.Seq.len.? A&. A& s!) 1)))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_push_index_same")
(declare-fun req%vstd!seq.axiom_seq_push_index_same. (Dcr Type Poly Poly Int) Bool)
(declare-const %%global_location_label%%23 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_push_index_same. A&. A& s! a! i!) (=> %%global_location_label%%23 (= i! (vstd!seq.Seq.len.? A&. A& s!)))) :pattern ((req%vstd!seq.axiom_seq_push_index_same. A&. A& s! a! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_push_index_same. (Dcr Type Poly Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_push_index_same. A&. A& s! a! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) (I i!)) a!)) :pattern ((ens%vstd!seq.axiom_seq_push_index_same. A&. A& s! a! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_push_index_same")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type a! A&) (has_type i! INT)) (=> (= (%I i!) (vstd!seq.Seq.len.? A&. A& s!)) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) i!) a!))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_push_index_different")
(declare-fun req%vstd!seq.axiom_seq_push_index_different. (Dcr Type Poly Poly Int) Bool)
(declare-const %%global_location_label%%24 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_push_index_different. A&. A& s! a! i!) (=> %%global_location_label%%24 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_push_index_different. A&. A& s! a! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_push_index_different. (Dcr Type Poly Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_push_index_different. A&. A& s! a! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) (I i!)) (vstd!seq.Seq.index.? A&. A& s! (I i!)))) :pattern ((ens%vstd!seq.axiom_seq_push_index_different. A&. A& s! a! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_push_index_different")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type a! A&) (has_type i! INT)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) i!) (vstd!seq.Seq.index.? A&. A& s! i!)))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_update_len")
(declare-fun req%vstd!seq.axiom_seq_update_len. (Dcr Type Poly Int Poly) Bool)
(declare-const %%global_location_label%%25 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int) (a! Poly)) (! (= (req%vstd!seq.axiom_seq_update_len. A&. A& s! i! a!) (=> %%global_location_label%%25 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_update_len. A&. A& s! i! a!)) )))
(declare-fun ens%vstd!seq.axiom_seq_update_len. (Dcr Type Poly Int Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int) (a! Poly)) (! (= (ens%vstd!seq.axiom_seq_update_len. A&. A& s! i! a!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.update.? A&. A& s! (I i!) a!)) (vstd!seq.Seq.len.? A&. A& s!))) :pattern ((ens%vstd!seq.axiom_seq_update_len. A&. A& s! i! a!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_update_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT) (has_type a! A&)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s!))) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i! a!)) (vstd!seq.Seq.len.? A&. A& s!)))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i! a!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_update_same")
(declare-fun req%vstd!seq.axiom_seq_update_same. (Dcr Type Poly Int Poly) Bool)
(declare-const %%global_location_label%%26 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int) (a! Poly)) (! (= (req%vstd!seq.axiom_seq_update_same. A&. A& s! i! a!) (=> %%global_location_label%%26 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_update_same. A&. A& s! i! a!)) )))
(declare-fun ens%vstd!seq.axiom_seq_update_same. (Dcr Type Poly Int Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int) (a! Poly)) (! (= (ens%vstd!seq.axiom_seq_update_same. A&. A& s! i! a!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! (I i!) a!) (I i!)) a!)) :pattern ((ens%vstd!seq.axiom_seq_update_same. A&. A& s! i! a!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_update_same")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT) (has_type a! A&)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i! a!) i!) a!))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i! a!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_update_different")
(declare-fun req%vstd!seq.axiom_seq_update_different. (Dcr Type Poly Int Int Poly) Bool)
(declare-const %%global_location_label%%27 Bool)
(declare-const %%global_location_label%%28 Bool)
(declare-const %%global_location_label%%29 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i1! Int) (i2! Int) (a! Poly)) (! (= (req%vstd!seq.axiom_seq_update_different. A&. A& s! i1! i2! a!) (and (=> %%global_location_label%%27 (and (<= 0 i1!) (< i1! (vstd!seq.Seq.len.? A&. A& s!)))) (=> %%global_location_label%%28 (and (<= 0 i2!) (< i2! (vstd!seq.Seq.len.? A&. A& s!)))) (=> %%global_location_label%%29 (not (= i1! i2!))))) :pattern ((req%vstd!seq.axiom_seq_update_different. A&. A& s! i1! i2! a!)) )))
(declare-fun ens%vstd!seq.axiom_seq_update_different. (Dcr Type Poly Int Int Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i1! Int) (i2! Int) (a! Poly)) (! (= (ens%vstd!seq.axiom_seq_update_different. A&. A& s! i1! i2! a!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! (I i2!) a!) (I i1!)) (vstd!seq.Seq.index.? A&. A& s! (I i1!)))) :pattern ((ens%vstd!seq.axiom_seq_update_different. A&. A& s! i1! i2! a!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_update_different")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i1! Poly) (i2! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i1! INT) (has_type i2! INT) (has_type a! A&)) (=> (and (and (and (<= 0 (%I i1!)) (< (%I i1!) (vstd!seq.Seq.len.? A&. A& s!))) (and (<= 0 (%I i2!)) (< (%I i2!) (vstd!seq.Seq.len.? A&. A& s!)))) (not (= i1! i2!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i2! a!) i1!) (vstd!seq.Seq.index.? A&. A& s! i1!)))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i2! a!) i1!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_ext_equal")
(declare-fun ens%vstd!seq.axiom_seq_ext_equal. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!seq.axiom_seq_ext_equal. A&. A& s1! s2!) (= (ext_eq false (TYPE%vstd!seq.Seq. A&. A&) s1! s2!) (and (= (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!)) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& s1!))) (= (vstd!seq.Seq.index.? A&. A& s1! i$) (vstd!seq.Seq.index.? A&. A& s2! i$)))) :pattern ((vstd!seq.Seq.index.? A&. A& s1! i$)) :pattern ((vstd!seq.Seq.index.? A&. A& s2! i$)) ))))) :pattern ((ens%vstd!seq.axiom_seq_ext_equal. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_ext_equal")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&))) (= (ext_eq false (TYPE%vstd!seq.Seq. A&. A&) s1! s2!) (and (= (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!)) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& s1!))) (= (vstd!seq.Seq.index.? A&. A& s1! i$) (vstd!seq.Seq.index.? A&. A& s2! i$)))) :pattern ((vstd!seq.Seq.index.? A&. A& s1! i$)) :pattern ((vstd!seq.Seq.index.? A&. A& s2! i$)) ))))) :pattern ((ext_eq false (TYPE%vstd!seq.Seq. A&. A&) s1! s2!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_ext_equal_deep")
(declare-fun ens%vstd!seq.axiom_seq_ext_equal_deep. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!seq.axiom_seq_ext_equal_deep. A&. A& s1! s2!) (= (ext_eq true (TYPE%vstd!seq.Seq. A&. A&) s1! s2!) (and (= (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!)) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& s1!))) (ext_eq true A& (vstd!seq.Seq.index.? A&. A& s1! i$) (vstd!seq.Seq.index.? A&. A& s2! i$)))) :pattern ((vstd!seq.Seq.index.? A&. A& s1! i$)) :pattern ((vstd!seq.Seq.index.? A&. A& s2! i$)) ))))) :pattern ((ens%vstd!seq.axiom_seq_ext_equal_deep. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_ext_equal_deep")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&))) (= (ext_eq true (TYPE%vstd!seq.Seq. A&. A&) s1! s2!) (and (= (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!)) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& s1!))) (ext_eq true A& (vstd!seq.Seq.index.? A&. A& s1! i$) (vstd!seq.Seq.index.? A&. A& s2! i$)))) :pattern ((vstd!seq.Seq.index.? A&. A& s1! i$)) :pattern ((vstd!seq.Seq.index.? A&. A& s2! i$)) ))))) :pattern ((ext_eq true (TYPE%vstd!seq.Seq. A&. A&) s1! s2!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_subrange_len")
(declare-fun req%vstd!seq.axiom_seq_subrange_len. (Dcr Type Poly Int Int) Bool)
(declare-const %%global_location_label%%30 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Int) (k! Int)) (! (= (req%vstd!seq.axiom_seq_subrange_len. A&. A& s! j! k!) (=> %%global_location_label%%30 (and (and (<= 0 j!) (<= j! k!)) (<= k! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_subrange_len. A&. A& s! j! k!)) )))
(declare-fun ens%vstd!seq.axiom_seq_subrange_len. (Dcr Type Poly Int Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Int) (k! Int)) (! (= (ens%vstd!seq.axiom_seq_subrange_len. A&. A& s! j! k!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! (I j!) (I k!))) (Sub k! j!))) :pattern ((ens%vstd!seq.axiom_seq_subrange_len. A&. A& s! j! k!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_subrange_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Poly) (k! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type j! INT) (has_type k! INT)) (=> (and (and (<= 0 (%I j!)) (<= (%I j!) (%I k!))) (<= (%I k!) (vstd!seq.Seq.len.? A&. A& s!))) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! j! k!)) (Sub (%I k!) (%I j!))))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! j! k!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_subrange_index")
(declare-fun req%vstd!seq.axiom_seq_subrange_index. (Dcr Type Poly Int Int Int) Bool)
(declare-const %%global_location_label%%31 Bool)
(declare-const %%global_location_label%%32 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Int) (k! Int) (i! Int)) (! (= (req%vstd!seq.axiom_seq_subrange_index. A&. A& s! j! k! i!) (and (=> %%global_location_label%%31 (and (and (<= 0 j!) (<= j! k!)) (<= k! (vstd!seq.Seq.len.? A&. A& s!)))) (=> %%global_location_label%%32 (and (<= 0 i!) (< i! (Sub k! j!)))))) :pattern ((req%vstd!seq.axiom_seq_subrange_index. A&. A& s! j! k! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_subrange_index. (Dcr Type Poly Int Int Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Int) (k! Int) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_subrange_index. A&. A& s! j! k! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! (I j!) (I k!)) (I i!)) (vstd!seq.Seq.index.? A&. A& s! (I (Add i! j!))))) :pattern ((ens%vstd!seq.axiom_seq_subrange_index. A&. A& s! j! k! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_subrange_index")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Poly) (k! Poly) (i! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type j! INT) (has_type k! INT) (has_type i! INT)) (=> (and (and (and (<= 0 (%I j!)) (<= (%I j!) (%I k!))) (<= (%I k!) (vstd!seq.Seq.len.? A&. A& s!))) (and (<= 0 (%I i!)) (< (%I i!) (Sub (%I k!) (%I j!))))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! j! k!) i!) (vstd!seq.Seq.index.? A&. A& s! (I (Add (%I i!) (%I j!))))))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! j! k!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_add_len")
(declare-fun ens%vstd!seq.axiom_seq_add_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!seq.axiom_seq_add_len. A&. A& s1! s2!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!)) (nClip (Add (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!))))) :pattern ((ens%vstd!seq.axiom_seq_add_len. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_add_len")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&))) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!)) (nClip (Add (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!))))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_add_index1")
(declare-fun req%vstd!seq.axiom_seq_add_index1. (Dcr Type Poly Poly Int) Bool)
(declare-const %%global_location_label%%33 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_add_index1. A&. A& s1! s2! i!) (=> %%global_location_label%%33 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s1!))))) :pattern ((req%vstd!seq.axiom_seq_add_index1. A&. A& s1! s2! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_add_index1. (Dcr Type Poly Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_add_index1. A&. A& s1! s2! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) (I i!)) (vstd!seq.Seq.index.? A&. A& s1! (I i!)))) :pattern ((ens%vstd!seq.axiom_seq_add_index1. A&. A& s1! s2! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_add_index1")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s1!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) i!) (vstd!seq.Seq.index.? A&. A& s1! i!)))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_add_index2")
(declare-fun req%vstd!seq.axiom_seq_add_index2. (Dcr Type Poly Poly Int) Bool)
(declare-const %%global_location_label%%34 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_add_index2. A&. A& s1! s2! i!) (=> %%global_location_label%%34 (and (<= (vstd!seq.Seq.len.? A&. A& s1!) i!) (< i! (nClip (Add (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!))))))) :pattern ((req%vstd!seq.axiom_seq_add_index2. A&. A& s1! s2! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_add_index2. (Dcr Type Poly Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_add_index2. A&. A& s1! s2! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) (I i!)) (vstd!seq.Seq.index.? A&. A& s2! (I (Sub i! (vstd!seq.Seq.len.? A&. A& s1!)))))) :pattern ((ens%vstd!seq.axiom_seq_add_index2. A&. A& s1! s2! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_add_index2")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (=> (and (<= (vstd!seq.Seq.len.? A&. A& s1!) (%I i!)) (< (%I i!) (nClip (Add (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!))))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) i!) (vstd!seq.Seq.index.? A&. A& s2! (I (Sub (%I i!) (vstd!seq.Seq.len.? A&. A& s1!))))))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) i!)) )))
(set-info :comment ";; Function-Axioms vstd::seq_lib::impl&%0::filter")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (pred! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type pred! (TYPE%fun%1. A&. A& $ BOOL))) (has_type (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!)) )))
(set-info :comment ";; Function-Axioms vstd::seq_lib::impl&%0::contains")
(assert (fuel_bool_default fuel%vstd!seq_lib.impl&%0.contains.))
(assert (=> (fuel_bool fuel%vstd!seq_lib.impl&%0.contains.) (forall ((A&. Dcr) (A& Type) (self! Poly) (needle! Poly)) (! (= (vstd!seq_lib.impl&%0.contains.? A&. A& self! needle!) (exists ((i$ Poly)) (! (and (has_type i$ INT) (and (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& self!))) (= (vstd!seq.Seq.index.? A&. A& self! i$) needle!))) :pattern ((vstd!seq.Seq.index.? A&. A& self! i$)) ))) :pattern ((vstd!seq_lib.impl&%0.contains.? A&. A& self! needle!)) ))))
(set-info :comment ";; Function-Specs vstd::seq_lib::impl&%0::filter_lemma_broadcast")
(declare-fun ens%vstd!seq_lib.impl&%0.filter_lemma_broadcast. (Dcr Type Poly %%Function%%) Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (pred! %%Function%%)) (! (= (ens%vstd!seq_lib.impl&%0.filter_lemma_broadcast. A&. A& self! pred!) (and (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!))))) (and (%B (%%apply%%0 pred! (vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) i$))) (vstd!seq_lib.impl&%0.contains.? A&. A& self! (vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) i$))))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) i$)) )) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& self!))) (%B (%%apply%%0 pred! (vstd!seq.Seq.index.? A&. A& self! i$)))) (vstd!seq_lib.impl&%0.contains.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) (vstd!seq.Seq.index.? A&. A& self! i$)))) :pattern ((vstd!seq_lib.impl&%0.contains.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) (vstd!seq.Seq.index.? A&. A& self! i$))) )) (<= (vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!))) (vstd!seq.Seq.len.? A&. A& self!)))) :pattern ((ens%vstd!seq_lib.impl&%0.filter_lemma_broadcast. A&. A& self! pred!)) )))
(set-info :comment ";; Broadcast vstd::seq_lib::impl&%0::filter_lemma_broadcast")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (pred! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type pred! (TYPE%fun%1. A&. A& $ BOOL))) (and (and (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!)))) (and (%B (%%apply%%0 (%Poly%fun%1. pred!) (vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) i$))) (vstd!seq_lib.impl&%0.contains.? A&. A& self! (vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) i$))))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) i$)) )) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& self!))) (%B (%%apply%%0 (%Poly%fun%1. pred!) (vstd!seq.Seq.index.? A&. A& self! i$)))) (vstd!seq_lib.impl&%0.contains.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) (vstd!seq.Seq.index.? A&. A& self! i$)))) :pattern ((vstd!seq_lib.impl&%0.contains.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) (vstd!seq.Seq.index.? A&. A& self! i$))) ))) (<= (vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!)) (vstd!seq.Seq.len.? A&. A& self!)))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!))) )))
(set-info :comment ";; Function-Specs vstd::seq_lib::impl&%0::filter_distributes_over_add_broacast")
(declare-fun ens%vstd!seq_lib.impl&%0.filter_distributes_over_add_broacast. (Dcr Type Poly Poly %%Function%%) Bool)
(assert (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly) (pred! %%Function%%)) (! (= (ens%vstd!seq_lib.impl&%0.filter_distributes_over_add_broacast. A&. A& a! b! pred!) (= (vstd!seq_lib.impl&%0.filter.? A&. A& (vstd!seq.Seq.add.? A&. A& a! b!) (Poly%fun%1. pred!)) (vstd!seq.Seq.add.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& a! (Poly%fun%1. pred!)) (vstd!seq_lib.impl&%0.filter.? A&. A& b! (Poly%fun%1. pred!))))) :pattern ((ens%vstd!seq_lib.impl&%0.filter_distributes_over_add_broacast. A&. A& a! b! pred!)) )))
(set-info :comment ";; Broadcast vstd::seq_lib::impl&%0::filter_distributes_over_add_broacast")
(assert (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly) (pred! Poly)) (! (=> (and (has_type a! (TYPE%vstd!seq.Seq. A&. A&)) (has_type b! (TYPE%vstd!seq.Seq. A&. A&)) (has_type pred! (TYPE%fun%1. A&. A& $ BOOL))) (= (vstd!seq_lib.impl&%0.filter.? A&. A& (vstd!seq.Seq.add.? A&. A& a! b!) pred!) (vstd!seq.Seq.add.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& a! pred!) (vstd!seq_lib.impl&%0.filter.? A&. A& b! pred!)))) :pattern ((vstd!seq_lib.impl&%0.filter.? A&. A& (vstd!seq.Seq.add.? A&. A& a! b!) pred!)) )))
(set-info :comment ";; Function-Axioms vstd::seq_lib::impl&%0::to_set")
(assert (fuel_bool_default fuel%vstd!seq_lib.impl&%0.to_set.))
(declare-fun %%lambda%%2 (Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (a$ Poly)) (! (= (%%apply%%0 (%%lambda%%2 %%hole%%0 %%hole%%1 %%hole%%2) a$) (B (vstd!seq_lib.impl&%0.contains.? %%hole%%0 %%hole%%1 %%hole%%2 a$))) :pattern ((%%apply%%0 (%%lambda%%2 %%hole%%0 %%hole%%1 %%hole%%2) a$)))))
(assert (=> (fuel_bool fuel%vstd!seq_lib.impl&%0.to_set.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!seq_lib.impl&%0.to_set.? A&. A& self!) (vstd!set.impl&%0.new.? A&. A& $ (TYPE%fun%1. A&. A& $ BOOL) (Poly%fun%1. (mk_fun (%%lambda%%2 A&. A& self!))))) :pattern ((vstd!seq_lib.impl&%0.to_set.? A&. A& self!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type (vstd!seq_lib.impl&%0.to_set.? A&. A& self!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!seq_lib.impl&%0.to_set.? A&. A& self!)) )))
(set-info :comment ";; Function-Specs vstd::seq_lib::seq_to_set_is_finite_broadcast")
(declare-fun ens%vstd!seq_lib.seq_to_set_is_finite_broadcast. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (seq! Poly)) (! (= (ens%vstd!seq_lib.seq_to_set_is_finite_broadcast. A&. A& seq!) (vstd!set.impl&%0.finite.? A&. A& (vstd!seq_lib.impl&%0.to_set.? A&. A& seq!))) :pattern ((ens%vstd!seq_lib.seq_to_set_is_finite_broadcast. A&. A& seq!)) )))
(set-info :comment ";; Broadcast vstd::seq_lib::seq_to_set_is_finite_broadcast")
(assert (forall ((A&. Dcr) (A& Type) (seq! Poly)) (! (=> (has_type seq! (TYPE%vstd!seq.Seq. A&. A&)) (vstd!set.impl&%0.finite.? A&. A& (vstd!seq_lib.impl&%0.to_set.? A&. A& seq!))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!seq_lib.impl&%0.to_set.? A&. A& seq!))) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::union")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (s2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (has_type (vstd!set.impl&%0.union.? A&. A& self! s2!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.union.? A&. A& self! s2!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::intersect")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (s2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (has_type (vstd!set.impl&%0.intersect.? A&. A& self! s2!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.intersect.? A&. A& self! s2!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::difference")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (s2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (has_type (vstd!set.impl&%0.difference.? A&. A& self! s2!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.difference.? A&. A& self! s2!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::complement")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type (vstd!set.impl&%0.complement.? A&. A& self!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.complement.? A&. A& self!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::len")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!set.Set. A&. A&)) (<= 0 (vstd!set.impl&%0.len.? A&. A& self!))) :pattern ((vstd!set.impl&%0.len.? A&. A& self!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_empty")
(declare-fun ens%vstd!set.axiom_set_empty. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (a! Poly)) (! (= (ens%vstd!set.axiom_set_empty. A&. A& a!) (not (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.empty.? A&. A&) a!))) :pattern ((ens%vstd!set.axiom_set_empty. A&. A& a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_empty")
(assert (forall ((A&. Dcr) (A& Type) (a! Poly)) (! (=> (has_type a! A&) (not (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.empty.? A&. A&) a!))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.empty.? A&. A&) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_new")
(declare-fun ens%vstd!set.axiom_set_new. (Dcr Type %%Function%% Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (f! %%Function%%) (a! Poly)) (! (= (ens%vstd!set.axiom_set_new. A&. A& f! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.new.? A&. A& $ (TYPE%fun%1. A&. A& $ BOOL) (Poly%fun%1. f!)) a!) (%B (%%apply%%0 f! a!)))) :pattern ((ens%vstd!set.axiom_set_new. A&. A& f! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_new")
(assert (forall ((A&. Dcr) (A& Type) (f! Poly) (a! Poly)) (! (=> (and (has_type f! (TYPE%fun%1. A&. A& $ BOOL)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.new.? A&. A& $ (TYPE%fun%1. A&. A& $ BOOL) f!) a!) (%B (%%apply%%0 (%Poly%fun%1. f!) a!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.new.? A&. A& $ (TYPE%fun%1. A&. A& $ BOOL) f!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_insert_same")
(declare-fun ens%vstd!set.axiom_set_insert_same. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_insert_same. A&. A& s! a!) (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!) a!)) :pattern ((ens%vstd!set.axiom_set_insert_same. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_insert_same")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!) a!)) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_insert_different")
(declare-fun req%vstd!set.axiom_set_insert_different. (Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%35 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (= (req%vstd!set.axiom_set_insert_different. A&. A& s! a1! a2!) (=> %%global_location_label%%35 (not (= a1! a2!)))) :pattern ((req%vstd!set.axiom_set_insert_different. A&. A& s! a1! a2!)) )))
(declare-fun ens%vstd!set.axiom_set_insert_different. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (= (ens%vstd!set.axiom_set_insert_different. A&. A& s! a1! a2!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a2!) a1!) (vstd!set.impl&%0.contains.? A&. A& s! a1!))) :pattern ((ens%vstd!set.axiom_set_insert_different. A&. A& s! a1! a2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_insert_different")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a1! A&) (has_type a2! A&)) (=> (not (= a1! a2!)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a2!) a1!) (vstd!set.impl&%0.contains.? A&. A& s! a1!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a2!) a1!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_same")
(declare-fun ens%vstd!set.axiom_set_remove_same. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_remove_same. A&. A& s! a!) (not (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!))) :pattern ((ens%vstd!set.axiom_set_remove_same. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_same")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (not (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_insert")
(declare-fun req%vstd!set.axiom_set_remove_insert. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%36 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_remove_insert. A&. A& s! a!) (=> %%global_location_label%%36 (vstd!set.impl&%0.contains.? A&. A& s! a!))) :pattern ((req%vstd!set.axiom_set_remove_insert. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_remove_insert. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_remove_insert. A&. A& s! a!) (= (vstd!set.impl&%0.insert.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!) s!)) :pattern ((ens%vstd!set.axiom_set_remove_insert. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_insert")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.contains.? A&. A& s! a!) (= (vstd!set.impl&%0.insert.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!) s!))) :pattern ((vstd!set.impl&%0.remove.? A&. A& s! a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_different")
(declare-fun req%vstd!set.axiom_set_remove_different. (Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%37 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (= (req%vstd!set.axiom_set_remove_different. A&. A& s! a1! a2!) (=> %%global_location_label%%37 (not (= a1! a2!)))) :pattern ((req%vstd!set.axiom_set_remove_different. A&. A& s! a1! a2!)) )))
(declare-fun ens%vstd!set.axiom_set_remove_different. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (= (ens%vstd!set.axiom_set_remove_different. A&. A& s! a1! a2!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a2!) a1!) (vstd!set.impl&%0.contains.? A&. A& s! a1!))) :pattern ((ens%vstd!set.axiom_set_remove_different. A&. A& s! a1! a2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_different")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a1! A&) (has_type a2! A&)) (=> (not (= a1! a2!)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a2!) a1!) (vstd!set.impl&%0.contains.? A&. A& s! a1!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a2!) a1!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_union")
(declare-fun ens%vstd!set.axiom_set_union. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_union. A&. A& s1! s2! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!) a!) (or (vstd!set.impl&%0.contains.? A&. A& s1! a!) (vstd!set.impl&%0.contains.? A&. A& s2! a!)))) :pattern ((ens%vstd!set.axiom_set_union. A&. A& s1! s2! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_union")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!) a!) (or (vstd!set.impl&%0.contains.? A&. A& s1! a!) (vstd!set.impl&%0.contains.? A&. A& s2! a!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_intersect")
(declare-fun ens%vstd!set.axiom_set_intersect. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_intersect. A&. A& s1! s2! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!) a!) (and (vstd!set.impl&%0.contains.? A&. A& s1! a!) (vstd!set.impl&%0.contains.? A&. A& s2! a!)))) :pattern ((ens%vstd!set.axiom_set_intersect. A&. A& s1! s2! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_intersect")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!) a!) (and (vstd!set.impl&%0.contains.? A&. A& s1! a!) (vstd!set.impl&%0.contains.? A&. A& s2! a!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_difference")
(declare-fun ens%vstd!set.axiom_set_difference. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_difference. A&. A& s1! s2! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!) a!) (and (vstd!set.impl&%0.contains.? A&. A& s1! a!) (not (vstd!set.impl&%0.contains.? A&. A& s2! a!))))) :pattern ((ens%vstd!set.axiom_set_difference. A&. A& s1! s2! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_difference")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!) a!) (and (vstd!set.impl&%0.contains.? A&. A& s1! a!) (not (vstd!set.impl&%0.contains.? A&. A& s2! a!))))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_complement")
(declare-fun ens%vstd!set.axiom_set_complement. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_complement. A&. A& s! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.complement.? A&. A& s!) a!) (not (vstd!set.impl&%0.contains.? A&. A& s! a!)))) :pattern ((ens%vstd!set.axiom_set_complement. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_complement")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.complement.? A&. A& s!) a!) (not (vstd!set.impl&%0.contains.? A&. A& s! a!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.complement.? A&. A& s!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_ext_equal")
(declare-fun ens%vstd!set.axiom_set_ext_equal. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_ext_equal. A&. A& s1! s2!) (= (ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!) (forall ((a$ Poly)) (! (=> (has_type a$ A&) (= (vstd!set.impl&%0.contains.? A&. A& s1! a$) (vstd!set.impl&%0.contains.? A&. A& s2! a$))) :pattern ((vstd!set.impl&%0.contains.? A&. A& s1! a$)) :pattern ((vstd!set.impl&%0.contains.? A&. A& s2! a$)) )))) :pattern ((ens%vstd!set.axiom_set_ext_equal. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_ext_equal")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (= (ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!) (forall ((a$ Poly)) (! (=> (has_type a$ A&) (= (vstd!set.impl&%0.contains.? A&. A& s1! a$) (vstd!set.impl&%0.contains.? A&. A& s2! a$))) :pattern ((vstd!set.impl&%0.contains.? A&. A& s1! a$)) :pattern ((vstd!set.impl&%0.contains.? A&. A& s2! a$)) )))) :pattern ((ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_ext_equal_deep")
(declare-fun ens%vstd!set.axiom_set_ext_equal_deep. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_ext_equal_deep. A&. A& s1! s2!) (= (ext_eq true (TYPE%vstd!set.Set. A&. A&) s1! s2!) (ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!))) :pattern ((ens%vstd!set.axiom_set_ext_equal_deep. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_ext_equal_deep")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (= (ext_eq true (TYPE%vstd!set.Set. A&. A&) s1! s2!) (ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!))) :pattern ((ext_eq true (TYPE%vstd!set.Set. A&. A&) s1! s2!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_mk_map_domain")
(declare-fun ens%vstd!set.axiom_mk_map_domain. (Dcr Type Dcr Type Poly %%Function%%) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! %%Function%%)) (! (= (ens%vstd!set.axiom_mk_map_domain. K&. K& V&. V& s! f!) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! (Poly%fun%1. f!))) s!)) :pattern ((ens%vstd!set.axiom_mk_map_domain. K&. K& V&. V& s! f!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_mk_map_domain")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. K&. K&)) (has_type f! (TYPE%fun%1. K&. K& V&. V&))) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! f!)) s!)) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! f!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_mk_map_index")
(declare-fun req%vstd!set.axiom_mk_map_index. (Dcr Type Dcr Type Poly %%Function%% Poly) Bool)
(declare-const %%global_location_label%%38 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! %%Function%%) (key! Poly)) (! (= (req%vstd!set.axiom_mk_map_index. K&. K& V&. V& s! f! key!) (=> %%global_location_label%%38 (vstd!set.impl&%0.contains.? K&. K& s! key!))) :pattern ((req%vstd!set.axiom_mk_map_index. K&. K& V&. V& s! f! key!)) )))
(declare-fun ens%vstd!set.axiom_mk_map_index. (Dcr Type Dcr Type Poly %%Function%% Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! %%Function%%) (key! Poly)) (! (= (ens%vstd!set.axiom_mk_map_index. K&. K& V&. V& s! f! key!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! (Poly%fun%1. f!)) key!) (%%apply%%0 f! key!))) :pattern ((ens%vstd!set.axiom_mk_map_index. K&. K& V&. V& s! f! key!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_mk_map_index")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! Poly) (key! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. K&. K&)) (has_type f! (TYPE%fun%1. K&. K& V&. V&)) (has_type key! K&)) (=> (vstd!set.impl&%0.contains.? K&. K& s! key!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! f!) key!) (%%apply%%0 (%Poly%fun%1. f!) key!)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! f!) key!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_empty_finite")
(declare-fun ens%vstd!set.axiom_set_empty_finite. (Dcr Type) Bool)
(assert (forall ((A&. Dcr) (A& Type)) (! (= (ens%vstd!set.axiom_set_empty_finite. A&. A&) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.empty.? A&. A&))) :pattern ((ens%vstd!set.axiom_set_empty_finite. A&. A&)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_empty_finite")
(assert (forall ((A&. Dcr) (A& Type)) (! (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.empty.? A&. A&)) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.empty.? A&. A&))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_insert_finite")
(declare-fun req%vstd!set.axiom_set_insert_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%39 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_insert_finite. A&. A& s! a!) (=> %%global_location_label%%39 (vstd!set.impl&%0.finite.? A&. A& s!))) :pattern ((req%vstd!set.axiom_set_insert_finite. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_insert_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_insert_finite. A&. A& s! a!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!))) :pattern ((ens%vstd!set.axiom_set_insert_finite. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_insert_finite")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.finite.? A&. A& s!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_finite")
(declare-fun req%vstd!set.axiom_set_remove_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%40 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_remove_finite. A&. A& s! a!) (=> %%global_location_label%%40 (vstd!set.impl&%0.finite.? A&. A& s!))) :pattern ((req%vstd!set.axiom_set_remove_finite. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_remove_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_remove_finite. A&. A& s! a!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!))) :pattern ((ens%vstd!set.axiom_set_remove_finite. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_finite")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.finite.? A&. A& s!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_union_finite")
(declare-fun req%vstd!set.axiom_set_union_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%41 Bool)
(declare-const %%global_location_label%%42 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (req%vstd!set.axiom_set_union_finite. A&. A& s1! s2!) (and (=> %%global_location_label%%41 (vstd!set.impl&%0.finite.? A&. A& s1!)) (=> %%global_location_label%%42 (vstd!set.impl&%0.finite.? A&. A& s2!)))) :pattern ((req%vstd!set.axiom_set_union_finite. A&. A& s1! s2!)) )))
(declare-fun ens%vstd!set.axiom_set_union_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_union_finite. A&. A& s1! s2!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!))) :pattern ((ens%vstd!set.axiom_set_union_finite. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_union_finite")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (=> (and (vstd!set.impl&%0.finite.? A&. A& s1!) (vstd!set.impl&%0.finite.? A&. A& s2!)) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_intersect_finite")
(declare-fun req%vstd!set.axiom_set_intersect_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%43 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (req%vstd!set.axiom_set_intersect_finite. A&. A& s1! s2!) (=> %%global_location_label%%43 (or (vstd!set.impl&%0.finite.? A&. A& s1!) (vstd!set.impl&%0.finite.? A&. A& s2!)))) :pattern ((req%vstd!set.axiom_set_intersect_finite. A&. A& s1! s2!)) )))
(declare-fun ens%vstd!set.axiom_set_intersect_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_intersect_finite. A&. A& s1! s2!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!))) :pattern ((ens%vstd!set.axiom_set_intersect_finite. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_intersect_finite")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (=> (or (vstd!set.impl&%0.finite.? A&. A& s1!) (vstd!set.impl&%0.finite.? A&. A& s2!)) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_difference_finite")
(declare-fun req%vstd!set.axiom_set_difference_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%44 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (req%vstd!set.axiom_set_difference_finite. A&. A& s1! s2!) (=> %%global_location_label%%44 (vstd!set.impl&%0.finite.? A&. A& s1!))) :pattern ((req%vstd!set.axiom_set_difference_finite. A&. A& s1! s2!)) )))
(declare-fun ens%vstd!set.axiom_set_difference_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_difference_finite. A&. A& s1! s2!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!))) :pattern ((ens%vstd!set.axiom_set_difference_finite. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_difference_finite")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (=> (vstd!set.impl&%0.finite.? A&. A& s1!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!))) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::choose")
(assert (fuel_bool_default fuel%vstd!set.impl&%0.choose.))
(declare-fun %%choose%%0 (Type Dcr Type Poly Dcr Type Poly) Poly)
(assert (forall ((%%hole%%0 Type) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Poly) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly)) (! (=> (exists ((a$ Poly)) (! (and (has_type a$ %%hole%%0) (vstd!set.impl&%0.contains.? %%hole%%1 %%hole%%2 %%hole%%3 a$)) :pattern ((vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 %%hole%%6 a$)) )) (exists ((a$ Poly)) (! (and (and (has_type a$ %%hole%%0) (vstd!set.impl&%0.contains.? %%hole%%1 %%hole%%2 %%hole%%3 a$)) (= (%%choose%%0 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) a$)) :pattern ((vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 %%hole%%6 a$))))) :pattern ((%%choose%%0 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6)))))
(assert (=> (fuel_bool fuel%vstd!set.impl&%0.choose.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!set.impl&%0.choose.? A&. A& self!) (as_type (%%choose%%0 A& A&. A& self! A&. A& self!) A&)) :pattern ((vstd!set.impl&%0.choose.? A&. A& self!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type (vstd!set.impl&%0.choose.? A&. A& self!) A&)) :pattern ((vstd!set.impl&%0.choose.? A&. A& self!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_choose_finite")
(declare-fun req%vstd!set.axiom_set_choose_finite. (Dcr Type Poly) Bool)
(declare-const %%global_location_label%%45 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (req%vstd!set.axiom_set_choose_finite. A&. A& s!) (=> %%global_location_label%%45 (not (vstd!set.impl&%0.finite.? A&. A& s!)))) :pattern ((req%vstd!set.axiom_set_choose_finite. A&. A& s!)) )))
(declare-fun ens%vstd!set.axiom_set_choose_finite. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (ens%vstd!set.axiom_set_choose_finite. A&. A& s!) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!))) :pattern ((ens%vstd!set.axiom_set_choose_finite. A&. A& s!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_choose_finite")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (=> (has_type s! (TYPE%vstd!set.Set. A&. A&)) (=> (not (vstd!set.impl&%0.finite.? A&. A& s!)) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_empty_len")
(declare-fun ens%vstd!set.axiom_set_empty_len. (Dcr Type) Bool)
(assert (forall ((A&. Dcr) (A& Type)) (! (= (ens%vstd!set.axiom_set_empty_len. A&. A&) (= (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.empty.? A&. A&)) 0)) :pattern ((ens%vstd!set.axiom_set_empty_len. A&. A&)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_empty_len")
(assert (forall ((A&. Dcr) (A& Type)) (! (= (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.empty.? A&. A&)) 0) :pattern ((vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.empty.? A&. A&))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_insert_len")
(declare-fun req%vstd!set.axiom_set_insert_len. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%46 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_insert_len. A&. A& s! a!) (=> %%global_location_label%%46 (vstd!set.impl&%0.finite.? A&. A& s!))) :pattern ((req%vstd!set.axiom_set_insert_len. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_insert_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_insert_len. A&. A& s! a!) (= (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!)) (Add (vstd!set.impl&%0.len.? A&. A& s!) (ite (vstd!set.impl&%0.contains.? A&. A& s! a!) 0 1)))) :pattern ((ens%vstd!set.axiom_set_insert_len. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_insert_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.finite.? A&. A& s!) (= (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!)) (Add (vstd!set.impl&%0.len.? A&. A& s!) (ite (vstd!set.impl&%0.contains.? A&. A& s! a!) 0 1))))) :pattern ((vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_len")
(declare-fun req%vstd!set.axiom_set_remove_len. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%47 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_remove_len. A&. A& s! a!) (=> %%global_location_label%%47 (vstd!set.impl&%0.finite.? A&. A& s!))) :pattern ((req%vstd!set.axiom_set_remove_len. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_remove_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_remove_len. A&. A& s! a!) (= (vstd!set.impl&%0.len.? A&. A& s!) (Add (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!)) (ite (vstd!set.impl&%0.contains.? A&. A& s! a!) 1 0)))) :pattern ((ens%vstd!set.axiom_set_remove_len. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.finite.? A&. A& s!) (= (vstd!set.impl&%0.len.? A&. A& s!) (Add (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!)) (ite (vstd!set.impl&%0.contains.? A&. A& s! a!) 1 0))))) :pattern ((vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_contains_len")
(declare-fun req%vstd!set.axiom_set_contains_len. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%48 Bool)
(declare-const %%global_location_label%%49 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_contains_len. A&. A& s! a!) (and (=> %%global_location_label%%48 (vstd!set.impl&%0.finite.? A&. A& s!)) (=> %%global_location_label%%49 (vstd!set.impl&%0.contains.? A&. A& s! a!)))) :pattern ((req%vstd!set.axiom_set_contains_len. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_contains_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_contains_len. A&. A& s! a!) (not (= (vstd!set.impl&%0.len.? A&. A& s!) 0))) :pattern ((ens%vstd!set.axiom_set_contains_len. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_contains_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (and (vstd!set.impl&%0.finite.? A&. A& s!) (vstd!set.impl&%0.contains.? A&. A& s! a!)) (not (= (vstd!set.impl&%0.len.? A&. A& s!) 0)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& s! a!) (vstd!set.impl&%0.len.? A&. A& s!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_choose_len")
(declare-fun req%vstd!set.axiom_set_choose_len. (Dcr Type Poly) Bool)
(declare-const %%global_location_label%%50 Bool)
(declare-const %%global_location_label%%51 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (req%vstd!set.axiom_set_choose_len. A&. A& s!) (and (=> %%global_location_label%%50 (vstd!set.impl&%0.finite.? A&. A& s!)) (=> %%global_location_label%%51 (not (= (vstd!set.impl&%0.len.? A&. A& s!) 0))))) :pattern ((req%vstd!set.axiom_set_choose_len. A&. A& s!)) )))
(declare-fun ens%vstd!set.axiom_set_choose_len. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (ens%vstd!set.axiom_set_choose_len. A&. A& s!) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!))) :pattern ((ens%vstd!set.axiom_set_choose_len. A&. A& s!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_choose_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (=> (has_type s! (TYPE%vstd!set.Set. A&. A&)) (=> (and (vstd!set.impl&%0.finite.? A&. A& s!) (not (= (vstd!set.impl&%0.len.? A&. A& s!) 0))) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!)))) :pattern ((vstd!set.impl&%0.len.? A&. A& s!) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!))) )))
(set-info :comment ";; Function-Axioms vstd::string::impl&%0::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! STRSLICE) (has_type (vstd!string.impl&%0.view.? self!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((vstd!string.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Specs vstd::string::axiom_str_literal_is_ascii")
(declare-fun ens%vstd!string.axiom_str_literal_is_ascii. (StrSlice) Bool)
(assert (forall ((s! StrSlice)) (! (= (ens%vstd!string.axiom_str_literal_is_ascii. s!) (= (vstd!string.impl&%0.is_ascii.? (S s!)) (str%strslice_is_ascii s!))) :pattern ((ens%vstd!string.axiom_str_literal_is_ascii. s!)) )))
(set-info :comment ";; Broadcast vstd::string::axiom_str_literal_is_ascii")
(assert (forall ((s! Poly)) (! (=> (has_type s! STRSLICE) (= (vstd!string.impl&%0.is_ascii.? s!) (str%strslice_is_ascii (%S s!)))) :pattern ((vstd!string.impl&%0.is_ascii.? s!)) )))
(set-info :comment ";; Function-Specs vstd::string::axiom_str_literal_len")
(declare-fun ens%vstd!string.axiom_str_literal_len. (StrSlice) Bool)
(assert (forall ((s! StrSlice)) (! (= (ens%vstd!string.axiom_str_literal_len. s!) (= (vstd!seq.Seq.len.? $ CHAR (vstd!string.impl&%0.view.? (S s!))) (str%strslice_len s!))) :pattern ((ens%vstd!string.axiom_str_literal_len. s!)) )))
(set-info :comment ";; Broadcast vstd::string::axiom_str_literal_len")
(assert (forall ((s! Poly)) (! (=> (has_type s! STRSLICE) (= (vstd!seq.Seq.len.? $ CHAR (vstd!string.impl&%0.view.? s!)) (str%strslice_len (%S s!)))) :pattern ((vstd!seq.Seq.len.? $ CHAR (vstd!string.impl&%0.view.? s!))) )))
(set-info :comment ";; Function-Specs vstd::string::axiom_str_literal_get_char")
(declare-fun ens%vstd!string.axiom_str_literal_get_char. (StrSlice Int) Bool)
(assert (forall ((s! StrSlice) (i! Int)) (! (= (ens%vstd!string.axiom_str_literal_get_char. s! i!) (= (%C (vstd!seq.Seq.index.? $ CHAR (vstd!string.impl&%0.view.? (S s!)) (I i!))) (str%strslice_get_char s! i!))) :pattern ((ens%vstd!string.axiom_str_literal_get_char. s! i!)) )))
(set-info :comment ";; Broadcast vstd::string::axiom_str_literal_get_char")
(assert (forall ((s! Poly) (i! Poly)) (! (=> (and (has_type s! STRSLICE) (has_type i! INT)) (= (%C (vstd!seq.Seq.index.? $ CHAR (vstd!string.impl&%0.view.? s!) i!)) (str%strslice_get_char (%S s!) (%I i!)))) :pattern ((vstd!seq.Seq.index.? $ CHAR (vstd!string.impl&%0.view.? s!) i!)) )))
(set-info :comment ";; Function-Specs vstd::string::impl&%1::concat")
(declare-fun ens%vstd!string.impl&%1.concat. (vstd!string.String. StrSlice vstd!string.String.) Bool)
(assert (forall ((self! vstd!string.String.) (other! StrSlice) (ret! vstd!string.String.)) (! (= (ens%vstd!string.impl&%1.concat. self! other! ret!) (and (= (vstd!string.impl&%1.view.? (Poly%vstd!string.String. ret!)) (vstd!seq.Seq.add.? $ CHAR (vstd!string.impl&%1.view.? (Poly%vstd!string.String. self!)) (vstd!string.impl&%0.view.? (S other!)))) (and (= (vstd!string.impl&%1.is_ascii.? (Poly%vstd!string.String. ret!)) (vstd!string.impl&%1.is_ascii.? (Poly%vstd!string.String. self!))) (vstd!string.impl&%0.is_ascii.? (S other!))))) :pattern ((ens%vstd!string.impl&%1.concat. self! other! ret!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.default.) (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? self!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::vstd_ext::string_map::StringMap::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%zookeeper_controller!vstd_ext.string_map.StringMap.) (has_type (zookeeper_controller!vstd_ext.string_map.impl&%0.view.? self!) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!vstd_ext.string_map.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::kind")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.kind.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.kind.) (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. zookeeper_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::resource::empty_status")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.resource.empty_status.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.resource.empty_status.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource.empty_status.? no%param) zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView./EmptyStatusView) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.empty_status.? no%param)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::marshal")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.marshal.) (forall ((self! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%tuple%2. (tuple%2./tuple%2 (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!))) (Poly%tuple%0. tuple%0./tuple%0))))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (zookeeper_controller!kubernetes_api_objects.spec.resource.empty_status.? (I 0)))))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::config_map::ConfigMapView::unmarshal")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.config_map.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. obj!) (Poly%core!result.Result. (ite (not (= (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (tuple%2./tuple%2/0 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. obj!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::ContainerView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%0.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%0.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%0.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%0.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms vstd::seq_lib::impl&%0::map_values")
(assert (fuel_bool_default fuel%vstd!seq_lib.impl&%0.map_values.))
(declare-fun %%lambda%%3 (Dcr Type Poly %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 %%Function%%) (i$ Poly)) (! (= (%%apply%%0 (%%lambda%%3 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) i$) (%%apply%%0 %%hole%%3 (vstd!seq.Seq.index.? %%hole%%0 %%hole%%1 %%hole%%2 i$))) :pattern ((%%apply%%0 (%%lambda%%3 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) i$)))))
(assert (=> (fuel_bool fuel%vstd!seq_lib.impl&%0.map_values.) (forall ((A&. Dcr) (A& Type) (B&. Dcr) (B& Type) (self! Poly) (f! Poly)) (! (= (vstd!seq_lib.impl&%0.map_values.? A&. A& B&. B& self! f!) (vstd!seq.Seq.new.? B&. B& $ (TYPE%fun%1. $ INT B&. B&) (I (vstd!seq.Seq.len.? A&. A& self!)) (Poly%fun%1. (mk_fun (%%lambda%%3 A&. A& self! (%Poly%fun%1. f!)))))) :pattern ((vstd!seq_lib.impl&%0.map_values.? A&. A& B&. B& self! f!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (B&. Dcr) (B& Type) (self! Poly) (f! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type f! (TYPE%fun%1. A&. A& B&. B&))) (has_type (vstd!seq_lib.impl&%0.map_values.? A&. A& B&. B& self! f!) (TYPE%vstd!seq.Seq. B&. B&))) :pattern ((vstd!seq_lib.impl&%0.map_values.? A&. A& B&. B& self! f!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::ContainerPortView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView (%I (I 0)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::ContainerPortView::set_container_port")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.) (forall ((self! Poly) (container_port! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? self! container_port!) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView (%I container_port!) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? self! container_port!)) ))))
(assert (forall ((self! Poly) (container_port! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (has_type container_port! INT)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? self! container_port!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? self! container_port!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::ContainerPortView::set_name")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? self! name!) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView (%I (I (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/container_port (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some name!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? self! name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? self! name!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::VolumeMountView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (B false)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::VolumeMountView::set_mount_path")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.) (forall ((self! Poly) (mount_path! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.? self! mount_path!) (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView mount_path! (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.? self! mount_path!)) ))))
(assert (forall ((self! Poly) (mount_path! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type mount_path! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.? self! mount_path!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.? self! mount_path!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::VolumeMountView::set_name")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.? self! name!) (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)) name! (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.? self! name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.? self! name!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::set_exec")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_exec.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_exec.) (forall ((self! Poly) (exec! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_exec.? self! exec!) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some exec!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_exec.? self! exec!)) ))))
(assert (forall ((self! Poly) (exec! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type exec! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_exec.? self! exec!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_exec.? self! exec!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::set_failure_threshold")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_failure_threshold.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_failure_threshold.) (forall ((self! Poly) (failure_threshold! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_failure_threshold.? self! failure_threshold!) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some failure_threshold!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_failure_threshold.? self! failure_threshold!)) ))))
(assert (forall ((self! Poly) (failure_threshold! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type failure_threshold! INT)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_failure_threshold.? self! failure_threshold!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_failure_threshold.? self! failure_threshold!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::set_initial_delay_seconds")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_initial_delay_seconds.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_initial_delay_seconds.) (forall ((self! Poly) (initial_delay_seconds! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_initial_delay_seconds.? self! initial_delay_seconds!) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some initial_delay_seconds!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_initial_delay_seconds.? self! initial_delay_seconds!)) ))))
(assert (forall ((self! Poly) (initial_delay_seconds! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type initial_delay_seconds! INT)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_initial_delay_seconds.? self! initial_delay_seconds!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_initial_delay_seconds.? self! initial_delay_seconds!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::set_period_seconds")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_period_seconds.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_period_seconds.) (forall ((self! Poly) (period_seconds! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_period_seconds.? self! period_seconds!) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some period_seconds!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_period_seconds.? self! period_seconds!)) ))))
(assert (forall ((self! Poly) (period_seconds! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type period_seconds! INT)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_period_seconds.? self! period_seconds!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_period_seconds.? self! period_seconds!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::set_success_threshold")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_success_threshold.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_success_threshold.) (forall ((self! Poly) (success_threshold! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_success_threshold.? self! success_threshold!) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some success_threshold!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_success_threshold.? self! success_threshold!)) ))))
(assert (forall ((self! Poly) (success_threshold! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type success_threshold! INT)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_success_threshold.? self! success_threshold!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_success_threshold.? self! success_threshold!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::ProbeView::set_timeout_seconds")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_timeout_seconds.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_timeout_seconds.) (forall ((self! Poly) (timeout_seconds! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_timeout_seconds.? self! timeout_seconds!) (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some timeout_seconds!))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_timeout_seconds.? self! timeout_seconds!)) ))))
(assert (forall ((self! Poly) (timeout_seconds! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type timeout_seconds! INT)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_timeout_seconds.? self! timeout_seconds!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_timeout_seconds.? self! timeout_seconds!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::ExecActionView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::ExecActionView::set_command")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.set_command.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.set_command.) (forall ((self! Poly) (command! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.set_command.? self! command!) (zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some command!))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.set_command.? self! command!)) ))))
(assert (forall ((self! Poly) (command! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.) (has_type command! (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.set_command.? self! command!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.set_command.? self! command!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::LifecycleView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::LifecycleView::set_pre_stop")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.set_pre_stop.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.set_pre_stop.) (forall ((self! Poly) (pre_stop! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.set_pre_stop.? self! pre_stop!) (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some pre_stop!))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.set_pre_stop.? self! pre_stop!)) ))))
(assert (forall ((self! Poly) (pre_stop! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.) (has_type pre_stop! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.set_pre_stop.? self! pre_stop!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.set_pre_stop.? self! pre_stop!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::LifecycleHandlerView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::container::LifecycleHandlerView::set_exec")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.set_exec.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.set_exec.) (forall ((self! Poly) (exec! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.set_exec.? self! exec!) (zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some exec!))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.set_exec.? self! exec!)) ))))
(assert (forall ((self! Poly) (exec! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.) (has_type exec! TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.set_exec.? self! exec!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.set_exec.? self! exec!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::label_selector::LabelSelectorView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::label_selector::LabelSelectorView::set_match_labels")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.) (forall ((self! Poly) (match_labels! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? self! match_labels!) (zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some match_labels!))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? self! match_labels!)) ))))
(assert (forall ((self! Poly) (match_labels! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (has_type match_labels! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? self! match_labels!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? self! match_labels!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::name")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.name. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. core!option.Option.) Bool)
(assert (forall ((self! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (name! core!option.Option.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.name. self! name!) (and (has_type (Poly%core!option.Option. name!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. name!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. name!))))) (= (vstd!string.impl&%1.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. name!)))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)))))))))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.name. self! name!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::namespace")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.namespace. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. core!option.Option.) Bool)
(assert (forall ((self! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (namespace! core!option.Option.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.namespace. self! namespace!) (and (has_type (Poly%core!option.Option. namespace!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. namespace!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. namespace!))))) (= (vstd!string.impl&%1.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. namespace!)))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)))))))))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.namespace. self! namespace!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::labels")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.labels. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. core!option.Option.) Bool)
(assert (forall ((self! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (labels! core!option.Option.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.labels. self! labels!) (and (has_type (Poly%core!option.Option. labels!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!vstd_ext.string_map.StringMap.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. labels!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. labels!))))) (= (zookeeper_controller!vstd_ext.string_map.impl&%0.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. labels!)))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)))))))))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.labels. self! labels!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::annotations")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.annotations. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. core!option.Option.) Bool)
(assert (forall ((self! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (annotations! core!option.Option.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.annotations. self! annotations!) (and (has_type (Poly%core!option.Option. annotations!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!vstd_ext.string_map.StringMap.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. annotations!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. annotations!))))) (= (zookeeper_controller!vstd_ext.string_map.impl&%0.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. annotations!)))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)))))))))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.annotations. self! annotations!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::exec::owner_reference::OwnerReference::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (zookeeper_controller!kubernetes_api_objects.exec.owner_reference.impl&%0.view.? self!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.owner_reference.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::owner_references_only_contains")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.) (forall ((self! Poly) (owner_ref! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? self! owner_ref!) (let ((tmp%%$ (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (and (is-core!option.Option./Some_ tmp%%$) (let ((owner_refs$ (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)))))) (= owner_refs$ (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (vstd!seq.Seq.empty.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) owner_ref!))))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? self! owner_ref!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::vstd_ext::string_view::int_to_string_view")
(assert (forall ((i! Poly)) (! (=> (has_type i! INT) (has_type (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? i!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!vstd_ext.string_view.int_to_string_view.? i!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_name")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? self! name!) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some name!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? self! name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? self! name!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_labels")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.) (forall ((self! Poly) (labels! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? self! labels!) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some labels!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? self! labels!)) ))))
(assert (forall ((self! Poly) (labels! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type labels! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? self! labels!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? self! labels!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::set_labels")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_labels. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. zookeeper_controller!vstd_ext.string_map.StringMap.) Bool)
(assert (forall ((pre%self! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (self! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (labels! zookeeper_controller!vstd_ext.string_map.StringMap.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_labels. pre%self! self! labels!) (= (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. pre%self!))) (zookeeper_controller!vstd_ext.string_map.impl&%0.view.? (Poly%zookeeper_controller!vstd_ext.string_map.StringMap. labels!))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_labels. pre%self! self! labels!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_annotations")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.) (forall ((self! Poly) (annotations! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? self! annotations!) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some annotations!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? self! annotations!)) ))))
(assert (forall ((self! Poly) (annotations! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type annotations! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? self! annotations!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? self! annotations!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::set_annotations")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_annotations. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. zookeeper_controller!vstd_ext.string_map.StringMap.) Bool)
(assert (forall ((pre%self! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (self! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (annotations! zookeeper_controller!vstd_ext.string_map.StringMap.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_annotations. pre%self! self! annotations!) (= (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. pre%self!))) (zookeeper_controller!vstd_ext.string_map.impl&%0.view.? (Poly%zookeeper_controller!vstd_ext.string_map.StringMap. annotations!))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_annotations. pre%self! self! annotations!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_owner_references")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.) (forall ((self! Poly) (owner_references! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? self! owner_references!) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some owner_references!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? self! owner_references!)) ))))
(assert (forall ((self! Poly) (owner_references! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type owner_references! (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? self! owner_references!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? self! owner_references!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::set_owner_references")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_owner_references. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.) Bool)
(declare-fun %%lambda%%4 () %%Function%%)
(assert (forall ((o$ Poly)) (! (= (%%apply%%0 %%lambda%%4 o$) (Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (zookeeper_controller!kubernetes_api_objects.exec.owner_reference.impl&%0.view.? o$))) :pattern ((%%apply%%0 %%lambda%%4 o$)))))
(assert (forall ((pre%self! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (self! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (owner_references! alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_owner_references. pre%self! self! owner_references!) (= (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. pre%self!))) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. owner_references!)) (Poly%fun%1. (mk_fun %%lambda%%4)))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_owner_references. pre%self! self! owner_references!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::unset_finalizers")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.) (forall ((self! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.? self!) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.? self!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.? self!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::unset_finalizers")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.unset_finalizers. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) Bool)
(assert (forall ((pre%self! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (self! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.unset_finalizers. pre%self! self!) (= (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. pre%self!)))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.unset_finalizers. pre%self! self!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.default.) (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::set_metadata")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_metadata.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_metadata.) (forall ((self! Poly) (metadata! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_metadata.? self! metadata!) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. metadata!) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_metadata.? self! metadata!)) ))))
(assert (forall ((self! Poly) (metadata! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (has_type metadata! TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_metadata.? self! metadata!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_metadata.? self! metadata!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::set_spec")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_spec.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_spec.) (forall ((self! Poly) (spec! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_spec.? self! spec!) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some spec!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_spec.? self! spec!)) ))))
(assert (forall ((self! Poly) (spec! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (has_type spec! TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_spec.? self! spec!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_spec.? self! spec!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::kind")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.kind.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.kind.) (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. zookeeper_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::marshal")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.marshal.) (forall ((self! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!))))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)))))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimView::unmarshal")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. obj!) (Poly%core!result.Result. (ite (not (= (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.)))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView./PersistentVolumeClaimView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. obj!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimSpecView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimSpecView::set_access_modes")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_access_modes.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_access_modes.) (forall ((self! Poly) (access_modes! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_access_modes.? self! access_modes!) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/storage_class_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some access_modes!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/resources (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_access_modes.? self! access_modes!)) ))))
(assert (forall ((self! Poly) (access_modes! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) (has_type access_modes! (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_access_modes.? self! access_modes!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_access_modes.? self! access_modes!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimSpecView::set_resources")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_resources.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_resources.) (forall ((self! Poly) (resources! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_resources.? self! resources!) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/storage_class_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/access_modes (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some resources!))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_resources.? self! resources!)) ))))
(assert (forall ((self! Poly) (resources! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) (has_type resources! TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_resources.? self! resources!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_resources.? self! resources!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::persistent_volume_claim::PersistentVolumeClaimSpecView::set_storage_class_name")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_storage_class_name.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_storage_class_name.) (forall ((self! Poly) (storage_class_name! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_storage_class_name.? self! storage_class_name!) (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some storage_class_name!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/access_modes (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView./PersistentVolumeClaimSpecView/resources (%Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_storage_class_name.? self! storage_class_name!)) ))))
(assert (forall ((self! Poly) (storage_class_name! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.) (has_type storage_class_name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_storage_class_name.? self! storage_class_name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_storage_class_name.? self! storage_class_name!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::pod::PodSpecView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.pod.impl&%2.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.pod.impl&%2.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. (vstd!seq.Seq.empty.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::set_metadata")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.) (forall ((self! Poly) (metadata! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? self! metadata!) (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some metadata!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? self! metadata!)) ))))
(assert (forall ((self! Poly) (metadata! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type metadata! TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? self! metadata!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? self! metadata!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::set_spec")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.) (forall ((self! Poly) (spec! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? self! spec!) (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some spec!))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? self! spec!)) ))))
(assert (forall ((self! Poly) (spec! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type spec! TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? self! spec!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? self! spec!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::resource_requirements::ResourceRequirementsView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::resource_requirements::ResourceRequirementsView::set_requests")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.set_requests.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.set_requests.) (forall ((self! Poly) (requests! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.set_requests.? self! requests!) (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits (%Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some requests!))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.set_requests.? self! requests!)) ))))
(assert (forall ((self! Poly) (requests! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) (has_type requests! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.set_requests.? self! requests!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.set_requests.? self! requests!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::service::ServiceView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.default.) (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::Service::clone")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.clone. (zookeeper_controller!kubernetes_api_objects.exec.service.Service. zookeeper_controller!kubernetes_api_objects.exec.service.Service.) Bool)
(assert (forall ((self! zookeeper_controller!kubernetes_api_objects.exec.service.Service.) (s! zookeeper_controller!kubernetes_api_objects.exec.service.Service.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.clone. self! s!) (= (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. s!)) (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. self!)))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.clone. self! s!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::Service::metadata")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.metadata. (zookeeper_controller!kubernetes_api_objects.exec.service.Service. zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) Bool)
(assert (forall ((self! zookeeper_controller!kubernetes_api_objects.exec.service.Service.) (metadata! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.metadata. self! metadata!) (= (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. metadata!)) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. self!)))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.metadata. self! metadata!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::exec::service::ServiceSpec::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? self!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? self!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::Service::spec")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.spec. (zookeeper_controller!kubernetes_api_objects.exec.service.Service. core!option.Option.) Bool)
(assert (forall ((self! zookeeper_controller!kubernetes_api_objects.exec.service.Service.) (spec! core!option.Option.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.spec. self! spec!) (and (has_type (Poly%core!option.Option. spec!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. self!)))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. spec!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. spec!))))) (= (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. spec!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. self!)))))))))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.spec. self! spec!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::service::ServiceView::set_metadata")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_metadata.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_metadata.) (forall ((self! Poly) (metadata! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_metadata.? self! metadata!) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. metadata!) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_metadata.? self! metadata!)) ))))
(assert (forall ((self! Poly) (metadata! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) (has_type metadata! TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_metadata.? self! metadata!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_metadata.? self! metadata!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::Service::set_metadata")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.set_metadata. (zookeeper_controller!kubernetes_api_objects.exec.service.Service. zookeeper_controller!kubernetes_api_objects.exec.service.Service. zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) Bool)
(assert (forall ((pre%self! zookeeper_controller!kubernetes_api_objects.exec.service.Service.) (self! zookeeper_controller!kubernetes_api_objects.exec.service.Service.) (metadata! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.set_metadata. pre%self! self! metadata!) (= (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. self!))) (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_metadata.? (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. pre%self!)) (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. metadata!)))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.set_metadata. pre%self! self! metadata!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::service::ServiceView::set_spec")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_spec.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_spec.) (forall ((self! Poly) (spec! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_spec.? self! spec!) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some spec!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_spec.? self! spec!)) ))))
(assert (forall ((self! Poly) (spec! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) (has_type spec! TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_spec.? self! spec!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_spec.? self! spec!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::Service::set_spec")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.set_spec. (zookeeper_controller!kubernetes_api_objects.exec.service.Service. zookeeper_controller!kubernetes_api_objects.exec.service.Service. zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.) Bool)
(assert (forall ((pre%self! zookeeper_controller!kubernetes_api_objects.exec.service.Service.) (self! zookeeper_controller!kubernetes_api_objects.exec.service.Service.) (spec! zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.set_spec. pre%self! self! spec!) (= (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. self!))) (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%0.set_spec.? (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. pre%self!)) (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. spec!)))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.set_spec. pre%self! self! spec!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::service::ServiceView::kind")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.kind.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.kind.) (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. zookeeper_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind))))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::Service::api_resource")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.api_resource. (Int zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) Bool)
(assert (forall ((no%param Int) (res! zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.api_resource. no%param res!) (= (zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (zookeeper_controller!kubernetes_api_objects.exec.api_resource.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. res!))))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.api_resource. no%param res!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::service::ServiceView::marshal")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.marshal.) (forall ((self! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. self!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. self!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. self!))))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. self!)))))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. self!)) ))))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::Service::marshal")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.marshal. (zookeeper_controller!kubernetes_api_objects.exec.service.Service. zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) Bool)
(assert (forall ((self! zookeeper_controller!kubernetes_api_objects.exec.service.Service.) (obj! zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.marshal. self! obj!) (= (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!)) (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. self!))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.marshal. self! obj!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::service::ServiceView::unmarshal")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. obj!) (Poly%core!result.Result. (ite (not (= (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. obj!)) ))))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::Service::unmarshal")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.unmarshal. (zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. core!result.Result.) Bool)
(assert (forall ((obj! zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) (res! core!result.Result.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.unmarshal. obj! res!) (and (has_type (Poly%core!result.Result. res!) (TYPE%core!result.Result. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. $ TYPE%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) (= (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. res!)))) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!))))))) (=> (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. res!))))) (= (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. res!)))) (core!result.Result./Ok/0 (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%zookeeper_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!))))))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.unmarshal. obj! res!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::service::ServiceSpecView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::exec::service::ServicePort::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%3.view.? self!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.exec.service.impl&%3.view.? self!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::ServiceSpec::ports")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.ports. (zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. core!option.Option.) Bool)
(declare-fun %%lambda%%5 () %%Function%%)
(assert (forall ((port$ Poly)) (! (= (%%apply%%0 %%lambda%%5 port$) (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%3.view.? port$))) :pattern ((%%apply%%0 %%lambda%%5 port$)))))
(assert (forall ((self! zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.) (ports! core!option.Option.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.ports. self! ports!) (and (has_type (Poly%core!option.Option. ports!) (TYPE%core!option.Option. $ (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. $ TYPE%alloc!alloc.Global.))) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. ports!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. ports!))))) (= (vstd!seq_lib.impl&%0.map_values.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. $ TYPE%alloc!alloc.Global.) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. ports!)))) (Poly%fun%1. (mk_fun %%lambda%%5))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. self!)))))))))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.ports. self! ports!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::service::ServiceSpecView::set_ports")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_ports.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_ports.) (forall ((self! Poly) (ports! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_ports.? self! ports!) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some ports!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_ports.? self! ports!)) ))))
(assert (forall ((self! Poly) (ports! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) (has_type ports! (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_ports.? self! ports!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_ports.? self! ports!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::ServiceSpec::set_ports")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.set_ports. (zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>.) Bool)
(assert (forall ((pre%self! zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.) (self! zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.) (ports! alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.set_ports. pre%self! self! ports!) (= (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. self!)) (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_ports.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. pre%self!))) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. ports!)) (Poly%fun%1. (mk_fun %%lambda%%5)))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.set_ports. pre%self! self! ports!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::ServiceSpec::selector")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.selector. (zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. core!option.Option.) Bool)
(assert (forall ((self! zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.) (selector! core!option.Option.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.selector. self! selector!) (and (has_type (Poly%core!option.Option. selector!) (TYPE%core!option.Option. $ TYPE%zookeeper_controller!vstd_ext.string_map.StringMap.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. selector!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. selector!))))) (= (zookeeper_controller!vstd_ext.string_map.impl&%0.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. selector!)))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. self!)))))))))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.selector. self! selector!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::service::ServiceSpecView::set_selector")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_selector.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_selector.) (forall ((self! Poly) (selector! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_selector.? self! selector!) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some selector!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_selector.? self! selector!)) ))))
(assert (forall ((self! Poly) (selector! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) (has_type selector! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_selector.? self! selector!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_selector.? self! selector!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::ServiceSpec::set_selector")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.set_selector. (zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. zookeeper_controller!vstd_ext.string_map.StringMap.) Bool)
(assert (forall ((pre%self! zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.) (self! zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.) (selector! zookeeper_controller!vstd_ext.string_map.StringMap.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.set_selector. pre%self! self! selector!) (= (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. self!)) (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.set_selector.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. pre%self!))) (zookeeper_controller!vstd_ext.string_map.impl&%0.view.? (Poly%zookeeper_controller!vstd_ext.string_map.StringMap. selector!))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.set_selector. pre%self! self! selector!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::service::ServiceSpecView::unset_publish_not_ready_addresses")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.unset_publish_not_ready_addresses.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.unset_publish_not_ready_addresses.) (forall ((self! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.unset_publish_not_ready_addresses.? self!) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.unset_publish_not_ready_addresses.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.unset_publish_not_ready_addresses.? self!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.unset_publish_not_ready_addresses.? self!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::ServiceSpec::unset_publish_not_ready_addresses")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.unset_publish_not_ready_addresses. (zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.) Bool)
(assert (forall ((pre%self! zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.) (self! zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.unset_publish_not_ready_addresses. pre%self! self!) (= (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. self!)) (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.unset_publish_not_ready_addresses.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServiceSpec. pre%self!)))))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%2.unset_publish_not_ready_addresses. pre%self! self!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::service::ServicePortView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%I (I 0)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::service::ServicePortView::set_name")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_name.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_name.? self! name!) (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some name!))) (%I (I (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/port (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_name.? self! name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_name.? self! name!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::service::ServicePortView::set_port")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_port.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_port.) (forall ((self! Poly) (port! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_port.? self! port!) (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. self!)))) (%I port!) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/app_protocol (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView./ServicePortView/protocol (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_port.? self! port!)) ))))
(assert (forall ((self! Poly) (port! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.) (has_type port! INT)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_port.? self! port!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_port.? self! port!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.default.) (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::set_metadata")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_metadata.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_metadata.) (forall ((self! Poly) (metadata! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_metadata.? self! metadata!) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. metadata!) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_metadata.? self! metadata!)) ))))
(assert (forall ((self! Poly) (metadata! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (has_type metadata! TYPE%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_metadata.? self! metadata!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_metadata.? self! metadata!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::set_spec")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_spec.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_spec.) (forall ((self! Poly) (spec! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_spec.? self! spec!) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some spec!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_spec.? self! spec!)) ))))
(assert (forall ((self! Poly) (spec! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (has_type spec! TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_spec.? self! spec!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_spec.? self! spec!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::kind")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.kind.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.kind.) (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. zookeeper_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::marshal")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.marshal.) (forall ((self! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!))))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)))))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetView::unmarshal")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. obj!) (Poly%core!result.Result. (ite (not (= (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. obj!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? (I 0)))) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::set_replicas")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_replicas.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_replicas.) (forall ((self! Poly) (replicas! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_replicas.? self! replicas!) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some replicas!))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_replicas.? self! replicas!)) ))))
(assert (forall ((self! Poly) (replicas! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type replicas! INT)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_replicas.? self! replicas!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_replicas.? self! replicas!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::set_selector")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_selector.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_selector.) (forall ((self! Poly) (selector! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_selector.? self! selector!) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. selector!) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_selector.? self! selector!)) ))))
(assert (forall ((self! Poly) (selector! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type selector! TYPE%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_selector.? self! selector!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_selector.? self! selector!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::set_service_name")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_service_name.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_service_name.) (forall ((self! Poly) (service_name! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_service_name.? self! service_name!) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) service_name! (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_service_name.? self! service_name!)) ))))
(assert (forall ((self! Poly) (service_name! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type service_name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_service_name.? self! service_name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_service_name.? self! service_name!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::set_template")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_template.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_template.) (forall ((self! Poly) (template! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_template.? self! template!) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. template!) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_template.? self! template!)) ))))
(assert (forall ((self! Poly) (template! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type template! TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_template.? self! template!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_template.? self! template!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::set_volume_claim_templates")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_volume_claim_templates.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_volume_claim_templates.) (forall ((self! Poly) (volume_claim_templates! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_volume_claim_templates.? self! volume_claim_templates!) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some volume_claim_templates!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_volume_claim_templates.? self! volume_claim_templates!)) ))))
(assert (forall ((self! Poly) (volume_claim_templates! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type volume_claim_templates! (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_volume_claim_templates.? self! volume_claim_templates!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_volume_claim_templates.? self! volume_claim_templates!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetSpecView::set_pvc_retention_policy")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_pvc_retention_policy.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_pvc_retention_policy.) (forall ((self! Poly) (pvc_retention_policy! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_pvc_retention_policy.? self! pvc_retention_policy!) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some pvc_retention_policy!))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_pvc_retention_policy.? self! pvc_retention_policy!)) ))))
(assert (forall ((self! Poly) (pvc_retention_policy! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.) (has_type pvc_retention_policy! TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_pvc_retention_policy.? self! pvc_retention_policy!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_pvc_retention_policy.? self! pvc_retention_policy!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetPersistentVolumeClaimRetentionPolicyView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetPersistentVolumeClaimRetentionPolicyView::set_when_deleted")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_deleted.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_deleted.) (forall ((self! Poly) (when_deleted! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_deleted.? self! when_deleted!) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some when_deleted!))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_scaled (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_deleted.? self! when_deleted!)) ))))
(assert (forall ((self! Poly) (when_deleted! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) (has_type when_deleted! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_deleted.? self! when_deleted!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_deleted.? self! when_deleted!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::stateful_set::StatefulSetPersistentVolumeClaimRetentionPolicyView::set_when_scaled")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_scaled.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_scaled.) (forall ((self! Poly) (when_scaled! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_scaled.? self! when_scaled!) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView./StatefulSetPersistentVolumeClaimRetentionPolicyView/when_deleted (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some when_scaled!))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_scaled.? self! when_scaled!)) ))))
(assert (forall ((self! Poly) (when_scaled! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.) (has_type when_scaled! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_scaled.? self! when_scaled!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_scaled.? self! when_scaled!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::volume::VolumeView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::volume::VolumeView::set_name")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? self! name!) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) name! (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? self! name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? self! name!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::volume::VolumeView::set_config_map")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_config_map.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_config_map.) (forall ((self! Poly) (config_map! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_config_map.? self! config_map!) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some config_map!))) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_config_map.? self! config_map!)) ))))
(assert (forall ((self! Poly) (config_map! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type config_map! TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_config_map.? self! config_map!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_config_map.? self! config_map!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::volume::VolumeView::set_empty_dir")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_empty_dir.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_empty_dir.) (forall ((self! Poly) (empty_dir! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_empty_dir.? self! empty_dir!) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some empty_dir!))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_empty_dir.? self! empty_dir!)) ))))
(assert (forall ((self! Poly) (empty_dir! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type empty_dir! TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_empty_dir.? self! empty_dir!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_empty_dir.? self! empty_dir!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::volume::EmptyDirVolumeSourceView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%1.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%1.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%1.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%1.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%1.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%1.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::volume::ConfigMapVolumeSourceView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.default.) (forall ((no%param Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.default.? no%param) (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.default.? no%param)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.default.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::kubernetes_api_objects::spec::volume::ConfigMapVolumeSourceView::set_name")
(assert (fuel_bool_default fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.set_name.))
(assert (=> (fuel_bool fuel%zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.set_name.? self! name!) (zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some name!))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.set_name.? self! name!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.set_name.? self! name!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::zookeeper_controller::trusted::exec_types::ZookeeperCluster::metadata")
(declare-fun ens%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%3.metadata. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) Bool)
(assert (forall ((self! zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) (metadata! zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (= (ens%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%3.metadata. self! metadata!) (= (zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. metadata!)) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. self!)))))) :pattern ((ens%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%3.metadata. self! metadata!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::trusted::exec_types::ZookeeperClusterSpec::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec.) (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%5.view.? self!)) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%5.view.? self!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::zookeeper_controller::trusted::exec_types::ZookeeperCluster::spec")
(declare-fun ens%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%3.spec. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec.) Bool)
(assert (forall ((self! zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) (spec! zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec.)) (! (= (ens%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%3.spec. self! spec!) (= (zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%5.view.? (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. spec!)) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. self!)))))) :pattern ((ens%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%3.spec. self! spec!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::trusted::spec_types::ZookeeperClusterView::kind")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.kind.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.kind.) (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. zookeeper_controller!kubernetes_api_objects.spec.common.Kind./CustomResourceKind))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::trusted::spec_types::ZookeeperClusterView::controller_owner_ref")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.controller_owner_ref.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.controller_owner_ref.) (forall ((self! Poly)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.controller_owner_ref.? self!) (zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (B true)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. self!)))))))) (%I (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. self!))))))))))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.controller_owner_ref.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.controller_owner_ref.? self!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.controller_owner_ref.? self!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::trusted::spec_types::ZookeeperClusterView::marshal")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.marshal.) (forall ((self! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. self!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. self!)))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. self!))))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/status (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. self!)))))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::trusted::spec_types::ZookeeperClusterView::unmarshal")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. obj!) (Poly%core!result.Result. (ite (not (= (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError. zookeeper_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.marshal.Value. (zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))) :pattern ((zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. obj!)) ))))
(set-info :comment ";; Function-Specs zookeeper_controller::zookeeper_controller::trusted::exec_types::ZookeeperClusterSpec::ports")
(declare-fun ens%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%5.ports. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts.) Bool)
(assert (forall ((self! zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec.) (ports! zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts.)) (! (= (ens%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%5.ports. self! ports!) (= (zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%6.view.? (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. ports!)) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%5.view.? (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperClusterSpec. self!))))))) :pattern ((ens%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%5.ports. self! ports!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::zookeeper_controller::trusted::exec_types::ZookeeperPorts::client")
(declare-fun ens%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%6.client. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. Int) Bool)
(assert (forall ((self! zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts.) (client! Int)) (! (= (ens%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%6.client. self! client!) (and (iInv 32 client!) (= client! (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/client (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%6.view.? (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperPorts. self!)))))))) :pattern ((ens%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%6.client. self! client!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::vstd_ext::string_view::bool_to_string_view")
(assert (forall ((b! Poly)) (! (=> (has_type b! BOOL) (has_type (zookeeper_controller!vstd_ext.string_view.bool_to_string_view.? b!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!vstd_ext.string_view.bool_to_string_view.? b!)) )))
(set-info :comment ";; Function-Axioms vstd::seq_lib::check_argument_is_seq")
(assert (fuel_bool_default fuel%vstd!seq_lib.check_argument_is_seq.))
(assert (=> (fuel_bool fuel%vstd!seq_lib.check_argument_is_seq.) (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (vstd!seq_lib.check_argument_is_seq.? A&. A& s!) s!) :pattern ((vstd!seq_lib.check_argument_is_seq.? A&. A& s!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (=> (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type (vstd!seq_lib.check_argument_is_seq.? A&. A& s!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq_lib.check_argument_is_seq.? A&. A& s!)) )))
(set-info :comment ";; Function-Axioms vstd::view::impl&%0::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%0.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%0.view.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!view.View.view.? (REF A&.) A& self!) (vstd!view.View.view.? A&. A& self!)) :pattern ((vstd!view.View.view.? (REF A&.) A& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%1::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%1.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%1.view.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!view.View.view.? (BOX A&.) A& self!) (vstd!view.View.view.? A&. A& self!)) :pattern ((vstd!view.View.view.? (BOX A&.) A& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%2::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%2.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%2.view.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!view.View.view.? (RC A&.) A& self!) (vstd!view.View.view.? A&. A& self!)) :pattern ((vstd!view.View.view.? (RC A&.) A& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%3::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%3.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%3.view.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!view.View.view.? (ARC A&.) A& self!) (vstd!view.View.view.? A&. A& self!)) :pattern ((vstd!view.View.view.? (ARC A&.) A& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%4::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%4.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%4.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%tuple%0. self!) self!) :pattern ((vstd!view.View.view.? $ TYPE%tuple%0. self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%5::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%5.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%5.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ BOOL self!) self!) :pattern ((vstd!view.View.view.? $ BOOL self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%11::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%11.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%11.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ (UINT SZ) self!) self!) :pattern ((vstd!view.View.view.? $ (UINT SZ) self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%14::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%14.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%14.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ (SINT 32) self!) self!) :pattern ((vstd!view.View.view.? $ (SINT 32) self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%19::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%19.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%19.view.) (forall ((A0&. Dcr) (A0& Type) (A1&. Dcr) (A1& Type) (self! Poly)) (! (= (vstd!view.View.view.? $ (TYPE%tuple%2. A0&. A0& A1&. A1&) self!) (Poly%tuple%2. (tuple%2./tuple%2 (vstd!view.View.view.? A0&. A0& (tuple%2./tuple%2/0 (%Poly%tuple%2. self!))) (vstd!view.View.view.? A1&. A1& (tuple%2./tuple%2/1 (%Poly%tuple%2. self!)))))) :pattern ((vstd!view.View.view.? $ (TYPE%tuple%2. A0&. A0& A1&. A1&) self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::trusted::spec_types::ZookeeperClusterView::well_formed")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.well_formed.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.well_formed.) (forall ((self! Poly)) (! (= (zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.well_formed.? self!) (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. self!)))))))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. self!))))))))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. self!)))))))))))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.well_formed.? self!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::exec::resource::admin_server_service::AdminServerServiceBuilder::requirements")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.impl&%0.requirements.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.impl&%0.requirements.) (forall ((zk! Poly)) (! (= (zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? $ TYPE%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. zk!) (B (zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.well_formed.? zk!))) :pattern ((zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? $ TYPE%zookeeper_controller!zookeeper_controller.exec.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. zk!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::exec::resource::client_service::ClientServiceBuilder::requirements")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.exec.resource.client_service.impl&%0.requirements.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.exec.resource.client_service.impl&%0.requirements.) (forall ((zk! Poly)) (! (= (zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? $ TYPE%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. zk!) (B (zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.well_formed.? zk!))) :pattern ((zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? $ TYPE%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. zk!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::admin_server_service::make_admin_server_service_name")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_name.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_name.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_name.? zk!) (vstd!seq.Seq.add.? $ CHAR (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 9510742020923784058533274049927343267646910896547555453059787737371811642473326093032772795013365781304291300269111483258480914630299356473329007908290375))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_name.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_name.? zk!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_name.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::admin_server_service::make_admin_server_service_key")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_key.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_key.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_key.? zk!) (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_name.? zk!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_key.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_key.? zk!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_key.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::admin_server_service::AdminServerServiceBuilder::get_request")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.get_request.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.get_request.) (forall ((zk! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_key.? zk!)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::common::make_base_labels")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_base_labels.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_base_labels.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.common.make_base_labels.? zk!) (vstd!map.impl&%0.insert.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!map.impl&%0.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!string.impl&%0.view.? (S (str%new_strlit 1588539530315223847722953298287299374188107919534831743833089341130026030232599932513390495630937258371487356320380652074008820394790478717851686026166260))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.common.make_base_labels.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (zookeeper_controller!zookeeper_controller.model.resource.common.make_base_labels.? zk!) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.common.make_base_labels.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::common::make_labels")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_labels.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_labels.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.common.make_labels.? zk!) (vstd!map_lib.impl&%0.union_prefer_right.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/labels (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))) (zookeeper_controller!zookeeper_controller.model.resource.common.make_base_labels.? zk!))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.common.make_labels.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (zookeeper_controller!zookeeper_controller.model.resource.common.make_labels.? zk!) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.common.make_labels.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::common::make_owner_references")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references.? zk!) (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (vstd!seq.Seq.empty.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.controller_owner_ref.? zk!))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references.? zk!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::common::make_service")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_service.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.common.make_service.) (forall ((zk! Poly) (name! Poly) (ports! Poly) (cluster_ip! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.common.make_service.? zk! name! ports! cluster_ip!) (let ((tmp%%$ (let ((tmp%%$1 (core!option.Option./Some name!))) (let ((tmp%%$2 (core!option.Option./Some (zookeeper_controller!zookeeper_controller.model.resource.common.make_labels.? zk!)))) (let ((tmp%%$3 (core!option.Option./Some (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/annotations (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (let ((tmp%%$4 (core!option.Option./Some (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references.? zk!))))) (let ((tmp%%$5 (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$4)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))))))))))) (let ((tmp%%$6 (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (let ((tmp%%$7 (core!option.Option./Some ports!))) (let ((tmp%%$8 (core!option.Option./Some (zookeeper_controller!zookeeper_controller.model.resource.common.make_base_labels.? zk!)))) (let ((tmp%%$9 (ite (not (%B cluster_ip!)) (core!option.Option./Some (vstd!string.impl&%0.view.? (S (str%new_strlit 555675259155678246274393943557213268459993556611902854963198325445743235225804363654546370963179834195925213368792226256436111516250825591900677647736291)))) core!option.Option./None))) (let ((tmp%%$10 (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%2.default.? (I 0)))) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$9)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$7)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$8)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. tmp%%$10)))))))))))))) (let ((tmp%%$11 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)))) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$6)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. tmp%%$11)))))))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.common.make_service.? zk! name! ports! cluster_ip!)) ))))
(assert (forall ((zk! Poly) (name! Poly) (ports! Poly) (cluster_ip! Poly)) (! (=> (and (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type ports! (TYPE%vstd!seq.Seq. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.)) (has_type cluster_ip! BOOL)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.common.make_service.? zk! name! ports! cluster_ip!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.common.make_service.? zk! name! ports! cluster_ip!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::admin_server_service::make_admin_server_service")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service.? zk!) (let ((ports$ (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (vstd!seq.Seq.empty.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_port.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 3134582138126536339768990013380209939982815543201444930820763404648276201583215105375787179690050478954417034485776295705765482004514667248372526105814622))))) (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/admin_server (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))))))) (zookeeper_controller!zookeeper_controller.model.resource.common.make_service.? zk! (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service_name.? zk!) (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. ports$) (B true)))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service.? zk!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::admin_server_service::AdminServerServiceBuilder::make")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.make.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.make.) (forall ((zk! Poly) (state! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state!) (Poly%core!result.Result. (core!result.Result./Ok (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service.? zk!)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::admin_server_service::update_admin_server_service")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.update_admin_server_service.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.update_admin_server_service.) (forall ((zk! Poly) (found_admin_server_service! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.update_admin_server_service.? zk! found_admin_server_service!) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references.? zk!))))) (let ((tmp%%$1 core!option.Option./None)) (let ((tmp%%$2 (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service.? zk!))))))))) (let ((tmp%%$3 (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service.? zk!))))))))) (let ((tmp%%$4 (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. found_admin_server_service!)))) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (let ((tmp%%$ (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service.? zk!))))))))))) (let ((tmp%%$6 (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service.? zk!))))))))))) (let ((tmp%%$7 (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.make_admin_server_service.? zk!))))))))))) (let ((tmp%%$8 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. found_admin_server_service!)))))))) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. tmp%%$8))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$6)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$7))))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. found_admin_server_service!)))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.update_admin_server_service.? zk! found_admin_server_service!)) ))))
(assert (forall ((zk! Poly) (found_admin_server_service! Poly)) (! (=> (and (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type found_admin_server_service! TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.update_admin_server_service.? zk! found_admin_server_service!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.update_admin_server_service.? zk! found_admin_server_service!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::admin_server_service::AdminServerServiceBuilder::update")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.update.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.update.) (forall ((zk! Poly) (state! Poly) (obj! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state! obj!) (Poly%core!result.Result. (let ((service$ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. obj!)))) (ite (and (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. service$))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. service$))))))))))) (core!result.Result./Ok (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.update_admin_server_service.? zk! (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. service$))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state! obj!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::config_map::make_config_map_name")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_name.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_name.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_name.? zk!) (vstd!seq.Seq.add.? $ CHAR (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 760090564106296312237122158352071541394541920404996961435617515851287754932081283988794097667625272802632825041362426685363600432985770619944851643726185))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_name.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_name.? zk!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_name.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::config_map::make_config_map_key")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_key.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_key.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_key.? zk!) (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_name.? zk!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_key.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_key.? zk!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_key.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::config_map::ConfigMapBuilder::get_request")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.get_request.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.get_request.) (forall ((zk! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_key.? zk!)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::admin_server_service::AdminServerServiceBuilder::state_after_create")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.state_after_create.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.state_after_create.) (forall ((zk! Poly) (obj! Poly) (state! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!) (Poly%core!result.Result. (let ((service$ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. service$))))) (let ((state_prime$ (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. zookeeper_controller!zookeeper_controller.trusted.step.ActionKind./Get)) (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. zookeeper_controller!zookeeper_controller.trusted.step.SubResource./ConfigMap))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state!))))))) (let ((req$ (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::admin_server_service::AdminServerServiceBuilder::state_after_update")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.state_after_update.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.impl&%0.state_after_update.) (forall ((zk! Poly) (obj! Poly) (state! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!) (Poly%core!result.Result. (let ((service$ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. service$))))) (let ((state_prime$ (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. zookeeper_controller!zookeeper_controller.trusted.step.ActionKind./Get)) (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. zookeeper_controller!zookeeper_controller.trusted.step.SubResource./ConfigMap))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state!))))))) (let ((req$ (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::client_service::make_client_service_name")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_name.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_name.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_name.? zk!) (vstd!seq.Seq.add.? $ CHAR (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 4144611712424903790769368760673740576403659837547566324432468349974320929480541800462372423030280607399265517673078309211749697222880621015668598596628853))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_name.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_name.? zk!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_name.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::client_service::make_client_service_key")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_key.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_key.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_key.? zk!) (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_name.? zk!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_key.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_key.? zk!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_key.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::client_service::ClientServiceBuilder::get_request")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.get_request.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.get_request.) (forall ((zk! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_key.? zk!)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::client_service::make_client_service")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service.? zk!) (let ((ports$ (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (vstd!seq.Seq.empty.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_port.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 7309336068800724278055892117914412589951388198400277891365163677888114282709241808969275735381221656602267094867819429505331021752369345382096082679158836))))) (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/client (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))))))) (zookeeper_controller!zookeeper_controller.model.resource.common.make_service.? zk! (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_name.? zk!) (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView.>. ports$) (B true)))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service.? zk!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::client_service::ClientServiceBuilder::make")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.make.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.make.) (forall ((zk! Poly) (state! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state!) (Poly%core!result.Result. (core!result.Result./Ok (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service.? zk!)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::client_service::update_client_service")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.update_client_service.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.update_client_service.) (forall ((zk! Poly) (found_client_service! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.client_service.update_client_service.? zk! found_client_service!) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references.? zk!))))) (let ((tmp%%$1 core!option.Option./None)) (let ((tmp%%$2 (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service.? zk!))))))))) (let ((tmp%%$3 (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service.? zk!))))))))) (let ((tmp%%$4 (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. found_client_service!)))) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (let ((tmp%%$ (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/ports (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service.? zk!))))))))))) (let ((tmp%%$6 (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service.? zk!))))))))))) (let ((tmp%%$7 (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/publish_not_ready_addresses (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service.? zk!))))))))))) (let ((tmp%%$8 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. found_client_service!)))))))) (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView./ServiceSpecView/cluster_ip (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceSpecView. tmp%%$8))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$6)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$7))))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. found_client_service!)))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.client_service.update_client_service.? zk! found_client_service!)) ))))
(assert (forall ((zk! Poly) (found_client_service! Poly)) (! (=> (and (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type found_client_service! TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.client_service.update_client_service.? zk! found_client_service!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.client_service.update_client_service.? zk! found_client_service!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::client_service::ClientServiceBuilder::update")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.update.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.update.) (forall ((zk! Poly) (state! Poly) (obj! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state! obj!) (Poly%core!result.Result. (let ((service$ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. obj!)))) (ite (and (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. service$))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView./ServiceView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. service$))))))))))) (core!result.Result./Ok (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (zookeeper_controller!zookeeper_controller.model.resource.client_service.update_client_service.? zk! (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. service$))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state! obj!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::client_service::ClientServiceBuilder::state_after_create")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.state_after_create.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.state_after_create.) (forall ((zk! Poly) (obj! Poly) (state! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!) (Poly%core!result.Result. (let ((service$ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. service$))))) (let ((state_prime$ (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. zookeeper_controller!zookeeper_controller.trusted.step.ActionKind./Get)) (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. zookeeper_controller!zookeeper_controller.trusted.step.SubResource./AdminServerService))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state!))))))) (let ((req$ (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::client_service::ClientServiceBuilder::state_after_update")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.state_after_update.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.client_service.impl&%0.state_after_update.) (forall ((zk! Poly) (obj! Poly) (state! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!) (Poly%core!result.Result. (let ((service$ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. service$))))) (let ((state_prime$ (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterKRequestStep (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ActionKind. zookeeper_controller!zookeeper_controller.trusted.step.ActionKind./Get)) (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.SubResource. zookeeper_controller!zookeeper_controller.trusted.step.SubResource./AdminServerService))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state!))))))) (let ((req$ (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::trusted::config_map::make_zk_config")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.trusted.config_map.make_zk_config.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.trusted.config_map.make_zk_config.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.trusted.config_map.make_zk_config.? zk!) (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!string.impl&%0.view.? (S (str%new_strlit 11664310793815003523995858326147593122113628974424024281155943243435798254792272500636452477918231848910651202305201698924036961013202311354522813124287182))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/metrics (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 10626517001442034295950351510901075685246101882711076083939123979794721609588317651921847729495649743804399874978422971811856687923046946378171206880803648)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/init_limit (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 647711394505462728681263017878173988487944477268045516319581780965212943696568026797917850830220027034510483402594243310320462798744674479827636170811593)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/sync_limit (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 3125731082064745141419614726829778318212958748051643833937209590958353400470888616398723615805766310418546179468953809366591932672864574194952824326145515)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/tick_time (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 10443448675645757484982519913030544609265054926022132817643374473083465893938090836360980093533654380889794467692512330593265801529734809795742956539774782)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/global_outstanding_limit (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 2942069779398762233083153544317130356831591412914120361954775579588050856839696374833118614665648355908728827231544918416821319485960565613612230955441339)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/pre_alloc_size (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 12002183110506012830541171066203518902965718463618790633255638041385441618602930520435353941664060311855031506104962154458682852638132424750103274337918351)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/snap_count (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 9537706522410416591786596777813726591102256696410103172773875217804805525226235052811317198649905617886382323148621529785612962007482517619804647482668864)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/commit_log_count (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 9599976291304522819742039008006068628749782784269122070950306456449726784728770302669816575744776187561971222031742803382952651621255127716745828183792928)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/snap_size_limit_in_kb (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 6648177170061780578830811622396742789734407149282270847903142288000515728981496266834973158177240449098915854439013551384553040368030432418095582993217378)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/max_cnxns (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 6633681861101792169038531822317497377544516648135949165450986798206511686093543677703933285112541362792285587204744206145733019045907160164079112804344424)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/max_client_cnxns (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 4070511772336918952470909872904621098929195266835290452011176575492103794832893783677596673473708416648381792824406172831792422474408761117603543896884511)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/min_session_timeout (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 4607316745926827027078427846162548959065386803006370996141400242218397679706547658412931915435921937563694826895268311910269543744989104857139518347160598)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/max_session_timeout (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 2553572754220194235435249509344460911442409635758266611110304082259047880830899882243574437206848618841200450438770872543991260010784341772584852636056238)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/auto_purge_snap_retain_count (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 3625404738097739382966695969768254620069392907592590219552939689574440073978962175380168917550715328493206614239511250992515578989424801727554995720127774)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/auto_purge_purge_interval (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 11977914906714145297127462453425246309696422151021363308222202232089605232623355989281301453240968142752054535540395723597652914347284873017900101010870600)))) (zookeeper_controller!vstd_ext.string_view.bool_to_string_view.? (B (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView./ZookeeperConfigView/quorum_listen_on_all_ips (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperConfigView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/conf (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 1378213442079660966322726286250424861258189555358349428338965130612373347714860520334779254347236020326114823955096621642275582055557327444023939374017996)))) (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/admin_server (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 670900890843927755672398818638721866282438528973454698343474994349785371856256803227250448955996205392817750464681582370927923428828178583627635587976150))))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.config_map.make_zk_config.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (zookeeper_controller!zookeeper_controller.trusted.config_map.make_zk_config.? zk!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!zookeeper_controller.trusted.config_map.make_zk_config.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::config_map::make_log4j_config")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_config.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_config.) (forall ((no%param Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_config.? no%param) (vstd!string.impl&%0.view.? (S (str%new_strlit 9696245075628563818506770409381500051385958763829843653023409348291410137602905273112367635427523902222276123232630472796471824353151636834493133410407237)))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_config.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_config.? no%param) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_config.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::config_map::make_log4j_quiet_config")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_quiet_config.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_quiet_config.) (forall ((no%param Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_quiet_config.? no%param) (vstd!string.impl&%0.view.? (S (str%new_strlit 8801551755442113699737159832417030951338903705238747983619542529494113669209299991313231443769168738337737529420822605451899773325537405842178624720271575)))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_quiet_config.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_quiet_config.? no%param) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_quiet_config.? no%param)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::config_map::make_env_config")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_env_config.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_env_config.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_env_config.? zk!) (let ((name$ (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))) (let ((namespace$ (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))) (let ((client_port$ (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/client (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))))) (let ((quorum_port$ (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/quorum (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))))) (let ((leader_election_port$ (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/leader_election (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))))) (let ((admin_server_port$ (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/admin_server (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))))) (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!seq.Seq.add.? $ CHAR (vstd!string.impl&%0.view.? (S (str%new_strlit 1460840891050714291166372685899240594882609326228222202175620859252566617668359545729269570327093893785722589051257104392188030741199202880138998086688913))) name$) (vstd!string.impl&%0.view.? (S (str%new_strlit 9115957629262825941953066355074117420006499541916316919812395583727542158925733131875704979800916850757442268729537260727001859468219021366597210996798501)))) namespace$) (vstd!string.impl&%0.view.? (S (str%new_strlit 4651793405507727526465471924215271147095827698508052803885791791730961763328105779489817679443131903535602712415234631344760723065199258262621800531866731)))) quorum_port$) (vstd!string.impl&%0.view.? (S (str%new_strlit 5911810646847437470821493426915256115581558845975660800090432001828459933508198305747509920240398989575069979705943898374345181472956929045825506766993413)))) leader_election_port$) (vstd!string.impl&%0.view.? (S (str%new_strlit 5046708152336816166177937407497715749342442891549770116847331741599367590553120995056580217378272083981154984220524777608949666102781158469097297561974538)))) name$) (vstd!string.impl&%0.view.? (S (str%new_strlit 7295952144841113380474614342778840262560653467414941366496497688412991186202062291034126962730411049099140938251085800961355880195671843885285258718238896)))) client_port$) (vstd!string.impl&%0.view.? (S (str%new_strlit 2157727621525271344101861652786674346294729882318355846482477269978295223982387989442558525625598745772452329858697002722394864817694579696174469893934619)))) name$) (vstd!string.impl&%0.view.? (S (str%new_strlit 10654364793158165927567274396523983986706098585475775546795196117342399869830927831289765030323850360618038116926330624387857289647659937421171959989058849)))) admin_server_port$) (vstd!string.impl&%0.view.? (S (str%new_strlit 9432620426308203228742001997004025198126881836314536189162163828607668767769397098484241007185867734531741548685631386356563608141407163575271514272472651)))) name$) (vstd!string.impl&%0.view.? (S (str%new_strlit 510333112106399929586928600338829275234895655093395798954197154842717264583919017601461114665985987508875106297980637686053904186951115503918490671671486))))))))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.make_env_config.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_env_config.? zk!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.make_env_config.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::config_map::make_config_map")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map.? zk!) (let ((tmp%%$ (let ((tmp%%$1 (core!option.Option./Some (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map_name.? zk!)))) (let ((tmp%%$2 (core!option.Option./Some (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references.? zk!))))) (let ((tmp%%$3 (core!option.Option./Some (zookeeper_controller!zookeeper_controller.model.resource.common.make_labels.? zk!)))) (let ((tmp%%$4 (core!option.Option./Some (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/annotations (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (let ((tmp%%$5 (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.))))) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$4)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$5))))))))))))) (let ((tmp%%$6 (core!option.Option./Some (vstd!map.impl&%0.insert.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!map.impl&%0.insert.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!map.impl&%0.insert.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!map.impl&%0.insert.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!map.impl&%0.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!string.impl&%0.view.? (S (str%new_strlit 6340208876059963228412069341227512851030800186504090244971831512827731607388513212300715311179966975139940245879508157609059815771079321306685042560316625))) (zookeeper_controller!zookeeper_controller.trusted.config_map.make_zk_config.? zk!)) (vstd!string.impl&%0.view.? (S (str%new_strlit 7971650093426423680667623432988051050804574952515591102513102268973073430819581532917333838215478195521765748090866667971118993755033582337600512376999864))) (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_config.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 6113206954041289864742354593835990336800371935972396810236070745818381281012791144059999422703772120678103487115764586691903607760193620708727278709023177))) (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_log4j_quiet_config.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 5661066606073026857979646692070054183781151575388495731147395948441650518412131705234802115864753606999280022147033738550850594047737963959118384867474207))) (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_env_config.? zk!))))) (let ((tmp%%$7 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)))) (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$6))))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map.? zk!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::config_map::ConfigMapBuilder::make")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.make.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.make.) (forall ((zk! Poly) (state! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state!) (Poly%core!result.Result. (core!result.Result./Ok (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map.? zk!)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::config_map::update_config_map")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.update_config_map.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.update_config_map.) (forall ((zk! Poly) (found_config_map! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.config_map.update_config_map.? zk! found_config_map!) (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references.? zk!))))) (let ((tmp%%$1 core!option.Option./None)) (let ((tmp%%$2 (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map.? zk!))))))))) (let ((tmp%%$3 (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map.? zk!))))))))) (let ((tmp%%$4 (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. found_config_map!)))) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/data (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!zookeeper_controller.model.resource.config_map.make_config_map.? zk!)))))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.update_config_map.? zk! found_config_map!)) ))))
(assert (forall ((zk! Poly) (found_config_map! Poly)) (! (=> (and (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type found_config_map! TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!zookeeper_controller.model.resource.config_map.update_config_map.? zk! found_config_map!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.config_map.update_config_map.? zk! found_config_map!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::config_map::ConfigMapBuilder::update")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.update.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.update.) (forall ((zk! Poly) (state! Poly) (obj! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state! obj!) (Poly%core!result.Result. (let ((cm$ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. obj!)))) (ite (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. cm$))) (core!result.Result./Ok (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (zookeeper_controller!zookeeper_controller.model.resource.config_map.update_config_map.? zk! (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. cm$))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state! obj!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::stateful_set::make_stateful_set_name")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_name.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_name.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_name.? zk!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_name.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_name.? zk!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_name.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::stateful_set::make_stateful_set_key")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_key.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_key.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_key.? zk!) (zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.Kind. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_name.? zk!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_key.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_key.? zk!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_key.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::stateful_set::StatefulSetBuilder::get_request")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.get_request.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.get_request.) (forall ((zk! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!) (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%zookeeper_controller!kubernetes_api_objects.spec.common.ObjectRef. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_key.? zk!)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::config_map::ConfigMapBuilder::state_after_create")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.state_after_create.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.state_after_create.) (forall ((zk! Poly) (obj! Poly) (state! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!) (Poly%core!result.Result. (let ((cm$ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. obj!)))) (ite (and (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. cm$))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. cm$)))))))))))))) (let ((state_prime$ (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterExistsStatefulSet)) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. cm$)))))))))))))))))) (let ((req$ (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::config_map::ConfigMapBuilder::state_after_update")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.state_after_update.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.config_map.impl&%0.state_after_update.) (forall ((zk! Poly) (obj! Poly) (state! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!) (Poly%core!result.Result. (let ((cm$ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. obj!)))) (ite (and (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. cm$))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. cm$)))))))))))))) (let ((state_prime$ (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterExistsStatefulSet)) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (zookeeper_controller!vstd_ext.string_view.int_to_string_view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView./ConfigMapView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. cm$)))))))))))))))))) (let ((req$ (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.GetRequest. (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk!))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::stateful_set::make_zk_pod_spec")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_zk_pod_spec.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_zk_pod_spec.) (forall ((zk! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_zk_pod_spec.? zk!) (let ((tmp%%$ (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/affinity (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))) (let ((tmp%%$1 (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. (vstd!seq.Seq.empty.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. (let ((tmp%%$2 (vstd!string.impl&%0.view.? (S (str%new_strlit 5591224028436721828737424708911221848908728004204421904274554233909793426208821254442365759681241710153578785607971687250550718709277731303223302187875785))))) (let ((tmp%%$3 (core!option.Option./Some (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/image (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (let ((tmp%%$4 (core!option.Option./Some (vstd!seq.Seq.push.? $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!seq.Seq.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!string.impl&%0.view.? (S (str%new_strlit 859561372040950776431988648926704474643583870018759671198283075039153529676326703607021598424533101130995821466827691344831499562596582268576482638419836))))))) (let ((tmp%%$5 (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.set_pre_stop.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%1.default.? (I 0))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.set_exec.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%2.default.? (I 0))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.set_command.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.default.? (I 0))) (vstd!seq.Seq.push.? $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!seq.Seq.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!string.impl&%0.view.? (S (str%new_strlit 6630929057026226642046072025861060531985860597084327418449442777277679345503780944407008023823713046993205411921809934258164380262990266319739549697467074))))))))))))) (let ((tmp%%$6 (core!option.Option./Some (vstd!string.impl&%0.view.? (S (str%new_strlit 5416748281934093668779288420609835481575793051873767652231367823990747647183735300939846325375468383321529244700856330983912056514271174856602869550686857)))))) (let ((tmp%%$7 (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/resources (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))) (let ((tmp%%$8 (core!option.Option./Some (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.empty.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 6221270194153759412923337048525907481486313811736861924430812527438921942756115644682474072547526781192842614930957973443855654184970409737802244498048887))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 3610817920924573618051826046216406597487000562980812296418537436909698729548872590887818003346377777836121265434956189087935929258399696148959280770781078)))))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.VolumeMountView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 4163916786994358937102603067129967956932692225118958549565072077411900176632646690944402982753636210015406022413847739735172604247207705703939449771821620))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 13049084200769837456236536217180088952614405310199684801319239929990432343912684053161838055548517314339789116004138831660425701036491839287953656163074383))))))))) (let ((tmp%%$9 (core!option.Option./Some (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (vstd!seq.Seq.empty.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 9201628679962381471698678067746003154655082396258002464873475437128063276557693597907223829632568187381197285107408281805951294480658505264011711071180677))))) (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/client (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 5946472656988367924113110213361942587663187842044037213920864960917265889448055867633173233321658419535291615270615619669272920777017623560165551508317571))))) (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/quorum (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 7558559118761233652881062471105274134906512172969019869037758312413665421677469215171590510718837538639179118396685250838846243330617268810862853149442986))))) (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/leader_election (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 12996891269909683618396389987975855564405211863374334940199411544310622399543574228102322243042075839366557607162402253822598179187328569546822102670603817))))) (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/metrics (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerPortView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%3.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 4038221800746708311047329751292009718479559034444638384638300250689757932697917331842564047845835265270753221456889544174614087328089285107089850243983828))))) (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView./ZookeeperPortsView/admin_server (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPortsView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/ports (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))))))) (let ((tmp%%$10 (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_timeout_seconds.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_success_threshold.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_period_seconds.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_initial_delay_seconds.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_failure_threshold.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_exec.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.default.? (I 0))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.set_command.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.default.? (I 0))) (vstd!seq.Seq.push.? $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!seq.Seq.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!string.impl&%0.view.? (S (str%new_strlit 4679836693590232876791977000620245044441546072777053852974747048472668755816229166184229059961787766232375320688729329790510735485790418834571983353702174)))))))) (I 3))) (I 10))) (I 10))) (I 1))) (I 10)))))) (let ((tmp%%$11 (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_timeout_seconds.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_success_threshold.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_period_seconds.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_initial_delay_seconds.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_failure_threshold.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.set_exec.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ProbeView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%5.default.? (I 0))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.set_command.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ExecActionView. (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%6.default.? (I 0))) (vstd!seq.Seq.push.? $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!seq.Seq.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!string.impl&%0.view.? (S (str%new_strlit 7400393455874702113312081740675462001699728463153752283527438659478414370111653601375903078395074789882833706398721768843039001676392461432806513966057897)))))))) (I 3))) (I 10))) (I 10))) (I 1))) (I 10)))))) (let ((tmp%%$12 (zookeeper_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))) (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. tmp%%$12))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) tmp%%$2 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$9)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$8)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$5)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$7)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$10)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$11)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$4)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$6)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. tmp%%$12))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView. tmp%%$12)))))))))))))))))))))) (let ((tmp%%$13 (core!option.Option./Some (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (let ((volumes$ (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.empty.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_config_map.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 4163916786994358937102603067129967956932692225118958549565072077411900176632646690944402982753636210015406022413847739735172604247207705703939449771821620))))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%3.default.? (I 0))) (vstd!seq.Seq.add.? $ CHAR (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 760090564106296312237122158352071541394541920404996961435617515851287754932081283988794097667625272802632825041362426685363600432985770619944851643726185)))))))))))) (ite (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/enabled (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/persistence (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) volumes$ (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView.>. volumes$) (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_empty_dir.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.VolumeView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 6221270194153759412923337048525907481486313811736861924430812527438921942756115644682474072547526781192842614930957973443855654184970409737802244498048887))))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (zookeeper_controller!kubernetes_api_objects.spec.volume.impl&%1.default.? (I 0))))))))))))) (let ((tmp%%$14 (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/tolerations (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))) (let ((tmp%%$15 (core!option.Option./Some (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/node_selector (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (let ((tmp%%$16 (zookeeper_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? (I 0)))) (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.container.ContainerView.>. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$13)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. tmp%%$16))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. tmp%%$16))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$14)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$15)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. tmp%%$16))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. tmp%%$16))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. tmp%%$16))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. tmp%%$16))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. tmp%%$16))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. tmp%%$16))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. tmp%%$16))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. tmp%%$16))))))))))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_zk_pod_spec.? zk!)) ))))
(assert (forall ((zk! Poly)) (! (=> (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_zk_pod_spec.? zk!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_zk_pod_spec.? zk!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::stateful_set::make_stateful_set")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set.) (forall ((zk! Poly) (rv! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set.? zk! rv!) (let ((name$ (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set_name.? zk!))) (let ((namespace$ (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))))) (let ((metadata$ (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0))) name$)) (zookeeper_controller!zookeeper_controller.model.resource.common.make_labels.? zk!))) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/annotations (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))) (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references.? zk!))))) (let ((spec$ (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_volume_claim_templates.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_pvc_retention_policy.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_template.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_selector.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_service_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.set_replicas.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%2.default.? (I 0))) (I (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/replicas (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (vstd!seq.Seq.add.? $ CHAR name$ (vstd!string.impl&%0.view.? (S (str%new_strlit 7134975014558031744640678850310433501578015481446294165687817467686563665683989110445713287451001872067074318421933721983228471300892935679273714798008536)))))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? (I 0))) (zookeeper_controller!zookeeper_controller.model.resource.common.make_base_labels.? zk!))))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? (I 0))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0))) (zookeeper_controller!zookeeper_controller.model.resource.common.make_labels.? zk!))) (vstd!map.impl&%0.insert.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/annotations (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 11868152889750308127394849017865753752559209185230824887746527780753375979816498710239186393525946106271277532145063164551901213046214112361608870083323444))) rv!))))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod.PodSpecView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_zk_pod_spec.? zk!)))))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_scaled.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.set_when_deleted.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetPersistentVolumeClaimRetentionPolicyView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%3.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 4243908205223383573672634402833112759767915514154705672071230126329776961125409108792636317730160237537159701043980274977280333109985326413465854261492267))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 4243908205223383573672634402833112759767915514154705672071230126329776961125409108792636317730160237537159701043980274977280333109985326413465854261492267))))))) (ite (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/enabled (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/persistence (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (vstd!seq.Seq.push.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (vstd!seq.Seq.empty.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_spec.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%0.set_metadata.? (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 6221270194153759412923337048525907481486313811736861924430812527438921942756115644682474072547526781192842614930957973443855654184970409737802244498048887))))) (zookeeper_controller!zookeeper_controller.model.resource.common.make_base_labels.? zk!))))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_storage_class_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_resources.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.set_access_modes.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimSpecView. (zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.impl&%2.default.? (I 0))) (vstd!seq.Seq.push.? $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!seq.Seq.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!string.impl&%0.view.? (S (str%new_strlit 3829758277519170405922782189888808236906857130640089039399625483901455057994484300555780340360655609079185583351884216059971425022081298847641131176681513)))))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.set_requests.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (zookeeper_controller!kubernetes_api_objects.spec.resource_requirements.impl&%0.default.? (I 0))) (vstd!map.impl&%0.insert.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!map.impl&%0.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!string.impl&%0.view.? (S (str%new_strlit 1300926296256712374622009529095030328769397908469815840728870309441362622238129235077877649542114507324532975852639292503898789404618066001447955647330407))) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/storage_size (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/persistence (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))))) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView./ZookeeperPersistenceView/storage_class_name (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperPersistenceView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView./ZookeeperClusterSpecView/persistence (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!))))))))))))) (vstd!seq.Seq.empty.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.))))) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_spec.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.impl&%0.set_metadata.? (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. metadata$))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. spec$))))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set.? zk! rv!)) ))))
(assert (forall ((zk! Poly) (rv! Poly)) (! (=> (and (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type rv! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set.? zk! rv!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set.? zk! rv!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::stateful_set::StatefulSetBuilder::make")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.make.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.make.) (forall ((zk! Poly) (state! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state!) (Poly%core!result.Result. (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state!))))))) (core!result.Result./Ok (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set.? zk! (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state!))))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::stateful_set::update_stateful_set")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_stateful_set.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_stateful_set.) (forall ((zk! Poly) (found_stateful_set! Poly) (rv! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_stateful_set.? zk! found_stateful_set! rv!) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some (Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references.? zk!))))) (let ((tmp%%$1 core!option.Option./None)) (let ((tmp%%$2 (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set.? zk! rv!))))))))) (let ((tmp%%$3 (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set.? zk! rv!))))))))) (let ((tmp%%$4 (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. found_stateful_set!)))) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (let ((tmp%%$ (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/replicas (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set.? zk! rv!))))))))))) (let ((tmp%%$6 (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/template (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set.? zk! rv!))))))))))) (let ((tmp%%$7 (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/persistent_volume_claim_retention_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.make_stateful_set.? zk! rv!))))))))))) (let ((tmp%%$8 (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. found_stateful_set!)))))))) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/selector (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. tmp%%$8))))) (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/service_name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. tmp%%$8))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. tmp%%$6)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/volume_claim_templates (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. tmp%%$8))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView./StatefulSetSpecView/pod_management_policy (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetSpecView. tmp%%$8))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$7))))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. found_stateful_set!)))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_stateful_set.? zk! found_stateful_set! rv!)) ))))
(assert (forall ((zk! Poly) (found_stateful_set! Poly) (rv! Poly)) (! (=> (and (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type found_stateful_set! TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.) (has_type rv! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_stateful_set.? zk! found_stateful_set! rv!)) TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_stateful_set.? zk! found_stateful_set! rv!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::stateful_set::StatefulSetBuilder::update")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.update.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.update.) (forall ((zk! Poly) (state! Poly) (obj! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state! obj!) (Poly%core!result.Result. (let ((sts$ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. obj!)))) (let ((found_sts$ (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. sts$)))))) (ite (and (and (and (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. sts$))))) (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/metadata (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. found_sts$)))) (Poly%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.controller_owner_ref.? zk!)))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state!)))))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/spec (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. found_sts$))))))))) (core!result.Result./Ok (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_stateful_set.? zk! (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. found_sts$) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state!))))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0))))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! state! obj!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::stateful_set::update_zk_status")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_zk_status.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_zk_status.) (forall ((zk! Poly) (ready_replicas! Poly)) (! (= (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_zk_status.? zk! ready_replicas!) (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))) (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/spec (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterStatusView./ZookeeperClusterStatusView (%I ready_replicas!)))))))) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_zk_status.? zk! ready_replicas!)) ))))
(assert (forall ((zk! Poly) (ready_replicas! Poly)) (! (=> (and (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (has_type ready_replicas! INT)) (has_type (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_zk_status.? zk! ready_replicas!)) TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.)) :pattern ((zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_zk_status.? zk! ready_replicas!)) )))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::stateful_set::StatefulSetBuilder::state_after_create")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.state_after_create.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.state_after_create.) (forall ((zk! Poly) (obj! Poly) (state! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!) (Poly%core!result.Result. (let ((sts_obj$ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. sts_obj$))))) (let ((req$ (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_zk_status.? zk! (I 0))))))))))) (let ((state_prime$ (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterUpdateStatus)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state!))))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::model::resource::stateful_set::StatefulSetBuilder::state_after_update")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.state_after_update.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.impl&%0.state_after_update.) (forall ((zk! Poly) (obj! Poly) (state! Poly)) (! (= (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!) (Poly%core!result.Result. (let ((sts_obj$ (%Poly%core!result.Result. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. sts_obj$))))) (let ((stateful_set$ (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. sts_obj$)))))) (let ((ready_replicas$ (ite (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. stateful_set$)))))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/ready_replicas (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. stateful_set$)))))))))))))) (%I (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView./StatefulSetStatusView/ready_replicas (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetStatusView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView./StatefulSetView/status (%Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView. stateful_set$)))))))))))) 0))) (let ((req$ (zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest (%Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (zookeeper_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView/metadata (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. zk!)))))))) (%Poly%zookeeper_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (zookeeper_controller!zookeeper_controller.model.resource.stateful_set.update_zk_status.? zk! (I ready_replicas$))))))))))) (let ((state_prime$ (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep./AfterUpdateStatus)) (%Poly%core!option.Option. (Poly%core!option.Option. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state!))))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. state_prime$) (Poly%core!option.Option. (core!option.Option./Some (Poly%zookeeper_controller!kubernetes_api_objects.spec.api_method.APIRequest. req$)))))))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. zk! obj! state!)) ))))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::trusted::spec_types::ZookeeperClusterView::default")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.default.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%1.default.) (= (zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.) (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView./ZookeeperClusterView (%Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%zookeeper_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (zookeeper_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView. (vstd!pervasive.arbitrary.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterSpecView.)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.admin_server_service.AdminServerServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.config_map.ConfigMapBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.stateful_set.StatefulSetBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperClusterView. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState.))
(set-info :comment ";; Function-Axioms zookeeper_controller::zookeeper_controller::trusted::exec_types::ZookeeperReconcileState::view")
(assert (fuel_bool_default fuel%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%1.view.))
(assert (=> (fuel_bool fuel%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%1.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. self!) (Poly%zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState. (zookeeper_controller!zookeeper_controller.trusted.spec_types.ZookeeperReconcileState./ZookeeperReconcileState (%Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (Poly%zookeeper_controller!zookeeper_controller.trusted.step.ZookeeperReconcileStep. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/reconcile_step (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (let ((tmp%%$ (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState./ZookeeperReconcileState/latest_config_map_rv_opt (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. self!)))) (ite (is-core!option.Option./Some_ tmp%%$) (let ((s$ (%Poly%vstd!string.String. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)))))) (core!option.Option./Some (vstd!string.impl&%1.view.? (Poly%vstd!string.String. s$)))) core!option.Option./None))))))) :pattern ((vstd!view.View.view.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. self!)) ))))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((A&. Dcr) (A& Type)) (! (=> (tr_bound%vstd!view.View. A&. A&) (tr_bound%vstd!view.View. (REF A&.) A&)) :pattern ((tr_bound%vstd!view.View. (REF A&.) A&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((A&. Dcr) (A& Type)) (! (=> (tr_bound%vstd!view.View. A&. A&) (tr_bound%vstd!view.View. (BOX A&.) A&)) :pattern ((tr_bound%vstd!view.View. (BOX A&.) A&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((A&. Dcr) (A& Type)) (! (=> (tr_bound%vstd!view.View. A&. A&) (tr_bound%vstd!view.View. (RC A&.) A&)) :pattern ((tr_bound%vstd!view.View. (RC A&.) A&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((A&. Dcr) (A& Type)) (! (=> (tr_bound%vstd!view.View. A&. A&) (tr_bound%vstd!view.View. (ARC A&.) A&)) :pattern ((tr_bound%vstd!view.View. (ARC A&.) A&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%tuple%0.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ BOOL))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ (UINT SZ)))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ (SINT 32)))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((A0&. Dcr) (A0& Type) (A1&. Dcr) (A1& Type)) (! (=> (and (tr_bound%vstd!view.View. A0&. A0&) (tr_bound%vstd!view.View. A1&. A1&)) (tr_bound%vstd!view.View. $ (TYPE%tuple%2. A0&. A0& A1&. A1&))) :pattern ((tr_bound%vstd!view.View. $ (TYPE%tuple%2. A0&. A0& A1&. A1&))) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((T&. Dcr) (T& Type)) (! (tr_bound%vstd!std_specs.option.OptionAdditionalFns. $ (TYPE%core!option.Option. T&. T&) T&. T&) :pattern ((tr_bound%vstd!std_specs.option.OptionAdditionalFns. $ (TYPE%core!option.Option. T&. T&) T&. T&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type)) (! (tr_bound%vstd!std_specs.result.ResultAdditionalSpecFns. $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E&) :pattern ((tr_bound%vstd!std_specs.result.ResultAdditionalSpecFns. $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type)) (! (tr_bound%vstd!view.View. $ (TYPE%alloc!vec.Vec. T&. T& A&. A&)) :pattern ((tr_bound%vstd!view.View. $ (TYPE%alloc!vec.Vec. T&. T& A&. A&))) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.config_map.ConfigMapView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.persistent_volume_claim.PersistentVolumeClaimView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%zookeeper_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.stateful_set.StatefulSetView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.))
(set-info :comment ";; Function-Specs zookeeper_controller::kubernetes_api_objects::exec::service::ServicePort::new_with")
(declare-fun ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%3.new_with. (vstd!string.String. Int zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.) Bool)
(assert (forall ((name! vstd!string.String.) (port! Int) (service_port! zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort.)) (! (= (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%3.new_with. name! port! service_port!) (= (zookeeper_controller!kubernetes_api_objects.exec.service.impl&%3.view.? (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. service_port!)) (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_port.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.set_name.? (Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (zookeeper_controller!kubernetes_api_objects.spec.service.impl&%3.default.? (I 0))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. name!)))) (I port!)))) :pattern ((ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%3.new_with. name! port! service_port!)) )))
(set-info :comment ";; Function-Specs vstd::string::impl&%0::to_string")
(declare-fun ens%vstd!string.impl&%0.to_string. (StrSlice vstd!string.String.) Bool)
(assert (forall ((self! StrSlice) (ret! vstd!string.String.)) (! (= (ens%vstd!string.impl&%0.to_string. self! ret!) (and (= (vstd!string.impl&%0.view.? (S self!)) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. ret!))) (= (vstd!string.impl&%0.is_ascii.? (S self!)) (vstd!string.impl&%1.is_ascii.? (Poly%vstd!string.String. ret!))))) :pattern ((ens%vstd!string.impl&%0.to_string. self! ret!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::zookeeper_controller::exec::resource::common::make_owner_references")
(declare-fun req%zookeeper_controller!zookeeper_controller.exec.resource.common.make_owner_references. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) Bool)
(declare-const %%global_location_label%%52 Bool)
(assert (forall ((zk! zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.)) (! (= (req%zookeeper_controller!zookeeper_controller.exec.resource.common.make_owner_references. zk!) (=> %%global_location_label%%52 (zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.well_formed.? (vstd!view.View.view.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. zk!))))) :pattern ((req%zookeeper_controller!zookeeper_controller.exec.resource.common.make_owner_references. zk!)) )))
(declare-fun ens%zookeeper_controller!zookeeper_controller.exec.resource.common.make_owner_references. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.) Bool)
(assert (forall ((zk! zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) (owner_references! alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.)) (! (= (ens%zookeeper_controller!zookeeper_controller.exec.resource.common.make_owner_references. zk! owner_references!) (= (%Poly%vstd!seq.Seq<zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (vstd!seq_lib.impl&%0.map_values.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. owner_references!)) (Poly%fun%1. (mk_fun %%lambda%%4)))) (zookeeper_controller!zookeeper_controller.model.resource.common.make_owner_references.? (vstd!view.View.view.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. zk!))))) :pattern ((ens%zookeeper_controller!zookeeper_controller.exec.resource.common.make_owner_references. zk! owner_references!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::zookeeper_controller::exec::resource::common::make_service")
(declare-fun req%zookeeper_controller!zookeeper_controller.exec.resource.common.make_service. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. vstd!string.String. alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. Bool) Bool)
(declare-const %%global_location_label%%53 Bool)
(assert (forall ((zk! zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) (name! vstd!string.String.) (ports! alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>.) (cluster_ip! Bool)) (! (= (req%zookeeper_controller!zookeeper_controller.exec.resource.common.make_service. zk! name! ports! cluster_ip!) (=> %%global_location_label%%53 (zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.well_formed.? (vstd!view.View.view.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. zk!))))) :pattern ((req%zookeeper_controller!zookeeper_controller.exec.resource.common.make_service. zk! name! ports! cluster_ip!)) )))
(declare-fun ens%zookeeper_controller!zookeeper_controller.exec.resource.common.make_service. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. vstd!string.String. alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. Bool zookeeper_controller!kubernetes_api_objects.exec.service.Service.) Bool)
(assert (forall ((zk! zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) (name! vstd!string.String.) (ports! alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>.) (cluster_ip! Bool) (service! zookeeper_controller!kubernetes_api_objects.exec.service.Service.)) (! (= (ens%zookeeper_controller!zookeeper_controller.exec.resource.common.make_service. zk! name! ports! cluster_ip! service!) (= (%Poly%zookeeper_controller!kubernetes_api_objects.spec.service.ServiceView. (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.Service. (Poly%zookeeper_controller!kubernetes_api_objects.exec.service.Service. service!))) (zookeeper_controller!zookeeper_controller.model.resource.common.make_service.? (vstd!view.View.view.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. zk!)) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. name!)) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. $ TYPE%zookeeper_controller!kubernetes_api_objects.spec.service.ServicePortView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<zookeeper_controller!kubernetes_api_objects.exec.service.ServicePort./alloc!alloc.Global.>. ports!)) (Poly%fun%1. (mk_fun %%lambda%%5))) (B cluster_ip!)))) :pattern ((ens%zookeeper_controller!zookeeper_controller.exec.resource.common.make_service. zk! name! ports! cluster_ip! service!)) )))
(set-info :comment ";; Function-Specs zookeeper_controller::zookeeper_controller::exec::resource::client_service::make_client_service_name")
(declare-fun req%zookeeper_controller!zookeeper_controller.exec.resource.client_service.make_client_service_name. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) Bool)
(declare-const %%global_location_label%%54 Bool)
(assert (forall ((zk! zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.)) (! (= (req%zookeeper_controller!zookeeper_controller.exec.resource.client_service.make_client_service_name. zk!) (=> %%global_location_label%%54 (zookeeper_controller!zookeeper_controller.trusted.spec_types.impl&%0.well_formed.? (vstd!view.View.view.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. zk!))))) :pattern ((req%zookeeper_controller!zookeeper_controller.exec.resource.client_service.make_client_service_name. zk!)) )))
(declare-fun ens%zookeeper_controller!zookeeper_controller.exec.resource.client_service.make_client_service_name. (zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. vstd!string.String.) Bool)
(assert (forall ((zk! zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) (name! vstd!string.String.)) (! (= (ens%zookeeper_controller!zookeeper_controller.exec.resource.client_service.make_client_service_name. zk! name!) (= (vstd!string.impl&%1.view.? (Poly%vstd!string.String. name!)) (zookeeper_controller!zookeeper_controller.model.resource.client_service.make_client_service_name.? (vstd!view.View.view.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. (Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. zk!))))) :pattern ((ens%zookeeper_controller!zookeeper_controller.exec.resource.client_service.make_client_service_name. zk! name!)) )))
(set-info :comment ";; Function-Def zookeeper_controller::zookeeper_controller::exec::resource::client_service::make_client_service_name")
(set-info :comment ";; controller_examples/zookeeper_controller/exec/resource/client_service.rs:81:1: 81:72 (#0)")
(set-info :comment ";; Function-Def zookeeper_controller::zookeeper_controller::exec::resource::client_service::ClientServiceBuilder::get_request")
(set-info :comment ";; controller_examples/zookeeper_controller/exec/resource/client_service.rs:29:5: 29:60 (#0)")
(declare-const %return! Poly)
(declare-const zk! Poly)
(declare-const tmp%1 zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-const tmp%2 vstd!string.String.)
(declare-const tmp%3 zookeeper_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)
(declare-const tmp%4 core!option.Option.)
(declare-const tmp%5 Poly)
(assert fuel_defaults)
(assert (has_type zk! TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.))
(assert (%B (zookeeper_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? $ TYPE%zookeeper_controller!zookeeper_controller.exec.resource.client_service.ClientServiceBuilder. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState. $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. (vstd!view.View.view.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. zk!))))
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%0 Bool)
(set-info :comment ";; precondition not satisfied")
(declare-const %%location_label%%1 Bool)
(set-info :comment ";; postcondition not satisfied")
(declare-const %%location_label%%2 Bool)
(declare-const %%query%% Bool)
(assert (=> %%query%% (not (=> (ens%zookeeper_controller!kubernetes_api_objects.exec.service.impl&%1.api_resource. 0 tmp%1) (and (=> %%location_label%%0 (req%zookeeper_controller!zookeeper_controller.exec.resource.client_service.make_client_service_name. (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. zk!))) (=> (ens%zookeeper_controller!zookeeper_controller.exec.resource.client_service.make_client_service_name. (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. zk!) tmp%2) (=> (ens%zookeeper_controller!zookeeper_controller.trusted.exec_types.impl&%3.metadata. (%Poly%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. zk!) tmp%3) (=> (ens%zookeeper_controller!kubernetes_api_objects.exec.object_meta.impl&%0.namespace. tmp%3 tmp%4) (and (=> %%location_label%%1 (req%core!option.impl&%0.unwrap. $ TYPE%vstd!string.String. tmp%4)) (=> (ens%core!option.impl&%0.unwrap. $ TYPE%vstd!string.String. tmp%4 tmp%5) (=> (= %return! (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. (zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest (%Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (Poly%zookeeper_controller!kubernetes_api_objects.exec.api_resource.ApiResource. tmp%1)) (%Poly%vstd!string.String. (Poly%vstd!string.String. tmp%2)) (%Poly%vstd!string.String. tmp%5)))) (=> %%location_label%%2 (= (vstd!view.View.view.? $ TYPE%zookeeper_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. %return!) (zookeeper_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%zookeeper_controller!zookeeper_controller.model.resource.client_service.ClientServiceBuilder. (proj%%vstd!view.View./V $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) (proj%vstd!view.View./V $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster.) (proj%%vstd!view.View./V $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.) (proj%vstd!view.View./V $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperReconcileState.) (vstd!view.View.view.? $ TYPE%zookeeper_controller!zookeeper_controller.trusted.exec_types.ZookeeperCluster. zk!)))))))))))))))
(assert %%query%%)
(check-sat)
(exit)
