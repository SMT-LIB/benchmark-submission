(set-info :smt-lib-version 2.6)
(set-logic UFDTLIA)
(set-info :source |
Generated by: Amar Shah
Generated on: 2024-12-11
Generator: Verus
Application: Verification of Rust Program
Target solver: z3
Time limit: 60
Benchmarks generated by the Rust verifier Verus (https://verus-lang.github.io/verus/guide/) on the project Anvil (https://www.usenix.org/conference/osdi24/presentation/sun-xudong) 
and processed using Mariposa (https://github.com/secure-foundations/mariposa).
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(set-info :status unsat)
(set-option :auto_config false)
(set-option :smt.mbqi false)
(set-option :smt.case_split 3)
(set-option :smt.qi.eager_threshold 100.0)
(set-option :smt.delay_units true)
(set-option :smt.arith.solver 2)
(set-option :smt.arith.nl false)
(set-option :pi.enabled false)
(set-info :comment ";; Prelude")
(set-info :comment ";; AIR prelude")
(declare-sort %%Function%% 0)
(declare-sort FuelId 0)
(declare-sort Fuel 0)
(declare-const zero Fuel)
(declare-fun succ (Fuel) Fuel)
(declare-fun fuel_bool (FuelId) Bool)
(declare-fun fuel_bool_default (FuelId) Bool)
(declare-const fuel_defaults Bool)
(assert (=> fuel_defaults (forall ((id FuelId)) (! (= (fuel_bool id) (fuel_bool_default id)) :pattern ((fuel_bool id)) ))))
(declare-sort Char 0)
(declare-fun char%from_unicode (Int) Char)
(declare-fun char%to_unicode (Char) Int)
(declare-sort StrSlice 0)
(declare-fun str%strslice_is_ascii (StrSlice) Bool)
(declare-fun str%strslice_len (StrSlice) Int)
(declare-fun str%strslice_get_char (StrSlice Int) Char)
(declare-fun str%new_strlit (Int) StrSlice)
(declare-fun str%from_strlit (StrSlice) Int)
(declare-datatypes ((fndef 0)) (((fndef_singleton ))))
(declare-sort Poly 0)
(declare-sort Height 0)
(declare-fun I (Int) Poly)
(declare-fun B (Bool) Poly)
(declare-fun F (fndef) Poly)
(declare-fun %I (Poly) Int)
(declare-fun %B (Poly) Bool)
(declare-fun %F (Poly) fndef)
(declare-fun S (StrSlice) Poly)
(declare-fun %S (Poly) StrSlice)
(declare-fun C (Char) Poly)
(declare-fun %C (Poly) Char)
(declare-sort Type 0)
(declare-const BOOL Type)
(declare-const INT Type)
(declare-const NAT Type)
(declare-const STRSLICE Type)
(declare-const CHAR Type)
(declare-fun UINT (Int) Type)
(declare-fun SINT (Int) Type)
(declare-fun CONST_INT (Int) Type)
(declare-sort Dcr 0)
(declare-const $ Dcr)
(declare-fun REF (Dcr) Dcr)
(declare-fun MUT_REF (Dcr) Dcr)
(declare-fun BOX (Dcr) Dcr)
(declare-fun RC (Dcr) Dcr)
(declare-fun ARC (Dcr) Dcr)
(declare-fun GHOST (Dcr) Dcr)
(declare-fun TRACKED (Dcr) Dcr)
(declare-fun NEVER (Dcr) Dcr)
(declare-fun ARRAY (Dcr Type Dcr Type) Type)
(declare-fun SLICE (Dcr Type) Type)
(declare-fun has_type (Poly Type) Bool)
(declare-fun as_type (Poly Type) Poly)
(declare-fun mk_fun (%%Function%%) %%Function%%)
(declare-fun const_int (Type) Int)
(assert (forall ((i Int)) (! (= i (const_int (CONST_INT i))) :pattern ((CONST_INT i)) )))
(assert (forall ((b Bool)) (! (has_type (B b) BOOL) :pattern ((has_type (B b) BOOL)) )))
(assert (forall ((x Poly) (t Type)) (! (and (has_type (as_type x t) t) (=> (has_type x t) (= x (as_type x t)))) :pattern ((as_type x t)) )))
(assert (forall ((x %%Function%%)) (! (= (mk_fun x) x) :pattern ((mk_fun x)) )))
(assert (forall ((x Bool)) (! (= x (%B (B x))) :pattern ((B x)) )))
(assert (forall ((x Int)) (! (= x (%I (I x))) :pattern ((I x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x BOOL) (= x (B (%B x)))) :pattern ((has_type x BOOL)) )))
(assert (forall ((x Poly)) (! (=> (has_type x INT) (= x (I (%I x)))) :pattern ((has_type x INT)) )))
(assert (forall ((x Poly)) (! (=> (has_type x NAT) (= x (I (%I x)))) :pattern ((has_type x NAT)) )))
(assert (forall ((bits Int) (x Poly)) (! (=> (has_type x (UINT bits)) (= x (I (%I x)))) :pattern ((has_type x (UINT bits))) )))
(assert (forall ((bits Int) (x Poly)) (! (=> (has_type x (SINT bits)) (= x (I (%I x)))) :pattern ((has_type x (SINT bits))) )))
(assert (forall ((x Int)) (! (= (str%from_strlit (str%new_strlit x)) x) :pattern ((str%new_strlit x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x STRSLICE) (= x (S (%S x)))) :pattern ((has_type x STRSLICE)) )))
(assert (forall ((x StrSlice)) (! (= x (%S (S x))) :pattern ((S x)) )))
(assert (forall ((x StrSlice)) (! (has_type (S x) STRSLICE) :pattern ((has_type (S x) STRSLICE)) )))
(declare-fun ext_eq (Bool Type Poly Poly) Bool)
(assert (forall ((deep Bool) (t Type) (x Poly) (y Poly)) (! (= (= x y) (ext_eq deep t x y)) :pattern ((ext_eq deep t x y)) )))
(declare-const SZ Int)
(assert (or (= SZ 32) (= SZ 64)))
(declare-fun uHi (Int) Int)
(declare-fun iLo (Int) Int)
(declare-fun iHi (Int) Int)
(assert (= (uHi 8) 256))
(assert (= (uHi 16) 65536))
(assert (= (uHi 32) 4294967296))
(assert (= (uHi 64) 18446744073709551616))
(assert (= (uHi 128) (+ 1 340282366920938463463374607431768211455)))
(assert (= (iLo 8) (- 128)))
(assert (= (iLo 16) (- 32768)))
(assert (= (iLo 32) (- 2147483648)))
(assert (= (iLo 64) (- 9223372036854775808)))
(assert (= (iLo 128) (- 170141183460469231731687303715884105728)))
(assert (= (iHi 8) 128))
(assert (= (iHi 16) 32768))
(assert (= (iHi 32) 2147483648))
(assert (= (iHi 64) 9223372036854775808))
(assert (= (iHi 128) 170141183460469231731687303715884105728))
(declare-fun nClip (Int) Int)
(declare-fun uClip (Int Int) Int)
(declare-fun iClip (Int Int) Int)
(assert (forall ((i Int)) (! (and (<= 0 (nClip i)) (=> (<= 0 i) (= i (nClip i)))) :pattern ((nClip i)) )))
(assert (forall ((bits Int) (i Int)) (! (and (<= 0 (uClip bits i)) (< (uClip bits i) (uHi bits)) (=> (and (<= 0 i) (< i (uHi bits))) (= i (uClip bits i)))) :pattern ((uClip bits i)) )))
(assert (forall ((bits Int) (i Int)) (! (and (<= (iLo bits) (iClip bits i)) (< (iClip bits i) (iHi bits)) (=> (and (<= (iLo bits) i) (< i (iHi bits))) (= i (iClip bits i)))) :pattern ((iClip bits i)) )))
(declare-fun uInv (Int Int) Bool)
(declare-fun iInv (Int Int) Bool)
(assert (forall ((bits Int) (i Int)) (! (= (uInv bits i) (and (<= 0 i) (< i (uHi bits)))) :pattern ((uInv bits i)) )))
(assert (forall ((bits Int) (i Int)) (! (= (iInv bits i) (and (<= (iLo bits) i) (< i (iHi bits)))) :pattern ((iInv bits i)) )))
(assert (forall ((x Int)) (! (has_type (I x) INT) :pattern ((has_type (I x) INT)) )))
(assert (forall ((x Int)) (! (=> (<= 0 x) (has_type (I x) NAT)) :pattern ((has_type (I x) NAT)) )))
(assert (forall ((bits Int) (x Int)) (! (=> (uInv bits x) (has_type (I x) (UINT bits))) :pattern ((has_type (I x) (UINT bits))) )))
(assert (forall ((bits Int) (x Int)) (! (=> (iInv bits x) (has_type (I x) (SINT bits))) :pattern ((has_type (I x) (SINT bits))) )))
(assert (forall ((x Poly)) (! (=> (has_type x NAT) (<= 0 (%I x))) :pattern ((has_type x NAT)) )))
(assert (forall ((bits Int) (x Poly)) (! (=> (has_type x (UINT bits)) (uInv bits (%I x))) :pattern ((has_type x (UINT bits))) )))
(assert (forall ((bits Int) (x Poly)) (! (=> (has_type x (SINT bits)) (iInv bits (%I x))) :pattern ((has_type x (SINT bits))) )))
(declare-fun Add (Int Int) Int)
(declare-fun Sub (Int Int) Int)
(assert (forall ((x Int) (y Int)) (! (= (Add x y) (+ x y)) :pattern ((Add x y)))))
(assert (forall ((x Int) (y Int)) (! (= (Sub x y) (- x y)) :pattern ((Sub x y)))))
(assert (forall ((x Poly)) (! (=> (has_type x CHAR) (= x (C (%C x)))) :pattern ((has_type x CHAR)) )))
(assert (forall ((x Char)) (! (= x (%C (C x))) :pattern ((C x)) )))
(assert (forall ((x Char)) (! (has_type (C x) CHAR) :pattern ((has_type (C x) CHAR)) )))
(assert (forall ((x Int)) (! (=> (and (<= 0 x) (< x (uHi 32))) (= x (char%to_unicode (char%from_unicode x)))) :pattern ((char%from_unicode x)) )))
(assert (forall ((c Char)) (! (and (<= 0 (char%to_unicode c)) (< (char%to_unicode c) (uHi 32))) :pattern ((char%to_unicode c)) )))
(declare-fun height (Poly) Height)
(declare-fun height_lt (Height Height) Bool)
(declare-fun partial-order (Height Height) Bool)
(assert (forall ((x Height)) (partial-order x x)))
(assert (forall ((x Height) (y Height)) (=> (and (partial-order x y) (partial-order y x)) (= x y))))
(assert (forall ((x Height) (y Height) (z Height)) (=> (and (partial-order x y) (partial-order y z)) (partial-order x z))))
(assert (forall ((x Height) (y Height)) (! (= (height_lt x y) (and (partial-order x y) (not (= x y)))) :pattern ((height_lt x y)))))
(declare-fun fun_from_recursive_field (Poly) Poly)
(declare-fun check_decrease_int (Int Int Bool) Bool)
(assert (forall ((cur Int) (prev Int) (otherwise Bool)) (! (= (check_decrease_int cur prev otherwise) (or (and (<= 0 cur) (< cur prev)) (and (= cur prev) otherwise))) :pattern ((check_decrease_int cur prev otherwise)) )))
(declare-fun check_decrease_height (Poly Poly Bool) Bool)
(assert (forall ((cur Poly) (prev Poly) (otherwise Bool)) (! (= (check_decrease_height cur prev otherwise) (or (height_lt (height cur) (height prev)) (and (= (height cur) (height prev)) otherwise))) :pattern ((check_decrease_height cur prev otherwise)) )))
(declare-fun uintxor (Int Poly Poly) Int)
(declare-fun uintand (Int Poly Poly) Int)
(declare-fun uintor (Int Poly Poly) Int)
(declare-fun uintshr (Int Poly Poly) Int)
(declare-fun uintshl (Int Poly Poly) Int)
(declare-fun uintnot (Int Poly) Int)
(declare-fun singular_mod (Int Int) Int)
(declare-fun closure_req (Type Dcr Type Poly Poly) Bool)
(declare-fun closure_ens (Type Dcr Type Poly Poly Poly) Bool)
(set-info :comment ";; MODULE 'module fluent_controller::fluentbit::exec::resource::daemon_set'")
(set-info :comment ";; Fuel")
(declare-const fuel%vstd!std_specs.option.impl&%0.is_Some. FuelId)
(declare-const fuel%vstd!std_specs.option.impl&%0.get_Some_0. FuelId)
(declare-const fuel%vstd!std_specs.option.impl&%0.is_None. FuelId)
(declare-const fuel%vstd!std_specs.option.is_some. FuelId)
(declare-const fuel%vstd!std_specs.option.spec_unwrap. FuelId)
(declare-const fuel%vstd!std_specs.result.impl&%0.is_Ok. FuelId)
(declare-const fuel%vstd!std_specs.result.impl&%0.get_Ok_0. FuelId)
(declare-const fuel%vstd!std_specs.result.is_ok. FuelId)
(declare-const fuel%vstd!map.impl&%0.new. FuelId)
(declare-const fuel%vstd!map.impl&%0.spec_index. FuelId)
(declare-const fuel%vstd!map_lib.impl&%0.union_prefer_right. FuelId)
(declare-const fuel%vstd!seq.impl&%0.spec_index. FuelId)
(declare-const fuel%vstd!seq.impl&%0.spec_add. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.map_values. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.add_empty_left. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.add_empty_right. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.push_distributes_over_add. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.contains. FuelId)
(declare-const fuel%vstd!seq_lib.impl&%0.to_set. FuelId)
(declare-const fuel%vstd!seq_lib.check_argument_is_seq. FuelId)
(declare-const fuel%vstd!set.impl&%0.choose. FuelId)
(declare-const fuel%vstd!view.impl&%0.view. FuelId)
(declare-const fuel%vstd!view.impl&%1.view. FuelId)
(declare-const fuel%vstd!view.impl&%2.view. FuelId)
(declare-const fuel%vstd!view.impl&%3.view. FuelId)
(declare-const fuel%vstd!view.impl&%4.view. FuelId)
(declare-const fuel%vstd!view.impl&%5.view. FuelId)
(declare-const fuel%vstd!view.impl&%11.view. FuelId)
(declare-const fuel%vstd!view.impl&%14.view. FuelId)
(declare-const fuel%vstd!view.impl&%19.view. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.impl&%0.requirements. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.get_request. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.make. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_create. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_update. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%1.view. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.well_formed. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.default. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.kind. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.marshal. FuelId)
(declare-const fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.unmarshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%2.view. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%4.view. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%6.view. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%8.view. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%10.view. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%12.view. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%13.view. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_env. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_ports. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_volume_mounts. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_resources. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.unset_resources. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_readiness_probe. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_liveness_probe. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_command. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image_pull_policy. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_args. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_security_context. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_read_only. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.overwrite_mount_propagation. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.set_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value_from. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%9.set_field_ref. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.kind. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.marshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.unmarshal. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_affinity. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_affinity. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_containers. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_volumes. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_init_containers. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_service_account_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_tolerations. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_tolerations. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_node_selector. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_runtime_class_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_dns_policy. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_scheduler_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_priority_class_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_security_context. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_host_network. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_image_pull_secrets. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default. FuelId)
(declare-const fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.set_field_path. FuelId)
(declare-const fuel%fluent_controller!reconciler.exec.resource_builder.resource_res_to_view. FuelId)
(declare-const fuel%fluent_controller!vstd_ext.string_view.opt_string_to_view. FuelId)
(assert (distinct fuel%vstd!std_specs.option.impl&%0.is_Some. fuel%vstd!std_specs.option.impl&%0.get_Some_0. fuel%vstd!std_specs.option.impl&%0.is_None. fuel%vstd!std_specs.option.is_some. fuel%vstd!std_specs.option.spec_unwrap. fuel%vstd!std_specs.result.impl&%0.is_Ok. fuel%vstd!std_specs.result.impl&%0.get_Ok_0. fuel%vstd!std_specs.result.is_ok. fuel%vstd!map.impl&%0.new. fuel%vstd!map.impl&%0.spec_index. fuel%vstd!map_lib.impl&%0.union_prefer_right. fuel%vstd!seq.impl&%0.spec_index. fuel%vstd!seq.impl&%0.spec_add. fuel%vstd!seq_lib.impl&%0.map_values. fuel%vstd!seq_lib.impl&%0.add_empty_left. fuel%vstd!seq_lib.impl&%0.add_empty_right. fuel%vstd!seq_lib.impl&%0.push_distributes_over_add. fuel%vstd!seq_lib.impl&%0.contains. fuel%vstd!seq_lib.impl&%0.to_set. fuel%vstd!seq_lib.check_argument_is_seq. fuel%vstd!set.impl&%0.choose. fuel%vstd!view.impl&%0.view. fuel%vstd!view.impl&%1.view. fuel%vstd!view.impl&%2.view. fuel%vstd!view.impl&%3.view. fuel%vstd!view.impl&%4.view. fuel%vstd!view.impl&%5.view. fuel%vstd!view.impl&%11.view. fuel%vstd!view.impl&%14.view. fuel%vstd!view.impl&%19.view. fuel%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.impl&%0.requirements. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.get_request. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.make. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.update. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_create. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_update. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env. fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name. fuel%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%1.view. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.well_formed. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.default. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.kind. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.marshal. fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.unmarshal. fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%2.view. fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%4.view. fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%6.view. fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%8.view. fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%10.view. fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%12.view. fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%13.view. fuel%fluent_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_env. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_name. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_ports. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_volume_mounts. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_resources. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.unset_resources. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_readiness_probe. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_liveness_probe. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_command. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image_pull_policy. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_args. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_security_context. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_name. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_read_only. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.overwrite_mount_propagation. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.set_name. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value_from. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default. fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%9.set_field_ref. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.default. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.kind. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.marshal. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.unmarshal. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector. fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template. fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default. fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references. fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_affinity. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_affinity. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_containers. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_volumes. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_init_containers. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_service_account_name. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_tolerations. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_tolerations. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_node_selector. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_runtime_class_name. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_dns_policy. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_scheduler_name. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_priority_class_name. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_security_context. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_host_network. fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_image_pull_secrets. fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default. fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata. fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default. fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.set_field_path. fuel%fluent_controller!reconciler.exec.resource_builder.resource_res_to_view. fuel%fluent_controller!vstd_ext.string_view.opt_string_to_view.))
(set-info :comment ";; Associated-Type-Decls")
(declare-fun proj%%vstd!view.View./V (Dcr Type) Dcr)
(declare-fun proj%vstd!view.View./V (Dcr Type) Type)
(declare-fun proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec (Dcr Type) Dcr)
(declare-fun proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec (Dcr Type) Type)
(declare-fun proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status (Dcr Type) Dcr)
(declare-fun proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status (Dcr Type) Type)
(set-info :comment ";; Datatypes")
(declare-sort alloc!alloc.Global. 0)
(declare-sort alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>. 0)
(declare-sort alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>. 0)
(declare-sort alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. 0)
(declare-sort alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>. 0)
(declare-sort alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. 0)
(declare-sort alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>. 0)
(declare-sort alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>. 0)
(declare-sort alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>. 0)
(declare-sort alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>. 0)
(declare-sort fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. 0)
(declare-sort fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.affinity.Affinity. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.container.Container. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.container.EnvVar. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.container.Probe. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.container.SecurityContext. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. 0)
(declare-sort fluent_controller!kubernetes_api_objects.exec.volume.Volume. 0)
(declare-sort fluent_controller!vstd_ext.string_map.StringMap. 0)
(declare-sort vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. 0)
(declare-sort vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. 0)
(declare-sort vstd!seq.Seq<vstd!string.String.>. 0)
(declare-sort vstd!string.String. 0)
(declare-datatypes ((core!option.Option. 0) (core!result.Result. 0) (fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder. 0) (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. 0) (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. 0) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. 0) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. 0) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. 0) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. 0) (fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. 0) (fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. 0) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. 0) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. 0) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. 0) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. 0) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. 0) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. 0) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. 0) (fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. 0) (fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. 0) (fluent_controller!kubernetes_api_objects.spec.common.Kind. 0) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. 0) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView. 0) (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. 0) (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. 0) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. 0) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. 0) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView. 0) (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. 0) (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. 0) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. 0) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. 0) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. 0) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. 0) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. 0) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. 0) (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. 0) (fluent_controller!kubernetes_api_objects.spec.marshal.Value. 0) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. 0) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. 0) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. 0) (fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. 0) (fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. 0) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. 0) (fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. 0) (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. 0) (fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. 0) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. 0) (fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. 0) (tuple%0. 0) (tuple%2. 0)) (((core!option.Option./None ) (core!option.Option./Some (core!option.Option./Some/?0 Poly))) ((core!result.Result./Ok (core!result.Result./Ok/?0 Poly)) (core!result.Result./Err (core!result.Result./Err/?0 Poly))) ((fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder./DaemonSetBuilder )) ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder./DaemonSetBuilder )) ((fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState./FluentBitReconcileState (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState./FluentBitReconcileState/?reconcile_step fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.))) ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/?reconcile_step fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.))) ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/?spec fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/?status core!option.Option.))) ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?fluentbit_config_name Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?image Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?args core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?command core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?image_pull_policy core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?image_pull_secrets core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?resources core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?tolerations core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?labels Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?annotations Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_account_annotations Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_labels Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_selector core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_annotations Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?affinity core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?disable_log_volumes Bool) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?node_selector Poly) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?runtime_class_name core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?dns_policy core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?priority_class_name core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?volumes core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?volume_mounts core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?scheduler_name core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?metrics_port core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?internal_mount_propagation core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?position_db core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?container_log_real_path core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?security_context core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?container_security_context core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?host_network core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?env_vars core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?liveness_probe core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?readiness_probe core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?init_containers core!option.Option.) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?ports core!option.Option.))) ((fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Init ) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterGetSecret ) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/?0 fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/?1 fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Done ) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Error )) ((fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./ServiceAccount ) (fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Role ) (fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./RoleBinding ) (fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./Service ) (fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource./DaemonSet )) ((fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Get ) (fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Create ) (fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind./Update )) ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest/?0 fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest/?0 fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest/?0 fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest/?0 fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest/?0 fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest/?0 fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.))) ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/?api_resource fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/?name vstd!string.String.) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/?namespace vstd!string.String.))) ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest (fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/?api_resource fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/?namespace vstd!string.String.))) ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/?api_resource fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/?namespace vstd!string.String.) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/?obj fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.))) ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/?api_resource fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/?name vstd!string.String.) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/?namespace vstd!string.String.))) ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?api_resource fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?name vstd!string.String.) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?namespace vstd!string.String.) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?obj fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.))) ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?api_resource fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?name vstd!string.String.) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?namespace vstd!string.String.) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?obj fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.))) ((fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView./AffinityView )) ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/?0 fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/?key fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/?kind fluent_controller!kubernetes_api_objects.spec.common.Kind.) (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/?namespace Poly))) ((fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/?namespace Poly) (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/?obj fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/?key fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?namespace Poly) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?name Poly) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?obj fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?namespace Poly) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?name Poly) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?obj fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))) ((fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView (fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/?kind fluent_controller!kubernetes_api_objects.spec.common.Kind.))) ((fluent_controller!kubernetes_api_objects.spec.common.Kind./ConfigMapKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./CustomResourceKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./PersistentVolumeClaimKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./PodKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./RoleBindingKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./StatefulSetKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./ServiceAccountKind ) (fluent_controller!kubernetes_api_objects.spec.common.Kind./SecretKind )) ((fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?kind fluent_controller!kubernetes_api_objects.spec.common.Kind.) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?name Poly) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?namespace Poly))) ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?env core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?image core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?name Poly) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?ports core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?volume_mounts core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?lifecycle core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?resources core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?readiness_probe core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?liveness_probe core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?command core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?image_pull_policy core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?args core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?security_context core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/?pre_stop core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/?exec_ core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?container_port Int) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?protocol core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?mount_path Poly) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?name Poly) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?read_only core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?sub_path core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?mount_propagation core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?exec_ core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?failure_threshold core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?initial_delay_seconds core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?period_seconds core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?success_threshold core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?tcp_socket core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?timeout_seconds core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/?command core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/?host core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/?port Int))) ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?name Poly) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?value core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?value_from core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/?field_ref core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView./SecurityContextView )) ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/?spec core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/?status core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/?selector fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/?template fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.))) ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView./DaemonSetStatusView (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView./DaemonSetStatusView/?number_ready Int))) ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?kind fluent_controller!kubernetes_api_objects.spec.common.Kind.) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?metadata fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?spec fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?status fluent_controller!kubernetes_api_objects.spec.marshal.Value.))) ((fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/?match_labels core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Null ) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool/?0 Bool)) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/?0 Int)) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int/?0 Int)) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/?0 Poly)) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/?0 vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/?0 Poly)) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/?0 vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.))) ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?namespace core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?resource_version core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?uid core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?labels core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?annotations core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?owner_references core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?finalizers core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?deletion_timestamp core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?block_owner_deletion core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?controller core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?kind fluent_controller!kubernetes_api_objects.spec.common.Kind.) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?name Poly) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?uid Int))) ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?affinity core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?containers vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?volumes core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?init_containers core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?service_account_name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?tolerations core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?node_selector core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?runtime_class_name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?dns_policy core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?priority_class_name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?scheduler_name core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?security_context core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?host_network core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?termination_grace_period_seconds core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?image_pull_secrets core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView./PodSecurityContextView )) ((fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView./LocalObjectReferenceView )) ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/?metadata core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/?spec core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView./EmptyStatusView )) ((fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/?limits core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/?requests core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView./TolerationView )) ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?host_path core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?config_map core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?name Poly) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?projected core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?secret core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?downward_api core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?empty_dir core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/?medium core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/?size_limit core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/?path Poly))) ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/?name core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/?secret_name core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/?sources core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/?config_map core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/?secret core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/?items core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/?name core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/?items core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/?name core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/?key Poly) (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/?path Poly))) ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/?items core!option.Option.))) ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/?field_ref core!option.Option.) (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/?path Poly))) ((fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/?field_path Poly) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/?api_version core!option.Option.))) ((fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./MissingField ) (fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnexpectedType ) (fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError ) (fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./ExecError )) ((tuple%0./tuple%0 )) ((tuple%2./tuple%2 (tuple%2./tuple%2/?0 Poly) (tuple%2./tuple%2/?1 Poly)))))
(declare-fun core!option.Option./Some/0 (core!option.Option.) Poly)
(declare-fun core!result.Result./Ok/0 (core!result.Result.) Poly)
(declare-fun core!result.Result./Err/0 (core!result.Result.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState.) fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.) fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/status (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/labels (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_account_annotations (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_labels (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_selector (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_annotations (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Bool)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/node_selector (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/runtime_class_name (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/dns_policy (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/priority_class_name (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/scheduler_name (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/host_network (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) core!option.Option.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/0 (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/1 (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest/0 (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest/0 (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest/0 (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest/0 (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest/0 (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest/0 (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/api_resource (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/name (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) vstd!string.String.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/namespace (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) vstd!string.String.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/api_resource (fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/namespace (fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) vstd!string.String.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/api_resource (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/namespace (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) vstd!string.String.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/obj (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/api_resource (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/name (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) vstd!string.String.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/namespace (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) vstd!string.String.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/api_resource (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/name (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) vstd!string.String.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/namespace (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) vstd!string.String.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/obj (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/api_resource (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/name (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) vstd!string.String.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/namespace (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) vstd!string.String.)
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/obj (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/kind (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.) fluent_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind (fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.) fluent_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) fluent_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/container_port (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) Int)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/port (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) Int)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView./DaemonSetStatusView/number_ready (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.) Int)
(declare-fun fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) fluent_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) fluent_controller!kubernetes_api_objects.spec.marshal.Value.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) fluent_controller!kubernetes_api_objects.spec.marshal.Value.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) Bool)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) Int)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) Int)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/kind (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) fluent_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/uid (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) Int)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) core!option.Option.)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) core!option.Option.)
(declare-fun tuple%2./tuple%2/0 (tuple%2.) Poly)
(declare-fun tuple%2./tuple%2/1 (tuple%2.) Poly)
(declare-fun TYPE%fun%1. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%core!option.Option. (Dcr Type) Type)
(declare-fun TYPE%core!result.Result. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%alloc!vec.Vec. (Dcr Type Dcr Type) Type)
(declare-const TYPE%alloc!alloc.Global. Type)
(declare-fun TYPE%vstd!map.Map. (Dcr Type Dcr Type) Type)
(declare-fun TYPE%vstd!seq.Seq. (Dcr Type) Type)
(declare-fun TYPE%vstd!set.Set. (Dcr Type) Type)
(declare-const TYPE%vstd!string.String. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. Type)
(declare-const TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.container.Probe. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.common.Kind. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. Type)
(declare-const TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. Type)
(declare-const TYPE%fluent_controller!vstd_ext.string_map.StringMap. Type)
(declare-const TYPE%tuple%0. Type)
(declare-fun TYPE%tuple%2. (Dcr Type Dcr Type) Type)
(declare-fun Poly%fun%1. (%%Function%%) Poly)
(declare-fun %Poly%fun%1. (Poly) %%Function%%)
(declare-fun Poly%alloc!alloc.Global. (alloc!alloc.Global.) Poly)
(declare-fun %Poly%alloc!alloc.Global. (Poly) alloc!alloc.Global.)
(declare-fun Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>. (alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>.) Poly)
(declare-fun %Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>. (Poly) alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>.)
(declare-fun Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>. (alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>.) Poly)
(declare-fun %Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>. (Poly) alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>.)
(declare-fun Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. (alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>.) Poly)
(declare-fun %Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. (Poly) alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>.)
(declare-fun Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>. (alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>.) Poly)
(declare-fun %Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>. (Poly) alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>.)
(declare-fun Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. (alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.) Poly)
(declare-fun %Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. (Poly) alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.)
(declare-fun Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>. (alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>.) Poly)
(declare-fun %Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>. (Poly) alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>.)
(declare-fun Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>. (alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>.) Poly)
(declare-fun %Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>. (Poly) alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>.)
(declare-fun Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>. (alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>.) Poly)
(declare-fun %Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>. (Poly) alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>.)
(declare-fun Poly%alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>. (alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>.) Poly)
(declare-fun %Poly%alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>. (Poly) alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity. (fluent_controller!kubernetes_api_objects.exec.affinity.Affinity.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity. (Poly) fluent_controller!kubernetes_api_objects.exec.affinity.Affinity.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (Poly) fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. (fluent_controller!kubernetes_api_objects.exec.container.Container.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. (Poly) fluent_controller!kubernetes_api_objects.exec.container.Container.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. (fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. (Poly) fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. (fluent_controller!kubernetes_api_objects.exec.container.EnvVar.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. (Poly) fluent_controller!kubernetes_api_objects.exec.container.EnvVar.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. (fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. (Poly) fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.container.Probe. (fluent_controller!kubernetes_api_objects.exec.container.Probe.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.container.Probe. (Poly) fluent_controller!kubernetes_api_objects.exec.container.Probe.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext. (fluent_controller!kubernetes_api_objects.exec.container.SecurityContext.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext. (Poly) fluent_controller!kubernetes_api_objects.exec.container.SecurityContext.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. (fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. (Poly) fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. (fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. (Poly) fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. (fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. (Poly) fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly) fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. (fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. (Poly) fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. (fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. (Poly) fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. (fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. (Poly) fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. (fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. (Poly) fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. (fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. (Poly) fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. (Poly) fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. (fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. (Poly) fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements. (fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements. (Poly) fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. (fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. (Poly) fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. (fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. (Poly) fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. (fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. (Poly) fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. (fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. (Poly) fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. (fluent_controller!kubernetes_api_objects.exec.volume.Volume.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. (Poly) fluent_controller!kubernetes_api_objects.exec.volume.Volume.)
(declare-fun Poly%fluent_controller!vstd_ext.string_map.StringMap. (fluent_controller!vstd_ext.string_map.StringMap.) Poly)
(declare-fun %Poly%fluent_controller!vstd_ext.string_map.StringMap. (Poly) fluent_controller!vstd_ext.string_map.StringMap.)
(declare-fun Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.) Poly)
(declare-fun %Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (Poly) vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>.)
(declare-fun Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>.)
(declare-fun Poly%vstd!seq.Seq<vstd!string.String.>. (vstd!seq.Seq<vstd!string.String.>.) Poly)
(declare-fun %Poly%vstd!seq.Seq<vstd!string.String.>. (Poly) vstd!seq.Seq<vstd!string.String.>.)
(declare-fun Poly%vstd!string.String. (vstd!string.String.) Poly)
(declare-fun %Poly%vstd!string.String. (Poly) vstd!string.String.)
(declare-fun Poly%core!option.Option. (core!option.Option.) Poly)
(declare-fun %Poly%core!option.Option. (Poly) core!option.Option.)
(declare-fun Poly%core!result.Result. (core!result.Result.) Poly)
(declare-fun %Poly%core!result.Result. (Poly) core!result.Result.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder. (fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder. (Poly) fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. (Poly) fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)
(declare-fun Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.) Poly)
(declare-fun %Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly) fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. (Poly) fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. (Poly) fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. (Poly) fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. (Poly) fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. (Poly) fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. (Poly) fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. (Poly) fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. (fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. (Poly) fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (Poly) fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.common.Kind.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly) fluent_controller!kubernetes_api_objects.spec.common.Kind.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. (fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. (Poly) fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. (Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly) fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly) fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly) fluent_controller!kubernetes_api_objects.spec.marshal.Value.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (Poly) fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. (fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. (Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (Poly) fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly) fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (Poly) fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (Poly) fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. (fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. (Poly) fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (Poly) fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)
(declare-fun Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. (fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.) Poly)
(declare-fun %Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. (Poly) fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)
(declare-fun Poly%tuple%0. (tuple%0.) Poly)
(declare-fun %Poly%tuple%0. (Poly) tuple%0.)
(declare-fun Poly%tuple%2. (tuple%2.) Poly)
(declare-fun %Poly%tuple%2. (Poly) tuple%2.)
(assert (forall ((x %%Function%%)) (! (= x (%Poly%fun%1. (Poly%fun%1. x))) :pattern ((Poly%fun%1. x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x Poly)) (! (=> (has_type x (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (= x (Poly%fun%1. (%Poly%fun%1. x)))) :pattern ((has_type x (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) )))
(declare-fun %%apply%%0 (%%Function%% Poly) Poly)
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x %%Function%%)) (! (=> (forall ((T%0 Poly)) (! (=> (has_type T%0 T%0&) (has_type (%%apply%%0 x T%0) T%1&)) :pattern ((has_type (%%apply%%0 x T%0) T%1&)) )) (has_type (Poly%fun%1. (mk_fun x)) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) :pattern ((has_type (Poly%fun%1. (mk_fun x)) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%0 Poly) (x %%Function%%)) (! (=> (and (has_type (Poly%fun%1. x) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (has_type T%0 T%0&)) (has_type (%%apply%%0 x T%0) T%1&)) :pattern ((%%apply%%0 x T%0) (has_type (Poly%fun%1. x) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (T%0 Poly) (x %%Function%%)) (! (=> (and (has_type (Poly%fun%1. x) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (has_type T%0 T%0&)) (height_lt (height (%%apply%%0 x T%0)) (height (fun_from_recursive_field (Poly%fun%1. (mk_fun x)))))) :pattern ((height (%%apply%%0 x T%0)) (has_type (Poly%fun%1. x) (TYPE%fun%1. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (has_type y (TYPE%fun%1. T%0&. T%0& T%1&. T%1&)) (forall ((T%0 Poly)) (! (=> (has_type T%0 T%0&) (ext_eq deep T%1& (%%apply%%0 (%Poly%fun%1. x) T%0) (%%apply%%0 (%Poly%fun%1. y) T%0))) :pattern ((ext_eq deep T%1& (%%apply%%0 (%Poly%fun%1. x) T%0) (%%apply%%0 (%Poly%fun%1. y) T%0))) ))) (ext_eq deep (TYPE%fun%1. T%0&. T%0& T%1&. T%1&) x y)) :pattern ((ext_eq deep (TYPE%fun%1. T%0&. T%0& T%1&. T%1&) x y)) )))
(assert (forall ((x alloc!alloc.Global.)) (! (= x (%Poly%alloc!alloc.Global. (Poly%alloc!alloc.Global. x))) :pattern ((Poly%alloc!alloc.Global. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%alloc!alloc.Global.) (= x (Poly%alloc!alloc.Global. (%Poly%alloc!alloc.Global. x)))) :pattern ((has_type x TYPE%alloc!alloc.Global.)) )))
(assert (forall ((x alloc!alloc.Global.)) (! (has_type (Poly%alloc!alloc.Global. x) TYPE%alloc!alloc.Global.) :pattern ((has_type (Poly%alloc!alloc.Global. x) TYPE%alloc!alloc.Global.)) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>.)) (! (= x (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>. (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>. x))) :pattern ((Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container. $ TYPE%alloc!alloc.Global.)) (= x (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>. (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>. x)))) :pattern ((has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>.)) (! (has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container. $ TYPE%alloc!alloc.Global.)) :pattern ((has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>.)) (! (= x (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>. (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>. x))) :pattern ((Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. $ TYPE%alloc!alloc.Global.)) (= x (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>. (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>. x)))) :pattern ((has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>.)) (! (has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. $ TYPE%alloc!alloc.Global.)) :pattern ((has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>.)) (! (= x (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. x))) :pattern ((Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%alloc!alloc.Global.)) (= x (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. x)))) :pattern ((has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>.)) (! (has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%alloc!alloc.Global.)) :pattern ((has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>.)) (! (= x (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>. (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>. x))) :pattern ((Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. $ TYPE%alloc!alloc.Global.)) (= x (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>. (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>. x)))) :pattern ((has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>.)) (! (has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. $ TYPE%alloc!alloc.Global.)) :pattern ((has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.)) (! (= x (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. x))) :pattern ((Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%alloc!alloc.Global.)) (= x (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. x)))) :pattern ((has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.)) (! (has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%alloc!alloc.Global.)) :pattern ((has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>.)) (! (= x (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>. (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>. x))) :pattern ((Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. $ TYPE%alloc!alloc.Global.)) (= x (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>. (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>. x)))) :pattern ((has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>.)) (! (has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. $ TYPE%alloc!alloc.Global.)) :pattern ((has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>.)) (! (= x (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>. (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>. x))) :pattern ((Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. $ TYPE%alloc!alloc.Global.)) (= x (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>. (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>. x)))) :pattern ((has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>.)) (! (has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. $ TYPE%alloc!alloc.Global.)) :pattern ((has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>.)) (! (= x (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>. (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>. x))) :pattern ((Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume. $ TYPE%alloc!alloc.Global.)) (= x (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>. (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>. x)))) :pattern ((has_type x (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>.)) (! (has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume. $ TYPE%alloc!alloc.Global.)) :pattern ((has_type (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>.)) (! (= x (%Poly%alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>. (Poly%alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>. x))) :pattern ((Poly%alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%alloc!vec.Vec. $ TYPE%vstd!string.String. $ TYPE%alloc!alloc.Global.)) (= x (Poly%alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>. (%Poly%alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>. x)))) :pattern ((has_type x (TYPE%alloc!vec.Vec. $ TYPE%vstd!string.String. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>.)) (! (has_type (Poly%alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%vstd!string.String. $ TYPE%alloc!alloc.Global.)) :pattern ((has_type (Poly%alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>. x) (TYPE%alloc!vec.Vec. $ TYPE%vstd!string.String. $ TYPE%alloc!alloc.Global.))) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.affinity.Affinity.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity. (Poly%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity. (%Poly%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.affinity.Affinity.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity. x) TYPE%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity. x) TYPE%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (Poly%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (%Poly%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.Container.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. (%Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.Container.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. (Poly%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. (%Poly%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.EnvVar.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. (%Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.EnvVar.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. (%Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.Probe.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.container.Probe. (Poly%fluent_controller!kubernetes_api_objects.exec.container.Probe. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.container.Probe. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.Probe.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.container.Probe. (%Poly%fluent_controller!kubernetes_api_objects.exec.container.Probe. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.Probe.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.Probe.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.Probe. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.Probe.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.Probe. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.Probe.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.SecurityContext.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext. (Poly%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext. (%Poly%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.SecurityContext.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. (Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. (%Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. x) TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. (%Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. x) TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. x) TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. (%Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. x) TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. x) TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (%Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. x) TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. x) TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. (Poly%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. (%Poly%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. x) TYPE%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. x) TYPE%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. (%Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. x) TYPE%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. x) TYPE%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. (Poly%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. (%Poly%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. x) TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. x) TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. (Poly%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. (%Poly%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. x) TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. x) TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. (%Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. x) TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. x) TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. (%Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. x) TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. x) TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. (Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. (%Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. x) TYPE%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. x) TYPE%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements. (Poly%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements. (%Poly%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements. x) TYPE%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements. x) TYPE%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. (Poly%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. (%Poly%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. x) TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. x) TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. (Poly%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. (%Poly%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. x) TYPE%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. x) TYPE%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. (Poly%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. (%Poly%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. x) TYPE%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. x) TYPE%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. (Poly%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. (%Poly%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. x) TYPE%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. x) TYPE%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.volume.Volume.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. (Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. (%Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.volume.Volume.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. x) TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. x) TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume.)) )))
(assert (forall ((x fluent_controller!vstd_ext.string_map.StringMap.)) (! (= x (%Poly%fluent_controller!vstd_ext.string_map.StringMap. (Poly%fluent_controller!vstd_ext.string_map.StringMap. x))) :pattern ((Poly%fluent_controller!vstd_ext.string_map.StringMap. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!vstd_ext.string_map.StringMap.) (= x (Poly%fluent_controller!vstd_ext.string_map.StringMap. (%Poly%fluent_controller!vstd_ext.string_map.StringMap. x)))) :pattern ((has_type x TYPE%fluent_controller!vstd_ext.string_map.StringMap.)) )))
(assert (forall ((x fluent_controller!vstd_ext.string_map.StringMap.)) (! (has_type (Poly%fluent_controller!vstd_ext.string_map.StringMap. x) TYPE%fluent_controller!vstd_ext.string_map.StringMap.) :pattern ((has_type (Poly%fluent_controller!vstd_ext.string_map.StringMap. x) TYPE%fluent_controller!vstd_ext.string_map.StringMap.)) )))
(assert (forall ((x vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (= x (%Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x))) :pattern ((Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!map.Map. $ NAT $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (= x (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (%Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x)))) :pattern ((has_type x (TYPE%vstd!map.Map. $ NAT $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.))) )))
(assert (forall ((x vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (has_type (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x) (TYPE%vstd!map.Map. $ NAT $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x) (TYPE%vstd!map.Map. $ NAT $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.Container.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.EnvVar.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.exec.volume.Volume.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>.)) (! (= x (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x))) :pattern ((Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (= x (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.))) )))
(assert (forall ((x vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>.)) (! (has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((has_type (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.>. x) (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.))) )))
(assert (forall ((x vstd!seq.Seq<vstd!string.String.>.)) (! (= x (%Poly%vstd!seq.Seq<vstd!string.String.>. (Poly%vstd!seq.Seq<vstd!string.String.>. x))) :pattern ((Poly%vstd!seq.Seq<vstd!string.String.>. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x (TYPE%vstd!seq.Seq. $ TYPE%vstd!string.String.)) (= x (Poly%vstd!seq.Seq<vstd!string.String.>. (%Poly%vstd!seq.Seq<vstd!string.String.>. x)))) :pattern ((has_type x (TYPE%vstd!seq.Seq. $ TYPE%vstd!string.String.))) )))
(assert (forall ((x vstd!seq.Seq<vstd!string.String.>.)) (! (has_type (Poly%vstd!seq.Seq<vstd!string.String.>. x) (TYPE%vstd!seq.Seq. $ TYPE%vstd!string.String.)) :pattern ((has_type (Poly%vstd!seq.Seq<vstd!string.String.>. x) (TYPE%vstd!seq.Seq. $ TYPE%vstd!string.String.))) )))
(assert (forall ((x vstd!string.String.)) (! (= x (%Poly%vstd!string.String. (Poly%vstd!string.String. x))) :pattern ((Poly%vstd!string.String. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%vstd!string.String.) (= x (Poly%vstd!string.String. (%Poly%vstd!string.String. x)))) :pattern ((has_type x TYPE%vstd!string.String.)) )))
(assert (forall ((x vstd!string.String.)) (! (has_type (Poly%vstd!string.String. x) TYPE%vstd!string.String.) :pattern ((has_type (Poly%vstd!string.String. x) TYPE%vstd!string.String.)) )))
(assert (forall ((x core!option.Option.)) (! (= x (%Poly%core!option.Option. (Poly%core!option.Option. x))) :pattern ((Poly%core!option.Option. x)) )))
(assert (forall ((V&. Dcr) (V& Type) (x Poly)) (! (=> (has_type x (TYPE%core!option.Option. V&. V&)) (= x (Poly%core!option.Option. (%Poly%core!option.Option. x)))) :pattern ((has_type x (TYPE%core!option.Option. V&. V&))) )))
(assert (forall ((V&. Dcr) (V& Type)) (! (has_type (Poly%core!option.Option. core!option.Option./None) (TYPE%core!option.Option. V&. V&)) :pattern ((has_type (Poly%core!option.Option. core!option.Option./None) (TYPE%core!option.Option. V&. V&))) )))
(assert (forall ((V&. Dcr) (V& Type) (_0! Poly)) (! (=> (has_type _0! V&) (has_type (Poly%core!option.Option. (core!option.Option./Some _0!)) (TYPE%core!option.Option. V&. V&))) :pattern ((has_type (Poly%core!option.Option. (core!option.Option./Some _0!)) (TYPE%core!option.Option. V&. V&))) )))
(assert (forall ((x core!option.Option.)) (! (= (core!option.Option./Some/0 x) (core!option.Option./Some/?0 x)) :pattern ((core!option.Option./Some/0 x)) )))
(assert (forall ((V&. Dcr) (V& Type) (x Poly)) (! (=> (has_type x (TYPE%core!option.Option. V&. V&)) (has_type (core!option.Option./Some/0 (%Poly%core!option.Option. x)) V&)) :pattern ((core!option.Option./Some/0 (%Poly%core!option.Option. x)) (has_type x (TYPE%core!option.Option. V&. V&))) )))
(define-fun is-core!option.Option./Some_ ((c core!option.Option.)) Bool ((_ is core!option.Option./Some) c))
(assert (forall ((x core!option.Option.)) (! (=> (is-core!option.Option./Some_ x) (height_lt (height (core!option.Option./Some/0 x)) (height (Poly%core!option.Option. x)))) :pattern ((height (core!option.Option./Some/0 x))) )))
(define-fun is-core!option.Option./None_ ((c core!option.Option.)) Bool ((_ is core!option.Option./None) c))
(assert (forall ((V&. Dcr) (V& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%core!option.Option. V&. V&)) (has_type y (TYPE%core!option.Option. V&. V&)) (is-core!option.Option./None_ (%Poly%core!option.Option. x)) (is-core!option.Option./None_ (%Poly%core!option.Option. y))) (ext_eq deep (TYPE%core!option.Option. V&. V&) x y)) :pattern ((ext_eq deep (TYPE%core!option.Option. V&. V&) x y)) )))
(assert (forall ((V&. Dcr) (V& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%core!option.Option. V&. V&)) (has_type y (TYPE%core!option.Option. V&. V&)) (is-core!option.Option./Some_ (%Poly%core!option.Option. x)) (is-core!option.Option./Some_ (%Poly%core!option.Option. y)) (ext_eq deep V& (core!option.Option./Some/0 (%Poly%core!option.Option. x)) (core!option.Option./Some/0 (%Poly%core!option.Option. y)))) (ext_eq deep (TYPE%core!option.Option. V&. V&) x y)) :pattern ((ext_eq deep (TYPE%core!option.Option. V&. V&) x y)) )))
(assert (forall ((x core!result.Result.)) (! (= x (%Poly%core!result.Result. (Poly%core!result.Result. x))) :pattern ((Poly%core!result.Result. x)) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%core!result.Result. T&. T& E&. E&)) (= x (Poly%core!result.Result. (%Poly%core!result.Result. x)))) :pattern ((has_type x (TYPE%core!result.Result. T&. T& E&. E&))) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (_0! Poly)) (! (=> (has_type _0! T&) (has_type (Poly%core!result.Result. (core!result.Result./Ok _0!)) (TYPE%core!result.Result. T&. T& E&. E&))) :pattern ((has_type (Poly%core!result.Result. (core!result.Result./Ok _0!)) (TYPE%core!result.Result. T&. T& E&. E&))) )))
(assert (forall ((x core!result.Result.)) (! (= (core!result.Result./Ok/0 x) (core!result.Result./Ok/?0 x)) :pattern ((core!result.Result./Ok/0 x)) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%core!result.Result. T&. T& E&. E&)) (has_type (core!result.Result./Ok/0 (%Poly%core!result.Result. x)) T&)) :pattern ((core!result.Result./Ok/0 (%Poly%core!result.Result. x)) (has_type x (TYPE%core!result.Result. T&. T& E&. E&))) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (_0! Poly)) (! (=> (has_type _0! E&) (has_type (Poly%core!result.Result. (core!result.Result./Err _0!)) (TYPE%core!result.Result. T&. T& E&. E&))) :pattern ((has_type (Poly%core!result.Result. (core!result.Result./Err _0!)) (TYPE%core!result.Result. T&. T& E&. E&))) )))
(assert (forall ((x core!result.Result.)) (! (= (core!result.Result./Err/0 x) (core!result.Result./Err/?0 x)) :pattern ((core!result.Result./Err/0 x)) )))
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (x Poly)) (! (=> (has_type x (TYPE%core!result.Result. T&. T& E&. E&)) (has_type (core!result.Result./Err/0 (%Poly%core!result.Result. x)) E&)) :pattern ((core!result.Result./Err/0 (%Poly%core!result.Result. x)) (has_type x (TYPE%core!result.Result. T&. T& E&. E&))) )))
(define-fun is-core!result.Result./Ok_ ((c core!result.Result.)) Bool ((_ is core!result.Result./Ok) c))
(assert (forall ((x core!result.Result.)) (! (=> (is-core!result.Result./Ok_ x) (height_lt (height (core!result.Result./Ok/0 x)) (height (Poly%core!result.Result. x)))) :pattern ((height (core!result.Result./Ok/0 x))) )))
(define-fun is-core!result.Result./Err_ ((c core!result.Result.)) Bool ((_ is core!result.Result./Err) c))
(assert (forall ((x core!result.Result.)) (! (=> (is-core!result.Result./Err_ x) (height_lt (height (core!result.Result./Err/0 x)) (height (Poly%core!result.Result. x)))) :pattern ((height (core!result.Result./Err/0 x))) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder. (Poly%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder. (%Poly%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. (%Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. x) TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step x) (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState./FluentBitReconcileState/?reconcile_step x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step x)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/?reconcile_step x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step x)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) )))
(assert (forall ((_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (_status! core!option.Option.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. _spec!) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. _status!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView _metadata! _spec! _status!)) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView _metadata! _spec! _status!)) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/?metadata x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/?spec x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x))) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/status x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/?status x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/status (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/status (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((_fluentbit_config_name! Poly) (_image! Poly) (_args! core!option.Option.) (_command! core!option.Option.) (_image_pull_policy! core!option.Option.) (_image_pull_secrets! core!option.Option.) (_resources! core!option.Option.) (_tolerations! core!option.Option.) (_labels! Poly) (_annotations! Poly) (_service_account_annotations! Poly) (_service_labels! Poly) (_service_selector! core!option.Option.) (_service_annotations! Poly) (_affinity! core!option.Option.) (_disable_log_volumes! Bool) (_node_selector! Poly) (_runtime_class_name! core!option.Option.) (_dns_policy! core!option.Option.) (_priority_class_name! core!option.Option.) (_volumes! core!option.Option.) (_volume_mounts! core!option.Option.) (_scheduler_name! core!option.Option.) (_metrics_port! core!option.Option.) (_internal_mount_propagation! core!option.Option.) (_position_db! core!option.Option.) (_container_log_real_path! core!option.Option.) (_security_context! core!option.Option.) (_container_security_context! core!option.Option.) (_host_network! core!option.Option.) (_env_vars! core!option.Option.) (_liveness_probe! core!option.Option.) (_readiness_probe! core!option.Option.) (_init_containers! core!option.Option.) (_ports! core!option.Option.)) (! (=> (and (has_type _fluentbit_config_name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _image! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _args!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _command!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _image_pull_policy!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _image_pull_secrets!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.))) (has_type (Poly%core!option.Option. _resources!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (has_type (Poly%core!option.Option. _tolerations!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.))) (has_type _labels! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type _annotations! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type _service_account_annotations! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type _service_labels! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _service_selector!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type _service_annotations! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _affinity!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) (has_type _node_selector! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _runtime_class_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _dns_policy!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _priority_class_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _volumes!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.))) (has_type (Poly%core!option.Option. _volume_mounts!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.))) (has_type (Poly%core!option.Option. _scheduler_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _metrics_port!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _internal_mount_propagation!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _position_db!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) (has_type (Poly%core!option.Option. _container_log_real_path!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _security_context!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) (has_type (Poly%core!option.Option. _container_security_context!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) (has_type (Poly%core!option.Option. _host_network!) (TYPE%core!option.Option. $ BOOL)) (has_type (Poly%core!option.Option. _env_vars!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.))) (has_type (Poly%core!option.Option. _liveness_probe!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (has_type (Poly%core!option.Option. _readiness_probe!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (has_type (Poly%core!option.Option. _init_containers!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.))) (has_type (Poly%core!option.Option. _ports!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)))) (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView _fluentbit_config_name! _image! _args! _command! _image_pull_policy! _image_pull_secrets! _resources! _tolerations! _labels! _annotations! _service_account_annotations! _service_labels! _service_selector! _service_annotations! _affinity! _disable_log_volumes! _node_selector! _runtime_class_name! _dns_policy! _priority_class_name! _volumes! _volume_mounts! _scheduler_name! _metrics_port! _internal_mount_propagation! _position_db! _container_log_real_path! _security_context! _container_security_context! _host_network! _env_vars! _liveness_probe! _readiness_probe! _init_containers! _ports!)) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView _fluentbit_config_name! _image! _args! _command! _image_pull_policy! _image_pull_secrets! _resources! _tolerations! _labels! _annotations! _service_account_annotations! _service_labels! _service_selector! _service_annotations! _affinity! _disable_log_volumes! _node_selector! _runtime_class_name! _dns_policy! _priority_class_name! _volumes! _volume_mounts! _scheduler_name! _metrics_port! _internal_mount_propagation! _position_db! _container_log_real_path! _security_context! _container_security_context! _host_network! _env_vars! _liveness_probe! _readiness_probe! _init_containers! _ports!)) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?fluentbit_config_name x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?image x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?args x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?command x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?image_pull_policy x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?image_pull_secrets x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?resources x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?tolerations x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/labels x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?labels x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/labels x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/labels (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/labels (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?annotations x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_account_annotations x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_account_annotations x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_account_annotations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_account_annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_account_annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_labels x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_labels x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_labels x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_labels (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_labels (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_selector x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_selector x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_selector (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_selector (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_annotations x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?service_annotations x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_annotations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/service_annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?affinity x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?disable_log_volumes x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes x)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/node_selector x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?node_selector x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/node_selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/node_selector (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/node_selector (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/runtime_class_name x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?runtime_class_name x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/runtime_class_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/runtime_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/runtime_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/dns_policy x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?dns_policy x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/dns_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/dns_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/dns_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/priority_class_name x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?priority_class_name x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/priority_class_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/priority_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/priority_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?volumes x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?volume_mounts x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/scheduler_name x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?scheduler_name x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/scheduler_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/scheduler_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/scheduler_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?metrics_port x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?internal_mount_propagation x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?position_db x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?container_log_real_path x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?security_context x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?container_security_context x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/host_network x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?host_network x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/host_network x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/host_network (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/host_network (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?env_vars x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?liveness_probe x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?readiness_probe x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?init_containers x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports x) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/?ports x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. x)) (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/0 x) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/?0 x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/0 x)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/1 x) (fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/?1 x)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./AfterKRequestStep/1 x)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.SubResource.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)) (! (= x (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. x))) :pattern ((Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.) (= x (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. x)))) :pattern ((has_type x TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)) )))
(assert (forall ((x fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)) (! (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.) :pattern ((has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind. x) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.step.ActionKind.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest/0 x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest/0 x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest/0 x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest/0 x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest/0 x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest/0 x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest/0 x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest/0 x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest/0 x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest/0 x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest/0 x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest/0 x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/api_resource x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/?api_resource x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/api_resource x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/name x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/name x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/namespace x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/namespace x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/api_resource x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/?api_resource x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/api_resource x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/namespace x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/namespace x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/api_resource x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/?api_resource x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/api_resource x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/namespace x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/namespace x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/obj x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/?obj x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/obj x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/api_resource x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/?api_resource x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/api_resource x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/name x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/name x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/namespace x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/namespace x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/api_resource x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?api_resource x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/api_resource x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/name x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/name x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/namespace x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/namespace x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/obj x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/?obj x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/obj x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/api_resource x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?api_resource x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/api_resource x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/name x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/name x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/namespace x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/namespace x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/obj x) (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/?obj x)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/obj x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. x) TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. (Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. (%Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((_0! fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. _0!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 x) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) )))
(assert (forall ((_key! fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. _key!) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest _key!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest _key!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key x) (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/?key x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) )))
(assert (forall ((_kind! fluent_controller!kubernetes_api_objects.spec.common.Kind.) (_namespace! Poly)) (! (=> (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest _kind! _namespace!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest _kind! _namespace!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/kind x) (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/?kind x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/kind x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace x) (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.) (has_type (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) )))
(assert (forall ((_namespace! Poly) (_obj! fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (=> (and (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. _obj!) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest _namespace! _obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest _namespace! _obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace x) (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (has_type (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj x) (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/?obj x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) )))
(assert (forall ((_key! fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (=> (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. _key!) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest _key!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest _key!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key x) (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/?key x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest/key (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((_namespace! Poly) (_name! Poly) (_obj! fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (=> (and (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. _obj!) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest _namespace! _name! _obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest _namespace! _name! _obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/name (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/?obj x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((_namespace! Poly) (_name! Poly) (_obj! fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (=> (and (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. _obj!) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest _namespace! _name! _obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest _namespace! _name! _obj!)) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/name (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj x) (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/?obj x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind x) (fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/?kind x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.common.Kind.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.Kind.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.Kind.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.common.Kind.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. x) TYPE%fluent_controller!kubernetes_api_objects.spec.common.Kind.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. x) TYPE%fluent_controller!kubernetes_api_objects.spec.common.Kind.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) )))
(assert (forall ((_kind! fluent_controller!kubernetes_api_objects.spec.common.Kind.) (_name! Poly) (_namespace! Poly)) (! (=> (and (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _namespace! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef _kind! _name! _namespace!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef _kind! _name! _namespace!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (= (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind x) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?kind x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/kind x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (= (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name x) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/name (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) (! (= (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace x) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.) (has_type (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((_env! core!option.Option.) (_image! core!option.Option.) (_name! Poly) (_ports! core!option.Option.) (_volume_mounts! core!option.Option.) (_lifecycle! core!option.Option.) (_resources! core!option.Option.) (_readiness_probe! core!option.Option.) (_liveness_probe! core!option.Option.) (_command! core!option.Option.) (_image_pull_policy! core!option.Option.) (_args! core!option.Option.) (_security_context! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _env!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.))) (has_type (Poly%core!option.Option. _image!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _ports!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.))) (has_type (Poly%core!option.Option. _volume_mounts!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.))) (has_type (Poly%core!option.Option. _lifecycle!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) (has_type (Poly%core!option.Option. _resources!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (has_type (Poly%core!option.Option. _readiness_probe!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (has_type (Poly%core!option.Option. _liveness_probe!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (has_type (Poly%core!option.Option. _command!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _image_pull_policy!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _args!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _security_context!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView _env! _image! _name! _ports! _volume_mounts! _lifecycle! _resources! _readiness_probe! _liveness_probe! _command! _image_pull_policy! _args! _security_context!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView _env! _image! _name! _ports! _volume_mounts! _lifecycle! _resources! _readiness_probe! _liveness_probe! _command! _image_pull_policy! _args! _security_context!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?env x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?image x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?ports x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?volume_mounts x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?lifecycle x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?resources x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?readiness_probe x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?liveness_probe x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?command x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?image_pull_policy x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?args x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/?security_context x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) )))
(assert (forall ((_pre_stop! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _pre_stop!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView _pre_stop!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView _pre_stop!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop x) (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/?pre_stop x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.LifecycleView./LifecycleView/pre_stop (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) )))
(assert (forall ((_exec_! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _exec_!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView _exec_!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView _exec_!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ x) (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/?exec_ x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView./LifecycleHandlerView/exec_ (%Poly%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.LifecycleHandlerView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) )))
(assert (forall ((_container_port! Int) (_name! core!option.Option.) (_protocol! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _protocol!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView _container_port! _name! _protocol!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView _container_port! _name! _protocol!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/container_port x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?container_port x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/container_port x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol x) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/?protocol x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((_mount_path! Poly) (_name! Poly) (_read_only! core!option.Option.) (_sub_path! core!option.Option.) (_mount_propagation! core!option.Option.)) (! (=> (and (has_type _mount_path! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _read_only!) (TYPE%core!option.Option. $ BOOL)) (has_type (Poly%core!option.Option. _sub_path!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _mount_propagation!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView _mount_path! _name! _read_only! _sub_path! _mount_propagation!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView _mount_path! _name! _read_only! _sub_path! _mount_propagation!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path x) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?mount_path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name x) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only x) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?read_only x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path x) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?sub_path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation x) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/?mount_propagation x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((_exec_! core!option.Option.) (_failure_threshold! core!option.Option.) (_initial_delay_seconds! core!option.Option.) (_period_seconds! core!option.Option.) (_success_threshold! core!option.Option.) (_tcp_socket! core!option.Option.) (_timeout_seconds! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _exec_!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (has_type (Poly%core!option.Option. _failure_threshold!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _initial_delay_seconds!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _period_seconds!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _success_threshold!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _tcp_socket!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) (has_type (Poly%core!option.Option. _timeout_seconds!) (TYPE%core!option.Option. $ INT))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView _exec_! _failure_threshold! _initial_delay_seconds! _period_seconds! _success_threshold! _tcp_socket! _timeout_seconds!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView _exec_! _failure_threshold! _initial_delay_seconds! _period_seconds! _success_threshold! _tcp_socket! _timeout_seconds!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?exec_ x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/exec_ (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?failure_threshold x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/failure_threshold (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?initial_delay_seconds x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/initial_delay_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?period_seconds x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?success_threshold x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/success_threshold (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?tcp_socket x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/tcp_socket (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds x) (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/?timeout_seconds x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ProbeView./ProbeView/timeout_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) )))
(assert (forall ((_command! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _command!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView _command!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView _command!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command x) (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/?command x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.ExecActionView./ExecActionView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.ExecActionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) )))
(assert (forall ((_host! core!option.Option.) (_port! Int)) (! (=> (has_type (Poly%core!option.Option. _host!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView _host! _port!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView _host! _port!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host x) (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/?host x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host (%Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/host (%Poly%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/port x) (fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/?port x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.TCPSocketActionView./TCPSocketActionView/port x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((_name! Poly) (_value! core!option.Option.) (_value_from! core!option.Option.)) (! (=> (and (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _value!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _value_from!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView _name! _value! _value_from!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView _name! _value! _value_from!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name x) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (has_type (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value x) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?value x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from x) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/?value_from x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) )))
(assert (forall ((_field_ref! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _field_ref!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView _field_ref!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView _field_ref!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref x) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/?field_ref x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView/field_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. (%Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) )))
(assert (forall ((_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! core!option.Option.) (_status! core!option.Option.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. _spec!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) (has_type (Poly%core!option.Option. _status!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata x) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec x) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/?spec x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status x) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/?status x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) )))
(assert (forall ((_selector! fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (_template! fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. _selector!) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. _template!) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView _selector! _template!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView _selector! _template!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector x) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/?selector x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template x) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/?template x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView./DaemonSetStatusView/number_ready x) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView./DaemonSetStatusView/?number_ready x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView./DaemonSetStatusView/number_ready x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((_kind! fluent_controller!kubernetes_api_objects.spec.common.Kind.) (_metadata! fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (_spec! fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (_status! fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (=> (and (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. _metadata!) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. _spec!) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. _status!) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView _kind! _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView _kind! _metadata! _spec! _status!)) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind x) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?kind x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata x) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec x) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?spec x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status x) (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/?status x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x))) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) )))
(assert (forall ((_match_labels! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _match_labels!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView _match_labels!)) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView _match_labels!)) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels x) (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/?match_labels x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView/match_labels (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. fluent_controller!kubernetes_api_objects.spec.marshal.Value./Null) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.))
(assert (forall ((_0! Bool)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Bool/0 x)) )))
(assert (forall ((_0! Int)) (! (=> (<= 0 _0!) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (<= 0 (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Nat/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((_0! Int)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Int/0 x)) )))
(assert (forall ((_0! Poly)) (! (=> (has_type _0! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./String/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((_0! vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 x)) )))
(assert (forall ((_0! Poly)) (! (=> (has_type _0! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./StringStringMap/0 (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((_0! vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object _0!)) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (= (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x) (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/?0 x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x)) )))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array_ ((c fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array) c))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (=> (is-fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array_ x) (height_lt (height (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 x))) (height (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((height (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Array/0 x)))) )))
(define-fun is-fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object_ ((c fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) Bool ((_ is fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object) c))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (=> (is-fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object_ x) (height_lt (height (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x))) (height (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((height (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x)))) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) (! (=> (is-fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object_ x) (height_lt (height (fun_from_recursive_field (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x)))) (height (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. x)))) :pattern ((height (fun_from_recursive_field (Poly%vstd!map.Map<nat./fluent_controller!kubernetes_api_objects.spec.marshal.Value.>. (fluent_controller!kubernetes_api_objects.spec.marshal.Value./Object/0 x))))) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((_name! core!option.Option.) (_namespace! core!option.Option.) (_resource_version! core!option.Option.) (_uid! core!option.Option.) (_labels! core!option.Option.) (_annotations! core!option.Option.) (_owner_references! core!option.Option.) (_finalizers! core!option.Option.) (_deletion_timestamp! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _namespace!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _resource_version!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _uid!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _labels!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _annotations!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _owner_references!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.))) (has_type (Poly%core!option.Option. _finalizers!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _deletion_timestamp!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView _name! _namespace! _resource_version! _uid! _labels! _annotations! _owner_references! _finalizers! _deletion_timestamp!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView _name! _namespace! _resource_version! _uid! _labels! _annotations! _owner_references! _finalizers! _deletion_timestamp!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?namespace x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?resource_version x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?uid x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?labels x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?annotations x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?owner_references x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?finalizers x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp x) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/?deletion_timestamp x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((_block_owner_deletion! core!option.Option.) (_controller! core!option.Option.) (_kind! fluent_controller!kubernetes_api_objects.spec.common.Kind.) (_name! Poly) (_uid! Int)) (! (=> (and (has_type (Poly%core!option.Option. _block_owner_deletion!) (TYPE%core!option.Option. $ BOOL)) (has_type (Poly%core!option.Option. _controller!) (TYPE%core!option.Option. $ BOOL)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView _block_owner_deletion! _controller! _kind! _name! _uid!)) TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView _block_owner_deletion! _controller! _kind! _name! _uid!)) TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion x) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?block_owner_deletion x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/block_owner_deletion (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller x) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?controller x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/controller (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/kind x) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?kind x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/kind x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name x) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (has_type (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/uid x) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/?uid x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView/uid x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((_affinity! core!option.Option.) (_containers! vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>.) (_volumes! core!option.Option.) (_init_containers! core!option.Option.) (_service_account_name! core!option.Option.) (_tolerations! core!option.Option.) (_node_selector! core!option.Option.) (_runtime_class_name! core!option.Option.) (_dns_policy! core!option.Option.) (_priority_class_name! core!option.Option.) (_scheduler_name! core!option.Option.) (_security_context! core!option.Option.) (_host_network! core!option.Option.) (_termination_grace_period_seconds! core!option.Option.) (_image_pull_secrets! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _affinity!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) (has_type (Poly%core!option.Option. _volumes!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.))) (has_type (Poly%core!option.Option. _init_containers!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.))) (has_type (Poly%core!option.Option. _service_account_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _tolerations!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.))) (has_type (Poly%core!option.Option. _node_selector!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _runtime_class_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _dns_policy!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _priority_class_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _scheduler_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%core!option.Option. _security_context!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) (has_type (Poly%core!option.Option. _host_network!) (TYPE%core!option.Option. $ BOOL)) (has_type (Poly%core!option.Option. _termination_grace_period_seconds!) (TYPE%core!option.Option. $ INT)) (has_type (Poly%core!option.Option. _image_pull_secrets!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView _affinity! _containers! _volumes! _init_containers! _service_account_name! _tolerations! _node_selector! _runtime_class_name! _dns_policy! _priority_class_name! _scheduler_name! _security_context! _host_network! _termination_grace_period_seconds! _image_pull_secrets!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView _affinity! _containers! _volumes! _init_containers! _service_account_name! _tolerations! _node_selector! _runtime_class_name! _dns_policy! _priority_class_name! _scheduler_name! _security_context! _host_network! _termination_grace_period_seconds! _image_pull_secrets!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?affinity x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?containers x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers x)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?volumes x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?init_containers x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?service_account_name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?tolerations x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?node_selector x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?runtime_class_name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?dns_policy x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?priority_class_name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?scheduler_name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?security_context x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?host_network x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ BOOL))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?termination_grace_period_seconds x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ INT))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets x) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/?image_pull_secrets x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) )))
(assert (forall ((_metadata! core!option.Option.) (_spec! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _metadata!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (has_type (Poly%core!option.Option. _spec!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView _metadata! _spec!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView _metadata! _spec!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata x) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/?metadata x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec x) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/?spec x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. (%Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (%Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) )))
(assert (forall ((_limits! core!option.Option.) (_requests! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _limits!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%core!option.Option. _requests!) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView _limits! _requests!)) TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView _limits! _requests!)) TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits x) (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/?limits x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits (%Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/limits (%Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests x) (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/?requests x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests (%Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView./ResourceRequirementsView/requests (%Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. (Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. (%Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. x) TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((_host_path! core!option.Option.) (_config_map! core!option.Option.) (_name! Poly) (_projected! core!option.Option.) (_secret! core!option.Option.) (_downward_api! core!option.Option.) (_empty_dir! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _host_path!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) (has_type (Poly%core!option.Option. _config_map!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) (has_type _name! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _projected!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) (has_type (Poly%core!option.Option. _secret!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) (has_type (Poly%core!option.Option. _downward_api!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) (has_type (Poly%core!option.Option. _empty_dir!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView _host_path! _config_map! _name! _projected! _secret! _downward_api! _empty_dir!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView _host_path! _config_map! _name! _projected! _secret! _downward_api! _empty_dir!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?host_path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?config_map x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?projected x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?secret x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?downward_api x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/?empty_dir x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) )))
(assert (forall ((_medium! core!option.Option.) (_size_limit! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _medium!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (has_type (Poly%core!option.Option. _size_limit!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView _medium! _size_limit!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView _medium! _size_limit!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium x) (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/?medium x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x))) (TYPE%core!option.Option. $ TYPE%vstd!string.String.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/medium (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit x) (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/?size_limit x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView./EmptyDirVolumeSourceView/size_limit (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.EmptyDirVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) )))
(assert (forall ((_path! Poly)) (! (=> (has_type _path! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView _path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView _path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path x) (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/?path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) (has_type (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView/path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) )))
(assert (forall ((_name! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name x) (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView./ConfigMapVolumeSourceView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) )))
(assert (forall ((_secret_name! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _secret_name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView _secret_name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView _secret_name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name x) (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/?secret_name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView/secret_name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) )))
(assert (forall ((_sources! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _sources!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView _sources!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView _sources!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources x) (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/?sources x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView./ProjectedVolumeSourceView/sources (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ProjectedVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) )))
(assert (forall ((_config_map! core!option.Option.) (_secret! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _config_map!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) (has_type (Poly%core!option.Option. _secret!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView _config_map! _secret!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView _config_map! _secret!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/?config_map x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret x) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/?secret x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView./VolumeProjectionView/secret (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) )))
(assert (forall ((_items! core!option.Option.) (_name! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _items!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.))) (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView _items! _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView _items! _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items x) (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/?items x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/items (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name x) (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView./ConfigMapProjectionView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ConfigMapProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) )))
(assert (forall ((_items! core!option.Option.) (_name! core!option.Option.)) (! (=> (and (has_type (Poly%core!option.Option. _items!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.))) (has_type (Poly%core!option.Option. _name!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView _items! _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView _items! _name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items x) (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/?items x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/items (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name x) (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/?name x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView./SecretProjectionView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretProjectionView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) )))
(assert (forall ((_key! Poly) (_path! Poly)) (! (=> (and (has_type _key! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type _path! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView _key! _path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView _key! _path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key x) (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/?key x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) (has_type (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/key (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path x) (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/?path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.) (has_type (fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView./KeyToPathView/path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.KeyToPathView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) )))
(assert (forall ((_items! core!option.Option.)) (! (=> (has_type (Poly%core!option.Option. _items!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView _items!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView _items!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items x) (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/?items x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView./DownwardAPIVolumeSourceView/items (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeSourceView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) )))
(assert (forall ((_field_ref! core!option.Option.) (_path! Poly)) (! (=> (and (has_type (Poly%core!option.Option. _field_ref!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (has_type _path! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView _field_ref! _path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView _field_ref! _path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref x) (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/?field_ref x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x))) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/field_ref (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path x) (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/?path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.) (has_type (fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView./DownwardAPIVolumeFileView/path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.DownwardAPIVolumeFileView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) (= x (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) )))
(assert (forall ((_field_path! Poly) (_api_version! core!option.Option.)) (! (=> (and (has_type _field_path! (TYPE%vstd!seq.Seq. $ CHAR)) (has_type (Poly%core!option.Option. _api_version!) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView _field_path! _api_version!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView _field_path! _api_version!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path x) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/?field_path x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) (has_type (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/field_path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version x) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/?api_version x)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x))) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. x)) (has_type x TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) (! (= x (%Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x))) :pattern ((Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.) (= x (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. (%Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x)))) :pattern ((has_type x TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) )))
(assert (forall ((x fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) (! (has_type (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x) TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.) :pattern ((has_type (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. x) TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) )))
(assert (forall ((x tuple%0.)) (! (= x (%Poly%tuple%0. (Poly%tuple%0. x))) :pattern ((Poly%tuple%0. x)) )))
(assert (forall ((x Poly)) (! (=> (has_type x TYPE%tuple%0.) (= x (Poly%tuple%0. (%Poly%tuple%0. x)))) :pattern ((has_type x TYPE%tuple%0.)) )))
(assert (forall ((x tuple%0.)) (! (has_type (Poly%tuple%0. x) TYPE%tuple%0.) :pattern ((has_type (Poly%tuple%0. x) TYPE%tuple%0.)) )))
(assert (forall ((x tuple%2.)) (! (= x (%Poly%tuple%2. (Poly%tuple%2. x))) :pattern ((Poly%tuple%2. x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x Poly)) (! (=> (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (= x (Poly%tuple%2. (%Poly%tuple%2. x)))) :pattern ((has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (_0! Poly) (_1! Poly)) (! (=> (and (has_type _0! T%0&) (has_type _1! T%1&)) (has_type (Poly%tuple%2. (tuple%2./tuple%2 _0! _1!)) (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) :pattern ((has_type (Poly%tuple%2. (tuple%2./tuple%2 _0! _1!)) (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((x tuple%2.)) (! (= (tuple%2./tuple%2/0 x) (tuple%2./tuple%2/?0 x)) :pattern ((tuple%2./tuple%2/0 x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x Poly)) (! (=> (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (has_type (tuple%2./tuple%2/0 (%Poly%tuple%2. x)) T%0&)) :pattern ((tuple%2./tuple%2/0 (%Poly%tuple%2. x)) (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) )))
(assert (forall ((x tuple%2.)) (! (= (tuple%2./tuple%2/1 x) (tuple%2./tuple%2/?1 x)) :pattern ((tuple%2./tuple%2/1 x)) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (x Poly)) (! (=> (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (has_type (tuple%2./tuple%2/1 (%Poly%tuple%2. x)) T%1&)) :pattern ((tuple%2./tuple%2/1 (%Poly%tuple%2. x)) (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&))) )))
(define-fun is-tuple%2./tuple%2_ ((c tuple%2.)) Bool ((_ is tuple%2./tuple%2) c))
(assert (forall ((x tuple%2.)) (! (=> (is-tuple%2./tuple%2_ x) (height_lt (height (tuple%2./tuple%2/0 x)) (height (Poly%tuple%2. x)))) :pattern ((height (tuple%2./tuple%2/0 x))) )))
(assert (forall ((x tuple%2.)) (! (=> (is-tuple%2./tuple%2_ x) (height_lt (height (tuple%2./tuple%2/1 x)) (height (Poly%tuple%2. x)))) :pattern ((height (tuple%2./tuple%2/1 x))) )))
(assert (forall ((T%0&. Dcr) (T%0& Type) (T%1&. Dcr) (T%1& Type) (deep Bool) (x Poly) (y Poly)) (! (=> (and (has_type x (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (has_type y (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&)) (ext_eq deep T%0& (tuple%2./tuple%2/0 (%Poly%tuple%2. x)) (tuple%2./tuple%2/0 (%Poly%tuple%2. y))) (ext_eq deep T%1& (tuple%2./tuple%2/1 (%Poly%tuple%2. x)) (tuple%2./tuple%2/1 (%Poly%tuple%2. y)))) (ext_eq deep (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&) x y)) :pattern ((ext_eq deep (TYPE%tuple%2. T%0&. T%0& T%1&. T%1&) x y)) )))
(set-info :comment ";; Traits")
(declare-fun tr_bound%vstd!view.View. (Dcr Type) Bool)
(declare-fun tr_bound%vstd!std_specs.option.OptionAdditionalFns. (Dcr Type Dcr Type) Bool)
(declare-fun tr_bound%vstd!std_specs.result.ResultAdditionalSpecFns. (Dcr Type Dcr Type Dcr Type) Bool)
(declare-fun tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. (Dcr Type) Bool)
(declare-fun tr_bound%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder. (Dcr Type Dcr Type Dcr Type Dcr Type) Bool)
(declare-fun tr_bound%fluent_controller!reconciler.spec.resource_builder.ResourceBuilder. (Dcr Type Dcr Type Dcr Type) Bool)
(set-info :comment ";; Associated-Type-Impls")
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%%vstd!view.View./V (REF A&.) A&) (proj%%vstd!view.View./V A&. A&)) :pattern ((proj%%vstd!view.View./V (REF A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%vstd!view.View./V (REF A&.) A&) (proj%vstd!view.View./V A&. A&)) :pattern ((proj%vstd!view.View./V (REF A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%%vstd!view.View./V (BOX A&.) A&) (proj%%vstd!view.View./V A&. A&)) :pattern ((proj%%vstd!view.View./V (BOX A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%vstd!view.View./V (BOX A&.) A&) (proj%vstd!view.View./V A&. A&)) :pattern ((proj%vstd!view.View./V (BOX A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%%vstd!view.View./V (RC A&.) A&) (proj%%vstd!view.View./V A&. A&)) :pattern ((proj%%vstd!view.View./V (RC A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%vstd!view.View./V (RC A&.) A&) (proj%vstd!view.View./V A&. A&)) :pattern ((proj%vstd!view.View./V (RC A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%%vstd!view.View./V (ARC A&.) A&) (proj%%vstd!view.View./V A&. A&)) :pattern ((proj%%vstd!view.View./V (ARC A&.) A&)) )))
(assert (forall ((A&. Dcr) (A& Type)) (! (= (proj%vstd!view.View./V (ARC A&.) A&) (proj%vstd!view.View./V A&. A&)) :pattern ((proj%vstd!view.View./V (ARC A&.) A&)) )))
(assert (= (proj%%vstd!view.View./V $ TYPE%tuple%0.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%tuple%0.) TYPE%tuple%0.))
(assert (= (proj%%vstd!view.View./V $ BOOL) $))
(assert (= (proj%vstd!view.View./V $ BOOL) BOOL))
(assert (= (proj%%vstd!view.View./V $ (UINT SZ)) $))
(assert (= (proj%vstd!view.View./V $ (UINT SZ)) (UINT SZ)))
(assert (= (proj%%vstd!view.View./V $ (SINT 32)) $))
(assert (= (proj%vstd!view.View./V $ (SINT 32)) (SINT 32)))
(assert (forall ((A0&. Dcr) (A0& Type) (A1&. Dcr) (A1& Type)) (! (= (proj%%vstd!view.View./V $ (TYPE%tuple%2. A0&. A0& A1&. A1&)) $) :pattern ((proj%%vstd!view.View./V $ (TYPE%tuple%2. A0&. A0& A1&. A1&))) )))
(assert (forall ((A0&. Dcr) (A0& Type) (A1&. Dcr) (A1& Type)) (! (= (proj%vstd!view.View./V $ (TYPE%tuple%2. A0&. A0& A1&. A1&)) (TYPE%tuple%2. (proj%%vstd!view.View./V A0&. A0&) (proj%vstd!view.View./V A0&. A0&) (proj%%vstd!view.View./V A1&. A1&) (proj%vstd!view.View./V A1&. A1&))) :pattern ((proj%vstd!view.View./V $ (TYPE%tuple%2. A0&. A0& A1&. A1&))) )))
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type)) (! (= (proj%%vstd!view.View./V $ (TYPE%alloc!vec.Vec. T&. T& A&. A&)) $) :pattern ((proj%%vstd!view.View./V $ (TYPE%alloc!vec.Vec. T&. T& A&. A&))) )))
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type)) (! (= (proj%vstd!view.View./V $ (TYPE%alloc!vec.Vec. T&. T& A&. A&)) (TYPE%vstd!seq.Seq. T&. T&)) :pattern ((proj%vstd!view.View./V $ (TYPE%alloc!vec.Vec. T&. T& A&. A&))) )))
(assert (= (proj%%vstd!view.View./V $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState.) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.))
(assert (= (proj%%vstd!view.View./V $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.resource.EmptyStatusView.)))
(assert (= (proj%%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest.) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest.) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest.) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest.) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest.) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.))
(assert (= (proj%%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.))
(assert (= (proj%%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext.) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.))
(assert (= (proj%%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.) $))
(assert (= (proj%vstd!view.View./V $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)))
(assert (= (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) $))
(assert (= (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetStatusView.)))
(set-info :comment ";; Function-Decl vstd::std_specs::option::OptionAdditionalFns::is_Some")
(declare-fun vstd!std_specs.option.OptionAdditionalFns.is_Some.? (Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.option.OptionAdditionalFns.is_Some%default%.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::option::OptionAdditionalFns::get_Some_0")
(declare-fun vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? (Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.option.OptionAdditionalFns.get_Some_0%default%.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::option::OptionAdditionalFns::is_None")
(declare-fun vstd!std_specs.option.OptionAdditionalFns.is_None.? (Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.option.OptionAdditionalFns.is_None%default%.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::option::is_some")
(declare-fun vstd!std_specs.option.is_some.? (Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl vstd::std_specs::option::spec_unwrap")
(declare-fun vstd!std_specs.option.spec_unwrap.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::result::ResultAdditionalSpecFns::is_Ok")
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok%default%.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::result::ResultAdditionalSpecFns::get_Ok_0")
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0%default%.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::std_specs::result::is_ok")
(declare-fun vstd!std_specs.result.is_ok.? (Dcr Type Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl vstd::std_specs::vec::spec_vec_len")
(declare-fun vstd!std_specs.vec.spec_vec_len.? (Dcr Type Dcr Type Poly) Int)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::empty")
(declare-fun vstd!map.impl&%0.empty.? (Dcr Type Dcr Type) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::new")
(declare-fun vstd!map.impl&%0.new.? (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::dom")
(declare-fun vstd!map.impl&%0.dom.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::index")
(declare-fun vstd!map.impl&%0.index.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::spec_index")
(declare-fun vstd!map.impl&%0.spec_index.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::insert")
(declare-fun vstd!map.impl&%0.insert.? (Dcr Type Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map::impl&%0::remove")
(declare-fun vstd!map.impl&%0.remove.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::map_lib::impl&%0::union_prefer_right")
(declare-fun vstd!map_lib.impl&%0.union_prefer_right.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::pervasive::arbitrary")
(declare-fun vstd!pervasive.arbitrary.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::empty")
(declare-fun vstd!seq.Seq.empty.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::new")
(declare-fun vstd!seq.Seq.new.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::len")
(declare-fun vstd!seq.Seq.len.? (Dcr Type Poly) Int)
(set-info :comment ";; Function-Decl vstd::seq::Seq::index")
(declare-fun vstd!seq.Seq.index.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::impl&%0::spec_index")
(declare-fun vstd!seq.impl&%0.spec_index.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::push")
(declare-fun vstd!seq.Seq.push.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::update")
(declare-fun vstd!seq.Seq.update.? (Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::subrange")
(declare-fun vstd!seq.Seq.subrange.? (Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::Seq::add")
(declare-fun vstd!seq.Seq.add.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq::impl&%0::spec_add")
(declare-fun vstd!seq.impl&%0.spec_add.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq_lib::impl&%0::map_values")
(declare-fun vstd!seq_lib.impl&%0.map_values.? (Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq_lib::impl&%0::filter")
(declare-fun vstd!seq_lib.impl&%0.filter.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq_lib::impl&%0::contains")
(declare-fun vstd!seq_lib.impl&%0.contains.? (Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl vstd::seq_lib::impl&%0::to_set")
(declare-fun vstd!seq_lib.impl&%0.to_set.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::seq_lib::check_argument_is_seq")
(declare-fun vstd!seq_lib.check_argument_is_seq.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::empty")
(declare-fun vstd!set.impl&%0.empty.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::new")
(declare-fun vstd!set.impl&%0.new.? (Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::contains")
(declare-fun vstd!set.impl&%0.contains.? (Dcr Type Poly Poly) Bool)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::insert")
(declare-fun vstd!set.impl&%0.insert.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::remove")
(declare-fun vstd!set.impl&%0.remove.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::union")
(declare-fun vstd!set.impl&%0.union.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::intersect")
(declare-fun vstd!set.impl&%0.intersect.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::difference")
(declare-fun vstd!set.impl&%0.difference.? (Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::complement")
(declare-fun vstd!set.impl&%0.complement.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::finite")
(declare-fun vstd!set.impl&%0.finite.? (Dcr Type Poly) Bool)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::len")
(declare-fun vstd!set.impl&%0.len.? (Dcr Type Poly) Int)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::choose")
(declare-fun vstd!set.impl&%0.choose.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl vstd::set::impl&%0::mk_map")
(declare-fun vstd!set.impl&%0.mk_map.? (Dcr Type Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl vstd::string::impl&%0::view")
(declare-fun vstd!string.impl&%0.view.? (Poly) Poly)
(set-info :comment ";; Function-Decl vstd::string::impl&%0::is_ascii")
(declare-fun vstd!string.impl&%0.is_ascii.? (Poly) Bool)
(set-info :comment ";; Function-Decl vstd::string::impl&%1::view")
(declare-fun vstd!string.impl&%1.view.? (Poly) Poly)
(set-info :comment ";; Function-Decl vstd::string::impl&%1::is_ascii")
(declare-fun vstd!string.impl&%1.is_ascii.? (Poly) Bool)
(set-info :comment ";; Function-Decl vstd::view::View::view")
(declare-fun vstd!view.View.view.? (Dcr Type Poly) Poly)
(declare-fun vstd!view.View.view%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::common::make_base_labels")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::common::make_labels")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::common::make_owner_references")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_daemon_set_key")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.? (Poly) fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_daemon_set_name")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::update_daemon_set")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_daemon_set")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? (Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_fluentbit_pod_spec")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.? (Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_env")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.? (Poly) vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::model::resource::service_account::make_service_account_name")
(declare-fun fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::view")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly) fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::well_formed")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.well_formed.? (Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::controller_owner_ref")
(declare-fun fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? (Poly) fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::affinity::Affinity::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.affinity.impl&%0.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::api_method::opt_req_to_view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? (Poly) core!option.Option.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::api_resource::ApiResource::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.api_resource.impl&%0.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::container::Container::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::container::ContainerPort::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.container.impl&%1.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::container::VolumeMount::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.container.impl&%2.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::container::Probe::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.container.impl&%3.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::container::EnvVar::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.container.impl&%8.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::container::EnvVarSource::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.container.impl&%9.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::container::SecurityContext::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.container.impl&%10.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSet::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSetSpec::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::label_selector::LabelSelector::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.label_selector.impl&%0.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::owner_reference::OwnerReference::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.owner_reference.impl&%0.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::pod_template_spec::PodTemplateSpec::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::resource_requirements::ResourceRequirements::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.resource_requirements.impl&%0.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::toleration::Toleration::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.toleration.impl&%0.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::volume::Volume::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::volume::HostPathVolumeSource::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::volume::SecretVolumeSource::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.volume.impl&%4.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::exec::volume::ObjectFieldSelector::view")
(declare-fun fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.view.? (Poly) fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_env")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_env.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_image")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_ports")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_ports.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_volume_mounts")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_volume_mounts.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_resources")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_resources.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::unset_resources")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.unset_resources.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_readiness_probe")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_readiness_probe.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_liveness_probe")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_liveness_probe.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_command")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_command.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_image_pull_policy")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image_pull_policy.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_args")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_args.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_security_context")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_security_context.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerPortView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerPortView::set_container_port")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::ContainerPortView::set_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::VolumeMountView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::VolumeMountView::set_mount_path")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::VolumeMountView::set_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::VolumeMountView::set_read_only")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_read_only.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::VolumeMountView::overwrite_mount_propagation")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%4.overwrite_mount_propagation.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::EnvVarView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::EnvVarView::set_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%8.set_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::EnvVarView::overwrite_value")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::EnvVarView::overwrite_value_from")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value_from.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::EnvVarSourceView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::container::EnvVarSourceView::set_field_ref")
(declare-fun fluent_controller!kubernetes_api_objects.spec.container.impl&%9.set_field_ref.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::set_metadata")
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::set_spec")
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetSpecView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetSpecView::set_selector")
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetSpecView::set_template")
(declare-fun fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::label_selector::LabelSelectorView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::label_selector::LabelSelectorView::set_match_labels")
(declare-fun fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::owner_references_only_contains")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? (Poly Poly) Bool)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_labels")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_annotations")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_owner_references")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::unset_finalizers")
(declare-fun fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.? (Poly) fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_affinity")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_affinity.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::unset_affinity")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_affinity.? (Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_containers")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_containers.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_volumes")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_volumes.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_init_containers")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_init_containers.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_service_account_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_service_account_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_tolerations")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_tolerations.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::unset_tolerations")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_tolerations.? (Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_node_selector")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_node_selector.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::overwrite_runtime_class_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_runtime_class_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::overwrite_dns_policy")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_dns_policy.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::overwrite_scheduler_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_scheduler_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::overwrite_priority_class_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_priority_class_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_security_context")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_security_context.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_host_network")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_host_network.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_image_pull_secrets")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_image_pull_secrets.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::set_metadata")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::set_spec")
(declare-fun fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? (Dcr Type) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default%default%.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::kind")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? (Dcr Type) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind%default%.? (Dcr Type) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal_spec")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal_spec")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal_status")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal_status")
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? (Dcr Type Poly) Poly)
(declare-fun fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status%default%.? (Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::set_host_path")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::set_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::set_secret")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::HostPathVolumeSourceView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::HostPathVolumeSourceView::set_path")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::SecretVolumeSourceView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::SecretVolumeSourceView::set_secret_name")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::ObjectFieldSelectorView::default")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? (Poly) fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)
(set-info :comment ";; Function-Decl fluent_controller::kubernetes_api_objects::spec::volume::ObjectFieldSelectorView::set_field_path")
(declare-fun fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.set_field_path.? (Poly Poly) fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::exec::resource_builder::ResourceBuilder::requirements")
(declare-fun fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? (Dcr Type Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements%default%.? (Dcr Type Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::exec::resource_builder::resource_res_to_view")
(declare-fun fluent_controller!reconciler.exec.resource_builder.resource_res_to_view.? (Dcr Type Poly) core!result.Result.)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::get_request")
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request%default%.? (Dcr Type Dcr Type Dcr Type Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::make")
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? (Dcr Type Dcr Type Dcr Type Poly Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make%default%.? (Dcr Type Dcr Type Dcr Type Poly Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::update")
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update%default%.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::state_after_create")
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create%default%.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::state_after_update")
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(declare-fun fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update%default%.? (Dcr Type Dcr Type Dcr Type Poly Poly Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::vstd_ext::string_map::StringMap::view")
(declare-fun fluent_controller!vstd_ext.string_map.impl&%0.view.? (Poly) Poly)
(set-info :comment ";; Function-Decl fluent_controller::vstd_ext::string_view::opt_string_to_view")
(declare-fun fluent_controller!vstd_ext.string_view.opt_string_to_view.? (Poly) core!option.Option.)
(set-info :comment ";; Function-Axioms vstd::view::View::view")
(assert (forall ((Self%&. Dcr) (Self%& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!view.View.view.? Self%&. Self%& self!) (proj%vstd!view.View./V Self%&. Self%&))) :pattern ((vstd!view.View.view.? Self%&. Self%& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::default")
(assert (forall ((Self%&. Dcr) (Self%& Type)) (! (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? Self%&. Self%&) Self%&) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? Self%&. Self%&)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::kind")
(assert (forall ((Self%&. Dcr) (Self%& Type)) (! (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? Self%&. Self%&) TYPE%fluent_controller!kubernetes_api_objects.spec.common.Kind.) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? Self%&. Self%&)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::OptionAdditionalFns::is_Some")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.option.OptionAdditionalFns.is_Some.? Self%&. Self%& T&. T& self!) BOOL)) :pattern ((vstd!std_specs.option.OptionAdditionalFns.is_Some.? Self%&. Self%& T&. T& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::OptionAdditionalFns::get_Some_0")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? Self%&. Self%& T&. T& self!) T&)) :pattern ((vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? Self%&. Self%& T&. T& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::OptionAdditionalFns::is_None")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.option.OptionAdditionalFns.is_None.? Self%&. Self%& T&. T& self!) BOOL)) :pattern ((vstd!std_specs.option.OptionAdditionalFns.is_None.? Self%&. Self%& T&. T& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::impl&%0::get_Some_0")
(assert (fuel_bool_default fuel%vstd!std_specs.option.impl&%0.get_Some_0.))
(assert (=> (fuel_bool fuel%vstd!std_specs.option.impl&%0.get_Some_0.) (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (= (vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!) (core!option.Option./Some/0 (%Poly%core!option.Option. self!))) :pattern ((vstd!std_specs.option.OptionAdditionalFns.get_Some_0.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal")
(assert (forall ((Self%&. Dcr) (Self%& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? Self%&. Self%& self!) TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? Self%&. Self%& self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal")
(assert (forall ((Self%&. Dcr) (Self%& Type) (obj! Poly)) (! (=> (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? Self%&. Self%& obj!) (TYPE%core!result.Result. Self%&. Self%& $ TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? Self%&. Self%& obj!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::ResultAdditionalSpecFns::is_Ok")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? Self%&. Self%& T&. T& E&. E& self!) BOOL)) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? Self%&. Self%& T&. T& E&. E& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::ResultAdditionalSpecFns::get_Ok_0")
(assert (forall ((Self%&. Dcr) (Self%& Type) (T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (=> (has_type self! Self%&) (has_type (vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? Self%&. Self%& T&. T& E&. E& self!) T&)) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? Self%&. Self%& T&. T& E&. E& self!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::impl&%0::is_Ok")
(assert (fuel_bool_default fuel%vstd!std_specs.result.impl&%0.is_Ok.))
(assert (=> (fuel_bool fuel%vstd!std_specs.result.impl&%0.is_Ok.) (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (= (vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. self!)))) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.is_Ok.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::impl&%0::get_Ok_0")
(assert (fuel_bool_default fuel%vstd!std_specs.result.impl&%0.get_Ok_0.))
(assert (=> (fuel_bool fuel%vstd!std_specs.result.impl&%0.get_Ok_0.) (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (self! Poly)) (! (= (vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!) (core!result.Result./Ok/0 (%Poly%core!result.Result. self!))) :pattern ((vstd!std_specs.result.ResultAdditionalSpecFns.get_Ok_0.? $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E& self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal_spec")
(assert (forall ((Self%&. Dcr) (Self%& Type) (s! Poly)) (! (=> (has_type s! (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec Self%&. Self%&)) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? Self%&. Self%& s!) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? Self%&. Self%& s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal_spec")
(assert (forall ((Self%&. Dcr) (Self%& Type) (v! Poly)) (! (=> (has_type v! TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? Self%&. Self%& v!) (TYPE%core!result.Result. (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec Self%&. Self%&) (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Spec Self%&. Self%&) $ TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? Self%&. Self%& v!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::marshal_status")
(assert (forall ((Self%&. Dcr) (Self%& Type) (s! Poly)) (! (=> (has_type s! (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status Self%&. Self%&)) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? Self%&. Self%& s!) TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? Self%&. Self%& s!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::resource::ResourceView::unmarshal_status")
(assert (forall ((Self%&. Dcr) (Self%& Type) (v! Poly)) (! (=> (has_type v! TYPE%fluent_controller!kubernetes_api_objects.spec.marshal.Value.) (has_type (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? Self%&. Self%& v!) (TYPE%core!result.Result. (proj%%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status Self%&. Self%&) (proj%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView./Status Self%&. Self%&) $ TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? Self%&. Self%& v!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::get_request")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly)) (! (=> (has_type cr! K&) (has_type (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? Self%&. Self%& K&. K& T&. T& cr!) TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest.)) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? Self%&. Self%& K&. K& T&. T& cr!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::make")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly) (state! Poly)) (! (=> (and (has_type cr! K&) (has_type state! T&)) (has_type (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? Self%&. Self%& K&. K& T&. T& cr! state!) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%tuple%0.))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? Self%&. Self%& K&. K& T&. T& cr! state!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::update")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly) (state! Poly) (obj! Poly)) (! (=> (and (has_type cr! K&) (has_type state! T&) (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.)) (has_type (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? Self%&. Self%& K&. K& T&. T& cr! state! obj!) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. $ TYPE%tuple%0.))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? Self%&. Self%& K&. K& T&. T& cr! state! obj!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::state_after_create")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly) (obj! Poly) (state! Poly)) (! (=> (and (has_type cr! K&) (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type state! T&)) (has_type (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? Self%&. Self%& K&. K& T&. T& cr! obj! state!) (TYPE%core!result.Result. $ (TYPE%tuple%2. T&. T& $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) $ TYPE%tuple%0.))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? Self%&. Self%& K&. K& T&. T& cr! obj! state!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::spec::resource_builder::ResourceBuilder::state_after_update")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (cr! Poly) (obj! Poly) (state! Poly)) (! (=> (and (has_type cr! K&) (has_type obj! TYPE%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView.) (has_type state! T&)) (has_type (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? Self%&. Self%& K&. K& T&. T& cr! obj! state!) (TYPE%core!result.Result. $ (TYPE%tuple%2. T&. T& $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.)) $ TYPE%tuple%0.))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? Self%&. Self%& K&. K& T&. T& cr! obj! state!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::exec::resource_builder::ResourceBuilder::requirements")
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly)) (! (=> (has_type cr! (proj%vstd!view.View./V K&. K&)) (has_type (fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr!) BOOL)) :pattern ((fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr!)) )))
(set-info :comment ";; Function-Axioms vstd::string::impl&%1::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%vstd!string.String.) (has_type (vstd!string.impl&%1.view.? self!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((vstd!string.impl&%1.view.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::api_method::KubeGetRequest::view")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%2.view.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%2.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (fluent_controller!kubernetes_api_objects.exec.api_resource.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/api_resource (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. self!))))))))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/name (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. self!)))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest./KubeGetRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. self!)))))))))) :pattern ((vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. self!)) ))))
(set-info :comment ";; Function-Specs fluent_controller::reconciler::exec::resource_builder::ResourceBuilder::get_request")
(declare-fun req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.get_request. (Dcr Type Dcr Type Dcr Type Dcr Type Poly) Bool)
(declare-const %%global_location_label%%0 Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly)) (! (= (req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.get_request. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr!) (=> %%global_location_label%%0 (%B (fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& (vstd!view.View.view.? K&. K& cr!))))) :pattern ((req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.get_request. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr!)) )))
(declare-fun ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.get_request. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (req! Poly)) (! (= (ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.get_request. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! req!) (and (has_type req! TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest.) (= (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. req!) (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!))))) :pattern ((ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.get_request. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! req!)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.))
(set-info :comment ";; Function-Axioms fluent_controller::reconciler::exec::resource_builder::resource_res_to_view")
(assert (fuel_bool_default fuel%fluent_controller!reconciler.exec.resource_builder.resource_res_to_view.))
(assert (=> (fuel_bool fuel%fluent_controller!reconciler.exec.resource_builder.resource_res_to_view.) (forall ((T&. Dcr) (T& Type) (res! Poly)) (! (= (fluent_controller!reconciler.exec.resource_builder.resource_res_to_view.? T&. T& res!) (ite (is-core!result.Result./Ok_ (%Poly%core!result.Result. res!)) (let ((resource$ (core!result.Result./Ok/0 (%Poly%core!result.Result. res!)))) (core!result.Result./Ok (vstd!view.View.view.? T&. T& resource$))) (let ((err$ (%Poly%tuple%0. (core!result.Result./Err/0 (%Poly%core!result.Result. res!))))) (core!result.Result./Err (Poly%tuple%0. err$))))) :pattern ((fluent_controller!reconciler.exec.resource_builder.resource_res_to_view.? T&. T& res!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (res! Poly)) (! (=> (has_type res! (TYPE%core!result.Result. T&. T& $ TYPE%tuple%0.)) (has_type (Poly%core!result.Result. (fluent_controller!reconciler.exec.resource_builder.resource_res_to_view.? T&. T& res!)) (TYPE%core!result.Result. (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) $ TYPE%tuple%0.))) :pattern ((fluent_controller!reconciler.exec.resource_builder.resource_res_to_view.? T&. T& res!)) )))
(set-info :comment ";; Function-Specs fluent_controller::reconciler::exec::resource_builder::ResourceBuilder::make")
(declare-fun req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.make. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%1 Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (state! Poly)) (! (= (req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.make. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state!) (=> %%global_location_label%%1 (%B (fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& (vstd!view.View.view.? K&. K& cr!))))) :pattern ((req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.make. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state!)) )))
(declare-fun ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.make. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly) Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (state! Poly) (res! Poly)) (! (= (ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.make. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state! res!) (and (has_type res! (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. $ TYPE%tuple%0.)) (= (fluent_controller!reconciler.exec.resource_builder.resource_res_to_view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. res!) (%Poly%core!result.Result. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!) (vstd!view.View.view.? T&. T& state!)))))) :pattern ((ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.make. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state! res!)) )))
(set-info :comment ";; Function-Specs fluent_controller::reconciler::exec::resource_builder::ResourceBuilder::update")
(declare-fun req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.update. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%2 Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (state! Poly) (obj! Poly)) (! (= (req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state! obj!) (=> %%global_location_label%%2 (%B (fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& (vstd!view.View.view.? K&. K& cr!))))) :pattern ((req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state! obj!)) )))
(declare-fun ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.update. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly Poly) Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (state! Poly) (obj! Poly) (res! Poly)) (! (= (ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state! obj! res!) (and (has_type res! (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. $ TYPE%tuple%0.)) (= (fluent_controller!reconciler.exec.resource_builder.resource_res_to_view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. res!) (%Poly%core!result.Result. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!) (vstd!view.View.view.? T&. T& state!) (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!)))))) :pattern ((ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! state! obj! res!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::api_method::KubeListRequest::view")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%4.view.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%4.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest./ListRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (fluent_controller!kubernetes_api_objects.exec.api_resource.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/api_resource (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. self!))))))))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest./KubeListRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. self!))))))) :pattern ((vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::api_method::KubeCreateRequest::view")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%6.view.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%6.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest./CreateRequest (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest./KubeCreateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. self!)))))))) :pattern ((vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::api_method::KubeDeleteRequest::view")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%8.view.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%8.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest./DeleteRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (fluent_controller!kubernetes_api_objects.exec.api_resource.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/api_resource (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. self!))))))))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/name (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. self!)))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest./KubeDeleteRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. self!)))))))))) :pattern ((vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::api_method::KubeUpdateRequest::view")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%10.view.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%10.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest./UpdateRequest (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. self!)))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/name (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest./KubeUpdateRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. self!)))))))) :pattern ((vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::api_method::KubeUpdateStatusRequest::view")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%12.view.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%12.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest./UpdateStatusRequest (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/namespace (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. self!)))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/name (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest./KubeUpdateStatusRequest/obj (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. self!)))))))) :pattern ((vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::api_method::KubeAPIRequest::view")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%13.view.))
(define-fun is-fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest_ ((c fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) Bool ((_ is fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest) c))
(define-fun is-fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest_ ((c fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) Bool ((_ is fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest) c))
(define-fun is-fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest_ ((c fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) Bool ((_ is fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest) c))
(define-fun is-fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest_ ((c fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) Bool ((_ is fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest) c))
(define-fun is-fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest_ ((c fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) Bool ((_ is fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest) c))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.exec.api_method.impl&%13.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest. (ite (is-fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest_ (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)) (let ((get_req$ (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./GetRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)))) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeGetRequest. get_req$))))) (ite (is-fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest_ (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)) (let ((list_req$ (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./ListRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)))) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./ListRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.ListRequest. (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeListRequest. list_req$))))) (ite (is-fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest_ (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)) (let ((create_req$ (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./CreateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)))) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./CreateRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.CreateRequest. (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeCreateRequest. create_req$))))) (ite (is-fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest_ (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)) (let ((delete_req$ (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./DeleteRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)))) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./DeleteRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.DeleteRequest. (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeDeleteRequest. delete_req$))))) (ite (is-fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest_ (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)) (let ((update_req$ (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)))) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateRequest. (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateRequest. update_req$))))) (let ((update_status_req$ (fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest./UpdateStatusRequest/0 (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)))) (fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest./UpdateStatusRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.api_method.UpdateStatusRequest. (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeUpdateStatusRequest. update_status_req$)))))))))))) :pattern ((vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::api_method::opt_req_to_view")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.) (forall ((req! Poly)) (! (= (fluent_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? req!) (ite (is-core!option.Option./Some_ (%Poly%core!option.Option. req!)) (let ((req$ (%Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. (core!option.Option./Some/0 (%Poly%core!option.Option. req!))))) (core!option.Option./Some (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. (Poly%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest. req$)))) core!option.Option./None)) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? req!)) ))))
(assert (forall ((req! Poly)) (! (=> (has_type req! (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) (has_type (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? req!)) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.api_method.APIRequest.))) :pattern ((fluent_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? req!)) )))
(set-info :comment ";; Function-Specs fluent_controller::reconciler::exec::resource_builder::ResourceBuilder::state_after_create")
(declare-fun req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_create. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%3 Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (obj! Poly) (state! Poly)) (! (= (req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_create. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state!) (=> %%global_location_label%%3 (%B (fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& (vstd!view.View.view.? K&. K& cr!))))) :pattern ((req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_create. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state!)) )))
(declare-fun ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_create. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly Poly) Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (obj! Poly) (state! Poly) (res! Poly)) (! (= (ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_create. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state! res!) (and (has_type res! (TYPE%core!result.Result. $ (TYPE%tuple%2. T&. T& $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) $ TYPE%tuple%0.)) (= (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. res!))) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!) (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!) (vstd!view.View.view.? T&. T& state!)))))) (=> (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. res!)))) (= (tuple%2./tuple%2 (vstd!view.View.view.? T&. T& (tuple%2./tuple%2/0 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. res!))))) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? (tuple%2./tuple%2/1 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. res!))))))) (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!) (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!) (vstd!view.View.view.? T&. T& state!))))))))) :pattern ((ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_create. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state! res!)) )))
(set-info :comment ";; Function-Specs fluent_controller::reconciler::exec::resource_builder::ResourceBuilder::state_after_update")
(declare-fun req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_update. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%4 Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (obj! Poly) (state! Poly)) (! (= (req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state!) (=> %%global_location_label%%4 (%B (fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& (vstd!view.View.view.? K&. K& cr!))))) :pattern ((req%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state!)) )))
(declare-fun ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_update. (Dcr Type Dcr Type Dcr Type Dcr Type Poly Poly Poly Poly) Bool)
(assert (forall ((Self%&. Dcr) (Self%& Type) (K&. Dcr) (K& Type) (T&. Dcr) (T& Type) (SpecBuilder&. Dcr) (SpecBuilder& Type) (cr! Poly) (obj! Poly) (state! Poly) (res! Poly)) (! (= (ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state! res!) (and (has_type res! (TYPE%core!result.Result. $ (TYPE%tuple%2. T&. T& $ (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.exec.api_method.KubeAPIRequest.)) $ TYPE%tuple%0.)) (= (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. res!))) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!) (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!) (vstd!view.View.view.? T&. T& state!)))))) (=> (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. res!)))) (= (tuple%2./tuple%2 (vstd!view.View.view.? T&. T& (tuple%2./tuple%2/0 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. res!))))) (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.exec.api_method.opt_req_to_view.? (tuple%2./tuple%2/1 (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. res!))))))) (%Poly%tuple%2. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? SpecBuilder&. SpecBuilder& (proj%%vstd!view.View./V K&. K&) (proj%vstd!view.View./V K&. K&) (proj%%vstd!view.View./V T&. T&) (proj%vstd!view.View./V T&. T&) (vstd!view.View.view.? K&. K& cr!) (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!) (vstd!view.View.view.? T&. T& state!))))))))) :pattern ((ens%fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.state_after_update. Self%&. Self%& K&. K& T&. T& SpecBuilder&. SpecBuilder& cr! obj! state! res!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::impl&%0::is_None")
(assert (fuel_bool_default fuel%vstd!std_specs.option.impl&%0.is_None.))
(assert (=> (fuel_bool fuel%vstd!std_specs.option.impl&%0.is_None.) (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (= (vstd!std_specs.option.OptionAdditionalFns.is_None.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!) (B (is-core!option.Option./None_ (%Poly%core!option.Option. self!)))) :pattern ((vstd!std_specs.option.OptionAdditionalFns.is_None.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::is_some")
(assert (fuel_bool_default fuel%vstd!std_specs.option.is_some.))
(assert (=> (fuel_bool fuel%vstd!std_specs.option.is_some.) (forall ((T&. Dcr) (T& Type) (option! Poly)) (! (= (vstd!std_specs.option.is_some.? T&. T& option!) (is-core!option.Option./Some_ (%Poly%core!option.Option. option!))) :pattern ((vstd!std_specs.option.is_some.? T&. T& option!)) ))))
(set-info :comment ";; Function-Specs core::option::impl&%0::is_some")
(declare-fun ens%core!option.impl&%0.is_some. (Dcr Type core!option.Option. Bool) Bool)
(assert (forall ((T&. Dcr) (T& Type) (option! core!option.Option.) (b! Bool)) (! (= (ens%core!option.impl&%0.is_some. T&. T& option! b!) (= b! (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. option!))))) :pattern ((ens%core!option.impl&%0.is_some. T&. T& option! b!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::impl&%0::is_Some")
(assert (fuel_bool_default fuel%vstd!std_specs.option.impl&%0.is_Some.))
(assert (=> (fuel_bool fuel%vstd!std_specs.option.impl&%0.is_Some.) (forall ((T&. Dcr) (T& Type) (self! Poly)) (! (= (vstd!std_specs.option.OptionAdditionalFns.is_Some.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. self!)))) :pattern ((vstd!std_specs.option.OptionAdditionalFns.is_Some.? $ (TYPE%core!option.Option. T&. T&) T&. T& self!)) ))))
(set-info :comment ";; Function-Specs vstd::std_specs::option::spec_unwrap")
(declare-fun req%vstd!std_specs.option.spec_unwrap. (Dcr Type Poly) Bool)
(declare-const %%global_location_label%%5 Bool)
(assert (forall ((T&. Dcr) (T& Type) (option! Poly)) (! (= (req%vstd!std_specs.option.spec_unwrap. T&. T& option!) (=> %%global_location_label%%5 (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. option!)))))) :pattern ((req%vstd!std_specs.option.spec_unwrap. T&. T& option!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::option::spec_unwrap")
(assert (fuel_bool_default fuel%vstd!std_specs.option.spec_unwrap.))
(assert (=> (fuel_bool fuel%vstd!std_specs.option.spec_unwrap.) (forall ((T&. Dcr) (T& Type) (option! Poly)) (! (= (vstd!std_specs.option.spec_unwrap.? T&. T& option!) (core!option.Option./Some/0 (%Poly%core!option.Option. option!))) :pattern ((vstd!std_specs.option.spec_unwrap.? T&. T& option!)) ))))
(assert (forall ((T&. Dcr) (T& Type) (option! Poly)) (! (=> (has_type option! (TYPE%core!option.Option. T&. T&)) (has_type (vstd!std_specs.option.spec_unwrap.? T&. T& option!) T&)) :pattern ((vstd!std_specs.option.spec_unwrap.? T&. T& option!)) )))
(set-info :comment ";; Function-Specs core::option::impl&%0::unwrap")
(declare-fun req%core!option.impl&%0.unwrap. (Dcr Type core!option.Option.) Bool)
(declare-const %%global_location_label%%6 Bool)
(assert (forall ((T&. Dcr) (T& Type) (option! core!option.Option.)) (! (= (req%core!option.impl&%0.unwrap. T&. T& option!) (=> %%global_location_label%%6 (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. option!))))))) :pattern ((req%core!option.impl&%0.unwrap. T&. T& option!)) )))
(declare-fun ens%core!option.impl&%0.unwrap. (Dcr Type core!option.Option. Poly) Bool)
(assert (forall ((T&. Dcr) (T& Type) (option! core!option.Option.) (t! Poly)) (! (= (ens%core!option.impl&%0.unwrap. T&. T& option! t!) (and (has_type t! T&) (= t! (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. option!)))))) :pattern ((ens%core!option.impl&%0.unwrap. T&. T& option! t!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::result::is_ok")
(assert (fuel_bool_default fuel%vstd!std_specs.result.is_ok.))
(assert (=> (fuel_bool fuel%vstd!std_specs.result.is_ok.) (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (result! Poly)) (! (= (vstd!std_specs.result.is_ok.? T&. T& E&. E& result!) (is-core!result.Result./Ok_ (%Poly%core!result.Result. result!))) :pattern ((vstd!std_specs.result.is_ok.? T&. T& E&. E& result!)) ))))
(set-info :comment ";; Function-Specs core::result::impl&%0::is_ok")
(declare-fun ens%core!result.impl&%0.is_ok. (Dcr Type Dcr Type core!result.Result. Bool) Bool)
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (result! core!result.Result.) (b! Bool)) (! (= (ens%core!result.impl&%0.is_ok. T&. T& E&. E& result! b!) (= b! (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. result!))))) :pattern ((ens%core!result.impl&%0.is_ok. T&. T& E&. E& result! b!)) )))
(set-info :comment ";; Function-Specs core::result::impl&%0::unwrap")
(declare-fun req%core!result.impl&%0.unwrap. (Dcr Type Dcr Type core!result.Result.) Bool)
(declare-const %%global_location_label%%7 Bool)
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (result! core!result.Result.)) (! (= (req%core!result.impl&%0.unwrap. T&. T& E&. E& result!) (=> %%global_location_label%%7 (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. result!))))))) :pattern ((req%core!result.impl&%0.unwrap. T&. T& E&. E& result!)) )))
(declare-fun ens%core!result.impl&%0.unwrap. (Dcr Type Dcr Type core!result.Result. Poly) Bool)
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type) (result! core!result.Result.) (t! Poly)) (! (= (ens%core!result.impl&%0.unwrap. T&. T& E&. E& result! t!) (and (has_type t! T&) (= t! (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. result!)))))) :pattern ((ens%core!result.impl&%0.unwrap. T&. T& E&. E& result! t!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::len")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (<= 0 (vstd!seq.Seq.len.? A&. A& self!))) :pattern ((vstd!seq.Seq.len.? A&. A& self!)) )))
(set-info :comment ";; Function-Specs vstd::seq::Seq::index")
(declare-fun req%vstd!seq.Seq.index. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%8 Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (= (req%vstd!seq.Seq.index. A&. A& self! i!) (=> %%global_location_label%%8 (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& self!))))) :pattern ((req%vstd!seq.Seq.index. A&. A& self! i!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::index")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (has_type (vstd!seq.Seq.index.? A&. A& self! i!) A&)) :pattern ((vstd!seq.Seq.index.? A&. A& self! i!)) )))
(set-info :comment ";; Function-Axioms vstd::std_specs::vec::spec_vec_len")
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type) (v! Poly)) (! (=> (has_type v! (TYPE%alloc!vec.Vec. T&. T& A&. A&)) (uInv SZ (vstd!std_specs.vec.spec_vec_len.? T&. T& A&. A& v!))) :pattern ((vstd!std_specs.vec.spec_vec_len.? T&. T& A&. A& v!)) )))
(set-info :comment ";; Function-Specs vstd::std_specs::vec::axiom_spec_len")
(declare-fun ens%vstd!std_specs.vec.axiom_spec_len. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (v! Poly)) (! (= (ens%vstd!std_specs.vec.axiom_spec_len. A&. A& v!) (= (vstd!std_specs.vec.spec_vec_len.? A&. A& $ TYPE%alloc!alloc.Global. v!) (vstd!seq.Seq.len.? A&. A& (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. A&. A& $ TYPE%alloc!alloc.Global.) v!)))) :pattern ((ens%vstd!std_specs.vec.axiom_spec_len. A&. A& v!)) )))
(set-info :comment ";; Broadcast vstd::std_specs::vec::axiom_spec_len")
(assert (forall ((A&. Dcr) (A& Type) (v! Poly)) (! (=> (has_type v! (TYPE%alloc!vec.Vec. A&. A& $ TYPE%alloc!alloc.Global.)) (= (vstd!std_specs.vec.spec_vec_len.? A&. A& $ TYPE%alloc!alloc.Global. v!) (vstd!seq.Seq.len.? A&. A& (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. A&. A& $ TYPE%alloc!alloc.Global.) v!)))) :pattern ((vstd!std_specs.vec.spec_vec_len.? A&. A& $ TYPE%alloc!alloc.Global. v!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::empty")
(assert (forall ((A&. Dcr) (A& Type)) (! (has_type (vstd!seq.Seq.empty.? A&. A&) (TYPE%vstd!seq.Seq. A&. A&)) :pattern ((vstd!seq.Seq.empty.? A&. A&)) )))
(set-info :comment ";; Function-Specs alloc::vec::impl&%0::new")
(declare-fun ens%alloc!vec.impl&%0.new. (Dcr Type Poly) Bool)
(assert (forall ((T&. Dcr) (T& Type) (v! Poly)) (! (= (ens%alloc!vec.impl&%0.new. T&. T& v!) (and (has_type v! (TYPE%alloc!vec.Vec. T&. T& $ TYPE%alloc!alloc.Global.)) (= (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. T&. T& $ TYPE%alloc!alloc.Global.) v!) (vstd!seq.Seq.empty.? T&. T&)))) :pattern ((ens%alloc!vec.impl&%0.new. T&. T& v!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::push")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (a! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type a! A&)) (has_type (vstd!seq.Seq.push.? A&. A& self! a!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.push.? A&. A& self! a!)) )))
(set-info :comment ";; Function-Specs alloc::vec::impl&%1::push")
(declare-fun ens%alloc!vec.impl&%1.push. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type) (pre%vec! Poly) (vec! Poly) (value! Poly)) (! (= (ens%alloc!vec.impl&%1.push. T&. T& A&. A& pre%vec! vec! value!) (and (has_type vec! (TYPE%alloc!vec.Vec. T&. T& A&. A&)) (= (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. T&. T& A&. A&) vec!) (vstd!seq.Seq.push.? T&. T& (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. T&. T& A&. A&) pre%vec!) value!)))) :pattern ((ens%alloc!vec.impl&%1.push. T&. T& A&. A& pre%vec! vec! value!)) )))
(set-info :comment ";; Function-Specs vstd::seq::impl&%0::spec_index")
(declare-fun req%vstd!seq.impl&%0.spec_index. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%9 Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (= (req%vstd!seq.impl&%0.spec_index. A&. A& self! i!) (=> %%global_location_label%%9 (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& self!))))) :pattern ((req%vstd!seq.impl&%0.spec_index. A&. A& self! i!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::impl&%0::spec_index")
(assert (fuel_bool_default fuel%vstd!seq.impl&%0.spec_index.))
(assert (=> (fuel_bool fuel%vstd!seq.impl&%0.spec_index.) (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (= (vstd!seq.impl&%0.spec_index.? A&. A& self! i!) (vstd!seq.Seq.index.? A&. A& self! i!)) :pattern ((vstd!seq.impl&%0.spec_index.? A&. A& self! i!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (has_type (vstd!seq.impl&%0.spec_index.? A&. A& self! i!) A&)) :pattern ((vstd!seq.impl&%0.spec_index.? A&. A& self! i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::Seq::subrange")
(declare-fun req%vstd!seq.Seq.subrange. (Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%10 Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (start_inclusive! Poly) (end_exclusive! Poly)) (! (= (req%vstd!seq.Seq.subrange. A&. A& self! start_inclusive! end_exclusive!) (=> %%global_location_label%%10 (and (and (<= 0 (%I start_inclusive!)) (<= (%I start_inclusive!) (%I end_exclusive!))) (<= (%I end_exclusive!) (vstd!seq.Seq.len.? A&. A& self!))))) :pattern ((req%vstd!seq.Seq.subrange. A&. A& self! start_inclusive! end_exclusive!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::subrange")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (start_inclusive! Poly) (end_exclusive! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type start_inclusive! INT) (has_type end_exclusive! INT)) (has_type (vstd!seq.Seq.subrange.? A&. A& self! start_inclusive! end_exclusive!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.subrange.? A&. A& self! start_inclusive! end_exclusive!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::add")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (rhs! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type rhs! (TYPE%vstd!seq.Seq. A&. A&))) (has_type (vstd!seq.Seq.add.? A&. A& self! rhs!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.add.? A&. A& self! rhs!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::impl&%0::spec_add")
(assert (fuel_bool_default fuel%vstd!seq.impl&%0.spec_add.))
(assert (=> (fuel_bool fuel%vstd!seq.impl&%0.spec_add.) (forall ((A&. Dcr) (A& Type) (self! Poly) (rhs! Poly)) (! (= (vstd!seq.impl&%0.spec_add.? A&. A& self! rhs!) (vstd!seq.Seq.add.? A&. A& self! rhs!)) :pattern ((vstd!seq.impl&%0.spec_add.? A&. A& self! rhs!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (rhs! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type rhs! (TYPE%vstd!seq.Seq. A&. A&))) (has_type (vstd!seq.impl&%0.spec_add.? A&. A& self! rhs!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.impl&%0.spec_add.? A&. A& self! rhs!)) )))
(set-info :comment ";; Function-Specs alloc::vec::impl&%1::append")
(declare-fun ens%alloc!vec.impl&%1.append. (Dcr Type Dcr Type Poly Poly Poly Poly) Bool)
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type) (pre%vec! Poly) (vec! Poly) (pre%other! Poly) (other! Poly)) (! (= (ens%alloc!vec.impl&%1.append. T&. T& A&. A& pre%vec! vec! pre%other! other!) (and (has_type vec! (TYPE%alloc!vec.Vec. T&. T& A&. A&)) (has_type other! (TYPE%alloc!vec.Vec. T&. T& A&. A&)) (= (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. T&. T& A&. A&) vec!) (vstd!seq.Seq.add.? T&. T& (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. T&. T& A&. A&) pre%vec!) (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. T&. T& A&. A&) pre%other!))))) :pattern ((ens%alloc!vec.impl&%1.append. T&. T& A&. A& pre%vec! vec! pre%other! other!)) )))
(set-info :comment ";; Function-Specs vstd::seq::Seq::update")
(declare-fun req%vstd!seq.Seq.update. (Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%11 Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly) (a! Poly)) (! (= (req%vstd!seq.Seq.update. A&. A& self! i! a!) (=> %%global_location_label%%11 (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& self!))))) :pattern ((req%vstd!seq.Seq.update. A&. A& self! i! a!)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::update")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (i! Poly) (a! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT) (has_type a! A&)) (has_type (vstd!seq.Seq.update.? A&. A& self! i! a!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.update.? A&. A& self! i! a!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::empty")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type)) (! (has_type (vstd!map.impl&%0.empty.? K&. K& V&. V&) (TYPE%vstd!map.Map. K&. K& V&. V&)) :pattern ((vstd!map.impl&%0.empty.? K&. K& V&. V&)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::dom")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) (TYPE%vstd!set.Set. K&. K&))) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& self!)) )))
(set-info :comment ";; Function-Specs vstd::map::impl&%0::index")
(declare-fun req%vstd!map.impl&%0.index. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%12 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (= (req%vstd!map.impl&%0.index. K&. K& V&. V& self! key!) (=> %%global_location_label%%12 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) key!))) :pattern ((req%vstd!map.impl&%0.index. K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::index")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (has_type (vstd!map.impl&%0.index.? K&. K& V&. V& self! key!) V&)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::insert")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly) (value! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&) (has_type value! V&)) (has_type (vstd!map.impl&%0.insert.? K&. K& V&. V& self! key! value!) (TYPE%vstd!map.Map. K&. K& V&. V&))) :pattern ((vstd!map.impl&%0.insert.? K&. K& V&. V& self! key! value!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::remove")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (has_type (vstd!map.impl&%0.remove.? K&. K& V&. V& self! key!) (TYPE%vstd!map.Map. K&. K& V&. V&))) :pattern ((vstd!map.impl&%0.remove.? K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Specs vstd::map::impl&%0::spec_index")
(declare-fun req%vstd!map.impl&%0.spec_index. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%13 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (= (req%vstd!map.impl&%0.spec_index. K&. K& V&. V& self! key!) (=> %%global_location_label%%13 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) key!))) :pattern ((req%vstd!map.impl&%0.spec_index. K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::spec_index")
(assert (fuel_bool_default fuel%vstd!map.impl&%0.spec_index.))
(assert (=> (fuel_bool fuel%vstd!map.impl&%0.spec_index.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (= (vstd!map.impl&%0.spec_index.? K&. K& V&. V& self! key!) (vstd!map.impl&%0.index.? K&. K& V&. V& self! key!)) :pattern ((vstd!map.impl&%0.spec_index.? K&. K& V&. V& self! key!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (key! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (has_type (vstd!map.impl&%0.spec_index.? K&. K& V&. V& self! key!) V&)) :pattern ((vstd!map.impl&%0.spec_index.? K&. K& V&. V& self! key!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::mk_map")
(assert (forall ((A&. Dcr) (A& Type) (V&. Dcr) (V& Type) (F&. Dcr) (F& Type) (self! Poly) (f! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type f! F&)) (has_type (vstd!set.impl&%0.mk_map.? A&. A& V&. V& F&. F& self! f!) (TYPE%vstd!map.Map. A&. A& V&. V&))) :pattern ((vstd!set.impl&%0.mk_map.? A&. A& V&. V& F&. F& self! f!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::new")
(assert (forall ((A&. Dcr) (A& Type) (F&. Dcr) (F& Type) (f! Poly)) (! (=> (has_type f! F&) (has_type (vstd!set.impl&%0.new.? A&. A& F&. F& f!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.new.? A&. A& F&. F& f!)) )))
(set-info :comment ";; Function-Axioms vstd::map::impl&%0::new")
(assert (fuel_bool_default fuel%vstd!map.impl&%0.new.))
(assert (=> (fuel_bool fuel%vstd!map.impl&%0.new.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (impl%2&. Dcr) (impl%2& Type) (impl%3&. Dcr) (impl%3& Type) (fk! Poly) (fv! Poly)) (! (= (vstd!map.impl&%0.new.? K&. K& V&. V& impl%2&. impl%2& impl%3&. impl%3& fk! fv!) (vstd!set.impl&%0.mk_map.? K&. K& V&. V& impl%3&. impl%3& (vstd!set.impl&%0.new.? K&. K& impl%2&. impl%2& fk!) fv!)) :pattern ((vstd!map.impl&%0.new.? K&. K& V&. V& impl%2&. impl%2& impl%3&. impl%3& fk! fv!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (impl%2&. Dcr) (impl%2& Type) (impl%3&. Dcr) (impl%3& Type) (fk! Poly) (fv! Poly)) (! (=> (and (has_type fk! impl%2&) (has_type fv! impl%3&)) (has_type (vstd!map.impl&%0.new.? K&. K& V&. V& impl%2&. impl%2& impl%3&. impl%3& fk! fv!) (TYPE%vstd!map.Map. K&. K& V&. V&))) :pattern ((vstd!map.impl&%0.new.? K&. K& V&. V& impl%2&. impl%2& impl%3&. impl%3& fk! fv!)) )))
(set-info :comment ";; Function-Axioms vstd::map_lib::impl&%0::union_prefer_right")
(assert (fuel_bool_default fuel%vstd!map_lib.impl&%0.union_prefer_right.))
(declare-fun %%lambda%%0 (Dcr Type Poly Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Poly) (k$ Poly)) (! (= (%%apply%%0 (%%lambda%%0 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) k$) (B (or (vstd!set.impl&%0.contains.? %%hole%%0 %%hole%%1 %%hole%%2 k$) (vstd!set.impl&%0.contains.? %%hole%%3 %%hole%%4 %%hole%%5 k$)))) :pattern ((%%apply%%0 (%%lambda%%0 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5) k$)))))
(declare-fun %%lambda%%1 (Dcr Type Poly Dcr Type Dcr Type Poly Dcr Type Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 Dcr) (%%hole%%4 Type) (%%hole%%5 Dcr) (%%hole%%6 Type) (%%hole%%7 Poly) (%%hole%%8 Dcr) (%%hole%%9 Type) (%%hole%%10 Dcr) (%%hole%%11 Type) (%%hole%%12 Poly) (k$ Poly)) (! (= (%%apply%%0 (%%lambda%%1 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) k$) (ite (vstd!set.impl&%0.contains.? %%hole%%0 %%hole%%1 %%hole%%2 k$) (vstd!map.impl&%0.index.? %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 k$) (vstd!map.impl&%0.index.? %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12 k$))) :pattern ((%%apply%%0 (%%lambda%%1 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6 %%hole%%7 %%hole%%8 %%hole%%9 %%hole%%10 %%hole%%11 %%hole%%12) k$)))))
(assert (=> (fuel_bool fuel%vstd!map_lib.impl&%0.union_prefer_right.) (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (m2! Poly)) (! (= (vstd!map_lib.impl&%0.union_prefer_right.? K&. K& V&. V& self! m2!) (vstd!map.impl&%0.new.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& $ BOOL) $ (TYPE%fun%1. K&. K& V&. V&) (Poly%fun%1. (mk_fun (%%lambda%%0 K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& self!) K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)))) (Poly%fun%1. (mk_fun (%%lambda%%1 K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!) K&. K& V&. V& m2! K&. K& V&. V& self!))))) :pattern ((vstd!map_lib.impl&%0.union_prefer_right.? K&. K& V&. V& self! m2!)) ))))
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (self! Poly) (m2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type m2! (TYPE%vstd!map.Map. K&. K& V&. V&))) (has_type (vstd!map_lib.impl&%0.union_prefer_right.? K&. K& V&. V& self! m2!) (TYPE%vstd!map.Map. K&. K& V&. V&))) :pattern ((vstd!map_lib.impl&%0.union_prefer_right.? K&. K& V&. V& self! m2!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_index_decreases_finite")
(declare-fun req%vstd!map.axiom_map_index_decreases_finite. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%14 Bool)
(declare-const %%global_location_label%%15 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (req%vstd!map.axiom_map_index_decreases_finite. K&. K& V&. V& m! key!) (and (=> %%global_location_label%%14 (vstd!set.impl&%0.finite.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!))) (=> %%global_location_label%%15 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!)))) :pattern ((req%vstd!map.axiom_map_index_decreases_finite. K&. K& V&. V& m! key!)) )))
(declare-fun ens%vstd!map.axiom_map_index_decreases_finite. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (ens%vstd!map.axiom_map_index_decreases_finite. K&. K& V&. V& m! key!) (height_lt (height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!)) (height m!))) :pattern ((ens%vstd!map.axiom_map_index_decreases_finite. K&. K& V&. V& m! key!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_index_decreases_finite")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (=> (and (vstd!set.impl&%0.finite.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!)) (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!)) (height_lt (height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!)) (height m!)))) :pattern ((height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!))) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_index_decreases_infinite")
(declare-fun req%vstd!map.axiom_map_index_decreases_infinite. (Dcr Type Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%16 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (req%vstd!map.axiom_map_index_decreases_infinite. K&. K& V&. V& m! key!) (=> %%global_location_label%%16 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((req%vstd!map.axiom_map_index_decreases_infinite. K&. K& V&. V& m! key!)) )))
(declare-fun ens%vstd!map.axiom_map_index_decreases_infinite. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (ens%vstd!map.axiom_map_index_decreases_infinite. K&. K& V&. V& m! key!) (height_lt (height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!)) (height (fun_from_recursive_field m!)))) :pattern ((ens%vstd!map.axiom_map_index_decreases_infinite. K&. K& V&. V& m! key!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_index_decreases_infinite")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!) (height_lt (height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!)) (height (fun_from_recursive_field m!))))) :pattern ((height (vstd!map.impl&%0.index.? K&. K& V&. V& m! key!))) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::empty")
(assert (forall ((A&. Dcr) (A& Type)) (! (has_type (vstd!set.impl&%0.empty.? A&. A&) (TYPE%vstd!set.Set. A&. A&)) :pattern ((vstd!set.impl&%0.empty.? A&. A&)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_empty")
(declare-fun ens%vstd!map.axiom_map_empty. (Dcr Type Dcr Type) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type)) (! (= (ens%vstd!map.axiom_map_empty. K&. K& V&. V&) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.empty.? K&. K& V&. V&)) (vstd!set.impl&%0.empty.? K&. K&))) :pattern ((ens%vstd!map.axiom_map_empty. K&. K& V&. V&)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_empty")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type)) (! (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.empty.? K&. K& V&. V&)) (vstd!set.impl&%0.empty.? K&. K&)) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.empty.? K&. K& V&. V&))) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::insert")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (a! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (has_type (vstd!set.impl&%0.insert.? A&. A& self! a!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.insert.? A&. A& self! a!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_insert_domain")
(declare-fun ens%vstd!map.axiom_map_insert_domain. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly) (value! Poly)) (! (= (ens%vstd!map.axiom_map_insert_domain. K&. K& V&. V& m! key! value!) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!)) (vstd!set.impl&%0.insert.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((ens%vstd!map.axiom_map_insert_domain. K&. K& V&. V& m! key! value!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_insert_domain")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly) (value! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&) (has_type value! V&)) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!)) (vstd!set.impl&%0.insert.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!))) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_insert_same")
(declare-fun ens%vstd!map.axiom_map_insert_same. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly) (value! Poly)) (! (= (ens%vstd!map.axiom_map_insert_same. K&. K& V&. V& m! key! value!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!) key!) value!)) :pattern ((ens%vstd!map.axiom_map_insert_same. K&. K& V&. V& m! key! value!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_insert_same")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly) (value! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&) (has_type value! V&)) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!) key!) value!)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key! value!) key!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_insert_different")
(declare-fun req%vstd!map.axiom_map_insert_different. (Dcr Type Dcr Type Poly Poly Poly Poly) Bool)
(declare-const %%global_location_label%%17 Bool)
(declare-const %%global_location_label%%18 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly) (value! Poly)) (! (= (req%vstd!map.axiom_map_insert_different. K&. K& V&. V& m! key1! key2! value!) (and (=> %%global_location_label%%17 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key1!)) (=> %%global_location_label%%18 (not (= key1! key2!))))) :pattern ((req%vstd!map.axiom_map_insert_different. K&. K& V&. V& m! key1! key2! value!)) )))
(declare-fun ens%vstd!map.axiom_map_insert_different. (Dcr Type Dcr Type Poly Poly Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly) (value! Poly)) (! (= (ens%vstd!map.axiom_map_insert_different. K&. K& V&. V& m! key1! key2! value!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key2! value!) key1!) (vstd!map.impl&%0.index.? K&. K& V&. V& m! key1!))) :pattern ((ens%vstd!map.axiom_map_insert_different. K&. K& V&. V& m! key1! key2! value!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_insert_different")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly) (value! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key1! K&) (has_type key2! K&) (has_type value! V&)) (=> (and (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key1!) (not (= key1! key2!))) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key2! value!) key1!) (vstd!map.impl&%0.index.? K&. K& V&. V& m! key1!)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.insert.? K&. K& V&. V& m! key2! value!) key1!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::remove")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (a! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (has_type (vstd!set.impl&%0.remove.? A&. A& self! a!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.remove.? A&. A& self! a!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_remove_domain")
(declare-fun ens%vstd!map.axiom_map_remove_domain. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (= (ens%vstd!map.axiom_map_remove_domain. K&. K& V&. V& m! key!) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key!)) (vstd!set.impl&%0.remove.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((ens%vstd!map.axiom_map_remove_domain. K&. K& V&. V& m! key!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_remove_domain")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key! K&)) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key!)) (vstd!set.impl&%0.remove.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key!))) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key!))) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_remove_different")
(declare-fun req%vstd!map.axiom_map_remove_different. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%19 Bool)
(declare-const %%global_location_label%%20 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly)) (! (= (req%vstd!map.axiom_map_remove_different. K&. K& V&. V& m! key1! key2!) (and (=> %%global_location_label%%19 (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key1!)) (=> %%global_location_label%%20 (not (= key1! key2!))))) :pattern ((req%vstd!map.axiom_map_remove_different. K&. K& V&. V& m! key1! key2!)) )))
(declare-fun ens%vstd!map.axiom_map_remove_different. (Dcr Type Dcr Type Poly Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly)) (! (= (ens%vstd!map.axiom_map_remove_different. K&. K& V&. V& m! key1! key2!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key2!) key1!) (vstd!map.impl&%0.index.? K&. K& V&. V& m! key1!))) :pattern ((ens%vstd!map.axiom_map_remove_different. K&. K& V&. V& m! key1! key2!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_remove_different")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m! Poly) (key1! Poly) (key2! Poly)) (! (=> (and (has_type m! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type key1! K&) (has_type key2! K&)) (=> (and (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m!) key1!) (not (= key1! key2!))) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key2!) key1!) (vstd!map.impl&%0.index.? K&. K& V&. V& m! key1!)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!map.impl&%0.remove.? K&. K& V&. V& m! key2!) key1!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_ext_equal")
(declare-fun ens%vstd!map.axiom_map_ext_equal. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (= (ens%vstd!map.axiom_map_ext_equal. K&. K& V&. V& m1! m2!) (= (ext_eq false (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!) (and (ext_eq false (TYPE%vstd!set.Set. K&. K&) (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)) (forall ((k$ Poly)) (! (=> (has_type k$ K&) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) k$) (= (vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$) (vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)) ))))) :pattern ((ens%vstd!map.axiom_map_ext_equal. K&. K& V&. V& m1! m2!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_ext_equal")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (=> (and (has_type m1! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type m2! (TYPE%vstd!map.Map. K&. K& V&. V&))) (= (ext_eq false (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!) (and (ext_eq false (TYPE%vstd!set.Set. K&. K&) (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)) (forall ((k$ Poly)) (! (=> (has_type k$ K&) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) k$) (= (vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$) (vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)) ))))) :pattern ((ext_eq false (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!)) )))
(set-info :comment ";; Function-Specs vstd::map::axiom_map_ext_equal_deep")
(declare-fun ens%vstd!map.axiom_map_ext_equal_deep. (Dcr Type Dcr Type Poly Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (= (ens%vstd!map.axiom_map_ext_equal_deep. K&. K& V&. V& m1! m2!) (= (ext_eq true (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!) (and (ext_eq true (TYPE%vstd!set.Set. K&. K&) (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)) (forall ((k$ Poly)) (! (=> (has_type k$ K&) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) k$) (ext_eq true V& (vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$) (vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)) ))))) :pattern ((ens%vstd!map.axiom_map_ext_equal_deep. K&. K& V&. V& m1! m2!)) )))
(set-info :comment ";; Broadcast vstd::map::axiom_map_ext_equal_deep")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (m1! Poly) (m2! Poly)) (! (=> (and (has_type m1! (TYPE%vstd!map.Map. K&. K& V&. V&)) (has_type m2! (TYPE%vstd!map.Map. K&. K& V&. V&))) (= (ext_eq true (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!) (and (ext_eq true (TYPE%vstd!set.Set. K&. K&) (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) (vstd!map.impl&%0.dom.? K&. K& V&. V& m2!)) (forall ((k$ Poly)) (! (=> (has_type k$ K&) (=> (vstd!set.impl&%0.contains.? K&. K& (vstd!map.impl&%0.dom.? K&. K& V&. V& m1!) k$) (ext_eq true V& (vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$) (vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m1! k$)) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& m2! k$)) ))))) :pattern ((ext_eq true (TYPE%vstd!map.Map. K&. K& V&. V&) m1! m2!)) )))
(set-info :comment ";; Function-Axioms vstd::pervasive::arbitrary")
(assert (forall ((A&. Dcr) (A& Type)) (! (has_type (vstd!pervasive.arbitrary.? A&. A&) A&) :pattern ((vstd!pervasive.arbitrary.? A&. A&)) )))
(set-info :comment ";; Function-Axioms vstd::seq::Seq::new")
(assert (forall ((A&. Dcr) (A& Type) (impl%1&. Dcr) (impl%1& Type) (len! Poly) (f! Poly)) (! (=> (and (has_type len! NAT) (has_type f! impl%1&)) (has_type (vstd!seq.Seq.new.? A&. A& impl%1&. impl%1& len! f!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq.Seq.new.? A&. A& impl%1&. impl%1& len! f!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_index_decreases")
(declare-fun req%vstd!seq.axiom_seq_index_decreases. (Dcr Type Poly Int) Bool)
(declare-const %%global_location_label%%21 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_index_decreases. A&. A& s! i!) (=> %%global_location_label%%21 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_index_decreases. A&. A& s! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_index_decreases. (Dcr Type Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_index_decreases. A&. A& s! i!) (height_lt (height (vstd!seq.Seq.index.? A&. A& s! (I i!))) (height s!))) :pattern ((ens%vstd!seq.axiom_seq_index_decreases. A&. A& s! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_index_decreases")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s!))) (height_lt (height (vstd!seq.Seq.index.? A&. A& s! i!)) (height s!)))) :pattern ((height (vstd!seq.Seq.index.? A&. A& s! i!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_empty")
(declare-fun ens%vstd!seq.axiom_seq_empty. (Dcr Type) Bool)
(assert (forall ((A&. Dcr) (A& Type)) (! (= (ens%vstd!seq.axiom_seq_empty. A&. A&) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.empty.? A&. A&)) 0)) :pattern ((ens%vstd!seq.axiom_seq_empty. A&. A&)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_empty")
(assert (forall ((A&. Dcr) (A& Type)) (! (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.empty.? A&. A&)) 0) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.empty.? A&. A&))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_new_len")
(declare-fun ens%vstd!seq.axiom_seq_new_len. (Dcr Type Int %%Function%%) Bool)
(assert (forall ((A&. Dcr) (A& Type) (len! Int) (f! %%Function%%)) (! (= (ens%vstd!seq.axiom_seq_new_len. A&. A& len! f!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) (I len!) (Poly%fun%1. f!))) len!)) :pattern ((ens%vstd!seq.axiom_seq_new_len. A&. A& len! f!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_new_len")
(assert (forall ((A&. Dcr) (A& Type) (len! Poly) (f! Poly)) (! (=> (and (has_type len! NAT) (has_type f! (TYPE%fun%1. $ INT A&. A&))) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) len! f!)) (%I len!))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) len! f!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_new_index")
(declare-fun req%vstd!seq.axiom_seq_new_index. (Dcr Type Int %%Function%% Int) Bool)
(declare-const %%global_location_label%%22 Bool)
(assert (forall ((A&. Dcr) (A& Type) (len! Int) (f! %%Function%%) (i! Int)) (! (= (req%vstd!seq.axiom_seq_new_index. A&. A& len! f! i!) (=> %%global_location_label%%22 (and (<= 0 i!) (< i! len!)))) :pattern ((req%vstd!seq.axiom_seq_new_index. A&. A& len! f! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_new_index. (Dcr Type Int %%Function%% Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (len! Int) (f! %%Function%%) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_new_index. A&. A& len! f! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) (I len!) (Poly%fun%1. f!)) (I i!)) (%%apply%%0 f! (I i!)))) :pattern ((ens%vstd!seq.axiom_seq_new_index. A&. A& len! f! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_new_index")
(assert (forall ((A&. Dcr) (A& Type) (len! Poly) (f! Poly) (i! Poly)) (! (=> (and (has_type len! NAT) (has_type f! (TYPE%fun%1. $ INT A&. A&)) (has_type i! INT)) (=> (and (<= 0 (%I i!)) (< (%I i!) (%I len!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) len! f!) i!) (%%apply%%0 (%Poly%fun%1. f!) i!)))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.new.? A&. A& $ (TYPE%fun%1. $ INT A&. A&) len! f!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_push_len")
(declare-fun ens%vstd!seq.axiom_seq_push_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!seq.axiom_seq_push_len. A&. A& s! a!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!)) (nClip (Add (vstd!seq.Seq.len.? A&. A& s!) 1)))) :pattern ((ens%vstd!seq.axiom_seq_push_len. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_push_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type a! A&)) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!)) (nClip (Add (vstd!seq.Seq.len.? A&. A& s!) 1)))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_push_index_same")
(declare-fun req%vstd!seq.axiom_seq_push_index_same. (Dcr Type Poly Poly Int) Bool)
(declare-const %%global_location_label%%23 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_push_index_same. A&. A& s! a! i!) (=> %%global_location_label%%23 (= i! (vstd!seq.Seq.len.? A&. A& s!)))) :pattern ((req%vstd!seq.axiom_seq_push_index_same. A&. A& s! a! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_push_index_same. (Dcr Type Poly Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_push_index_same. A&. A& s! a! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) (I i!)) a!)) :pattern ((ens%vstd!seq.axiom_seq_push_index_same. A&. A& s! a! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_push_index_same")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type a! A&) (has_type i! INT)) (=> (= (%I i!) (vstd!seq.Seq.len.? A&. A& s!)) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) i!) a!))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_push_index_different")
(declare-fun req%vstd!seq.axiom_seq_push_index_different. (Dcr Type Poly Poly Int) Bool)
(declare-const %%global_location_label%%24 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_push_index_different. A&. A& s! a! i!) (=> %%global_location_label%%24 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_push_index_different. A&. A& s! a! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_push_index_different. (Dcr Type Poly Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_push_index_different. A&. A& s! a! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) (I i!)) (vstd!seq.Seq.index.? A&. A& s! (I i!)))) :pattern ((ens%vstd!seq.axiom_seq_push_index_different. A&. A& s! a! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_push_index_different")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly) (i! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type a! A&) (has_type i! INT)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) i!) (vstd!seq.Seq.index.? A&. A& s! i!)))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.push.? A&. A& s! a!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_update_len")
(declare-fun req%vstd!seq.axiom_seq_update_len. (Dcr Type Poly Int Poly) Bool)
(declare-const %%global_location_label%%25 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int) (a! Poly)) (! (= (req%vstd!seq.axiom_seq_update_len. A&. A& s! i! a!) (=> %%global_location_label%%25 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_update_len. A&. A& s! i! a!)) )))
(declare-fun ens%vstd!seq.axiom_seq_update_len. (Dcr Type Poly Int Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int) (a! Poly)) (! (= (ens%vstd!seq.axiom_seq_update_len. A&. A& s! i! a!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.update.? A&. A& s! (I i!) a!)) (vstd!seq.Seq.len.? A&. A& s!))) :pattern ((ens%vstd!seq.axiom_seq_update_len. A&. A& s! i! a!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_update_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT) (has_type a! A&)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s!))) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i! a!)) (vstd!seq.Seq.len.? A&. A& s!)))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i! a!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_update_same")
(declare-fun req%vstd!seq.axiom_seq_update_same. (Dcr Type Poly Int Poly) Bool)
(declare-const %%global_location_label%%26 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int) (a! Poly)) (! (= (req%vstd!seq.axiom_seq_update_same. A&. A& s! i! a!) (=> %%global_location_label%%26 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_update_same. A&. A& s! i! a!)) )))
(declare-fun ens%vstd!seq.axiom_seq_update_same. (Dcr Type Poly Int Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Int) (a! Poly)) (! (= (ens%vstd!seq.axiom_seq_update_same. A&. A& s! i! a!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! (I i!) a!) (I i!)) a!)) :pattern ((ens%vstd!seq.axiom_seq_update_same. A&. A& s! i! a!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_update_same")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT) (has_type a! A&)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i! a!) i!) a!))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i! a!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_update_different")
(declare-fun req%vstd!seq.axiom_seq_update_different. (Dcr Type Poly Int Int Poly) Bool)
(declare-const %%global_location_label%%27 Bool)
(declare-const %%global_location_label%%28 Bool)
(declare-const %%global_location_label%%29 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i1! Int) (i2! Int) (a! Poly)) (! (= (req%vstd!seq.axiom_seq_update_different. A&. A& s! i1! i2! a!) (and (=> %%global_location_label%%27 (and (<= 0 i1!) (< i1! (vstd!seq.Seq.len.? A&. A& s!)))) (=> %%global_location_label%%28 (and (<= 0 i2!) (< i2! (vstd!seq.Seq.len.? A&. A& s!)))) (=> %%global_location_label%%29 (not (= i1! i2!))))) :pattern ((req%vstd!seq.axiom_seq_update_different. A&. A& s! i1! i2! a!)) )))
(declare-fun ens%vstd!seq.axiom_seq_update_different. (Dcr Type Poly Int Int Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i1! Int) (i2! Int) (a! Poly)) (! (= (ens%vstd!seq.axiom_seq_update_different. A&. A& s! i1! i2! a!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! (I i2!) a!) (I i1!)) (vstd!seq.Seq.index.? A&. A& s! (I i1!)))) :pattern ((ens%vstd!seq.axiom_seq_update_different. A&. A& s! i1! i2! a!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_update_different")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (i1! Poly) (i2! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i1! INT) (has_type i2! INT) (has_type a! A&)) (=> (and (and (and (<= 0 (%I i1!)) (< (%I i1!) (vstd!seq.Seq.len.? A&. A& s!))) (and (<= 0 (%I i2!)) (< (%I i2!) (vstd!seq.Seq.len.? A&. A& s!)))) (not (= i1! i2!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i2! a!) i1!) (vstd!seq.Seq.index.? A&. A& s! i1!)))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.update.? A&. A& s! i2! a!) i1!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_ext_equal")
(declare-fun ens%vstd!seq.axiom_seq_ext_equal. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!seq.axiom_seq_ext_equal. A&. A& s1! s2!) (= (ext_eq false (TYPE%vstd!seq.Seq. A&. A&) s1! s2!) (and (= (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!)) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& s1!))) (= (vstd!seq.Seq.index.? A&. A& s1! i$) (vstd!seq.Seq.index.? A&. A& s2! i$)))) :pattern ((vstd!seq.Seq.index.? A&. A& s1! i$)) :pattern ((vstd!seq.Seq.index.? A&. A& s2! i$)) ))))) :pattern ((ens%vstd!seq.axiom_seq_ext_equal. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_ext_equal")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&))) (= (ext_eq false (TYPE%vstd!seq.Seq. A&. A&) s1! s2!) (and (= (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!)) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& s1!))) (= (vstd!seq.Seq.index.? A&. A& s1! i$) (vstd!seq.Seq.index.? A&. A& s2! i$)))) :pattern ((vstd!seq.Seq.index.? A&. A& s1! i$)) :pattern ((vstd!seq.Seq.index.? A&. A& s2! i$)) ))))) :pattern ((ext_eq false (TYPE%vstd!seq.Seq. A&. A&) s1! s2!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_ext_equal_deep")
(declare-fun ens%vstd!seq.axiom_seq_ext_equal_deep. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!seq.axiom_seq_ext_equal_deep. A&. A& s1! s2!) (= (ext_eq true (TYPE%vstd!seq.Seq. A&. A&) s1! s2!) (and (= (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!)) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& s1!))) (ext_eq true A& (vstd!seq.Seq.index.? A&. A& s1! i$) (vstd!seq.Seq.index.? A&. A& s2! i$)))) :pattern ((vstd!seq.Seq.index.? A&. A& s1! i$)) :pattern ((vstd!seq.Seq.index.? A&. A& s2! i$)) ))))) :pattern ((ens%vstd!seq.axiom_seq_ext_equal_deep. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_ext_equal_deep")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&))) (= (ext_eq true (TYPE%vstd!seq.Seq. A&. A&) s1! s2!) (and (= (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!)) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& s1!))) (ext_eq true A& (vstd!seq.Seq.index.? A&. A& s1! i$) (vstd!seq.Seq.index.? A&. A& s2! i$)))) :pattern ((vstd!seq.Seq.index.? A&. A& s1! i$)) :pattern ((vstd!seq.Seq.index.? A&. A& s2! i$)) ))))) :pattern ((ext_eq true (TYPE%vstd!seq.Seq. A&. A&) s1! s2!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_subrange_len")
(declare-fun req%vstd!seq.axiom_seq_subrange_len. (Dcr Type Poly Int Int) Bool)
(declare-const %%global_location_label%%30 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Int) (k! Int)) (! (= (req%vstd!seq.axiom_seq_subrange_len. A&. A& s! j! k!) (=> %%global_location_label%%30 (and (and (<= 0 j!) (<= j! k!)) (<= k! (vstd!seq.Seq.len.? A&. A& s!))))) :pattern ((req%vstd!seq.axiom_seq_subrange_len. A&. A& s! j! k!)) )))
(declare-fun ens%vstd!seq.axiom_seq_subrange_len. (Dcr Type Poly Int Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Int) (k! Int)) (! (= (ens%vstd!seq.axiom_seq_subrange_len. A&. A& s! j! k!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! (I j!) (I k!))) (Sub k! j!))) :pattern ((ens%vstd!seq.axiom_seq_subrange_len. A&. A& s! j! k!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_subrange_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Poly) (k! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type j! INT) (has_type k! INT)) (=> (and (and (<= 0 (%I j!)) (<= (%I j!) (%I k!))) (<= (%I k!) (vstd!seq.Seq.len.? A&. A& s!))) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! j! k!)) (Sub (%I k!) (%I j!))))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! j! k!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_subrange_index")
(declare-fun req%vstd!seq.axiom_seq_subrange_index. (Dcr Type Poly Int Int Int) Bool)
(declare-const %%global_location_label%%31 Bool)
(declare-const %%global_location_label%%32 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Int) (k! Int) (i! Int)) (! (= (req%vstd!seq.axiom_seq_subrange_index. A&. A& s! j! k! i!) (and (=> %%global_location_label%%31 (and (and (<= 0 j!) (<= j! k!)) (<= k! (vstd!seq.Seq.len.? A&. A& s!)))) (=> %%global_location_label%%32 (and (<= 0 i!) (< i! (Sub k! j!)))))) :pattern ((req%vstd!seq.axiom_seq_subrange_index. A&. A& s! j! k! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_subrange_index. (Dcr Type Poly Int Int Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Int) (k! Int) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_subrange_index. A&. A& s! j! k! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! (I j!) (I k!)) (I i!)) (vstd!seq.Seq.index.? A&. A& s! (I (Add i! j!))))) :pattern ((ens%vstd!seq.axiom_seq_subrange_index. A&. A& s! j! k! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_subrange_index")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (j! Poly) (k! Poly) (i! Poly)) (! (=> (and (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type j! INT) (has_type k! INT) (has_type i! INT)) (=> (and (and (and (<= 0 (%I j!)) (<= (%I j!) (%I k!))) (<= (%I k!) (vstd!seq.Seq.len.? A&. A& s!))) (and (<= 0 (%I i!)) (< (%I i!) (Sub (%I k!) (%I j!))))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! j! k!) i!) (vstd!seq.Seq.index.? A&. A& s! (I (Add (%I i!) (%I j!))))))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.subrange.? A&. A& s! j! k!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_add_len")
(declare-fun ens%vstd!seq.axiom_seq_add_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!seq.axiom_seq_add_len. A&. A& s1! s2!) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!)) (nClip (Add (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!))))) :pattern ((ens%vstd!seq.axiom_seq_add_len. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_add_len")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&))) (= (vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!)) (nClip (Add (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!))))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!))) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_add_index1")
(declare-fun req%vstd!seq.axiom_seq_add_index1. (Dcr Type Poly Poly Int) Bool)
(declare-const %%global_location_label%%33 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_add_index1. A&. A& s1! s2! i!) (=> %%global_location_label%%33 (and (<= 0 i!) (< i! (vstd!seq.Seq.len.? A&. A& s1!))))) :pattern ((req%vstd!seq.axiom_seq_add_index1. A&. A& s1! s2! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_add_index1. (Dcr Type Poly Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_add_index1. A&. A& s1! s2! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) (I i!)) (vstd!seq.Seq.index.? A&. A& s1! (I i!)))) :pattern ((ens%vstd!seq.axiom_seq_add_index1. A&. A& s1! s2! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_add_index1")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (=> (and (<= 0 (%I i!)) (< (%I i!) (vstd!seq.Seq.len.? A&. A& s1!))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) i!) (vstd!seq.Seq.index.? A&. A& s1! i!)))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) i!)) )))
(set-info :comment ";; Function-Specs vstd::seq::axiom_seq_add_index2")
(declare-fun req%vstd!seq.axiom_seq_add_index2. (Dcr Type Poly Poly Int) Bool)
(declare-const %%global_location_label%%34 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Int)) (! (= (req%vstd!seq.axiom_seq_add_index2. A&. A& s1! s2! i!) (=> %%global_location_label%%34 (and (<= (vstd!seq.Seq.len.? A&. A& s1!) i!) (< i! (nClip (Add (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!))))))) :pattern ((req%vstd!seq.axiom_seq_add_index2. A&. A& s1! s2! i!)) )))
(declare-fun ens%vstd!seq.axiom_seq_add_index2. (Dcr Type Poly Poly Int) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Int)) (! (= (ens%vstd!seq.axiom_seq_add_index2. A&. A& s1! s2! i!) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) (I i!)) (vstd!seq.Seq.index.? A&. A& s2! (I (Sub i! (vstd!seq.Seq.len.? A&. A& s1!)))))) :pattern ((ens%vstd!seq.axiom_seq_add_index2. A&. A& s1! s2! i!)) )))
(set-info :comment ";; Broadcast vstd::seq::axiom_seq_add_index2")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (i! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!seq.Seq. A&. A&)) (has_type s2! (TYPE%vstd!seq.Seq. A&. A&)) (has_type i! INT)) (=> (and (<= (vstd!seq.Seq.len.? A&. A& s1!) (%I i!)) (< (%I i!) (nClip (Add (vstd!seq.Seq.len.? A&. A& s1!) (vstd!seq.Seq.len.? A&. A& s2!))))) (= (vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) i!) (vstd!seq.Seq.index.? A&. A& s2! (I (Sub (%I i!) (vstd!seq.Seq.len.? A&. A& s1!))))))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq.Seq.add.? A&. A& s1! s2!) i!)) )))
(set-info :comment ";; Function-Axioms vstd::seq_lib::impl&%0::filter")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (pred! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type pred! (TYPE%fun%1. A&. A& $ BOOL))) (has_type (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!)) )))
(set-info :comment ";; Function-Axioms vstd::seq_lib::impl&%0::contains")
(assert (fuel_bool_default fuel%vstd!seq_lib.impl&%0.contains.))
(assert (=> (fuel_bool fuel%vstd!seq_lib.impl&%0.contains.) (forall ((A&. Dcr) (A& Type) (self! Poly) (needle! Poly)) (! (= (vstd!seq_lib.impl&%0.contains.? A&. A& self! needle!) (exists ((i$ Poly)) (! (and (has_type i$ INT) (and (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& self!))) (= (vstd!seq.Seq.index.? A&. A& self! i$) needle!))) :pattern ((vstd!seq.Seq.index.? A&. A& self! i$)) ))) :pattern ((vstd!seq_lib.impl&%0.contains.? A&. A& self! needle!)) ))))
(set-info :comment ";; Function-Specs vstd::seq_lib::impl&%0::filter_lemma_broadcast")
(declare-fun ens%vstd!seq_lib.impl&%0.filter_lemma_broadcast. (Dcr Type Poly %%Function%%) Bool)
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (pred! %%Function%%)) (! (= (ens%vstd!seq_lib.impl&%0.filter_lemma_broadcast. A&. A& self! pred!) (and (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!))))) (and (%B (%%apply%%0 pred! (vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) i$))) (vstd!seq_lib.impl&%0.contains.? A&. A& self! (vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) i$))))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) i$)) )) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& self!))) (%B (%%apply%%0 pred! (vstd!seq.Seq.index.? A&. A& self! i$)))) (vstd!seq_lib.impl&%0.contains.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) (vstd!seq.Seq.index.? A&. A& self! i$)))) :pattern ((vstd!seq_lib.impl&%0.contains.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!)) (vstd!seq.Seq.index.? A&. A& self! i$))) )) (<= (vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! (Poly%fun%1. pred!))) (vstd!seq.Seq.len.? A&. A& self!)))) :pattern ((ens%vstd!seq_lib.impl&%0.filter_lemma_broadcast. A&. A& self! pred!)) )))
(set-info :comment ";; Broadcast vstd::seq_lib::impl&%0::filter_lemma_broadcast")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (pred! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type pred! (TYPE%fun%1. A&. A& $ BOOL))) (and (and (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!)))) (and (%B (%%apply%%0 (%Poly%fun%1. pred!) (vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) i$))) (vstd!seq_lib.impl&%0.contains.? A&. A& self! (vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) i$))))) :pattern ((vstd!seq.Seq.index.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) i$)) )) (forall ((i$ Poly)) (! (=> (has_type i$ INT) (=> (and (and (<= 0 (%I i$)) (< (%I i$) (vstd!seq.Seq.len.? A&. A& self!))) (%B (%%apply%%0 (%Poly%fun%1. pred!) (vstd!seq.Seq.index.? A&. A& self! i$)))) (vstd!seq_lib.impl&%0.contains.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) (vstd!seq.Seq.index.? A&. A& self! i$)))) :pattern ((vstd!seq_lib.impl&%0.contains.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!) (vstd!seq.Seq.index.? A&. A& self! i$))) ))) (<= (vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!)) (vstd!seq.Seq.len.? A&. A& self!)))) :pattern ((vstd!seq.Seq.len.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& self! pred!))) )))
(set-info :comment ";; Function-Specs vstd::seq_lib::impl&%0::filter_distributes_over_add_broacast")
(declare-fun ens%vstd!seq_lib.impl&%0.filter_distributes_over_add_broacast. (Dcr Type Poly Poly %%Function%%) Bool)
(assert (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly) (pred! %%Function%%)) (! (= (ens%vstd!seq_lib.impl&%0.filter_distributes_over_add_broacast. A&. A& a! b! pred!) (= (vstd!seq_lib.impl&%0.filter.? A&. A& (vstd!seq.Seq.add.? A&. A& a! b!) (Poly%fun%1. pred!)) (vstd!seq.Seq.add.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& a! (Poly%fun%1. pred!)) (vstd!seq_lib.impl&%0.filter.? A&. A& b! (Poly%fun%1. pred!))))) :pattern ((ens%vstd!seq_lib.impl&%0.filter_distributes_over_add_broacast. A&. A& a! b! pred!)) )))
(set-info :comment ";; Broadcast vstd::seq_lib::impl&%0::filter_distributes_over_add_broacast")
(assert (forall ((A&. Dcr) (A& Type) (a! Poly) (b! Poly) (pred! Poly)) (! (=> (and (has_type a! (TYPE%vstd!seq.Seq. A&. A&)) (has_type b! (TYPE%vstd!seq.Seq. A&. A&)) (has_type pred! (TYPE%fun%1. A&. A& $ BOOL))) (= (vstd!seq_lib.impl&%0.filter.? A&. A& (vstd!seq.Seq.add.? A&. A& a! b!) pred!) (vstd!seq.Seq.add.? A&. A& (vstd!seq_lib.impl&%0.filter.? A&. A& a! pred!) (vstd!seq_lib.impl&%0.filter.? A&. A& b! pred!)))) :pattern ((vstd!seq_lib.impl&%0.filter.? A&. A& (vstd!seq.Seq.add.? A&. A& a! b!) pred!)) )))
(set-info :comment ";; Function-Axioms vstd::seq_lib::impl&%0::to_set")
(assert (fuel_bool_default fuel%vstd!seq_lib.impl&%0.to_set.))
(declare-fun %%lambda%%2 (Dcr Type Poly) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (a$ Poly)) (! (= (%%apply%%0 (%%lambda%%2 %%hole%%0 %%hole%%1 %%hole%%2) a$) (B (vstd!seq_lib.impl&%0.contains.? %%hole%%0 %%hole%%1 %%hole%%2 a$))) :pattern ((%%apply%%0 (%%lambda%%2 %%hole%%0 %%hole%%1 %%hole%%2) a$)))))
(assert (=> (fuel_bool fuel%vstd!seq_lib.impl&%0.to_set.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!seq_lib.impl&%0.to_set.? A&. A& self!) (vstd!set.impl&%0.new.? A&. A& $ (TYPE%fun%1. A&. A& $ BOOL) (Poly%fun%1. (mk_fun (%%lambda%%2 A&. A& self!))))) :pattern ((vstd!seq_lib.impl&%0.to_set.? A&. A& self!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type (vstd!seq_lib.impl&%0.to_set.? A&. A& self!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!seq_lib.impl&%0.to_set.? A&. A& self!)) )))
(set-info :comment ";; Function-Specs vstd::seq_lib::seq_to_set_is_finite_broadcast")
(declare-fun ens%vstd!seq_lib.seq_to_set_is_finite_broadcast. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (seq! Poly)) (! (= (ens%vstd!seq_lib.seq_to_set_is_finite_broadcast. A&. A& seq!) (vstd!set.impl&%0.finite.? A&. A& (vstd!seq_lib.impl&%0.to_set.? A&. A& seq!))) :pattern ((ens%vstd!seq_lib.seq_to_set_is_finite_broadcast. A&. A& seq!)) )))
(set-info :comment ";; Broadcast vstd::seq_lib::seq_to_set_is_finite_broadcast")
(assert (forall ((A&. Dcr) (A& Type) (seq! Poly)) (! (=> (has_type seq! (TYPE%vstd!seq.Seq. A&. A&)) (vstd!set.impl&%0.finite.? A&. A& (vstd!seq_lib.impl&%0.to_set.? A&. A& seq!))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!seq_lib.impl&%0.to_set.? A&. A& seq!))) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::union")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (s2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (has_type (vstd!set.impl&%0.union.? A&. A& self! s2!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.union.? A&. A& self! s2!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::intersect")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (s2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (has_type (vstd!set.impl&%0.intersect.? A&. A& self! s2!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.intersect.? A&. A& self! s2!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::difference")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly) (s2! Poly)) (! (=> (and (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (has_type (vstd!set.impl&%0.difference.? A&. A& self! s2!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.difference.? A&. A& self! s2!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::complement")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type (vstd!set.impl&%0.complement.? A&. A& self!) (TYPE%vstd!set.Set. A&. A&))) :pattern ((vstd!set.impl&%0.complement.? A&. A& self!)) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::len")
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!set.Set. A&. A&)) (<= 0 (vstd!set.impl&%0.len.? A&. A& self!))) :pattern ((vstd!set.impl&%0.len.? A&. A& self!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_empty")
(declare-fun ens%vstd!set.axiom_set_empty. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (a! Poly)) (! (= (ens%vstd!set.axiom_set_empty. A&. A& a!) (not (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.empty.? A&. A&) a!))) :pattern ((ens%vstd!set.axiom_set_empty. A&. A& a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_empty")
(assert (forall ((A&. Dcr) (A& Type) (a! Poly)) (! (=> (has_type a! A&) (not (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.empty.? A&. A&) a!))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.empty.? A&. A&) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_new")
(declare-fun ens%vstd!set.axiom_set_new. (Dcr Type %%Function%% Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (f! %%Function%%) (a! Poly)) (! (= (ens%vstd!set.axiom_set_new. A&. A& f! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.new.? A&. A& $ (TYPE%fun%1. A&. A& $ BOOL) (Poly%fun%1. f!)) a!) (%B (%%apply%%0 f! a!)))) :pattern ((ens%vstd!set.axiom_set_new. A&. A& f! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_new")
(assert (forall ((A&. Dcr) (A& Type) (f! Poly) (a! Poly)) (! (=> (and (has_type f! (TYPE%fun%1. A&. A& $ BOOL)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.new.? A&. A& $ (TYPE%fun%1. A&. A& $ BOOL) f!) a!) (%B (%%apply%%0 (%Poly%fun%1. f!) a!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.new.? A&. A& $ (TYPE%fun%1. A&. A& $ BOOL) f!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_insert_same")
(declare-fun ens%vstd!set.axiom_set_insert_same. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_insert_same. A&. A& s! a!) (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!) a!)) :pattern ((ens%vstd!set.axiom_set_insert_same. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_insert_same")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!) a!)) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_insert_different")
(declare-fun req%vstd!set.axiom_set_insert_different. (Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%35 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (= (req%vstd!set.axiom_set_insert_different. A&. A& s! a1! a2!) (=> %%global_location_label%%35 (not (= a1! a2!)))) :pattern ((req%vstd!set.axiom_set_insert_different. A&. A& s! a1! a2!)) )))
(declare-fun ens%vstd!set.axiom_set_insert_different. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (= (ens%vstd!set.axiom_set_insert_different. A&. A& s! a1! a2!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a2!) a1!) (vstd!set.impl&%0.contains.? A&. A& s! a1!))) :pattern ((ens%vstd!set.axiom_set_insert_different. A&. A& s! a1! a2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_insert_different")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a1! A&) (has_type a2! A&)) (=> (not (= a1! a2!)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a2!) a1!) (vstd!set.impl&%0.contains.? A&. A& s! a1!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a2!) a1!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_same")
(declare-fun ens%vstd!set.axiom_set_remove_same. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_remove_same. A&. A& s! a!) (not (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!))) :pattern ((ens%vstd!set.axiom_set_remove_same. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_same")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (not (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_insert")
(declare-fun req%vstd!set.axiom_set_remove_insert. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%36 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_remove_insert. A&. A& s! a!) (=> %%global_location_label%%36 (vstd!set.impl&%0.contains.? A&. A& s! a!))) :pattern ((req%vstd!set.axiom_set_remove_insert. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_remove_insert. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_remove_insert. A&. A& s! a!) (= (vstd!set.impl&%0.insert.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!) s!)) :pattern ((ens%vstd!set.axiom_set_remove_insert. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_insert")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.contains.? A&. A& s! a!) (= (vstd!set.impl&%0.insert.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!) a!) s!))) :pattern ((vstd!set.impl&%0.remove.? A&. A& s! a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_different")
(declare-fun req%vstd!set.axiom_set_remove_different. (Dcr Type Poly Poly Poly) Bool)
(declare-const %%global_location_label%%37 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (= (req%vstd!set.axiom_set_remove_different. A&. A& s! a1! a2!) (=> %%global_location_label%%37 (not (= a1! a2!)))) :pattern ((req%vstd!set.axiom_set_remove_different. A&. A& s! a1! a2!)) )))
(declare-fun ens%vstd!set.axiom_set_remove_different. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (= (ens%vstd!set.axiom_set_remove_different. A&. A& s! a1! a2!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a2!) a1!) (vstd!set.impl&%0.contains.? A&. A& s! a1!))) :pattern ((ens%vstd!set.axiom_set_remove_different. A&. A& s! a1! a2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_different")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a1! Poly) (a2! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a1! A&) (has_type a2! A&)) (=> (not (= a1! a2!)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a2!) a1!) (vstd!set.impl&%0.contains.? A&. A& s! a1!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a2!) a1!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_union")
(declare-fun ens%vstd!set.axiom_set_union. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_union. A&. A& s1! s2! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!) a!) (or (vstd!set.impl&%0.contains.? A&. A& s1! a!) (vstd!set.impl&%0.contains.? A&. A& s2! a!)))) :pattern ((ens%vstd!set.axiom_set_union. A&. A& s1! s2! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_union")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!) a!) (or (vstd!set.impl&%0.contains.? A&. A& s1! a!) (vstd!set.impl&%0.contains.? A&. A& s2! a!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_intersect")
(declare-fun ens%vstd!set.axiom_set_intersect. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_intersect. A&. A& s1! s2! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!) a!) (and (vstd!set.impl&%0.contains.? A&. A& s1! a!) (vstd!set.impl&%0.contains.? A&. A& s2! a!)))) :pattern ((ens%vstd!set.axiom_set_intersect. A&. A& s1! s2! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_intersect")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!) a!) (and (vstd!set.impl&%0.contains.? A&. A& s1! a!) (vstd!set.impl&%0.contains.? A&. A& s2! a!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_difference")
(declare-fun ens%vstd!set.axiom_set_difference. (Dcr Type Poly Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_difference. A&. A& s1! s2! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!) a!) (and (vstd!set.impl&%0.contains.? A&. A& s1! a!) (not (vstd!set.impl&%0.contains.? A&. A& s2! a!))))) :pattern ((ens%vstd!set.axiom_set_difference. A&. A& s1! s2! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_difference")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly) (a! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!) a!) (and (vstd!set.impl&%0.contains.? A&. A& s1! a!) (not (vstd!set.impl&%0.contains.? A&. A& s2! a!))))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_complement")
(declare-fun ens%vstd!set.axiom_set_complement. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_complement. A&. A& s! a!) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.complement.? A&. A& s!) a!) (not (vstd!set.impl&%0.contains.? A&. A& s! a!)))) :pattern ((ens%vstd!set.axiom_set_complement. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_complement")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (= (vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.complement.? A&. A& s!) a!) (not (vstd!set.impl&%0.contains.? A&. A& s! a!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& (vstd!set.impl&%0.complement.? A&. A& s!) a!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_ext_equal")
(declare-fun ens%vstd!set.axiom_set_ext_equal. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_ext_equal. A&. A& s1! s2!) (= (ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!) (forall ((a$ Poly)) (! (=> (has_type a$ A&) (= (vstd!set.impl&%0.contains.? A&. A& s1! a$) (vstd!set.impl&%0.contains.? A&. A& s2! a$))) :pattern ((vstd!set.impl&%0.contains.? A&. A& s1! a$)) :pattern ((vstd!set.impl&%0.contains.? A&. A& s2! a$)) )))) :pattern ((ens%vstd!set.axiom_set_ext_equal. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_ext_equal")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (= (ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!) (forall ((a$ Poly)) (! (=> (has_type a$ A&) (= (vstd!set.impl&%0.contains.? A&. A& s1! a$) (vstd!set.impl&%0.contains.? A&. A& s2! a$))) :pattern ((vstd!set.impl&%0.contains.? A&. A& s1! a$)) :pattern ((vstd!set.impl&%0.contains.? A&. A& s2! a$)) )))) :pattern ((ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_ext_equal_deep")
(declare-fun ens%vstd!set.axiom_set_ext_equal_deep. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_ext_equal_deep. A&. A& s1! s2!) (= (ext_eq true (TYPE%vstd!set.Set. A&. A&) s1! s2!) (ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!))) :pattern ((ens%vstd!set.axiom_set_ext_equal_deep. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_ext_equal_deep")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (= (ext_eq true (TYPE%vstd!set.Set. A&. A&) s1! s2!) (ext_eq false (TYPE%vstd!set.Set. A&. A&) s1! s2!))) :pattern ((ext_eq true (TYPE%vstd!set.Set. A&. A&) s1! s2!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_mk_map_domain")
(declare-fun ens%vstd!set.axiom_mk_map_domain. (Dcr Type Dcr Type Poly %%Function%%) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! %%Function%%)) (! (= (ens%vstd!set.axiom_mk_map_domain. K&. K& V&. V& s! f!) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! (Poly%fun%1. f!))) s!)) :pattern ((ens%vstd!set.axiom_mk_map_domain. K&. K& V&. V& s! f!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_mk_map_domain")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. K&. K&)) (has_type f! (TYPE%fun%1. K&. K& V&. V&))) (= (vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! f!)) s!)) :pattern ((vstd!map.impl&%0.dom.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! f!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_mk_map_index")
(declare-fun req%vstd!set.axiom_mk_map_index. (Dcr Type Dcr Type Poly %%Function%% Poly) Bool)
(declare-const %%global_location_label%%38 Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! %%Function%%) (key! Poly)) (! (= (req%vstd!set.axiom_mk_map_index. K&. K& V&. V& s! f! key!) (=> %%global_location_label%%38 (vstd!set.impl&%0.contains.? K&. K& s! key!))) :pattern ((req%vstd!set.axiom_mk_map_index. K&. K& V&. V& s! f! key!)) )))
(declare-fun ens%vstd!set.axiom_mk_map_index. (Dcr Type Dcr Type Poly %%Function%% Poly) Bool)
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! %%Function%%) (key! Poly)) (! (= (ens%vstd!set.axiom_mk_map_index. K&. K& V&. V& s! f! key!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! (Poly%fun%1. f!)) key!) (%%apply%%0 f! key!))) :pattern ((ens%vstd!set.axiom_mk_map_index. K&. K& V&. V& s! f! key!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_mk_map_index")
(assert (forall ((K&. Dcr) (K& Type) (V&. Dcr) (V& Type) (s! Poly) (f! Poly) (key! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. K&. K&)) (has_type f! (TYPE%fun%1. K&. K& V&. V&)) (has_type key! K&)) (=> (vstd!set.impl&%0.contains.? K&. K& s! key!) (= (vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! f!) key!) (%%apply%%0 (%Poly%fun%1. f!) key!)))) :pattern ((vstd!map.impl&%0.index.? K&. K& V&. V& (vstd!set.impl&%0.mk_map.? K&. K& V&. V& $ (TYPE%fun%1. K&. K& V&. V&) s! f!) key!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_empty_finite")
(declare-fun ens%vstd!set.axiom_set_empty_finite. (Dcr Type) Bool)
(assert (forall ((A&. Dcr) (A& Type)) (! (= (ens%vstd!set.axiom_set_empty_finite. A&. A&) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.empty.? A&. A&))) :pattern ((ens%vstd!set.axiom_set_empty_finite. A&. A&)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_empty_finite")
(assert (forall ((A&. Dcr) (A& Type)) (! (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.empty.? A&. A&)) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.empty.? A&. A&))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_insert_finite")
(declare-fun req%vstd!set.axiom_set_insert_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%39 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_insert_finite. A&. A& s! a!) (=> %%global_location_label%%39 (vstd!set.impl&%0.finite.? A&. A& s!))) :pattern ((req%vstd!set.axiom_set_insert_finite. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_insert_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_insert_finite. A&. A& s! a!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!))) :pattern ((ens%vstd!set.axiom_set_insert_finite. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_insert_finite")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.finite.? A&. A& s!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_finite")
(declare-fun req%vstd!set.axiom_set_remove_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%40 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_remove_finite. A&. A& s! a!) (=> %%global_location_label%%40 (vstd!set.impl&%0.finite.? A&. A& s!))) :pattern ((req%vstd!set.axiom_set_remove_finite. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_remove_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_remove_finite. A&. A& s! a!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!))) :pattern ((ens%vstd!set.axiom_set_remove_finite. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_finite")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.finite.? A&. A& s!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_union_finite")
(declare-fun req%vstd!set.axiom_set_union_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%41 Bool)
(declare-const %%global_location_label%%42 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (req%vstd!set.axiom_set_union_finite. A&. A& s1! s2!) (and (=> %%global_location_label%%41 (vstd!set.impl&%0.finite.? A&. A& s1!)) (=> %%global_location_label%%42 (vstd!set.impl&%0.finite.? A&. A& s2!)))) :pattern ((req%vstd!set.axiom_set_union_finite. A&. A& s1! s2!)) )))
(declare-fun ens%vstd!set.axiom_set_union_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_union_finite. A&. A& s1! s2!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!))) :pattern ((ens%vstd!set.axiom_set_union_finite. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_union_finite")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (=> (and (vstd!set.impl&%0.finite.? A&. A& s1!) (vstd!set.impl&%0.finite.? A&. A& s2!)) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.union.? A&. A& s1! s2!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_intersect_finite")
(declare-fun req%vstd!set.axiom_set_intersect_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%43 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (req%vstd!set.axiom_set_intersect_finite. A&. A& s1! s2!) (=> %%global_location_label%%43 (or (vstd!set.impl&%0.finite.? A&. A& s1!) (vstd!set.impl&%0.finite.? A&. A& s2!)))) :pattern ((req%vstd!set.axiom_set_intersect_finite. A&. A& s1! s2!)) )))
(declare-fun ens%vstd!set.axiom_set_intersect_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_intersect_finite. A&. A& s1! s2!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!))) :pattern ((ens%vstd!set.axiom_set_intersect_finite. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_intersect_finite")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (=> (or (vstd!set.impl&%0.finite.? A&. A& s1!) (vstd!set.impl&%0.finite.? A&. A& s2!)) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.intersect.? A&. A& s1! s2!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_difference_finite")
(declare-fun req%vstd!set.axiom_set_difference_finite. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%44 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (req%vstd!set.axiom_set_difference_finite. A&. A& s1! s2!) (=> %%global_location_label%%44 (vstd!set.impl&%0.finite.? A&. A& s1!))) :pattern ((req%vstd!set.axiom_set_difference_finite. A&. A& s1! s2!)) )))
(declare-fun ens%vstd!set.axiom_set_difference_finite. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (= (ens%vstd!set.axiom_set_difference_finite. A&. A& s1! s2!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!))) :pattern ((ens%vstd!set.axiom_set_difference_finite. A&. A& s1! s2!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_difference_finite")
(assert (forall ((A&. Dcr) (A& Type) (s1! Poly) (s2! Poly)) (! (=> (and (has_type s1! (TYPE%vstd!set.Set. A&. A&)) (has_type s2! (TYPE%vstd!set.Set. A&. A&))) (=> (vstd!set.impl&%0.finite.? A&. A& s1!) (vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!)))) :pattern ((vstd!set.impl&%0.finite.? A&. A& (vstd!set.impl&%0.difference.? A&. A& s1! s2!))) )))
(set-info :comment ";; Function-Axioms vstd::set::impl&%0::choose")
(assert (fuel_bool_default fuel%vstd!set.impl&%0.choose.))
(declare-fun %%choose%%0 (Type Dcr Type Poly Dcr Type Poly) Poly)
(assert (forall ((%%hole%%0 Type) (%%hole%%1 Dcr) (%%hole%%2 Type) (%%hole%%3 Poly) (%%hole%%4 Dcr) (%%hole%%5 Type) (%%hole%%6 Poly)) (! (=> (exists ((a$ Poly)) (! (and (has_type a$ %%hole%%0) (vstd!set.impl&%0.contains.? %%hole%%1 %%hole%%2 %%hole%%3 a$)) :pattern ((vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 %%hole%%6 a$)) )) (exists ((a$ Poly)) (! (and (and (has_type a$ %%hole%%0) (vstd!set.impl&%0.contains.? %%hole%%1 %%hole%%2 %%hole%%3 a$)) (= (%%choose%%0 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6) a$)) :pattern ((vstd!set.impl&%0.contains.? %%hole%%4 %%hole%%5 %%hole%%6 a$))))) :pattern ((%%choose%%0 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3 %%hole%%4 %%hole%%5 %%hole%%6)))))
(assert (=> (fuel_bool fuel%vstd!set.impl&%0.choose.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!set.impl&%0.choose.? A&. A& self!) (as_type (%%choose%%0 A& A&. A& self! A&. A& self!) A&)) :pattern ((vstd!set.impl&%0.choose.? A&. A& self!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (=> (has_type self! (TYPE%vstd!set.Set. A&. A&)) (has_type (vstd!set.impl&%0.choose.? A&. A& self!) A&)) :pattern ((vstd!set.impl&%0.choose.? A&. A& self!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_choose_finite")
(declare-fun req%vstd!set.axiom_set_choose_finite. (Dcr Type Poly) Bool)
(declare-const %%global_location_label%%45 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (req%vstd!set.axiom_set_choose_finite. A&. A& s!) (=> %%global_location_label%%45 (not (vstd!set.impl&%0.finite.? A&. A& s!)))) :pattern ((req%vstd!set.axiom_set_choose_finite. A&. A& s!)) )))
(declare-fun ens%vstd!set.axiom_set_choose_finite. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (ens%vstd!set.axiom_set_choose_finite. A&. A& s!) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!))) :pattern ((ens%vstd!set.axiom_set_choose_finite. A&. A& s!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_choose_finite")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (=> (has_type s! (TYPE%vstd!set.Set. A&. A&)) (=> (not (vstd!set.impl&%0.finite.? A&. A& s!)) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_empty_len")
(declare-fun ens%vstd!set.axiom_set_empty_len. (Dcr Type) Bool)
(assert (forall ((A&. Dcr) (A& Type)) (! (= (ens%vstd!set.axiom_set_empty_len. A&. A&) (= (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.empty.? A&. A&)) 0)) :pattern ((ens%vstd!set.axiom_set_empty_len. A&. A&)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_empty_len")
(assert (forall ((A&. Dcr) (A& Type)) (! (= (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.empty.? A&. A&)) 0) :pattern ((vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.empty.? A&. A&))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_insert_len")
(declare-fun req%vstd!set.axiom_set_insert_len. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%46 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_insert_len. A&. A& s! a!) (=> %%global_location_label%%46 (vstd!set.impl&%0.finite.? A&. A& s!))) :pattern ((req%vstd!set.axiom_set_insert_len. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_insert_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_insert_len. A&. A& s! a!) (= (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!)) (Add (vstd!set.impl&%0.len.? A&. A& s!) (ite (vstd!set.impl&%0.contains.? A&. A& s! a!) 0 1)))) :pattern ((ens%vstd!set.axiom_set_insert_len. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_insert_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.finite.? A&. A& s!) (= (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!)) (Add (vstd!set.impl&%0.len.? A&. A& s!) (ite (vstd!set.impl&%0.contains.? A&. A& s! a!) 0 1))))) :pattern ((vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.insert.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_remove_len")
(declare-fun req%vstd!set.axiom_set_remove_len. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%47 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_remove_len. A&. A& s! a!) (=> %%global_location_label%%47 (vstd!set.impl&%0.finite.? A&. A& s!))) :pattern ((req%vstd!set.axiom_set_remove_len. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_remove_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_remove_len. A&. A& s! a!) (= (vstd!set.impl&%0.len.? A&. A& s!) (Add (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!)) (ite (vstd!set.impl&%0.contains.? A&. A& s! a!) 1 0)))) :pattern ((ens%vstd!set.axiom_set_remove_len. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_remove_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (vstd!set.impl&%0.finite.? A&. A& s!) (= (vstd!set.impl&%0.len.? A&. A& s!) (Add (vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!)) (ite (vstd!set.impl&%0.contains.? A&. A& s! a!) 1 0))))) :pattern ((vstd!set.impl&%0.len.? A&. A& (vstd!set.impl&%0.remove.? A&. A& s! a!))) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_contains_len")
(declare-fun req%vstd!set.axiom_set_contains_len. (Dcr Type Poly Poly) Bool)
(declare-const %%global_location_label%%48 Bool)
(declare-const %%global_location_label%%49 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (req%vstd!set.axiom_set_contains_len. A&. A& s! a!) (and (=> %%global_location_label%%48 (vstd!set.impl&%0.finite.? A&. A& s!)) (=> %%global_location_label%%49 (vstd!set.impl&%0.contains.? A&. A& s! a!)))) :pattern ((req%vstd!set.axiom_set_contains_len. A&. A& s! a!)) )))
(declare-fun ens%vstd!set.axiom_set_contains_len. (Dcr Type Poly Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (= (ens%vstd!set.axiom_set_contains_len. A&. A& s! a!) (not (= (vstd!set.impl&%0.len.? A&. A& s!) 0))) :pattern ((ens%vstd!set.axiom_set_contains_len. A&. A& s! a!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_contains_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly) (a! Poly)) (! (=> (and (has_type s! (TYPE%vstd!set.Set. A&. A&)) (has_type a! A&)) (=> (and (vstd!set.impl&%0.finite.? A&. A& s!) (vstd!set.impl&%0.contains.? A&. A& s! a!)) (not (= (vstd!set.impl&%0.len.? A&. A& s!) 0)))) :pattern ((vstd!set.impl&%0.contains.? A&. A& s! a!) (vstd!set.impl&%0.len.? A&. A& s!)) )))
(set-info :comment ";; Function-Specs vstd::set::axiom_set_choose_len")
(declare-fun req%vstd!set.axiom_set_choose_len. (Dcr Type Poly) Bool)
(declare-const %%global_location_label%%50 Bool)
(declare-const %%global_location_label%%51 Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (req%vstd!set.axiom_set_choose_len. A&. A& s!) (and (=> %%global_location_label%%50 (vstd!set.impl&%0.finite.? A&. A& s!)) (=> %%global_location_label%%51 (not (= (vstd!set.impl&%0.len.? A&. A& s!) 0))))) :pattern ((req%vstd!set.axiom_set_choose_len. A&. A& s!)) )))
(declare-fun ens%vstd!set.axiom_set_choose_len. (Dcr Type Poly) Bool)
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (ens%vstd!set.axiom_set_choose_len. A&. A& s!) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!))) :pattern ((ens%vstd!set.axiom_set_choose_len. A&. A& s!)) )))
(set-info :comment ";; Broadcast vstd::set::axiom_set_choose_len")
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (=> (has_type s! (TYPE%vstd!set.Set. A&. A&)) (=> (and (vstd!set.impl&%0.finite.? A&. A& s!) (not (= (vstd!set.impl&%0.len.? A&. A& s!) 0))) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!)))) :pattern ((vstd!set.impl&%0.len.? A&. A& s!) (vstd!set.impl&%0.contains.? A&. A& s! (vstd!set.impl&%0.choose.? A&. A& s!))) )))
(set-info :comment ";; Function-Axioms vstd::string::impl&%0::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! STRSLICE) (has_type (vstd!string.impl&%0.view.? self!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((vstd!string.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Specs vstd::string::axiom_str_literal_is_ascii")
(declare-fun ens%vstd!string.axiom_str_literal_is_ascii. (StrSlice) Bool)
(assert (forall ((s! StrSlice)) (! (= (ens%vstd!string.axiom_str_literal_is_ascii. s!) (= (vstd!string.impl&%0.is_ascii.? (S s!)) (str%strslice_is_ascii s!))) :pattern ((ens%vstd!string.axiom_str_literal_is_ascii. s!)) )))
(set-info :comment ";; Broadcast vstd::string::axiom_str_literal_is_ascii")
(assert (forall ((s! Poly)) (! (=> (has_type s! STRSLICE) (= (vstd!string.impl&%0.is_ascii.? s!) (str%strslice_is_ascii (%S s!)))) :pattern ((vstd!string.impl&%0.is_ascii.? s!)) )))
(set-info :comment ";; Function-Specs vstd::string::axiom_str_literal_len")
(declare-fun ens%vstd!string.axiom_str_literal_len. (StrSlice) Bool)
(assert (forall ((s! StrSlice)) (! (= (ens%vstd!string.axiom_str_literal_len. s!) (= (vstd!seq.Seq.len.? $ CHAR (vstd!string.impl&%0.view.? (S s!))) (str%strslice_len s!))) :pattern ((ens%vstd!string.axiom_str_literal_len. s!)) )))
(set-info :comment ";; Broadcast vstd::string::axiom_str_literal_len")
(assert (forall ((s! Poly)) (! (=> (has_type s! STRSLICE) (= (vstd!seq.Seq.len.? $ CHAR (vstd!string.impl&%0.view.? s!)) (str%strslice_len (%S s!)))) :pattern ((vstd!seq.Seq.len.? $ CHAR (vstd!string.impl&%0.view.? s!))) )))
(set-info :comment ";; Function-Specs vstd::string::axiom_str_literal_get_char")
(declare-fun ens%vstd!string.axiom_str_literal_get_char. (StrSlice Int) Bool)
(assert (forall ((s! StrSlice) (i! Int)) (! (= (ens%vstd!string.axiom_str_literal_get_char. s! i!) (= (%C (vstd!seq.Seq.index.? $ CHAR (vstd!string.impl&%0.view.? (S s!)) (I i!))) (str%strslice_get_char s! i!))) :pattern ((ens%vstd!string.axiom_str_literal_get_char. s! i!)) )))
(set-info :comment ";; Broadcast vstd::string::axiom_str_literal_get_char")
(assert (forall ((s! Poly) (i! Poly)) (! (=> (and (has_type s! STRSLICE) (has_type i! INT)) (= (%C (vstd!seq.Seq.index.? $ CHAR (vstd!string.impl&%0.view.? s!) i!)) (str%strslice_get_char (%S s!) (%I i!)))) :pattern ((vstd!seq.Seq.index.? $ CHAR (vstd!string.impl&%0.view.? s!) i!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBit::metadata")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%3.metadata. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) (metadata! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%3.metadata. self! metadata!) (= (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. metadata!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. self!)))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%3.metadata. self! metadata!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (has_type (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? self!)) TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBit::spec")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%3.spec. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) (spec! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%3.spec. self! spec!) (= (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. spec!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. self!)))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%3.spec. self! spec!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::kind")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.kind.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.kind.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. fluent_controller!kubernetes_api_objects.spec.common.Kind./CustomResourceKind))))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::owner_reference::OwnerReference::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!kubernetes_api_objects.exec.owner_reference.impl&%0.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.owner_reference.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::controller_owner_ref")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.) (forall ((self! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? self!) (fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView./OwnerReferenceView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (B true)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)))))))) (%I (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!))))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBit::controller_owner_ref")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%3.controller_owner_ref. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) (owner_reference! fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%3.controller_owner_ref. self! owner_reference!) (= (fluent_controller!kubernetes_api_objects.exec.owner_reference.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. owner_reference!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. self!))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%3.controller_owner_ref. self! owner_reference!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::marshal")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.marshal.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/status (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::unmarshal")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. obj!) (Poly%core!result.Result. (ite (not (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.)))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. obj!)) ))))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::fluentbit_config_name")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.fluentbit_config_name. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. vstd!string.String.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (fluentbit_config_name! vstd!string.String.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.fluentbit_config_name. self! fluentbit_config_name!) (= (vstd!string.impl&%1.view.? (Poly%vstd!string.String. fluentbit_config_name!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.fluentbit_config_name. self! fluentbit_config_name!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::image")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.image. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. vstd!string.String.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (image! vstd!string.String.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.image. self! image!) (= (vstd!string.impl&%1.view.? (Poly%vstd!string.String. image!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.image. self! image!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::resource_requirements::ResourceRequirements::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (fluent_controller!kubernetes_api_objects.exec.resource_requirements.impl&%0.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.resource_requirements.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::resources")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.resources. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (resources! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.resources. self! resources!) (and (has_type (Poly%core!option.Option. resources!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.exec.resource_requirements.ResourceRequirements.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. resources!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. resources!))))) (= (fluent_controller!kubernetes_api_objects.exec.resource_requirements.impl&%0.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. resources!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.resources. self! resources!)) )))
(set-info :comment ";; Function-Axioms vstd::seq_lib::impl&%0::map_values")
(assert (fuel_bool_default fuel%vstd!seq_lib.impl&%0.map_values.))
(declare-fun %%lambda%%3 (Dcr Type Poly %%Function%%) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (%%hole%%2 Poly) (%%hole%%3 %%Function%%) (i$ Poly)) (! (= (%%apply%%0 (%%lambda%%3 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) i$) (%%apply%%0 %%hole%%3 (vstd!seq.Seq.index.? %%hole%%0 %%hole%%1 %%hole%%2 i$))) :pattern ((%%apply%%0 (%%lambda%%3 %%hole%%0 %%hole%%1 %%hole%%2 %%hole%%3) i$)))))
(assert (=> (fuel_bool fuel%vstd!seq_lib.impl&%0.map_values.) (forall ((A&. Dcr) (A& Type) (B&. Dcr) (B& Type) (self! Poly) (f! Poly)) (! (= (vstd!seq_lib.impl&%0.map_values.? A&. A& B&. B& self! f!) (vstd!seq.Seq.new.? B&. B& $ (TYPE%fun%1. $ INT B&. B&) (I (vstd!seq.Seq.len.? A&. A& self!)) (Poly%fun%1. (mk_fun (%%lambda%%3 A&. A& self! (%Poly%fun%1. f!)))))) :pattern ((vstd!seq_lib.impl&%0.map_values.? A&. A& B&. B& self! f!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (B&. Dcr) (B& Type) (self! Poly) (f! Poly)) (! (=> (and (has_type self! (TYPE%vstd!seq.Seq. A&. A&)) (has_type f! (TYPE%fun%1. A&. A& B&. B&))) (has_type (vstd!seq_lib.impl&%0.map_values.? A&. A& B&. B& self! f!) (TYPE%vstd!seq.Seq. B&. B&))) :pattern ((vstd!seq_lib.impl&%0.map_values.? A&. A& B&. B& self! f!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::tolerations")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.tolerations. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(declare-fun %%lambda%%4 () %%Function%%)
(assert (forall ((t$ Poly)) (! (= (%%apply%%0 %%lambda%%4 t$) (Poly%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. (fluent_controller!kubernetes_api_objects.exec.toleration.impl&%0.view.? t$))) :pattern ((%%apply%%0 %%lambda%%4 t$)))))
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (tolerations! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.tolerations. self! tolerations!) (and (has_type (Poly%core!option.Option. tolerations!) (TYPE%core!option.Option. $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. $ TYPE%alloc!alloc.Global.))) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. tolerations!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. tolerations!))))) (= (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. $ TYPE%alloc!alloc.Global.) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. tolerations!)))) (Poly%fun%1. (mk_fun %%lambda%%4))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.tolerations. self! tolerations!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::vstd_ext::string_map::StringMap::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!vstd_ext.string_map.StringMap.) (has_type (fluent_controller!vstd_ext.string_map.impl&%0.view.? self!) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!vstd_ext.string_map.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::annotations")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.annotations. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. fluent_controller!vstd_ext.string_map.StringMap.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (annotations! fluent_controller!vstd_ext.string_map.StringMap.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.annotations. self! annotations!) (= (fluent_controller!vstd_ext.string_map.impl&%0.view.? (Poly%fluent_controller!vstd_ext.string_map.StringMap. annotations!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.annotations. self! annotations!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::affinity")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.affinity. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (affinity! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.affinity. self! affinity!) (and (has_type (Poly%core!option.Option. affinity!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.exec.affinity.Affinity.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. affinity!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. affinity!))))) (= (fluent_controller!kubernetes_api_objects.exec.affinity.impl&%0.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. affinity!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.affinity. self! affinity!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::disable_log_volumes")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.disable_log_volumes. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. Bool) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (disable_log_volumes! Bool)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.disable_log_volumes. self! disable_log_volumes!) (= disable_log_volumes! (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.disable_log_volumes. self! disable_log_volumes!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::node_selector")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.node_selector. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. fluent_controller!vstd_ext.string_map.StringMap.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (node_selector! fluent_controller!vstd_ext.string_map.StringMap.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.node_selector. self! node_selector!) (= (fluent_controller!vstd_ext.string_map.impl&%0.view.? (Poly%fluent_controller!vstd_ext.string_map.StringMap. node_selector!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/node_selector (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.node_selector. self! node_selector!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::vstd_ext::string_view::opt_string_to_view")
(assert (fuel_bool_default fuel%fluent_controller!vstd_ext.string_view.opt_string_to_view.))
(assert (=> (fuel_bool fuel%fluent_controller!vstd_ext.string_view.opt_string_to_view.) (forall ((s! Poly)) (! (= (fluent_controller!vstd_ext.string_view.opt_string_to_view.? s!) (ite (is-core!option.Option./Some_ (%Poly%core!option.Option. s!)) (let ((s1$ (%Poly%vstd!string.String. (core!option.Option./Some/0 (%Poly%core!option.Option. s!))))) (core!option.Option./Some (vstd!string.impl&%1.view.? (Poly%vstd!string.String. s1$)))) core!option.Option./None)) :pattern ((fluent_controller!vstd_ext.string_view.opt_string_to_view.? s!)) ))))
(assert (forall ((s! Poly)) (! (=> (has_type s! (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (has_type (Poly%core!option.Option. (fluent_controller!vstd_ext.string_view.opt_string_to_view.? s!)) (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!vstd_ext.string_view.opt_string_to_view.? s!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::runtime_class_name")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.runtime_class_name. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (runtime_class_name! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.runtime_class_name. self! runtime_class_name!) (and (has_type (Poly%core!option.Option. runtime_class_name!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (= (fluent_controller!vstd_ext.string_view.opt_string_to_view.? (Poly%core!option.Option. runtime_class_name!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/runtime_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.runtime_class_name. self! runtime_class_name!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::dns_policy")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.dns_policy. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (dns_policy! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.dns_policy. self! dns_policy!) (and (has_type (Poly%core!option.Option. dns_policy!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (= (fluent_controller!vstd_ext.string_view.opt_string_to_view.? (Poly%core!option.Option. dns_policy!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/dns_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.dns_policy. self! dns_policy!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::priority_class_name")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.priority_class_name. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (priority_class_name! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.priority_class_name. self! priority_class_name!) (and (has_type (Poly%core!option.Option. priority_class_name!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (= (fluent_controller!vstd_ext.string_view.opt_string_to_view.? (Poly%core!option.Option. priority_class_name!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/priority_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.priority_class_name. self! priority_class_name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::volume::Volume::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::volumes")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.volumes. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(declare-fun %%lambda%%5 () %%Function%%)
(assert (forall ((v$ Poly)) (! (= (%%apply%%0 %%lambda%%5 v$) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.view.? v$))) :pattern ((%%apply%%0 %%lambda%%5 v$)))))
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (volumes! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.volumes. self! volumes!) (and (has_type (Poly%core!option.Option. volumes!) (TYPE%core!option.Option. $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume. $ TYPE%alloc!alloc.Global.))) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. volumes!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. volumes!))))) (= (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume. $ TYPE%alloc!alloc.Global.) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. volumes!)))) (Poly%fun%1. (mk_fun %%lambda%%5))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.volumes. self! volumes!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::container::VolumeMount::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%2.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.container.impl&%2.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::volume_mounts")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.volume_mounts. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(declare-fun %%lambda%%6 () %%Function%%)
(assert (forall ((v$ Poly)) (! (= (%%apply%%0 %%lambda%%6 v$) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%2.view.? v$))) :pattern ((%%apply%%0 %%lambda%%6 v$)))))
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (volume_mounts! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.volume_mounts. self! volume_mounts!) (and (has_type (Poly%core!option.Option. volume_mounts!) (TYPE%core!option.Option. $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. $ TYPE%alloc!alloc.Global.))) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. volume_mounts!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. volume_mounts!))))) (= (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. $ TYPE%alloc!alloc.Global.) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. volume_mounts!)))) (Poly%fun%1. (mk_fun %%lambda%%6))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.volume_mounts. self! volume_mounts!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::scheduler_name")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.scheduler_name. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (scheduler_name! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.scheduler_name. self! scheduler_name!) (and (has_type (Poly%core!option.Option. scheduler_name!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (= (fluent_controller!vstd_ext.string_view.opt_string_to_view.? (Poly%core!option.Option. scheduler_name!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/scheduler_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.scheduler_name. self! scheduler_name!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::metrics_port")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.metrics_port. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (metrics_port! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.metrics_port. self! metrics_port!) (and (has_type (Poly%core!option.Option. metrics_port!) (TYPE%core!option.Option. $ (SINT 32))) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. metrics_port!)))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. metrics_port!))))) (= (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. metrics_port!))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.metrics_port. self! metrics_port!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::internal_mount_propagation")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.internal_mount_propagation. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (internal_mount_propagation! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.internal_mount_propagation. self! internal_mount_propagation!) (and (has_type (Poly%core!option.Option. internal_mount_propagation!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (= (fluent_controller!vstd_ext.string_view.opt_string_to_view.? (Poly%core!option.Option. internal_mount_propagation!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.internal_mount_propagation. self! internal_mount_propagation!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::volume::HostPathVolumeSource::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::position_db")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.position_db. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (position_db! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.position_db. self! position_db!) (and (has_type (Poly%core!option.Option. position_db!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. position_db!)))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. position_db!))))) (= (fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. position_db!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.position_db. self! position_db!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::container_log_real_path")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.container_log_real_path. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (container_log_real_path! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.container_log_real_path. self! container_log_real_path!) (and (has_type (Poly%core!option.Option. container_log_real_path!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (= (fluent_controller!vstd_ext.string_view.opt_string_to_view.? (Poly%core!option.Option. container_log_real_path!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.container_log_real_path. self! container_log_real_path!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::security_context")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.security_context. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (security_context! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.security_context. self! security_context!) (and (has_type (Poly%core!option.Option. security_context!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. security_context!)))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. security_context!))))) (= (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. security_context!)))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.security_context. self! security_context!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::container_security_context")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.container_security_context. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (container_security_context! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.container_security_context. self! container_security_context!) (and (has_type (Poly%core!option.Option. container_security_context!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. container_security_context!)))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. container_security_context!))))) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%10.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. container_security_context!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.container_security_context. self! container_security_context!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::host_network")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.host_network. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (host_network! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.host_network. self! host_network!) (and (has_type (Poly%core!option.Option. host_network!) (TYPE%core!option.Option. $ BOOL)) (= host_network! (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/host_network (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.host_network. self! host_network!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::args")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.args. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(declare-fun %%lambda%%7 () %%Function%%)
(assert (forall ((s$ Poly)) (! (= (%%apply%%0 %%lambda%%7 s$) (vstd!string.impl&%1.view.? s$)) :pattern ((%%apply%%0 %%lambda%%7 s$)))))
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (args! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.args. self! args!) (and (has_type (Poly%core!option.Option. args!) (TYPE%core!option.Option. $ (TYPE%alloc!vec.Vec. $ TYPE%vstd!string.String. $ TYPE%alloc!alloc.Global.))) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. args!)))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. args!))))) (= (vstd!seq_lib.impl&%0.map_values.? $ TYPE%vstd!string.String. $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%vstd!string.String. $ TYPE%alloc!alloc.Global.) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. args!)))) (Poly%fun%1. (mk_fun %%lambda%%7))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.args. self! args!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::command")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.command. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (command! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.command. self! command!) (and (has_type (Poly%core!option.Option. command!) (TYPE%core!option.Option. $ (TYPE%alloc!vec.Vec. $ TYPE%vstd!string.String. $ TYPE%alloc!alloc.Global.))) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. command!)))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. command!))))) (= (vstd!seq_lib.impl&%0.map_values.? $ TYPE%vstd!string.String. $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%vstd!string.String. $ TYPE%alloc!alloc.Global.) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. command!)))) (Poly%fun%1. (mk_fun %%lambda%%7))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.command. self! command!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::container::EnvVar::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%8.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.container.impl&%8.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::env_vars")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.env_vars. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(declare-fun %%lambda%%8 () %%Function%%)
(assert (forall ((var$ Poly)) (! (= (%%apply%%0 %%lambda%%8 var$) (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%8.view.? var$))) :pattern ((%%apply%%0 %%lambda%%8 var$)))))
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (env_vars! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.env_vars. self! env_vars!) (and (has_type (Poly%core!option.Option. env_vars!) (TYPE%core!option.Option. $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%alloc!alloc.Global.))) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. env_vars!)))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. env_vars!))))) (= (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%alloc!alloc.Global.) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. env_vars!)))) (Poly%fun%1. (mk_fun %%lambda%%8))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.env_vars. self! env_vars!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::image_pull_policy")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.image_pull_policy. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (image_pull_policy! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.image_pull_policy. self! image_pull_policy!) (and (has_type (Poly%core!option.Option. image_pull_policy!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (= (fluent_controller!vstd_ext.string_view.opt_string_to_view.? (Poly%core!option.Option. image_pull_policy!)) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.image_pull_policy. self! image_pull_policy!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::image_pull_secrets")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.image_pull_secrets. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(declare-fun %%lambda%%9 (Dcr Type) %%Function%%)
(assert (forall ((%%hole%%0 Dcr) (%%hole%%1 Type) (t$ Poly)) (! (= (%%apply%%0 (%%lambda%%9 %%hole%%0 %%hole%%1) t$) (vstd!view.View.view.? %%hole%%0 %%hole%%1 t$)) :pattern ((%%apply%%0 (%%lambda%%9 %%hole%%0 %%hole%%1) t$)))))
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (image_pull_secrets! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.image_pull_secrets. self! image_pull_secrets!) (and (has_type (Poly%core!option.Option. image_pull_secrets!) (TYPE%core!option.Option. $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. $ TYPE%alloc!alloc.Global.))) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. image_pull_secrets!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. image_pull_secrets!))))) (= (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. $ TYPE%alloc!alloc.Global.) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. image_pull_secrets!)))) (Poly%fun%1. (mk_fun (%%lambda%%9 $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.)))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.image_pull_secrets. self! image_pull_secrets!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::container::Probe::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.container.Probe.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%3.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.container.impl&%3.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::liveness_probe")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.liveness_probe. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (liveness_probe! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.liveness_probe. self! liveness_probe!) (and (has_type (Poly%core!option.Option. liveness_probe!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Probe.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. liveness_probe!)))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. liveness_probe!))))) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%3.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. liveness_probe!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.liveness_probe. self! liveness_probe!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::readiness_probe")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.readiness_probe. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (readiness_probe! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.readiness_probe. self! readiness_probe!) (and (has_type (Poly%core!option.Option. readiness_probe!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Probe.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. readiness_probe!)))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. readiness_probe!))))) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%3.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. readiness_probe!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.readiness_probe. self! readiness_probe!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::container::Container::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::init_containers")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.init_containers. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(declare-fun %%lambda%%10 () %%Function%%)
(assert (forall ((c$ Poly)) (! (= (%%apply%%0 %%lambda%%10 c$) (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? c$))) :pattern ((%%apply%%0 %%lambda%%10 c$)))))
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (init_containers! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.init_containers. self! init_containers!) (and (has_type (Poly%core!option.Option. init_containers!) (TYPE%core!option.Option. $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container. $ TYPE%alloc!alloc.Global.))) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. init_containers!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. init_containers!))))) (= (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container. $ TYPE%alloc!alloc.Global.) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. init_containers!)))) (Poly%fun%1. (mk_fun %%lambda%%10))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.init_containers. self! init_containers!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::container::ContainerPort::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%1.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.container.impl&%1.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitSpec::ports")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.ports. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. core!option.Option.) Bool)
(declare-fun %%lambda%%11 () %%Function%%)
(assert (forall ((c$ Poly)) (! (= (%%apply%%0 %%lambda%%11 c$) (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%1.view.? c$))) :pattern ((%%apply%%0 %%lambda%%11 c$)))))
(assert (forall ((self! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec.) (ports! core!option.Option.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.ports. self! ports!) (and (has_type (Poly%core!option.Option. ports!) (TYPE%core!option.Option. $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. $ TYPE%alloc!alloc.Global.))) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. ports!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. ports!))))) (= (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. $ TYPE%alloc!alloc.Global.) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. ports!)))) (Poly%fun%1. (mk_fun %%lambda%%11))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.view.? (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitSpec. self!)))))))))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%5.ports. self! ports!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::Container::default")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.default. (Int fluent_controller!kubernetes_api_objects.exec.container.Container.) Bool)
(assert (forall ((no%param Int) (container! fluent_controller!kubernetes_api_objects.exec.container.Container.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.default. no%param container!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. container!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.default. no%param container!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_image")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image.) (forall ((self! Poly) (image! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image.? self! image!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some image!))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image.? self! image!)) ))))
(assert (forall ((self! Poly) (image! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type image! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image.? self! image!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image.? self! image!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::Container::set_image")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_image. (fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Container. vstd!string.String.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (image! vstd!string.String.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_image. pre%self! self! image!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. pre%self!))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. image!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_image. pre%self! self! image!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_name.? self! name!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) name! (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_name.? self! name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_name.? self! name!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::Container::set_name")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_name. (fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Container. vstd!string.String.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (name! vstd!string.String.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_name. pre%self! self! name!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. pre%self!))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. name!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_name. pre%self! self! name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_volume_mounts")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_volume_mounts.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_volume_mounts.) (forall ((self! Poly) (volume_mounts! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_volume_mounts.? self! volume_mounts!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some volume_mounts!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_volume_mounts.? self! volume_mounts!)) ))))
(assert (forall ((self! Poly) (volume_mounts! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type volume_mounts! (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_volume_mounts.? self! volume_mounts!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_volume_mounts.? self! volume_mounts!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::Container::set_volume_mounts")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_volume_mounts. (fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Container. alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (volume_mounts! alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_volume_mounts. pre%self! self! volume_mounts!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_volume_mounts.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. pre%self!))) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.VolumeMount./alloc!alloc.Global.>. volume_mounts!)) (Poly%fun%1. (mk_fun %%lambda%%6)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_volume_mounts. pre%self! self! volume_mounts!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_ports")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_ports.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_ports.) (forall ((self! Poly) (ports! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_ports.? self! ports!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some ports!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_ports.? self! ports!)) ))))
(assert (forall ((self! Poly) (ports! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type ports! (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_ports.? self! ports!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_ports.? self! ports!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::Container::set_ports")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_ports. (fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Container. alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (ports! alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_ports. pre%self! self! ports!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_ports.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. pre%self!))) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.ContainerPort. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.ContainerPort./alloc!alloc.Global.>. ports!)) (Poly%fun%1. (mk_fun %%lambda%%11)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_ports. pre%self! self! ports!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_resources")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_resources.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_resources.) (forall ((self! Poly) (resources! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_resources.? self! resources!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some resources!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_resources.? self! resources!)) ))))
(assert (forall ((self! Poly) (resources! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type resources! TYPE%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_resources.? self! resources!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_resources.? self! resources!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::unset_resources")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.unset_resources.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.unset_resources.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.unset_resources.? self!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.unset_resources.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.unset_resources.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.unset_resources.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::Container::overwrite_resources")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.overwrite_resources. (fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Container. core!option.Option.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (resources! core!option.Option.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.overwrite_resources. pre%self! self! resources!) (and (=> (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. resources!))))) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.unset_resources.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. pre%self!)))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. resources!))))) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_resources.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. pre%self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.resource_requirements.ResourceRequirementsView. (fluent_controller!kubernetes_api_objects.exec.resource_requirements.impl&%0.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. resources!)))))))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.overwrite_resources. pre%self! self! resources!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_liveness_probe")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_liveness_probe.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_liveness_probe.) (forall ((self! Poly) (liveness_probe! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_liveness_probe.? self! liveness_probe!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some liveness_probe!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_liveness_probe.? self! liveness_probe!)) ))))
(assert (forall ((self! Poly) (liveness_probe! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type liveness_probe! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_liveness_probe.? self! liveness_probe!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_liveness_probe.? self! liveness_probe!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::Container::set_liveness_probe")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_liveness_probe. (fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Probe.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (liveness_probe! fluent_controller!kubernetes_api_objects.exec.container.Probe.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_liveness_probe. pre%self! self! liveness_probe!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_liveness_probe.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. pre%self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%3.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Probe. liveness_probe!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_liveness_probe. pre%self! self! liveness_probe!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_readiness_probe")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_readiness_probe.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_readiness_probe.) (forall ((self! Poly) (readiness_probe! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_readiness_probe.? self! readiness_probe!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some readiness_probe!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_readiness_probe.? self! readiness_probe!)) ))))
(assert (forall ((self! Poly) (readiness_probe! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type readiness_probe! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ProbeView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_readiness_probe.? self! readiness_probe!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_readiness_probe.? self! readiness_probe!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::Container::set_readiness_probe")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_readiness_probe. (fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Probe.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (readiness_probe! fluent_controller!kubernetes_api_objects.exec.container.Probe.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_readiness_probe. pre%self! self! readiness_probe!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_readiness_probe.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. pre%self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.ProbeView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%3.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Probe. readiness_probe!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_readiness_probe. pre%self! self! readiness_probe!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_command")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_command.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_command.) (forall ((self! Poly) (command! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_command.? self! command!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some command!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_command.? self! command!)) ))))
(assert (forall ((self! Poly) (command! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type command! (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_command.? self! command!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_command.? self! command!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::Container::set_command")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_command. (fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Container. alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (command! alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_command. pre%self! self! command!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_command.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. pre%self!))) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%vstd!string.String. $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%vstd!string.String. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>. command!)) (Poly%fun%1. (mk_fun %%lambda%%7)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_command. pre%self! self! command!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_image_pull_policy")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image_pull_policy.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image_pull_policy.) (forall ((self! Poly) (image_pull_policy! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image_pull_policy.? self! image_pull_policy!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some image_pull_policy!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image_pull_policy.? self! image_pull_policy!)) ))))
(assert (forall ((self! Poly) (image_pull_policy! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type image_pull_policy! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image_pull_policy.? self! image_pull_policy!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image_pull_policy.? self! image_pull_policy!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::Container::set_image_pull_policy")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_image_pull_policy. (fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Container. vstd!string.String.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (image_pull_policy! vstd!string.String.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_image_pull_policy. pre%self! self! image_pull_policy!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_image_pull_policy.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. pre%self!))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. image_pull_policy!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_image_pull_policy. pre%self! self! image_pull_policy!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_env")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_env.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_env.) (forall ((self! Poly) (env! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_env.? self! env!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some env!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_env.? self! env!)) ))))
(assert (forall ((self! Poly) (env! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type env! (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_env.? self! env!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_env.? self! env!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::Container::set_env")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_env. (fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Container. alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (env! alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_env. pre%self! self! env!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_env.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. pre%self!))) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. env!)) (Poly%fun%1. (mk_fun %%lambda%%8)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_env. pre%self! self! env!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_args")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_args.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_args.) (forall ((self! Poly) (args! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_args.? self! args!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some args!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_args.? self! args!)) ))))
(assert (forall ((self! Poly) (args! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type args! (TYPE%vstd!seq.Seq. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_args.? self! args!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_args.? self! args!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::Container::set_args")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_args. (fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Container. alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (args! alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_args. pre%self! self! args!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_args.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. pre%self!))) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%vstd!string.String. $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%vstd!string.String. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<vstd!string.String./alloc!alloc.Global.>. args!)) (Poly%fun%1. (mk_fun %%lambda%%7)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_args. pre%self! self! args!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerView::set_security_context")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_security_context.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_security_context.) (forall ((self! Poly) (security_context! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_security_context.? self! security_context!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/env (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/ports (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/volume_mounts (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/resources (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some security_context!))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_security_context.? self! security_context!)) ))))
(assert (forall ((self! Poly) (security_context! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (has_type security_context! TYPE%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_security_context.? self! security_context!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_security_context.? self! security_context!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::Container::set_security_context")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_security_context. (fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.Container. fluent_controller!kubernetes_api_objects.exec.container.SecurityContext.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (self! fluent_controller!kubernetes_api_objects.exec.container.Container.) (security_context! fluent_controller!kubernetes_api_objects.exec.container.SecurityContext.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_security_context. pre%self! self! security_context!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.set_security_context.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.Container. pre%self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.SecurityContextView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%10.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.SecurityContext. security_context!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%0.set_security_context. pre%self! self! security_context!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerPortView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView (%I (I 0)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerPortView::set_container_port")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.) (forall ((self! Poly) (container_port! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? self! container_port!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView (%I container_port!) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? self! container_port!)) ))))
(assert (forall ((self! Poly) (container_port! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (has_type container_port! INT)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? self! container_port!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? self! container_port!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::ContainerPortView::set_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? self! name!) (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView (%I (I (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/container_port (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some name!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView./ContainerPortView/protocol (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? self! name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? self! name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::VolumeMountView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (B false)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? no%param)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::VolumeMount::default")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.default. (Int fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.) Bool)
(assert (forall ((no%param Int) (volume_mount! fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.default. no%param volume_mount!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. volume_mount!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (I 0)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.default. no%param volume_mount!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::VolumeMountView::set_mount_path")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.) (forall ((self! Poly) (mount_path! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.? self! mount_path!) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView mount_path! (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.? self! mount_path!)) ))))
(assert (forall ((self! Poly) (mount_path! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type mount_path! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.? self! mount_path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.? self! mount_path!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::VolumeMount::set_mount_path")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.set_mount_path. (fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. vstd!string.String.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.) (self! fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.) (mount_path! vstd!string.String.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.set_mount_path. pre%self! self! mount_path!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_mount_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. pre%self!))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. mount_path!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.set_mount_path. pre%self! self! mount_path!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::VolumeMountView::set_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.? self! name!) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)) name! (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.? self! name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.? self! name!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::VolumeMount::set_name")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.set_name. (fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. vstd!string.String.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.) (self! fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.) (name! vstd!string.String.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.set_name. pre%self! self! name!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. pre%self!))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. name!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.set_name. pre%self! self! name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::VolumeMountView::set_read_only")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_read_only.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_read_only.) (forall ((self! Poly) (read_only! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_read_only.? self! read_only!) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some read_only!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_read_only.? self! read_only!)) ))))
(assert (forall ((self! Poly) (read_only! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type read_only! BOOL)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_read_only.? self! read_only!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_read_only.? self! read_only!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::VolumeMount::set_read_only")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.set_read_only. (fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. Bool) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.) (self! fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.) (read_only! Bool)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.set_read_only. pre%self! self! read_only!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.set_read_only.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. pre%self!))) (B read_only!)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.set_read_only. pre%self! self! read_only!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::VolumeMountView::overwrite_mount_propagation")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.overwrite_mount_propagation.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%4.overwrite_mount_propagation.) (forall ((self! Poly) (mount_propagation! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.overwrite_mount_propagation.? self! mount_propagation!) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. self!)))) (%Poly%core!option.Option. mount_propagation!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%4.overwrite_mount_propagation.? self! mount_propagation!)) ))))
(assert (forall ((self! Poly) (mount_propagation! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (has_type mount_propagation! (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.overwrite_mount_propagation.? self! mount_propagation!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%4.overwrite_mount_propagation.? self! mount_propagation!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::VolumeMount::overwrite_mount_propagation")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.overwrite_mount_propagation. (fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. core!option.Option.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.) (self! fluent_controller!kubernetes_api_objects.exec.container.VolumeMount.) (mount_propagation! core!option.Option.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.overwrite_mount_propagation. pre%self! self! mount_propagation!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. self!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.overwrite_mount_propagation.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.VolumeMount. pre%self!))) (Poly%core!option.Option. (fluent_controller!vstd_ext.string_view.opt_string_to_view.? (Poly%core!option.Option. mount_propagation!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%2.overwrite_mount_propagation. pre%self! self! mount_propagation!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::EnvVarView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::EnvVarView::set_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.set_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.set_name.? self! name!) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView name! (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%8.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.set_name.? self! name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%8.set_name.? self! name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::EnvVarView::overwrite_value")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value.) (forall ((self! Poly) (value! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value.? self! value!) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. self!)) (%Poly%core!option.Option. value!) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value_from (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value.? self! value!)) ))))
(assert (forall ((self! Poly) (value! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (has_type value! (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value.? self! value!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value.? self! value!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::EnvVarView::overwrite_value_from")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value_from.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value_from.) (forall ((self! Poly) (value_from! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value_from.? self! value_from!) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. self!)))) (%Poly%core!option.Option. value_from!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value_from.? self! value_from!)) ))))
(assert (forall ((self! Poly) (value_from! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (has_type value_from! (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value_from.? self! value_from!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value_from.? self! value_from!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::container::EnvVarSource::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%9.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.container.impl&%9.view.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::EnvVarSourceView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::container::EnvVarSourceView::set_field_ref")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%9.set_field_ref.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.container.impl&%9.set_field_ref.) (forall ((self! Poly) (field_ref! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.container.impl&%9.set_field_ref.? self! field_ref!) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some field_ref!))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%9.set_field_ref.? self! field_ref!)) ))))
(assert (forall ((self! Poly) (field_ref! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.) (has_type field_ref! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%9.set_field_ref.? self! field_ref!)) TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.container.impl&%9.set_field_ref.? self! field_ref!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::volume::ObjectFieldSelector::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.view.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSet::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.default.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSet::default")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.default. (Int fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) Bool)
(assert (forall ((no%param Int) (daemon_set! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.default. no%param daemon_set!) (= (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. daemon_set!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.default. no%param daemon_set!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSet::clone")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.clone. (fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) Bool)
(assert (forall ((self! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) (s! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.clone. self! s!) (= (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. s!)) (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. self!)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.clone. self! s!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSet::metadata")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.metadata. (fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) Bool)
(assert (forall ((self! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) (metadata! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.metadata. self! metadata!) (= (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. metadata!)) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. self!))))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.metadata. self! metadata!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSetSpec::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSet::spec")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.spec. (fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) (spec! core!option.Option.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.spec. self! spec!) (and (has_type (Poly%core!option.Option. spec!) (TYPE%core!option.Option. $ TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. spec!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. spec!))))) (= (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. spec!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. self!))))))))))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.spec. self! spec!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::set_metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.) (forall ((self! Poly) (metadata! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.? self! metadata!) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. metadata!) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.? self! metadata!)) ))))
(assert (forall ((self! Poly) (metadata! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (has_type metadata! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.? self! metadata!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.? self! metadata!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSet::set_metadata")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.set_metadata. (fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) (self! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) (metadata! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.set_metadata. pre%self! self! metadata!) (= (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. self!)) (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.? (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. pre%self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. metadata!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.set_metadata. pre%self! self! metadata!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::set_spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.) (forall ((self! Poly) (spec! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.? self! spec!) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some spec!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.? self! spec!)) ))))
(assert (forall ((self! Poly) (spec! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (has_type spec! TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.? self! spec!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.? self! spec!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSet::set_spec")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.set_spec. (fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) (self! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) (spec! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.set_spec. pre%self! self! spec!) (= (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. self!)) (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.? (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. pre%self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. spec!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.set_spec. pre%self! self! spec!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::kind")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.kind.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.kind.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. fluent_controller!kubernetes_api_objects.spec.common.Kind./DaemonSetKind))))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSet::api_resource")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.api_resource. (Int fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.) Bool)
(assert (forall ((no%param Int) (res! fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.api_resource. no%param res!) (= (fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView./ApiResourceView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (Poly%fluent_controller!kubernetes_api_objects.spec.api_resource.ApiResourceView. (fluent_controller!kubernetes_api_objects.exec.api_resource.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.api_resource.ApiResource. res!))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.api_resource. no%param res!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::marshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.marshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.marshal.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!) (Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. self!)) ))))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSet::marshal")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.marshal. (fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) Bool)
(assert (forall ((self! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet.) (obj! fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.marshal. self! obj!) (= (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!)) (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. self!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.marshal. self! obj!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetView::unmarshal")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.unmarshal.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%1.unmarshal.) (forall ((obj! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!) (Poly%core!result.Result. (ite (not (= (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/kind (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)) (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (ite (not (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))) (core!result.Result./Err (Poly%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError. fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError./UnmarshalError)) (core!result.Result./Ok (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!)))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_spec.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))) (%Poly%core!option.Option. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal_status.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.marshal.Value. (fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView./DynamicObjectView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.dynamic.DynamicObjectView. obj!))))))))))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!)) ))))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSet::unmarshal")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.unmarshal. (fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. core!result.Result.) Bool)
(assert (forall ((obj! fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject.) (res! core!result.Result.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.unmarshal. obj! res!) (and (has_type (Poly%core!result.Result. res!) (TYPE%core!result.Result. $ TYPE%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSet. $ TYPE%fluent_controller!kubernetes_api_objects.error.ParseDynamicObjectError.)) (= (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. res!)))) (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!))))))) (=> (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. res!))))) (= (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.view.? (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. res!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. (Poly%fluent_controller!kubernetes_api_objects.exec.dynamic.DynamicObject. obj!)))))))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%0.unmarshal. obj! res!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::label_selector::LabelSelectorView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetSpecView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? (I 0)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? (I 0)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.? no%param)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSetSpec::default")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.default. (Int fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.) Bool)
(assert (forall ((no%param Int) (daemon_set_spec! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.default. no%param daemon_set_spec!) (= (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. daemon_set_spec!)) (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.? (I 0)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.default. no%param daemon_set_spec!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetSpecView::set_selector")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.) (forall ((self! Poly) (selector! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.? self! selector!) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. selector!) (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.? self! selector!)) ))))
(assert (forall ((self! Poly) (selector! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) (has_type selector! TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.? self! selector!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.? self! selector!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::label_selector::LabelSelector::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.exec.label_selector.impl&%0.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.label_selector.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSetSpec::set_selector")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.set_selector. (fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.) (self! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.) (selector! fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.set_selector. pre%self! self! selector!) (= (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.? (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. pre%self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.exec.label_selector.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. selector!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.set_selector. pre%self! self! selector!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::daemon_set::DaemonSetSpecView::set_template")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.) (forall ((self! Poly) (template! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.? self! template!) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. self!)))) (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. template!))) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.? self! template!)) ))))
(assert (forall ((self! Poly) (template! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.) (has_type template! TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.? self! template!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.? self! template!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::pod_template_spec::PodTemplateSpec::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSetSpec::set_template")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.set_template. (fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.) (self! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.) (template! fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.set_template. pre%self! self! template!) (= (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.? (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. pre%self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. template!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.set_template. pre%self! self! template!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::daemon_set::DaemonSetSpec::template")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.template. (fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.) Bool)
(assert (forall ((self! fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec.) (template! fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.template. self! template!) (= (fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. template!)) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.daemon_set.DaemonSetSpec. self!))))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.daemon_set.impl&%2.template. self! template!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::label_selector::LabelSelector::default")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.label_selector.impl&%0.default. (Int fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.) Bool)
(assert (forall ((no%param Int) (label_selector! fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.label_selector.impl&%0.default. no%param label_selector!) (= (fluent_controller!kubernetes_api_objects.exec.label_selector.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. label_selector!)) (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? (I 0)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.label_selector.impl&%0.default. no%param label_selector!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::label_selector::LabelSelectorView::set_match_labels")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.) (forall ((self! Poly) (match_labels! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? self! match_labels!) (fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView./LabelSelectorView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some match_labels!))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? self! match_labels!)) ))))
(assert (forall ((self! Poly) (match_labels! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.) (has_type match_labels! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? self! match_labels!)) TYPE%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? self! match_labels!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::label_selector::LabelSelector::set_match_labels")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.label_selector.impl&%0.set_match_labels. (fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. fluent_controller!vstd_ext.string_map.StringMap.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.) (self! fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector.) (match_labels! fluent_controller!vstd_ext.string_map.StringMap.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.label_selector.impl&%0.set_match_labels. pre%self! self! match_labels!) (= (fluent_controller!kubernetes_api_objects.exec.label_selector.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. self!)) (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.exec.label_selector.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.label_selector.LabelSelector. pre%self!))) (fluent_controller!vstd_ext.string_map.impl&%0.view.? (Poly%fluent_controller!vstd_ext.string_map.StringMap. match_labels!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.label_selector.impl&%0.set_match_labels. pre%self! self! match_labels!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::default")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.default. (Int fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) Bool)
(assert (forall ((no%param Int) (object_meta! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.default. no%param object_meta!) (= (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. object_meta!)) (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.default. no%param object_meta!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::name")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.name. (fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (name! core!option.Option.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.name. self! name!) (and (has_type (Poly%core!option.Option. name!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. name!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. name!))))) (= (vstd!string.impl&%1.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. name!)))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)))))))))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.name. self! name!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::namespace")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.namespace. (fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (namespace! core!option.Option.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.namespace. self! namespace!) (and (has_type (Poly%core!option.Option. namespace!) (TYPE%core!option.Option. $ TYPE%vstd!string.String.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. namespace!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. namespace!))))) (= (vstd!string.impl&%1.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. namespace!)))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)))))))))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.namespace. self! namespace!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::labels")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.labels. (fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (labels! core!option.Option.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.labels. self! labels!) (and (has_type (Poly%core!option.Option. labels!) (TYPE%core!option.Option. $ TYPE%fluent_controller!vstd_ext.string_map.StringMap.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. labels!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. labels!))))) (= (fluent_controller!vstd_ext.string_map.impl&%0.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. labels!)))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)))))))))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.labels. self! labels!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::annotations")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.annotations. (fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. core!option.Option.) Bool)
(assert (forall ((self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (annotations! core!option.Option.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.annotations. self! annotations!) (and (has_type (Poly%core!option.Option. annotations!) (TYPE%core!option.Option. $ TYPE%fluent_controller!vstd_ext.string_map.StringMap.)) (= (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!))))))))) (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. annotations!))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. annotations!))))) (= (fluent_controller!vstd_ext.string_map.impl&%0.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. annotations!)))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)))))))))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.annotations. self! annotations!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::owner_references_only_contains")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.) (forall ((self! Poly) (owner_ref! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? self! owner_ref!) (let ((tmp%%$ (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (and (is-core!option.Option./Some_ tmp%%$) (let ((owner_refs$ (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)))))) (= owner_refs$ (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) owner_ref!))))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? self! owner_ref!)) ))))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::owner_references_only_contains")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.owner_references_only_contains. (fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. Bool) Bool)
(assert (forall ((self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (owner_ref! fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference.) (res! Bool)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.owner_references_only_contains. self! owner_ref! res!) (= res! (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!kubernetes_api_objects.exec.owner_reference.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. owner_ref!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.owner_references_only_contains. self! owner_ref! res!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? self! name!) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some name!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? self! name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? self! name!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::set_name")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_name. (fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. vstd!string.String.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (name! vstd!string.String.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_name. pre%self! self! name!) (= (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)) (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. pre%self!))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. name!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_name. pre%self! self! name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_labels")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.) (forall ((self! Poly) (labels! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? self! labels!) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some labels!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? self! labels!)) ))))
(assert (forall ((self! Poly) (labels! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type labels! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? self! labels!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? self! labels!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::set_labels")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_labels. (fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. fluent_controller!vstd_ext.string_map.StringMap.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (labels! fluent_controller!vstd_ext.string_map.StringMap.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_labels. pre%self! self! labels!) (= (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)) (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. pre%self!))) (fluent_controller!vstd_ext.string_map.impl&%0.view.? (Poly%fluent_controller!vstd_ext.string_map.StringMap. labels!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_labels. pre%self! self! labels!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_annotations")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.) (forall ((self! Poly) (annotations! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? self! annotations!) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some annotations!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? self! annotations!)) ))))
(assert (forall ((self! Poly) (annotations! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type annotations! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? self! annotations!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? self! annotations!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::set_annotations")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_annotations. (fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. fluent_controller!vstd_ext.string_map.StringMap.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (annotations! fluent_controller!vstd_ext.string_map.StringMap.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_annotations. pre%self! self! annotations!) (= (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)) (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. pre%self!))) (fluent_controller!vstd_ext.string_map.impl&%0.view.? (Poly%fluent_controller!vstd_ext.string_map.StringMap. annotations!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_annotations. pre%self! self! annotations!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::set_owner_references")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.) (forall ((self! Poly) (owner_references! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? self! owner_references!) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some owner_references!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/finalizers (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? self! owner_references!)) ))))
(assert (forall ((self! Poly) (owner_references! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type owner_references! (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? self! owner_references!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? self! owner_references!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::set_owner_references")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_owner_references. (fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.) Bool)
(declare-fun %%lambda%%12 () %%Function%%)
(assert (forall ((o$ Poly)) (! (= (%%apply%%0 %%lambda%%12 o$) (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!kubernetes_api_objects.exec.owner_reference.impl&%0.view.? o$))) :pattern ((%%apply%%0 %%lambda%%12 o$)))))
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (owner_references! alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_owner_references. pre%self! self! owner_references!) (= (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)) (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. pre%self!))) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. owner_references!)) (Poly%fun%1. (mk_fun %%lambda%%12)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.set_owner_references. pre%self! self! owner_references!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::object_meta::ObjectMetaView::unset_finalizers")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.? self!) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/owner_references (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::object_meta::ObjectMeta::unset_finalizers")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.unset_finalizers. (fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) (self! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.unset_finalizers. pre%self! self!) (= (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. self!)) (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.unset_finalizers.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. pre%self!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.unset_finalizers. pre%self! self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? self!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? no%param)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::default")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.default. (Int fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) Bool)
(assert (forall ((no%param Int) (pod_spec! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.default. no%param pod_spec!) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pod_spec!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? (I 0)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.default. no%param pod_spec!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_affinity")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_affinity.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_affinity.) (forall ((self! Poly) (affinity! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_affinity.? self! affinity!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some affinity!))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_affinity.? self! affinity!)) ))))
(assert (forall ((self! Poly) (affinity! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type affinity! TYPE%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_affinity.? self! affinity!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_affinity.? self! affinity!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::unset_affinity")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_affinity.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_affinity.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_affinity.? self!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_affinity.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_affinity.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_affinity.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::overwrite_affinity")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_affinity. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. core!option.Option.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (affinity! core!option.Option.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_affinity. pre%self! self! affinity!) (and (=> (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. affinity!))))) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_affinity.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!)))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. affinity!))))) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_affinity.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.affinity.AffinityView. (fluent_controller!kubernetes_api_objects.exec.affinity.impl&%0.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. affinity!)))))))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_affinity. pre%self! self! affinity!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_containers")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_containers.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_containers.) (forall ((self! Poly) (containers! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_containers.? self! containers!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. containers!) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_containers.? self! containers!)) ))))
(assert (forall ((self! Poly) (containers! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type containers! (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_containers.? self! containers!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_containers.? self! containers!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::set_containers")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_containers. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (containers! alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_containers. pre%self! self! containers!) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_containers.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>. containers!)) (Poly%fun%1. (mk_fun %%lambda%%10)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_containers. pre%self! self! containers!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_volumes")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_volumes.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_volumes.) (forall ((self! Poly) (volumes! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_volumes.? self! volumes!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some volumes!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_volumes.? self! volumes!)) ))))
(assert (forall ((self! Poly) (volumes! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type volumes! (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_volumes.? self! volumes!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_volumes.? self! volumes!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::set_volumes")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_volumes. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (volumes! alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_volumes. pre%self! self! volumes!) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_volumes.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume. $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.volume.Volume. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.volume.Volume./alloc!alloc.Global.>. volumes!)) (Poly%fun%1. (mk_fun %%lambda%%5)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_volumes. pre%self! self! volumes!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_init_containers")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_init_containers.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_init_containers.) (forall ((self! Poly) (init_containers! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_init_containers.? self! init_containers!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some init_containers!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_init_containers.? self! init_containers!)) ))))
(assert (forall ((self! Poly) (init_containers! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type init_containers! (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_init_containers.? self! init_containers!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_init_containers.? self! init_containers!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::set_init_containers")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_init_containers. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (init_containers! alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_init_containers. pre%self! self! init_containers!) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_init_containers.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.Container. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.Container./alloc!alloc.Global.>. init_containers!)) (Poly%fun%1. (mk_fun %%lambda%%10)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_init_containers. pre%self! self! init_containers!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_service_account_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_service_account_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_service_account_name.) (forall ((self! Poly) (service_account_name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_service_account_name.? self! service_account_name!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some service_account_name!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_service_account_name.? self! service_account_name!)) ))))
(assert (forall ((self! Poly) (service_account_name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type service_account_name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_service_account_name.? self! service_account_name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_service_account_name.? self! service_account_name!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::set_service_account_name")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_service_account_name. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. vstd!string.String.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (service_account! vstd!string.String.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_service_account_name. pre%self! self! service_account!) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_service_account_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. service_account!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_service_account_name. pre%self! self! service_account!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_tolerations")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_tolerations.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_tolerations.) (forall ((self! Poly) (tolerations! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_tolerations.? self! tolerations!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some tolerations!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_tolerations.? self! tolerations!)) ))))
(assert (forall ((self! Poly) (tolerations! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type tolerations! (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_tolerations.? self! tolerations!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_tolerations.? self! tolerations!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::unset_tolerations")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_tolerations.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_tolerations.) (forall ((self! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_tolerations.? self!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_tolerations.? self!)) ))))
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_tolerations.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_tolerations.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::overwrite_tolerations")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_tolerations. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. core!option.Option.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (tolerations! core!option.Option.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_tolerations. pre%self! self! tolerations!) (and (=> (%B (B (is-core!option.Option./None_ (%Poly%core!option.Option. (Poly%core!option.Option. tolerations!))))) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.unset_tolerations.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!)))))) (=> (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. tolerations!))))) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_tolerations.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. $ TYPE%fluent_controller!kubernetes_api_objects.spec.toleration.TolerationView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.toleration.Toleration. $ TYPE%alloc!alloc.Global.) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. tolerations!)))) (Poly%fun%1. (mk_fun %%lambda%%4)))))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_tolerations. pre%self! self! tolerations!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_node_selector")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_node_selector.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_node_selector.) (forall ((self! Poly) (node_selector! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_node_selector.? self! node_selector!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some node_selector!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_node_selector.? self! node_selector!)) ))))
(assert (forall ((self! Poly) (node_selector! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type node_selector! (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_node_selector.? self! node_selector!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_node_selector.? self! node_selector!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::set_node_selector")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_node_selector. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!vstd_ext.string_map.StringMap.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (node_selector! fluent_controller!vstd_ext.string_map.StringMap.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_node_selector. pre%self! self! node_selector!) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_node_selector.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (fluent_controller!vstd_ext.string_map.impl&%0.view.? (Poly%fluent_controller!vstd_ext.string_map.StringMap. node_selector!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_node_selector. pre%self! self! node_selector!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::overwrite_runtime_class_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_runtime_class_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_runtime_class_name.) (forall ((self! Poly) (runtime_class_name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_runtime_class_name.? self! runtime_class_name!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. runtime_class_name!) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_runtime_class_name.? self! runtime_class_name!)) ))))
(assert (forall ((self! Poly) (runtime_class_name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type runtime_class_name! (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_runtime_class_name.? self! runtime_class_name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_runtime_class_name.? self! runtime_class_name!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::overwrite_runtime_class_name")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_runtime_class_name. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. core!option.Option.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (runtime_class_name! core!option.Option.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_runtime_class_name. pre%self! self! runtime_class_name!) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_runtime_class_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (Poly%core!option.Option. (fluent_controller!vstd_ext.string_view.opt_string_to_view.? (Poly%core!option.Option. runtime_class_name!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_runtime_class_name. pre%self! self! runtime_class_name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::overwrite_dns_policy")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_dns_policy.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_dns_policy.) (forall ((self! Poly) (dns_policy! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_dns_policy.? self! dns_policy!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. dns_policy!) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_dns_policy.? self! dns_policy!)) ))))
(assert (forall ((self! Poly) (dns_policy! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type dns_policy! (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_dns_policy.? self! dns_policy!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_dns_policy.? self! dns_policy!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::overwrite_dns_policy")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_dns_policy. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. core!option.Option.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (dns_policy! core!option.Option.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_dns_policy. pre%self! self! dns_policy!) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_dns_policy.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (Poly%core!option.Option. (fluent_controller!vstd_ext.string_view.opt_string_to_view.? (Poly%core!option.Option. dns_policy!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_dns_policy. pre%self! self! dns_policy!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::overwrite_scheduler_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_scheduler_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_scheduler_name.) (forall ((self! Poly) (scheduler_name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_scheduler_name.? self! scheduler_name!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. scheduler_name!) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_scheduler_name.? self! scheduler_name!)) ))))
(assert (forall ((self! Poly) (scheduler_name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type scheduler_name! (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_scheduler_name.? self! scheduler_name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_scheduler_name.? self! scheduler_name!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::overwrite_scheduler_name")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_scheduler_name. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. core!option.Option.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (scheduler_name! core!option.Option.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_scheduler_name. pre%self! self! scheduler_name!) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_scheduler_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (Poly%core!option.Option. (fluent_controller!vstd_ext.string_view.opt_string_to_view.? (Poly%core!option.Option. scheduler_name!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_scheduler_name. pre%self! self! scheduler_name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::overwrite_priority_class_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_priority_class_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_priority_class_name.) (forall ((self! Poly) (priority_class_name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_priority_class_name.? self! priority_class_name!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. priority_class_name!) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_priority_class_name.? self! priority_class_name!)) ))))
(assert (forall ((self! Poly) (priority_class_name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type priority_class_name! (TYPE%core!option.Option. $ (TYPE%vstd!seq.Seq. $ CHAR)))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_priority_class_name.? self! priority_class_name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_priority_class_name.? self! priority_class_name!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::overwrite_priority_class_name")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_priority_class_name. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. core!option.Option.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (priority_class_name! core!option.Option.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_priority_class_name. pre%self! self! priority_class_name!) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.overwrite_priority_class_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (Poly%core!option.Option. (fluent_controller!vstd_ext.string_view.opt_string_to_view.? (Poly%core!option.Option. priority_class_name!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.overwrite_priority_class_name. pre%self! self! priority_class_name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_security_context")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_security_context.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_security_context.) (forall ((self! Poly) (security_context! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_security_context.? self! security_context!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some security_context!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_security_context.? self! security_context!)) ))))
(assert (forall ((self! Poly) (security_context! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type security_context! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSecurityContextView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_security_context.? self! security_context!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_security_context.? self! security_context!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::set_security_context")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_security_context. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (security_context! fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_security_context. pre%self! self! security_context!) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_security_context.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (vstd!view.View.view.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSecurityContext. security_context!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_security_context. pre%self! self! security_context!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_host_network")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_host_network.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_host_network.) (forall ((self! Poly) (host_network! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_host_network.? self! host_network!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some host_network!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_host_network.? self! host_network!)) ))))
(assert (forall ((self! Poly) (host_network! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type host_network! BOOL)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_host_network.? self! host_network!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_host_network.? self! host_network!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::set_host_network")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_host_network. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. Bool) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (host_network! Bool)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_host_network. pre%self! self! host_network!) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_host_network.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (B host_network!)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_host_network. pre%self! self! host_network!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod::PodSpecView::set_image_pull_secrets")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_image_pull_secrets.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_image_pull_secrets.) (forall ((self! Poly) (image_pull_secrets! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_image_pull_secrets.? self! image_pull_secrets!) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/affinity (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/volumes (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/service_account_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/tolerations (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/node_selector (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/runtime_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/dns_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/priority_class_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/scheduler_name (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/host_network (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some image_pull_secrets!))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_image_pull_secrets.? self! image_pull_secrets!)) ))))
(assert (forall ((self! Poly) (image_pull_secrets! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.) (has_type image_pull_secrets! (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView.))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_image_pull_secrets.? self! image_pull_secrets!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_image_pull_secrets.? self! image_pull_secrets!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod::PodSpec::set_image_pull_secrets")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_image_pull_secrets. (fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) (image_pull_secrets! alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_image_pull_secrets. pre%self! self! image_pull_secrets!) (= (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.set_image_pull_secrets.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. pre%self!))) (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. $ TYPE%fluent_controller!kubernetes_api_objects.spec.pod.LocalObjectReferenceView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference./alloc!alloc.Global.>. image_pull_secrets!)) (Poly%fun%1. (mk_fun (%%lambda%%9 $ TYPE%fluent_controller!kubernetes_api_objects.exec.pod.LocalObjectReference.))))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.set_image_pull_secrets. pre%self! self! image_pull_secrets!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod_template_spec::PodTemplateSpec::default")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.default. (Int fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.) Bool)
(assert (forall ((no%param Int) (pod_template_spec! fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.default. no%param pod_template_spec!) (= (fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. pod_template_spec!)) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? (I 0)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.default. no%param pod_template_spec!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::set_metadata")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.) (forall ((self! Poly) (metadata! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? self! metadata!) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some metadata!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? self! metadata!)) ))))
(assert (forall ((self! Poly) (metadata! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type metadata! TYPE%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? self! metadata!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? self! metadata!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod_template_spec::PodTemplateSpec::set_metadata")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.set_metadata. (fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.) (metadata! fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.set_metadata. pre%self! self! metadata!) (= (fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. pre%self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.exec.object_meta.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.object_meta.ObjectMeta. metadata!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.set_metadata. pre%self! self! metadata!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::pod_template_spec::PodTemplateSpecView::set_spec")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.) (forall ((self! Poly) (spec! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? self! spec!) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView./PodTemplateSpecView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some spec!))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? self! spec!)) ))))
(assert (forall ((self! Poly) (spec! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.) (has_type spec! TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? self! spec!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? self! spec!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::pod_template_spec::PodTemplateSpec::set_spec")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.set_spec. (fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.) (self! fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec.) (spec! fluent_controller!kubernetes_api_objects.exec.pod.PodSpec.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.set_spec. pre%self! self! spec!) (= (fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. self!)) (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.PodTemplateSpec. pre%self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.exec.pod.impl&%1.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.pod.PodSpec. spec!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.pod_template_spec.impl&%0.set_spec. pre%self! self! spec!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? no%param)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::volume::Volume::default")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.default. (Int fluent_controller!kubernetes_api_objects.exec.volume.Volume.) Bool)
(assert (forall ((no%param Int) (volume! fluent_controller!kubernetes_api_objects.exec.volume.Volume.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.default. no%param volume!) (= (fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. volume!)) (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (I 0)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.default. no%param volume!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::set_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.) (forall ((self! Poly) (name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? self! name!) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) name! (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? self! name!)) ))))
(assert (forall ((self! Poly) (name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? self! name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? self! name!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::volume::Volume::set_name")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.set_name. (fluent_controller!kubernetes_api_objects.exec.volume.Volume. fluent_controller!kubernetes_api_objects.exec.volume.Volume. vstd!string.String.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.volume.Volume.) (self! fluent_controller!kubernetes_api_objects.exec.volume.Volume.) (name! vstd!string.String.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.set_name. pre%self! self! name!) (= (fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. self!)) (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. pre%self!))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. name!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.set_name. pre%self! self! name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::set_host_path")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.) (forall ((self! Poly) (host_path! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? self! host_path!) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some host_path!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/secret (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? self! host_path!)) ))))
(assert (forall ((self! Poly) (host_path! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type host_path! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? self! host_path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? self! host_path!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::volume::Volume::set_host_path")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.set_host_path. (fluent_controller!kubernetes_api_objects.exec.volume.Volume. fluent_controller!kubernetes_api_objects.exec.volume.Volume. fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.volume.Volume.) (self! fluent_controller!kubernetes_api_objects.exec.volume.Volume.) (host_path! fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.set_host_path. pre%self! self! host_path!) (= (fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. self!)) (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. pre%self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. host_path!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.set_host_path. pre%self! self! host_path!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::VolumeView::set_secret")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.) (forall ((self! Poly) (secret! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.? self! secret!) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/host_path (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/config_map (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/projected (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some secret!))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/downward_api (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.VolumeView./VolumeView/empty_dir (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.? self! secret!)) ))))
(assert (forall ((self! Poly) (secret! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (has_type secret! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.? self! secret!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.? self! secret!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::exec::volume::SecretVolumeSource::view")
(assert (forall ((self! Poly)) (! (=> (has_type self! TYPE%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%4.view.? self!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.exec.volume.impl&%4.view.? self!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::volume::Volume::set_secret")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.set_secret. (fluent_controller!kubernetes_api_objects.exec.volume.Volume. fluent_controller!kubernetes_api_objects.exec.volume.Volume. fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.volume.Volume.) (self! fluent_controller!kubernetes_api_objects.exec.volume.Volume.) (secret! fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.set_secret. pre%self! self! secret!) (= (fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. self!)) (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.Volume. pre%self!))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%4.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. secret!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%0.set_secret. pre%self! self! secret!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::HostPathVolumeSourceView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? no%param)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::volume::HostPathVolumeSource::default")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.default. (Int fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.) Bool)
(assert (forall ((no%param Int) (host_path_volume_source! fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.default. no%param host_path_volume_source!) (= (fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. host_path_volume_source!)) (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? (I 0)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.default. no%param host_path_volume_source!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::HostPathVolumeSourceView::set_path")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.) (forall ((self! Poly) (path! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? self! path!) (fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView./HostPathVolumeSourceView path!)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? self! path!)) ))))
(assert (forall ((self! Poly) (path! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.) (has_type path! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? self! path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? self! path!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::volume::HostPathVolumeSource::set_path")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.set_path. (fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. vstd!string.String.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.) (self! fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource.) (path! vstd!string.String.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.set_path. pre%self! self! path!) (= (fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. self!)) (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.HostPathVolumeSource. pre%self!))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. path!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%2.set_path. pre%self! self! path!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::SecretVolumeSourceView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.? no%param)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::volume::SecretVolumeSource::default")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%4.default. (Int fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.) Bool)
(assert (forall ((no%param Int) (secret_volume_source! fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%4.default. no%param secret_volume_source!) (= (fluent_controller!kubernetes_api_objects.exec.volume.impl&%4.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. secret_volume_source!)) (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.? (I 0)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%4.default. no%param secret_volume_source!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::SecretVolumeSourceView::set_secret_name")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.) (forall ((self! Poly) (secret_name! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.? self! secret_name!) (fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView./SecretVolumeSourceView (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some secret_name!))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.? self! secret_name!)) ))))
(assert (forall ((self! Poly) (secret_name! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.) (has_type secret_name! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.? self! secret_name!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.? self! secret_name!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::volume::SecretVolumeSource::set_secret_name")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%4.set_secret_name. (fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. vstd!string.String.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.) (self! fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource.) (secret_name! vstd!string.String.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%4.set_secret_name. pre%self! self! secret_name!) (= (fluent_controller!kubernetes_api_objects.exec.volume.impl&%4.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. self!)) (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%4.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.SecretVolumeSource. pre%self!))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. secret_name!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%4.set_secret_name. pre%self! self! secret_name!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::ObjectFieldSelectorView::default")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.) (forall ((no%param Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? no%param) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView (vstd!string.impl&%0.view.? (S (str%new_strlit 3291835376408573590478209986637364656599265025014012802863049622424083630783948306431999498413285667939592978357630573418285899181951386474024455144309711))) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? no%param)) ))))
(assert (forall ((no%param Poly)) (! (=> (has_type no%param INT) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? no%param)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? no%param)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::volume::ObjectFieldSelector::default")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.default. (Int fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.) Bool)
(assert (forall ((no%param Int) (object_field_selector! fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.default. no%param object_field_selector!) (= (fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. object_field_selector!)) (fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? (I 0)))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.default. no%param object_field_selector!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::kubernetes_api_objects::spec::volume::ObjectFieldSelectorView::set_field_path")
(assert (fuel_bool_default fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.set_field_path.))
(assert (=> (fuel_bool fuel%fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.set_field_path.) (forall ((self! Poly) (field_path! Poly)) (! (= (fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.set_field_path.? self! field_path!) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView field_path! (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. self!)))))) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.set_field_path.? self! field_path!)) ))))
(assert (forall ((self! Poly) (field_path! Poly)) (! (=> (and (has_type self! TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.) (has_type field_path! (TYPE%vstd!seq.Seq. $ CHAR))) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.set_field_path.? self! field_path!)) TYPE%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView.)) :pattern ((fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.set_field_path.? self! field_path!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::volume::ObjectFieldSelector::set_field_path")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.set_field_path. (fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. vstd!string.String.) Bool)
(assert (forall ((pre%self! fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.) (self! fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.) (field_path! vstd!string.String.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.set_field_path. pre%self! self! field_path!) (= (fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. self!)) (fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.set_field_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. pre%self!))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. field_path!))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.set_field_path. pre%self! self! field_path!)) )))
(set-info :comment ";; Function-Axioms vstd::seq_lib::check_argument_is_seq")
(assert (fuel_bool_default fuel%vstd!seq_lib.check_argument_is_seq.))
(assert (=> (fuel_bool fuel%vstd!seq_lib.check_argument_is_seq.) (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (= (vstd!seq_lib.check_argument_is_seq.? A&. A& s!) s!) :pattern ((vstd!seq_lib.check_argument_is_seq.? A&. A& s!)) ))))
(assert (forall ((A&. Dcr) (A& Type) (s! Poly)) (! (=> (has_type s! (TYPE%vstd!seq.Seq. A&. A&)) (has_type (vstd!seq_lib.check_argument_is_seq.? A&. A& s!) (TYPE%vstd!seq.Seq. A&. A&))) :pattern ((vstd!seq_lib.check_argument_is_seq.? A&. A& s!)) )))
(set-info :comment ";; Function-Axioms vstd::view::impl&%0::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%0.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%0.view.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!view.View.view.? (REF A&.) A& self!) (vstd!view.View.view.? A&. A& self!)) :pattern ((vstd!view.View.view.? (REF A&.) A& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%1::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%1.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%1.view.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!view.View.view.? (BOX A&.) A& self!) (vstd!view.View.view.? A&. A& self!)) :pattern ((vstd!view.View.view.? (BOX A&.) A& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%2::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%2.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%2.view.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!view.View.view.? (RC A&.) A& self!) (vstd!view.View.view.? A&. A& self!)) :pattern ((vstd!view.View.view.? (RC A&.) A& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%3::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%3.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%3.view.) (forall ((A&. Dcr) (A& Type) (self! Poly)) (! (= (vstd!view.View.view.? (ARC A&.) A& self!) (vstd!view.View.view.? A&. A& self!)) :pattern ((vstd!view.View.view.? (ARC A&.) A& self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%4::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%4.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%4.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%tuple%0. self!) self!) :pattern ((vstd!view.View.view.? $ TYPE%tuple%0. self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%5::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%5.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%5.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ BOOL self!) self!) :pattern ((vstd!view.View.view.? $ BOOL self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%11::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%11.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%11.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ (UINT SZ) self!) self!) :pattern ((vstd!view.View.view.? $ (UINT SZ) self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%14::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%14.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%14.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ (SINT 32) self!) self!) :pattern ((vstd!view.View.view.? $ (SINT 32) self!)) ))))
(set-info :comment ";; Function-Axioms vstd::view::impl&%19::view")
(assert (fuel_bool_default fuel%vstd!view.impl&%19.view.))
(assert (=> (fuel_bool fuel%vstd!view.impl&%19.view.) (forall ((A0&. Dcr) (A0& Type) (A1&. Dcr) (A1& Type) (self! Poly)) (! (= (vstd!view.View.view.? $ (TYPE%tuple%2. A0&. A0& A1&. A1&) self!) (Poly%tuple%2. (tuple%2./tuple%2 (vstd!view.View.view.? A0&. A0& (tuple%2./tuple%2/0 (%Poly%tuple%2. self!))) (vstd!view.View.view.? A1&. A1& (tuple%2./tuple%2/1 (%Poly%tuple%2. self!)))))) :pattern ((vstd!view.View.view.? $ (TYPE%tuple%2. A0&. A0& A1&. A1&) self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::well_formed")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.well_formed.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.well_formed.) (forall ((self! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.well_formed.? self!) (and (and (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)))))))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!))))))))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. self!)))))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.well_formed.? self!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::exec::resource::daemon_set::DaemonSetBuilder::requirements")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.impl&%0.requirements.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.impl&%0.requirements.) (forall ((fb! Poly)) (! (= (fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? $ TYPE%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. fb!) (B (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.well_formed.? fb!))) :pattern ((fluent_controller!reconciler.exec.resource_builder.ResourceBuilder.requirements.? $ TYPE%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::common::make_base_labels")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? fb!) (vstd!map.impl&%0.insert.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR) (vstd!map.impl&%0.empty.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)) (vstd!string.impl&%0.view.? (S (str%new_strlit 1588539530315223847722953298287299374188107919534831743833089341130026030232599932513390495630937258371487356320380652074008820394790478717851686026166260))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? fb!) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::common::make_labels")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!) (vstd!map_lib.impl&%0.union_prefer_right.? $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/labels (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? fb!))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!) (TYPE%vstd!map.Map. $ (TYPE%vstd!seq.Seq. $ CHAR) $ (TYPE%vstd!seq.Seq. $ CHAR)))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::common::make_owner_references")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.) (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? fb!))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_daemon_set_name")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? fb!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? fb!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_daemon_set_key")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.? fb!) (fluent_controller!kubernetes_api_objects.spec.common.ObjectRef./ObjectRef (%Poly%fluent_controller!kubernetes_api_objects.spec.common.Kind. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.kind.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? fb!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::DaemonSetBuilder::get_request")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.get_request.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.get_request.) (forall ((fb! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!) (Poly%fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest. (fluent_controller!kubernetes_api_objects.spec.api_method.GetRequest./GetRequest (%Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (Poly%fluent_controller!kubernetes_api_objects.spec.common.ObjectRef. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_key.? fb!)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.get_request.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::service_account::make_service_account_name")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? fb!) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/metadata (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? fb!) (TYPE%vstd!seq.Seq. $ CHAR))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_env")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.) (forall ((fluentbit! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.? fluentbit!) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (let ((tmp%%$ (vstd!string.impl&%0.view.? (S (str%new_strlit 9550466510480779651798518457849037047237641748796675704158654176747731341429154373116049408924990895415352019938555218772777122838084397998445529115124565))))) (let ((tmp%%$1 (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (let ((tmp%%$2 (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (let ((tmp%%$3 (vstd!string.impl&%0.view.? (S (str%new_strlit 64393076556699018832344577135365479561768770771401520297537358859344473356268027959831425057158022047466927942309151218166757023944512337170110073956888))))) (let ((tmp%%$4 (fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView tmp%%$3 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. tmp%%$4)))))))))))) (let ((tmp%%$5 (fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2))))))))) (let ((tmp%%$6 (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView tmp%%$ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. tmp%%$6))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (let ((tmp%%$ (vstd!string.impl&%0.view.? (S (str%new_strlit 4768814570999511162394561399398956999011928061222181226755600835900975716078550342214188204668845402090277929816219234254995916206960342802930184981260636))))) (let ((tmp%%$8 (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (let ((tmp%%$9 (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (let ((tmp%%$10 (vstd!string.impl&%0.view.? (S (str%new_strlit 10411321872159765285695605998453805166173003670098616158230252450521803095579307289600573816808438699163715549734699717987061629003941626929420819184189838))))) (let ((tmp%%$11 (fluent_controller!kubernetes_api_objects.spec.volume.impl&%12.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView tmp%%$10 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView./ObjectFieldSelectorView/api_version (%Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. tmp%%$11)))))))))))) (let ((tmp%%$12 (fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView./EnvVarSourceView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$9))))))))) (let ((tmp%%$13 (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView tmp%%$ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.EnvVarView./EnvVarView/value (%Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. tmp%%$13))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$8)))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.? fluentbit!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_fluentbit_pod_spec")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.? fb!) (let ((tmp%%$ (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.model.resource.service_account.make_service_account_name.? fb!)))) (let ((tmp%%$1 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_secrets (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/image_pull_secrets (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? (I 0)))))))) (let ((tmp%%$2 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/init_containers (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/init_containers (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? (I 0)))))))) (let ((tmp%%$3 (core!option.Option./Some (let ((config_volume$ (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_secret.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 6678607023766901003382792270755106839987488175314763130247827673500039439619877039894095328997409234502992370220758737201180362481988301437861459862146975))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.set_secret_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.SecretVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%4.default.? (I 0))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/fluentbit_config_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (let ((varlibcontainers_volume$ (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 2188484148999715820567550310581584205618976198226877163958291952884946948463914907639463823229956356335530263980388391746240019128775406001113048046233606))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? (I 0))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 2986636482548710285677028065817660791431940228625394886827414695412603994254767361533053524611833003592685383424625662914703292184544526931544594539404640))))))))) (let ((varlogs_volume$ (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 3743801436055201967048338775671880418229201396449657765838821313251633754808912614152114010959701525227612556044070361911264437280130628942373770239894540))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 4793832593508748126062412560919596840999431480869477173681988386390804304583718534059870468177480278076944568094705628720994167287570111633928006306301577)))))))) (let ((systemd_volume$ (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 122212878595673449829719842073427176754837956572540612546561083152789401078824327220238293894759906354761009078812220123180886792052392037942955010988387))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.set_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.HostPathVolumeSourceView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%2.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 6183886151335330243309781750450179173756400907066207114935617997922946899918062452431260614589004314563657773501759077048031969620057795531086325738747973)))))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (let ((positions_volume$ (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_host_path.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (fluent_controller!kubernetes_api_objects.spec.volume.impl&%0.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 7889039982558046029918101647923170407751467778923610144010826363328663535128275517520283735849640060036239581749328276675338550581679672548617791033057592))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) (ite (and (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlibcontainers_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlogs_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. systemd_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. positions_volume$)) (ite (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlibcontainers_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlogs_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. systemd_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. positions_volume$)) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. positions_volume$)) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. positions_volume$)))))) (ite (and (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlibcontainers_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlogs_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. systemd_volume$)) (ite (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlibcontainers_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. varlogs_volume$)) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. systemd_volume$)) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$)) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView.) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.VolumeView. config_volume$))))))))))))) (let ((tmp%%$4 (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (let ((tmp%%$5 (vstd!string.impl&%0.view.? (S (str%new_strlit 7881052882422921235722426700610922165188017386415854660729740325580127329785066396001445078186247073941595726607205695926084835405406421321072071134247673))))) (let ((tmp%%$6 (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (let ((tmp%%$7 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/image_pull_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/image_pull_policy (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))))))) (let ((tmp%%$8 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (core!option.Option./Some (vstd!seq.Seq.add.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.? fb!)) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/env_vars (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (core!option.Option./Some (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.? fb!)))))) (let ((tmp%%$9 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/liveness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/liveness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))))))) (let ((tmp%%$10 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/readiness_probe (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/readiness_probe (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))))))) (let ((tmp%%$11 (core!option.Option./Some (let ((config_vm$ (let ((tmp%%$12 (vstd!string.impl&%0.view.? (S (str%new_strlit 6678607023766901003382792270755106839987488175314763130247827673500039439619877039894095328997409234502992370220758737201180362481988301437861459862146975))))) (let ((tmp%%$13 (core!option.Option./Some (B true)))) (let ((tmp%%$14 (vstd!string.impl&%0.view.? (S (str%new_strlit 4740988007756251278903355284580602604292836851380638627647227593127321202678737275884742936596140568353736972636041224343058507233621261049226929258853254))))) (let ((tmp%%$15 (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView tmp%%$14 tmp%%$12 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$13)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$15))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$15)))))))))))) (let ((varlibcontainers_vm$ (let ((tmp%%$16 (vstd!string.impl&%0.view.? (S (str%new_strlit 2188484148999715820567550310581584205618976198226877163958291952884946948463914907639463823229956356335530263980388391746240019128775406001113048046233606))))) (let ((tmp%%$17 (core!option.Option./Some (B true)))) (let ((tmp%%$18 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_log_real_path (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (vstd!string.impl&%0.view.? (S (str%new_strlit 2986636482548710285677028065817660791431940228625394886827414695412603994254767361533053524611833003592685383424625662914703292184544526931544594539404640)))))) (let ((tmp%%$19 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$20 (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView tmp%%$18 tmp%%$16 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$17)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$20))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$19)))))))))) (let ((varlogs_vm$ (let ((tmp%%$21 (vstd!string.impl&%0.view.? (S (str%new_strlit 3743801436055201967048338775671880418229201396449657765838821313251633754808912614152114010959701525227612556044070361911264437280130628942373770239894540))))) (let ((tmp%%$22 (core!option.Option./Some (B true)))) (let ((tmp%%$23 (vstd!string.impl&%0.view.? (S (str%new_strlit 6272566318008270777155235636746808270676967237696972794859305908012088134347385737708372067337873385443178143250252868832229381275457591864337640110641362))))) (let ((tmp%%$24 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$25 (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView tmp%%$23 tmp%%$21 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$22)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$25))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$24)))))))))) (let ((systemd_vm$ (let ((tmp%%$26 (vstd!string.impl&%0.view.? (S (str%new_strlit 122212878595673449829719842073427176754837956572540612546561083152789401078824327220238293894759906354761009078812220123180886792052392037942955010988387))))) (let ((tmp%%$27 (core!option.Option./Some (B true)))) (let ((tmp%%$28 (vstd!string.impl&%0.view.? (S (str%new_strlit 6183886151335330243309781750450179173756400907066207114935617997922946899918062452431260614589004314563657773501759077048031969620057795531086325738747973))))) (let ((tmp%%$29 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/internal_mount_propagation (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$30 (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView tmp%%$28 tmp%%$26 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$27)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$30))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$29)))))))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/position_db (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (let ((positions_vm$ (let ((tmp%%$31 (vstd!string.impl&%0.view.? (S (str%new_strlit 7889039982558046029918101647923170407751467778923610144010826363328663535128275517520283735849640060036239581749328276675338550581679672548617791033057592))))) (let ((tmp%%$32 (vstd!string.impl&%0.view.? (S (str%new_strlit 8409811131834410820989463516710410339829238541791786943037409582883563673891990171794899796341077643301370401044813077132816831776225250446645593331662015))))) (let ((tmp%%$33 (fluent_controller!kubernetes_api_objects.spec.container.impl&%4.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView tmp%%$32 tmp%%$31 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/read_only (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$33))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/sub_path (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$33))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView./VolumeMountView/mount_propagation (%Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. tmp%%$33))))))))))) (ite (and (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlibcontainers_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlogs_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. systemd_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. positions_vm$)) (ite (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlibcontainers_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlogs_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. systemd_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. positions_vm$)) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. positions_vm$)) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. positions_vm$)))))) (ite (and (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlibcontainers_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlogs_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. systemd_vm$)) (ite (not (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/disable_log_volumes (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlibcontainers_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. varlogs_vm$)) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. systemd_vm$)) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/volume_mounts (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$)) (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.VolumeMountView. config_vm$))))))))))))) (let ((tmp%%$34 (let ((metrics_port$ (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_container_port.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%3.default.? (I 0))) (vstd!string.impl&%0.view.? (S (str%new_strlit 12996891269909683618396389987975855564405211863374334940199411544310622399543574228102322243042075839366557607162402253822598179187328569546822102670603817))))) (I (let ((port$ (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (%I (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/metrics_port (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) 2020))) port$))))) (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (core!option.Option./Some (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/ports (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. metrics_port$))) (core!option.Option./Some (vstd!seq.Seq.push.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. (vstd!seq.Seq.empty.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView.) (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerPortView. metrics_port$))))))) (let ((tmp%%$35 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/resources (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$36 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/args (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/args (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))))))) (let ((tmp%%$37 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/command (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/command (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))))))) (let ((tmp%%$38 (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/container_security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/security_context (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))))))) (let ((tmp%%$39 (fluent_controller!kubernetes_api_objects.spec.container.impl&%0.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$8)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$6)) tmp%%$5 (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$34)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$11)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.container.ContainerView./ContainerView/lifecycle (%Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. (Poly%fluent_controller!kubernetes_api_objects.spec.container.ContainerView. tmp%%$39))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$35)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$10)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$9)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$37)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$7)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$36)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$38))))))))))))))))))))) (let ((tmp%%$40 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/tolerations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$41 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/affinity (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$42 (core!option.Option./Some (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/node_selector (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!)))))))) (let ((tmp%%$43 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/runtime_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$44 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/dns_policy (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$45 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/priority_class_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$46 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/scheduler_name (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$47 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/security_context (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$48 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/host_network (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (let ((tmp%%$49 (fluent_controller!kubernetes_api_objects.spec.pod.impl&%2.default.? (I 0)))) (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$41)) (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.ContainerView.>. tmp%%$4)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$40)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$42)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$43)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$44)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$45)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$46)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$47)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$48)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView./PodSpecView/termination_grace_period_seconds (%Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. tmp%%$49))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1))))))))))))))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::make_daemon_set")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.) (forall ((fb! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!) (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_spec.? (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%0.set_metadata.? (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_owner_references.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0))) (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? fb!))) (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))) (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!)))))) (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_template.? (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.set_selector.? (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.impl&%2.default.? (I 0))) (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.set_match_labels.? (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.label_selector.impl&%0.default.? (I 0))) (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? fb!))))) (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_spec.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.set_metadata.? (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (fluent_controller!kubernetes_api_objects.spec.pod_template_spec.impl&%0.default.? (I 0))) (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_annotations.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.set_labels.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0))) (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? fb!))) (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView./FluentBitSpecView/annotations (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView/spec (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. fb!))))))))) (Poly%fluent_controller!kubernetes_api_objects.spec.pod.PodSpecView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_fluentbit_pod_spec.? fb!)))))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!)) ))))
(assert (forall ((fb! Poly)) (! (=> (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::DaemonSetBuilder::make")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.make.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.make.) (forall ((fb! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!) (Poly%core!result.Result. (core!result.Result./Ok (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.make.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::update_daemon_set")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.) (forall ((fb! Poly) (found_daemon_set! Poly)) (! (= (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.? fb! found_daemon_set!) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (let ((tmp%%$ (core!option.Option./Some (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? fb!))))) (let ((tmp%%$1 core!option.Option./None)) (let ((tmp%%$2 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/labels (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!))))))))) (let ((tmp%%$3 (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/annotations (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!))))))))) (let ((tmp%%$4 (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. found_daemon_set!)))) (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/name (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/namespace (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/resource_version (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/uid (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$2)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$3)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$)) (%Poly%core!option.Option. (Poly%core!option.Option. tmp%%$1)) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView./ObjectMetaView/deletion_timestamp (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. tmp%%$4))))))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (let ((tmp%%$ (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/template (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set.? fb!))))))))))) (let ((tmp%%$6 (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. found_daemon_set!)))))))) (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView (%Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (Poly%fluent_controller!kubernetes_api_objects.spec.label_selector.LabelSelectorView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView./DaemonSetSpecView/selector (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetSpecView. tmp%%$6))))) (%Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. (Poly%fluent_controller!kubernetes_api_objects.spec.pod_template_spec.PodTemplateSpecView. tmp%%$))))))))) (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/status (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. found_daemon_set!)))))) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.? fb! found_daemon_set!)) ))))
(assert (forall ((fb! Poly) (found_daemon_set! Poly)) (! (=> (and (has_type fb! TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (has_type found_daemon_set! TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) (has_type (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.? fb! found_daemon_set!)) TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView.)) :pattern ((fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.? fb! found_daemon_set!)) )))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::DaemonSetBuilder::update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.update.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.update.) (forall ((fb! Poly) (state! Poly) (obj! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!) (Poly%core!result.Result. (let ((ds$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!)))) (let ((found_ds$ (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (core!result.Result./Ok/0 (%Poly%core!result.Result. (Poly%core!result.Result. ds$)))))) (ite (and (and (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. ds$))))) (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.owner_references_only_contains.? (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/metadata (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. found_ds$)))) (Poly%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.controller_owner_ref.? fb!)))) (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. (fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView./DaemonSetView/spec (%Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. found_ds$))))))))) (core!result.Result./Ok (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.marshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.update_daemon_set.? fb! (Poly%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. found_ds$))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0))))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! state! obj!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::DaemonSetBuilder::state_after_create")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_create.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_create.) (forall ((fb! Poly) (obj! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!) (Poly%core!result.Result. (let ((ds$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. ds$))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Done))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_create.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::model::resource::daemon_set::DaemonSetBuilder::state_after_update")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_update.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.impl&%0.state_after_update.) (forall ((fb! Poly) (obj! Poly) (state! Poly)) (! (= (fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!) (Poly%core!result.Result. (let ((ds$ (%Poly%core!result.Result. (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.unmarshal.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.daemon_set.DaemonSetView. obj!)))) (ite (%B (B (is-core!result.Result./Ok_ (%Poly%core!result.Result. (Poly%core!result.Result. ds$))))) (let ((state_prime$ (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep./Done))))) (core!result.Result./Ok (Poly%tuple%2. (tuple%2./tuple%2 (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. state_prime$) (Poly%core!option.Option. core!option.Option./None))))) (core!result.Result./Err (Poly%tuple%0. tuple%0./tuple%0)))))) :pattern ((fluent_controller!reconciler.spec.resource_builder.ResourceBuilder.state_after_update.? $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. fb! obj! state!)) ))))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::spec_types::FluentBitView::default")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.default.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%1.default.) (= (fluent_controller!kubernetes_api_objects.spec.resource.ResourceView.default.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView./FluentBitView (%Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (Poly%fluent_controller!kubernetes_api_objects.spec.object_meta.ObjectMetaView. (fluent_controller!kubernetes_api_objects.spec.object_meta.impl&%0.default.? (I 0)))) (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView. (vstd!pervasive.arbitrary.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitSpecView.)) (%Poly%core!option.Option. (Poly%core!option.Option. core!option.Option./None)))))))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!kubernetes_api_objects.spec.resource.ResourceView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%fluent_controller!reconciler.spec.resource_builder.ResourceBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.DaemonSetBuilder. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitView. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState.))
(set-info :comment ";; Function-Axioms fluent_controller::fluent_controller::fluentbit::trusted::exec_types::FluentBitReconcileState::view")
(assert (fuel_bool_default fuel%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%1.view.))
(assert (=> (fuel_bool fuel%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.impl&%1.view.) (forall ((self! Poly)) (! (= (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. self!) (Poly%fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState. (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.FluentBitReconcileState./FluentBitReconcileState (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.step.FluentBitReconcileStep. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState./FluentBitReconcileState/reconcile_step (%Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. self!))))))) :pattern ((vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState. self!)) ))))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((A&. Dcr) (A& Type)) (! (=> (tr_bound%vstd!view.View. A&. A&) (tr_bound%vstd!view.View. (REF A&.) A&)) :pattern ((tr_bound%vstd!view.View. (REF A&.) A&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((A&. Dcr) (A& Type)) (! (=> (tr_bound%vstd!view.View. A&. A&) (tr_bound%vstd!view.View. (BOX A&.) A&)) :pattern ((tr_bound%vstd!view.View. (BOX A&.) A&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((A&. Dcr) (A& Type)) (! (=> (tr_bound%vstd!view.View. A&. A&) (tr_bound%vstd!view.View. (RC A&.) A&)) :pattern ((tr_bound%vstd!view.View. (RC A&.) A&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((A&. Dcr) (A& Type)) (! (=> (tr_bound%vstd!view.View. A&. A&) (tr_bound%vstd!view.View. (ARC A&.) A&)) :pattern ((tr_bound%vstd!view.View. (ARC A&.) A&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%tuple%0.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ BOOL))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ (UINT SZ)))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ (SINT 32)))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((A0&. Dcr) (A0& Type) (A1&. Dcr) (A1& Type)) (! (=> (and (tr_bound%vstd!view.View. A0&. A0&) (tr_bound%vstd!view.View. A1&. A1&)) (tr_bound%vstd!view.View. $ (TYPE%tuple%2. A0&. A0& A1&. A1&))) :pattern ((tr_bound%vstd!view.View. $ (TYPE%tuple%2. A0&. A0& A1&. A1&))) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((T&. Dcr) (T& Type)) (! (tr_bound%vstd!std_specs.option.OptionAdditionalFns. $ (TYPE%core!option.Option. T&. T&) T&. T&) :pattern ((tr_bound%vstd!std_specs.option.OptionAdditionalFns. $ (TYPE%core!option.Option. T&. T&) T&. T&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((T&. Dcr) (T& Type) (E&. Dcr) (E& Type)) (! (tr_bound%vstd!std_specs.result.ResultAdditionalSpecFns. $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E&) :pattern ((tr_bound%vstd!std_specs.result.ResultAdditionalSpecFns. $ (TYPE%core!result.Result. T&. T& E&. E&) T&. T& E&. E&)) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (forall ((T&. Dcr) (T& Type) (A&. Dcr) (A& Type)) (! (tr_bound%vstd!view.View. $ (TYPE%alloc!vec.Vec. T&. T& A&. A&)) :pattern ((tr_bound%vstd!view.View. $ (TYPE%alloc!vec.Vec. T&. T& A&. A&))) )))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.))
(set-info :comment ";; Trait-Impl-Axiom")
(assert (tr_bound%vstd!view.View. $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBitReconcileState.))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::exec::resource::common::make_owner_references")
(declare-fun req%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_owner_references. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) Bool)
(declare-const %%global_location_label%%52 Bool)
(assert (forall ((fb! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.)) (! (= (req%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_owner_references. fb!) (=> %%global_location_label%%52 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.well_formed.? (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fb!))))) :pattern ((req%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_owner_references. fb!)) )))
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_owner_references. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.) Bool)
(assert (forall ((fb! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) (owner_references! alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_owner_references. fb! owner_references!) (= (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView.>. (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%fluent_controller!kubernetes_api_objects.spec.owner_reference.OwnerReferenceView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.owner_reference.OwnerReference./alloc!alloc.Global.>. owner_references!)) (Poly%fun%1. (mk_fun %%lambda%%12)))) (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_owner_references.? (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fb!))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_owner_references. fb! owner_references!)) )))
(set-info :comment ";; Function-Specs vstd::string::impl&%0::to_string")
(declare-fun ens%vstd!string.impl&%0.to_string. (StrSlice vstd!string.String.) Bool)
(assert (forall ((self! StrSlice) (ret! vstd!string.String.)) (! (= (ens%vstd!string.impl&%0.to_string. self! ret!) (and (= (vstd!string.impl&%0.view.? (S self!)) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. ret!))) (= (vstd!string.impl&%0.is_ascii.? (S self!)) (vstd!string.impl&%1.is_ascii.? (Poly%vstd!string.String. ret!))))) :pattern ((ens%vstd!string.impl&%0.to_string. self! ret!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::exec::resource::common::make_base_labels")
(declare-fun req%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_base_labels. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) Bool)
(declare-const %%global_location_label%%53 Bool)
(assert (forall ((fb! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.)) (! (= (req%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_base_labels. fb!) (=> %%global_location_label%%53 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.well_formed.? (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fb!))))) :pattern ((req%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_base_labels. fb!)) )))
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_base_labels. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fluent_controller!vstd_ext.string_map.StringMap.) Bool)
(assert (forall ((fb! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) (labels! fluent_controller!vstd_ext.string_map.StringMap.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_base_labels. fb! labels!) (= (fluent_controller!vstd_ext.string_map.impl&%0.view.? (Poly%fluent_controller!vstd_ext.string_map.StringMap. labels!)) (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_base_labels.? (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fb!))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_base_labels. fb! labels!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::exec::resource::common::make_labels")
(declare-fun req%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_labels. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) Bool)
(declare-const %%global_location_label%%54 Bool)
(assert (forall ((fb! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.)) (! (= (req%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_labels. fb!) (=> %%global_location_label%%54 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.well_formed.? (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fb!))))) :pattern ((req%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_labels. fb!)) )))
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_labels. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fluent_controller!vstd_ext.string_map.StringMap.) Bool)
(assert (forall ((fb! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) (labels! fluent_controller!vstd_ext.string_map.StringMap.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_labels. fb! labels!) (= (fluent_controller!vstd_ext.string_map.impl&%0.view.? (Poly%fluent_controller!vstd_ext.string_map.StringMap. labels!)) (fluent_controller!fluent_controller.fluentbit.model.resource.common.make_labels.? (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fb!))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.exec.resource.common.make_labels. fb! labels!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::exec::resource::daemon_set::make_daemon_set_name")
(declare-fun req%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.make_daemon_set_name. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) Bool)
(declare-const %%global_location_label%%55 Bool)
(assert (forall ((fb! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.)) (! (= (req%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.make_daemon_set_name. fb!) (=> %%global_location_label%%55 (fluent_controller!fluent_controller.fluentbit.trusted.spec_types.impl&%0.well_formed.? (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fb!))))) :pattern ((req%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.make_daemon_set_name. fb!)) )))
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.make_daemon_set_name. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. vstd!string.String.) Bool)
(assert (forall ((fb! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) (name! vstd!string.String.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.make_daemon_set_name. fb! name!) (= (vstd!string.impl&%1.view.? (Poly%vstd!string.String. name!)) (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_daemon_set_name.? (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fb!))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.make_daemon_set_name. fb! name!)) )))
(set-info :comment ";; Function-Def fluent_controller::fluent_controller::fluentbit::exec::resource::daemon_set::make_daemon_set_name")
(set-info :comment ";; controller_examples/fluent_controller/fluentbit/exec/resource/daemon_set.rs:107:1: 107:61 (#0)")
(set-info :comment ";; Function-Def fluent_controller::fluent_controller::fluentbit::exec::resource::daemon_set::DaemonSetBuilder::get_request")
(set-info :comment ";; controller_examples/fluent_controller/fluentbit/exec/resource/daemon_set.rs:31:5: 31:53 (#0)")
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::EnvVar::new_with")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%8.new_with. (vstd!string.String. core!option.Option. core!option.Option. fluent_controller!kubernetes_api_objects.exec.container.EnvVar.) Bool)
(assert (forall ((name! vstd!string.String.) (value! core!option.Option.) (value_from! core!option.Option.) (env_var! fluent_controller!kubernetes_api_objects.exec.container.EnvVar.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%8.new_with. name! value! value_from! env_var!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%8.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. env_var!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value_from.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.overwrite_value.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.set_name.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%8.default.? (I 0))) (vstd!string.impl&%1.view.? (Poly%vstd!string.String. name!)))) (Poly%core!option.Option. (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. value!))))) (core!option.Option./Some (vstd!string.impl&%1.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. value!))))) core!option.Option./None)))) (Poly%core!option.Option. (ite (%B (B (is-core!option.Option./Some_ (%Poly%core!option.Option. (Poly%core!option.Option. value_from!))))) (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (fluent_controller!kubernetes_api_objects.exec.container.impl&%9.view.? (core!option.Option./Some/0 (%Poly%core!option.Option. (Poly%core!option.Option. value_from!)))))) core!option.Option./None))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%8.new_with. name! value! value_from! env_var!)) )))
(set-info :comment ";; Function-Specs fluent_controller::kubernetes_api_objects::exec::container::EnvVarSource::new_with_field_ref")
(declare-fun ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%9.new_with_field_ref. (fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource.) Bool)
(assert (forall ((field_ref! fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.) (env_var_source! fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource.)) (! (= (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%9.new_with_field_ref. field_ref! env_var_source!) (= (fluent_controller!kubernetes_api_objects.exec.container.impl&%9.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. env_var_source!)) (fluent_controller!kubernetes_api_objects.spec.container.impl&%9.set_field_ref.? (Poly%fluent_controller!kubernetes_api_objects.spec.container.EnvVarSourceView. (fluent_controller!kubernetes_api_objects.spec.container.impl&%9.default.? (I 0))) (Poly%fluent_controller!kubernetes_api_objects.spec.volume.ObjectFieldSelectorView. (fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.view.? (Poly%fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector. field_ref!)))))) :pattern ((ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%9.new_with_field_ref. field_ref! env_var_source!)) )))
(set-info :comment ";; Function-Specs fluent_controller::fluent_controller::fluentbit::exec::resource::daemon_set::make_env")
(declare-fun ens%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.make_env. (fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>.) Bool)
(assert (forall ((fb! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.) (env_vars! alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>.)) (! (= (ens%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.make_env. fb! env_vars!) (= (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. env_vars!)) (Poly%fun%1. (mk_fun %%lambda%%8)))) (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.? (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fb!))))) :pattern ((ens%fluent_controller!fluent_controller.fluentbit.exec.resource.daemon_set.make_env. fb! env_vars!)) )))
(set-info :comment ";; Function-Def fluent_controller::fluent_controller::fluentbit::exec::resource::daemon_set::make_env")
(set-info :comment ";; controller_examples/fluent_controller/fluentbit/exec/resource/daemon_set.rs:380:1: 380:54 (#0)")
(declare-const env_vars! alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>.)
(declare-const fb! fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit.)
(declare-const tmp%1 Poly)
(declare-const tmp%2 vstd!string.String.)
(declare-const tmp%3 vstd!string.String.)
(declare-const selector@0 fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.)
(declare-const tmp%4 fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource.)
(declare-const tmp%5 fluent_controller!kubernetes_api_objects.exec.container.EnvVar.)
(declare-const tmp%6 core!option.Option.)
(declare-const tmp%7 core!option.Option.)
(declare-const tmp%8 vstd!string.String.)
(declare-const tmp%9 vstd!string.String.)
(declare-const selector$1@0 fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.)
(declare-const tmp%10 fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource.)
(declare-const tmp%11 fluent_controller!kubernetes_api_objects.exec.container.EnvVar.)
(declare-const tmp%12 core!option.Option.)
(declare-const tmp%13 core!option.Option.)
(declare-const tmp%14 Bool)
(declare-const idx@ Poly)
(declare-const tmp%15 Bool)
(declare-const s1@ vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>.)
(declare-const s2@ vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>.)
(declare-const env_vars@0 alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>.)
(assert fuel_defaults)
(declare-const selector@1 fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.)
(declare-const env_vars@1 alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>.)
(declare-const selector$1@1 fluent_controller!kubernetes_api_objects.exec.volume.ObjectFieldSelector.)
(declare-const env_vars@2 alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>.)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%0 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%1 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%2 Bool)
(set-info :comment ";; assertion failed")
(declare-const %%location_label%%3 Bool)
(set-info :comment ";; postcondition not satisfied")
(declare-const %%location_label%%4 Bool)
(declare-const %%query%% Bool)
(assert (=> %%query%% (not (=> (ens%alloc!vec.impl&%0.new. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. tmp%1) (=> (= env_vars@0 (%Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. tmp%1)) (=> (ens%vstd!string.impl&%0.to_string. (str%new_strlit 9550466510480779651798518457849037047237641748796675704158654176747731341429154373116049408924990895415352019938555218772777122838084397998445529115124565) tmp%2) (=> (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.default. 0 selector@0) (=> (ens%vstd!string.impl&%0.to_string. (str%new_strlit 64393076556699018832344577135365479561768770771401520297537358859344473356268027959831425057158022047466927942309151218166757023944512337170110073956888) tmp%3) (=> (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.set_field_path. selector@0 selector@1 tmp%3) (=> (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%9.new_with_field_ref. selector@1 tmp%4) (=> (= tmp%6 core!option.Option./None) (=> (= tmp%7 (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. tmp%4))) (=> (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%8.new_with. tmp%2 tmp%6 tmp%7 tmp%5) (=> (ens%alloc!vec.impl&%1.push. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%alloc!alloc.Global. (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. env_vars@0) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. env_vars@1) (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. tmp%5)) (=> (ens%vstd!string.impl&%0.to_string. (str%new_strlit 4768814570999511162394561399398956999011928061222181226755600835900975716078550342214188204668845402090277929816219234254995916206960342802930184981260636) tmp%8) (=> (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.default. 0 selector$1@0) (=> (ens%vstd!string.impl&%0.to_string. (str%new_strlit 10411321872159765285695605998453805166173003670098616158230252450521803095579307289600573816808438699163715549734699717987061629003941626929420819184189838) tmp%9) (=> (ens%fluent_controller!kubernetes_api_objects.exec.volume.impl&%12.set_field_path. selector$1@0 selector$1@1 tmp%9) (=> (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%9.new_with_field_ref. selector$1@1 tmp%10) (=> (= tmp%12 core!option.Option./None) (=> (= tmp%13 (core!option.Option./Some (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVarSource. tmp%10))) (=> (ens%fluent_controller!kubernetes_api_objects.exec.container.impl&%8.new_with. tmp%8 tmp%12 tmp%13 tmp%11) (=> (ens%alloc!vec.impl&%1.push. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%alloc!alloc.Global. (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. env_vars@1) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. env_vars@2) (Poly%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. tmp%11)) (=> (= s1@ (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. env_vars@2)) (Poly%fun%1. (mk_fun %%lambda%%8))))) (=> (= s2@ (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.? (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fb!)))))) (and (=> (= tmp%14 (= (vstd!seq.Seq.len.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. s1@)) (vstd!seq.Seq.len.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. s2@)))) (and (=> %%location_label%%0 tmp%14) (=> tmp%14 (and (=> (has_type idx@ INT) (=> (and (<= 0 (%I idx@)) (< (%I idx@) (vstd!seq.Seq.len.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. s1@)))) (=> %%location_label%%1 (= (vstd!seq.Seq.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. s1@) idx@) (vstd!seq.Seq.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. s2@) idx@))))) (=> (forall ((idx$ Poly)) (! (=> (has_type idx$ INT) (=> (and (<= 0 (%I idx$)) (< (%I idx$) (vstd!seq.Seq.len.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. s1@)))) (= (vstd!seq.Seq.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. s1@) idx$) (vstd!seq.Seq.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. s2@) idx$)))) :pattern ((vstd!seq.Seq.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. s1@) idx$)) :pattern ((vstd!seq.Seq.index.? $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. s2@) idx$)) )) (=> (= tmp%15 (ext_eq false (TYPE%vstd!seq.Seq. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.) (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. s1@) (Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. s2@))) (and (=> %%location_label%%2 tmp%15) (=> tmp%15 (=> %%location_label%%3 (= s1@ s2@)))))))))) (=> (= s1@ s2@) (=> (= env_vars! env_vars@2) (=> %%location_label%%4 (= (%Poly%vstd!seq.Seq<fluent_controller!kubernetes_api_objects.spec.container.EnvVarView.>. (vstd!seq_lib.impl&%0.map_values.? $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%fluent_controller!kubernetes_api_objects.spec.container.EnvVarView. (vstd!view.View.view.? $ (TYPE%alloc!vec.Vec. $ TYPE%fluent_controller!kubernetes_api_objects.exec.container.EnvVar. $ TYPE%alloc!alloc.Global.) (Poly%alloc!vec.Vec<fluent_controller!kubernetes_api_objects.exec.container.EnvVar./alloc!alloc.Global.>. env_vars!)) (Poly%fun%1. (mk_fun %%lambda%%8)))) (fluent_controller!fluent_controller.fluentbit.model.resource.daemon_set.make_env.? (vstd!view.View.view.? $ TYPE%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. (Poly%fluent_controller!fluent_controller.fluentbit.trusted.exec_types.FluentBit. fb!)))))))))))))))))))))))))))))))))
(assert %%query%%)
(check-sat)
(exit)
