(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Oliver Markgraf, Hongjian Jiang, Daniel Stan, Anthony W. Lin, Philipp Ruemmer
Generated on: 2025-04-08
Application: Using String Solvers to solve RMC problems encoded as CHC over Strings
Target solver: cvc5, OSTRICH, Z3, Z3alpha, Z3-noodler
Time limit: 60.0
Benchmarks are extracted by running HornStr https://arg-git.informatik.uni-kl.de/pub/string-chc-lib on all benchmarks
provided in the repository and gathering the string queries sent to the string solvers.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(declare-fun X () String)
(assert (let ((a!1 (re.* (re.union (re.union (str.to_re "C") (str.to_re "W"))
                           (str.to_re "A")))))
  (str.in_re X a!1)))
(declare-fun reg0 () String)
(declare-fun Y () String)
(assert (and true
     (= X (str.++ reg0))
     (= Y (str.++ reg0))
     (str.in_re reg0 (re.* (str.to_re "A")))))
(push 1)
(assert (= Y "WCC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ACC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CWC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CCC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CAC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CCW"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CCA"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CWAC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "AACC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CWCC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "AWCC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CWCA"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CCCA"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CCWW"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ACCW"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "WCCW"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CAWC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CCWA"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CCAC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "WWCC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ACAC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "WCCA"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CCWC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CWWC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "WACC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ACCC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CCAA"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CAAC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CCAW"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "WCWC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ACWC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CCCC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CWCW"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "WCCC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CACA"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CACW"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ACCA"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CACC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "CCCW"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "WCAC"))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)
