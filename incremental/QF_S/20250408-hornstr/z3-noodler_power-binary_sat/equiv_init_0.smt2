(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Oliver Markgraf, Hongjian Jiang, Daniel Stan, Anthony W. Lin, Philipp Ruemmer
Generated on: 2025-04-08
Application: Using String Solvers to solve RMC problems encoded as CHC over Strings
Target solver: cvc5, OSTRICH, Z3, Z3alpha, Z3-noodler
Time limit: 60.0
Benchmarks are extracted by running HornStr https://arg-git.informatik.uni-kl.de/pub/string-chc-lib on all benchmarks
provided in the repository and gathering the string queries sent to the string solvers.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(declare-fun varout () String)
(assert (str.in_re varout (re.* (re.union (str.to_re "1") (str.to_re "0")))))
(declare-fun varin () String)
(assert (str.in_re varin (re.* (re.union (str.to_re "1") (str.to_re "0")))))
(declare-fun X () String)
(declare-fun isin () Bool)
(declare-fun isout () Bool)
(assert (let ((a!1 (str.in_re X (re.++ (str.to_re "01") (re.* (str.to_re "0"))))))
  (or (and a!1 (not isin) (= X varout) isout))))
(push 1)
(assert (let ((a!1 (re.++ (re.union (str.to_re "1") (str.to_re "0"))
                  (re.* (re.union (str.to_re "1") (str.to_re "0"))))))
(let ((a!2 (re.++ (re.* (re.union (str.to_re "1") (str.to_re "0")))
                  (re.union (str.to_re "") a!1))))
  (str.in_re varout a!2))))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (str.in_re varout re.none))
(set-info :status unknown)
(check-sat)
(pop 1)
(exit)
