(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Oliver Markgraf, Hongjian Jiang, Daniel Stan, Anthony W. Lin, Philipp Ruemmer
Generated on: 2025-04-08
Application: Using String Solvers to solve RMC problems encoded as CHC over Strings
Target solver: cvc5, OSTRICH, Z3, Z3alpha, Z3-noodler
Time limit: 60.0
Benchmarks are extracted by running HornStr https://arg-git.informatik.uni-kl.de/pub/string-chc-lib on all benchmarks
provided in the repository and gathering the string queries sent to the string solvers.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(declare-fun X () String)
(assert (let ((a!1 (re.union (re.union (re.union (str.to_re "3") (str.to_re "6"))
                               (str.to_re "4"))
                     (str.to_re "a"))))
(let ((a!2 (re.union (re.union (re.union a!1 (str.to_re "2")) (str.to_re "8"))
                     (str.to_re "7"))))
(let ((a!3 (re.union (re.union (re.union a!2 (str.to_re "9")) (str.to_re "b"))
                     (str.to_re "c"))))
(let ((a!4 (re.* (re.union (re.union a!3 (str.to_re "1")) (str.to_re "5")))))
  (str.in_re X a!4))))))
(assert (let ((a!1 (re.union (re.union (re.union (str.to_re "9") (str.to_re "1"))
                               (str.to_re "3"))
                     (str.to_re "b"))))
(let ((a!2 (re.union (re.union (re.union a!1 (str.to_re "8")) (str.to_re "5"))
                     (str.to_re "a")))
      (a!6 (re.union (re.union (re.union a!1 (str.to_re "8")) (str.to_re "5"))
                     (str.to_re "c"))))
(let ((a!3 (re.union (re.union (re.union a!2 (str.to_re "7")) (str.to_re "4"))
                     (str.to_re "2")))
      (a!7 (re.union (re.union (re.union a!6 (str.to_re "a")) (str.to_re "7"))
                     (str.to_re "6"))))
(let ((a!4 (re.++ a!3
                  (re.++ (re.* a!3) (re.union (str.to_re "c") (str.to_re "6")))))
      (a!8 (re.* (re.union (re.union a!7 (str.to_re "4")) (str.to_re "2")))))
(let ((a!5 (re.++ (re.* a!3)
                  (re.union (re.union (str.to_re "c") (str.to_re "6")) a!4)))
      (a!9 (re.++ (re.union (re.union a!7 (str.to_re "4")) (str.to_re "2")) a!8)))
(let ((a!10 (re.++ (re.++ a!5 a!5) (re.++ a!8 (re.union (str.to_re "") a!9)))))
  (and (str.in_re X a!10) true))))))))
(push 1)
(assert (str.in_re X (str.to_re "")))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (let ((a!1 (re.union (re.union (re.union (str.to_re "6") (str.to_re "3"))
                               (str.to_re "1"))
                     (str.to_re "4"))))
(let ((a!2 (re.union (re.union (re.union a!1 (str.to_re "c")) (str.to_re "2"))
                     (str.to_re "8"))))
(let ((a!3 (re.union (re.union (re.union a!2 (str.to_re "7")) (str.to_re "9"))
                     (str.to_re "a"))))
  (str.in_re X (re.union (re.union a!3 (str.to_re "b")) (str.to_re "5")))))))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (let ((a!1 (re.union (re.union (re.union (str.to_re "6") (str.to_re "3"))
                               (str.to_re "1"))
                     (str.to_re "4"))))
(let ((a!2 (re.union (re.union (re.union a!1 (str.to_re "c")) (str.to_re "2"))
                     (str.to_re "8"))))
(let ((a!3 (re.union (re.union (re.union a!2 (str.to_re "7")) (str.to_re "9"))
                     (str.to_re "a"))))
(let ((a!4 (re.++ (re.union (re.union a!3 (str.to_re "b")) (str.to_re "5"))
                  (re.union (re.union a!3 (str.to_re "b")) (str.to_re "5")))))
(let ((a!5 (re.++ a!4 (re.union (re.union a!3 (str.to_re "b")) (str.to_re "5")))))
  (str.in_re X a!5)))))))
(set-info :status unknown)
(check-sat)
(assert (distinct X "566"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "166"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c16"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c26"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c36"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c46"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c56"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c61"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c76"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c86"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c96"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ca6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cb6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc1"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c62"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc2"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c63"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc3"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c64"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc4"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c65"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc5"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c66"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c67"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc7"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c68"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc8"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c69"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc9"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c6a"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cca"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c6b"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccb"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c6c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c1c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c2c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c3c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c4c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c5c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c7c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c8c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c9c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cac"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cbc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "b66"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "bc6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "b6c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "bcc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "966"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "9c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "96c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "9cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "766"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "7c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "76c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "7cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "866"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "8c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "86c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "8cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "266"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "2c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "26c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "2cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "a66"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ac6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "a6c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "acc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "466"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "4c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "46c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "4cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "616"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "626"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "636"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "646"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "656"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "661"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "676"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "686"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "696"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6a6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6b6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6c1"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "662"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6c2"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "663"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6c3"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "664"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6c4"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "665"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6c5"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "666"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "667"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6c7"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "668"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6c8"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "669"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6c9"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "66a"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6ca"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "66b"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6cb"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "66c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "61c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "62c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "63c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "64c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "65c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "67c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "68c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "69c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6ac"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6bc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "366"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "3c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "36c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "3cc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (let ((a!1 (re.union (re.union (re.union (str.to_re "6") (str.to_re "3"))
                               (str.to_re "1"))
                     (str.to_re "4"))))
(let ((a!2 (re.union (re.union (re.union a!1 (str.to_re "c")) (str.to_re "2"))
                     (str.to_re "8"))))
(let ((a!3 (re.union (re.union (re.union a!2 (str.to_re "7")) (str.to_re "9"))
                     (str.to_re "a"))))
(let ((a!4 (re.++ (re.union (re.union a!3 (str.to_re "b")) (str.to_re "5"))
                  (re.union (re.union a!3 (str.to_re "b")) (str.to_re "5")))))
  (str.in_re X a!4))))))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "66"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "6c"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (let ((a!1 (re.union (re.union (re.union (str.to_re "6") (str.to_re "3"))
                               (str.to_re "1"))
                     (str.to_re "4"))))
(let ((a!2 (re.union (re.union (re.union a!1 (str.to_re "c")) (str.to_re "2"))
                     (str.to_re "8"))))
(let ((a!3 (re.union (re.union (re.union a!2 (str.to_re "7")) (str.to_re "9"))
                     (str.to_re "a"))))
(let ((a!4 (re.++ (re.union (re.union a!3 (str.to_re "b")) (str.to_re "5"))
                  (re.union (re.union a!3 (str.to_re "b")) (str.to_re "5")))))
(let ((a!5 (re.++ a!4 (re.union (re.union a!3 (str.to_re "b")) (str.to_re "5")))))
(let ((a!6 (re.++ a!5 (re.union (re.union a!3 (str.to_re "b")) (str.to_re "5")))))
  (str.in_re X a!6))))))))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5166"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5266"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5366"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5466"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5566"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5616"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5766"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5866"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5966"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5a66"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5b66"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c16"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5626"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c26"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5636"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c36"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5646"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c46"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5656"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c56"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5661"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c61"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5676"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c76"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5686"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c86"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5696"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c96"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56a6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5ca6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56b6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cb6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56c1"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cc1"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5662"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c62"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56c2"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cc2"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5663"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c63"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56c3"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cc3"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5664"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c64"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56c4"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cc4"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5665"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c65"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56c5"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cc5"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5666"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c66"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cc6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5667"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c67"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56c7"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cc7"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5668"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c68"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56c8"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cc8"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5669"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c69"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56c9"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cc9"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "566a"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c6a"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56ca"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cca"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "566b"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c6b"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56cb"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5ccb"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "566c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c6c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5ccc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "561c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c1c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "562c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c2c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "563c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c3c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "564c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c4c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "565c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c5c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "567c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c7c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "568c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c8c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "569c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5c9c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56ac"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cac"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "56bc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5cbc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "51c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "52c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "53c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "54c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "55c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "57c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "58c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "59c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5ac6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5bc6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "516c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "526c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "536c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "546c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "556c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "576c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "586c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "596c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5a6c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5b6c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "51cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "52cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "53cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "54cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "55cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "57cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "58cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "59cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5acc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "5bcc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1166"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1266"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1366"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1466"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1566"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1616"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1766"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1866"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1966"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1a66"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1b66"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c16"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1626"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c26"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1636"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c36"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1646"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c46"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1656"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c56"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1661"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c61"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1676"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c76"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1686"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c86"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1696"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c96"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16a6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1ca6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16b6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cb6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16c1"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cc1"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1662"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c62"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16c2"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cc2"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1663"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c63"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16c3"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cc3"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1664"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c64"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16c4"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cc4"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1665"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c65"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16c5"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cc5"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1666"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c66"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cc6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1667"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c67"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16c7"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cc7"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1668"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c68"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16c8"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cc8"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1669"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c69"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16c9"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cc9"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "166a"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c6a"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16ca"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cca"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "166b"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c6b"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16cb"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1ccb"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "166c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c6c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1ccc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "161c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c1c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "162c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c2c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "163c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c3c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "164c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c4c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "165c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c5c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "167c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c7c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "168c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c8c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "169c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1c9c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16ac"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cac"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "16bc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1cbc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "11c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "12c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "13c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "14c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "15c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "17c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "18c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "19c6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1ac6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1bc6"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "116c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "126c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "136c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "146c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "156c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "176c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "186c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "196c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1a6c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1b6c"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "11cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "12cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "13cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "14cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "15cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "17cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "18cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "19cc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1acc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "1bcc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c116"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c216"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c316"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c416"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c516"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c611"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c716"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c816"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c916"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ca16"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cb16"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc11"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c621"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc21"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c631"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc31"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c641"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc41"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c651"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc51"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c661"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc61"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c671"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc71"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c681"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc81"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c691"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc91"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c6a1"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cca1"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c6b1"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccb1"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c6c1"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccc1"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c612"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc12"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c622"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc22"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c632"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc32"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c642"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc42"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c652"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc52"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c662"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc62"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c672"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc72"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c682"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc82"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c692"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc92"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c6a2"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cca2"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c6b2"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccb2"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c6c2"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccc2"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c613"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc13"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c623"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc23"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "c633"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cc33"))
(assert (distinct X "cc33"))
(exit)
