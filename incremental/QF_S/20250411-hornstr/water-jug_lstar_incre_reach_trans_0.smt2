(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hongjian Jiang, Oliver Markgraf, Daniel Stan, Anthony W. Lin, Philipp Ruemmer
Generated on: 2025-04-11
Application: Using String Solvers to solve RMC problems encoded as CHC over Strings
Target solver: cvc5, OSTRICH, Z3, Z3alpha, Z3-noodler
Time limit: 60.0
Benchmarks are extracted by running HornStr https://arg-git.informatik.uni-kl.de/pub/string-chc-lib on all benchmarks
provided in the repository and gathering the string queries sent to the string solvers.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(declare-fun Y () String)
(assert (let ((a!1 (re.union (re.union (re.union (str.to_re "Z") (str.to_re "c"))
                               (str.to_re "d"))
                     (str.to_re "e"))))
(let ((a!2 (re.union (re.union (re.union a!1 (str.to_re "b")) (str.to_re "a"))
                     (str.to_re "f"))))
  (str.in_re Y (re.* a!2)))))
(declare-fun X () String)
(declare-fun reg0 () String)
(assert (let ((a!1 (re.union (re.union (re.union (str.to_re "c") (str.to_re "a"))
                               (str.to_re "d"))
                     (str.to_re "b"))))
(let ((a!2 (re.* (re.union (re.union a!1 (str.to_re "f")) (str.to_re "e")))))
  (and true (= X reg0) (= Y reg0) (str.in_re reg0 a!2)))))
(push 1)
(assert (= X "Z"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= X "Zbb"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= X "Zee"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= X "Zbbbb"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= X "Zeeee"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= X "Zbbee"))
(set-info :status unknown)
(check-sat)
(pop 1)
(check-sat)
(exit)
