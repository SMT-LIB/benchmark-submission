(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hongjian Jiang, Oliver Markgraf, Daniel Stan, Anthony W. Lin, Philipp Ruemmer
Generated on: 2025-04-11
Application: Using String Solvers to solve RMC problems encoded as CHC over Strings
Target solver: cvc5, OSTRICH, Z3, Z3alpha, Z3-noodler
Time limit: 60.0
Benchmarks are extracted by running HornStr https://arg-git.informatik.uni-kl.de/pub/string-chc-lib on all benchmarks
provided in the repository and gathering the string queries sent to the string solvers.
|)
(declare-fun Y () String)
(assert (let ((a!1 (re.* (re.union (re.union (str.to_re "i") (str.to_re "r"))
                           (str.to_re "c")))))
  (str.in_re Y a!1)))
(declare-fun X () String)
(declare-fun reg1 () String)
(declare-fun reg0 () String)
(assert (let ((a!1 (re.* (re.union (re.union (str.to_re "i") (str.to_re "r"))
                           (str.to_re "c")))))
  (and true (= X reg1) (= Y reg1) (str.in_re reg0 a!1) (str.in_re reg1 a!1))))
(push 1)
(assert (= X "iii"))
(set-info :status unknown)
(check-sat)
(assert (distinct Y "iii"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= X "ii"))
(set-info :status unknown)
(check-sat)
(assert (distinct Y "ii"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= X "iiii"))
(set-info :status unknown)
(check-sat)
(assert (distinct Y "iiii"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= X "iiiii"))
(set-info :status unknown)
(check-sat)
(assert (distinct Y "iiiii"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= X "iiiiii"))
(set-info :status unknown)
(check-sat)
(assert (distinct Y "iiiiii"))
(set-info :status unknown)
(check-sat)
(pop 1)
