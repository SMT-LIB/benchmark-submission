(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Hongjian Jiang, Oliver Markgraf, Daniel Stan, Anthony W. Lin, Philipp Ruemmer
Generated on: 2025-04-11
Application: Using String Solvers to solve RMC problems encoded as CHC over Strings
Target solver: cvc5, OSTRICH, Z3, Z3alpha, Z3-noodler
Time limit: 60.0
Benchmarks are extracted by running HornStr https://arg-git.informatik.uni-kl.de/pub/string-chc-lib on all benchmarks
provided in the repository and gathering the string queries sent to the string solvers.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "industrial")
(declare-fun X () String)
(assert (let ((a!1 (re.* (re.union (re.union (str.to_re "i") (str.to_re "r"))
                           (str.to_re "c")))))
  (str.in_re X a!1)))
(declare-fun reg1 () String)
(declare-fun Y () String)
(declare-fun reg0 () String)
(assert (let ((a!1 (re.* (re.union (re.union (str.to_re "i") (str.to_re "r"))
                           (str.to_re "c")))))
  (and true (= X reg1) (= Y reg1) (str.in_re reg0 a!1) (str.in_re reg1 a!1))))
(push 1)
(assert (= Y "icc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccic"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccic"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cicc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cicc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cccr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cccr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccrc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccrc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iccc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iccc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "crcc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "crcc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ircc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ircc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cccc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cccc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icci"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icci"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iicc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iicc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iccr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iccr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccci"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccci"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icrc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icrc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icic"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icic"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccirc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccirc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icrcc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icrcc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icrcr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icrcr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icirc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icirc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccici"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccici"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccccc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccccc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iricc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iricc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cicci"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cicci"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cccrc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cccrc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "circc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "circc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ircci"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ircci"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccrcc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccrcc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iccic"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iccic"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cccrr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cccrr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccicr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccicr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iiicc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iiicc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iccii"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iccii"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "crccr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "crccr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccicc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccicc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccccr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccccr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccrcr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccrcr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ciicc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ciicc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iicci"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iicci"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iicic"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iicic"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icrrc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icrrc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iccci"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iccci"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icicc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icicc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cccii"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cccii"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icrci"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icrci"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icric"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icric"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ircic"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ircic"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icccc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icccc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cicic"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cicic"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccric"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccric"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icici"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icici"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ciccr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ciccr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cccic"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cccic"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ciccc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ciccc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccrrc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccrrc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icicr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icicr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cccci"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cccci"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "icccr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "icccr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cccri"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cccri"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "crrcc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "crrcc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cicrc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cicrc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "irccc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "irccc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iccir"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iccir"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cciic"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cciic"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iccrr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iccrr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iccrc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iccrc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ccrci"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ccrci"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "ircrc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "ircrc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "crcrc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "crcrc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cricc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cricc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "crcci"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "crcci"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iciic"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iciic"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "irccr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "irccr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iircc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iircc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "irrcc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "irrcc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iccri"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iccri"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iiccr"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iiccr"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "crcic"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "crcic"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iiccc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iiccc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "cccir"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "cccir"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "iicrc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "iicrc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(push 1)
(assert (= Y "crccc"))
(set-info :status unknown)
(check-sat)
(assert (distinct X "crccc"))
(set-info :status unknown)
(check-sat)
(pop 1)
(check-sat)
(exit)
